[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"# Fish Ahoy!","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"* Fish Ahoy! is a CLI (Command Line interface)-friendly product with a GUI to easily view your information","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"* The project aims to help fish enthusiasts manage their aquariums, fish and tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"With Fish Ahoy!, users can:","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"* Keep track of individual fishes","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"* Keep track of their fish tanks","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* Keep track of fish maintenance tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"See our documentation: **[Fish Ahoy! Product Website](https://ay2223s2-cs2103t-t17-4.github.io/tp/)**.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":2,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"    archiveFileName \u003d \u0027FishAhoy.jar\u0027","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bokuanT":4,"ryanchua00":7,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"You can reach us at the emails `e0725564@u.nus.edu`, `e0725569@u.nus.edu`, `e0860597@u.nus.edu`,` e0908339@u.nus.edu` or `e0701815@u.nus.edu`","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"### Timothy","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/timothylawsongen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"[[github](https://github.com/TimothyLawSongEn)]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/timothylawsongen.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"### Bryan","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/bryanongjx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/bryanongjx)]","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/bryanongjx.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"### Ryan","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/ryanchua00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/ryanchua00)] [[portfolio](team/ryanchua00.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"### Bo Kuan","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/bokuant.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/bokuanT)]","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/bokuant.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"### Avery","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"\u003cimg src\u003d\"images/diamondroxxx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/Diamondroxxx)]","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/diamondroxxx.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":19,"-":38,"Diamondroxxx":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/logo_DG.png\" width\u003d\"300\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"  {:toc}","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"## About","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* is a desktop CLI-focused application, designed to help users take better care of their","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"aquatic pets. It allows fish keepers to:","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"1. Keep track of their tanks and fishes in a hierarchical view, sorted by tanks.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"2. Keep track of their fishes\u0027 attributes such as the last time it was fed and how often it needs to be fed","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"3. Consolidate fish-up-keeping tasks and automatically remind users to feed their fish according to information","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"given by the user","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"This developer guide aims to provide instructions and guidelines for developers to understand how to","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"effectively use and contribute to this project by explaining design considerations for certain key features. Moreover,","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"new developers can use this guide as an entry point for navigating this extensive code base.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"* Task implementation was inspired by [SoConnect](https://github.com/AY2223S1-CS2103T-W15-1/tp) and fxml file was reused. However, our implementation is entirely new.","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"* Help implementation (including the code) was reused with minimal changes from the [CLIMods](https://github.com/AY2223S1-CS2103-F14-1/tp) project. Html files were not reused.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"## Getting started","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"## Design","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `fish delete 1`.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `MainContent`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"* depends on some classes in the `Model` component, as it displays `Fish` object residing in the `Model`.","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Logic component ","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a fish).","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"fish delete 1\")` API call.","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"![Interactions Inside the Logic Component for the `fish delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `FishDeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `FishAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `FishAddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"* All `XYZCommandParser` classes (e.g., `FishAddCommandParser`, `TaskDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"* The 3 main types of `XYZCommandParser` are divided into command parsers for `Fish`, `Tank` and `Task`. ","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/FishTankTaskClassDiagram.png\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"* stores the address book data i.e., all `Fish` objects (which are contained in a `UniqueFishList` object).","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"* stores the currently \u0027selected\u0027 `Fish` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFish\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"* the `Task` and `Tank` model is implemented similarly to the `Fish` part of the model.","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Fish` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Fish` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"## Feature Implementations","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"### Automatic Feeding Reminders","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"The entrypoint of this feature is in the `start()` method of MainApp, which is automatically called when the user opens","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!*. We then access the `Logic` component to access the `Model` component to find out which `Tank` have unfed","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"`Fish`. For each tank with unfed `Fish`, we create a `TaskFeedingReminder`. We then return an `ArrayList` of","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"`TaskFeedingReminders` as `feedingReminders`. In the `Logic` component, we create a `TaskFeedingReminderCommand` for","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"each `TaskFeedingReminder`, then execute these commands, updating the `Model` component before saving the states","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"if the various lists. ","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"![FeedingReminderSequenceDiagram](images/FeedingReminderSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"* Alternative 1: Create a command parser and other relevant files to allow the user to execute this command","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"  * Pros: user can update Reminders without opening the app","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"  * Cons: will be redundant most of the times as Fish feeding intervals are not that short. Even if user calls this","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"command, the reminders likely do not need to be updated.","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"ryanchua00"},"content":"### FishSortCommand feature","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"ryanchua00"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"The fish sorting feature leverages `SortedList` functionality of Javafx. By creating custom comparators to compare fish","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"attributes, we are able to use a `SortedList` to sort its list by the specified order.","lastModifiedDate":"2023-04-04"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"Specifically, it currently sorts by the five compulsory fields of a fish:","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"ryanchua00"},"content":"* Name","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"ryanchua00"},"content":"* Last Fed Interval","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"ryanchua00"},"content":"* Species","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"ryanchua00"},"content":"* Feeding Interval","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"ryanchua00"},"content":"* Tank","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"ryanchua00"},"content":"Currently, upon instantiation of `ModelManager`, it creates a `SortedList` from a `AddressBook`. ","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"ryanchua00"},"content":"A `Filteredlist` is created based off the same `SortedList`. Hence, when we perform sorting operations, we are able to ","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"ryanchua00"},"content":"manipulate and display the filtered list. As a result, we are able to sort the fish list and filter at the same time.","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"ryanchua00"},"content":"Given below is an example usage scenario and how the sort mechanism behaves at each step.","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"ryanchua00"},"content":"Step 1. The user is currently using the application, and there are three entries currently existing in the ","lastModifiedDate":"2023-04-04"},{"lineNumber":215,"author":{"gitId":"ryanchua00"},"content":"`AddressBook`, `Marlin, Nemo, Dory`, added in that order to a tank, named `Ocean tank`.","lastModifiedDate":"2023-04-04"},{"lineNumber":216,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"ryanchua00"},"content":"Step 2. The user executes `fish sort by/n tk/1`. `FishParser` receives the `sort` keyword and calls `FishSortCommandParser#parse()`,","lastModifiedDate":"2023-04-04"},{"lineNumber":218,"author":{"gitId":"ryanchua00"},"content":"in which the keyword `n` is used to select a Comparator. In this case, the `NameComparator`, which compares the names between fish,","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"ryanchua00"},"content":"is passed to `FishSortCommand` and returned.","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"bryanongjx"},"content":"![FishSortCommandDiagram](images/FishSortDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"ryanchua00"},"content":"Step 3. `FishSortCommand#execute()` first calls `Model#sortFilteredFishList()`, which in turn calls `SortedList#setComparator()`.","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"ryanchua00"},"content":"This call triggers the SortedList to sort the current list using the given comparator. In this case, `Marlin, Nemo, Dory` sorts into `Dory, Marlin, Nemo`.","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"ryanchua00"},"content":"Step 4. `FishSortCommand#execute()` then retrieves the associated tank if `tk/` is present. In this case, a tank index of `1`","lastModifiedDate":"2023-04-04"},{"lineNumber":227,"author":{"gitId":"ryanchua00"},"content":"is received. The `Ocean tank` is then retrieved through `Model#getFilteredTankList()` and `List\u003cTank\u003e#get()`.","lastModifiedDate":"2023-04-04"},{"lineNumber":228,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"ryanchua00"},"content":"Step 5. `FishSortCommand#execute()` then calls `Model#updateFilteredFishList()`, which sets a predicate to only display fish in `Ocean tank`.","lastModifiedDate":"2023-04-04"},{"lineNumber":230,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":231,"author":{"gitId":"ryanchua00"},"content":"Step 6. `FishSortCommand#execute()` then finally returns and triggers a GUI change in `MainWindow` to display the sorted `FilteredFish` of `Dory, Marlin, Nemo`.","lastModifiedDate":"2023-04-04"},{"lineNumber":232,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"ryanchua00"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"ryanchua00"},"content":"**Aspect: Where Sorting takes place :**","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"ryanchua00"},"content":"* **Alternative 1 (current choice):** Use a SortedList and comparators to sort within the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"ryanchua00"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"ryanchua00"},"content":"    * Cons: Requires a separate list or wrapping.","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"ryanchua00"},"content":"* **Alternative 2:** Sorts a list externally before replacing the `AddressBook` list.","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"ryanchua00"},"content":"    * Pros: More customization and control over sorting.","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"ryanchua00"},"content":"    * Cons: Requires a duplicate list to be made each time.","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"bryanongjx"},"content":"### TaskAddCommand feature","lastModifiedDate":"2023-03-30"},{"lineNumber":246,"author":{"gitId":"bryanongjx"},"content":"#### Motivation","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"bryanongjx"},"content":"As a FishTracker application, on top of tracking fishes, we provide a way for fishkeepers to keep track of","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"bryanongjx"},"content":"their tasks such as changing of tank water or repairing certain tank equipments","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"bryanongjx"},"content":"#### Implementation","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"bryanongjx"},"content":"Adding a task can be done via the command \"task add\".","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"bryanongjx"},"content":"You are able to specify paramters like:","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"bryanongjx"},"content":"* Description","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"bryanongjx"},"content":"* Tank Index (to relate task to a tank)","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"bryanongjx"},"content":"* Priority Level (Low / Medium / High)","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"bryanongjx"},"content":"#### How `TaskAddCommand` is executed","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"bryanongjx"},"content":"When the command `task add \u003cdescription\u003e` is invoked it first goes through the main parser `AddressBookParser`, after","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"bryanongjx"},"content":"which it is delegated to command-specific parsers, namely TaskCommandParser -\u003e TaskAddCommandParser.","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"bryanongjx"},"content":"Thus, `LogicManager` will invoke `execute` on `TaskAddCommand` with the following code","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"bryanongjx"},"content":"`command.execute(model);`, where `model.addTask(taskToAdd)` will be called.","lastModifiedDate":"2023-03-30"},{"lineNumber":263,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"bryanongjx"},"content":"![TaskAddDiagram](images/TaskAddDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"bryanongjx"},"content":"#### Design Considerations","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"bryanongjx"},"content":"* Alternative 1 (current choice): Create a parser for task commands and a taskAdd parser for add-specific task commands","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"bryanongjx"},"content":"    * Pros: Easy to manage TaskList functionalities. ","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"bryanongjx"},"content":"    * Cons: May have performance issues due to numerous calls down command-specific parsers","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"* Alternative 2 : Do not abstract task command parsing to a `TaskParser`","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"bryanongjx"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"bryanongjx"},"content":"    * Cons: Not well abstracted. Difficult to implement other task commands in the future like marking / deleting of","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"    tasks. Will also result in an extremely long parser of all types of commands which may be difficult to maintain.","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"ryanchua00"},"content":"### TankFeedCommand feature","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"TimothyLawSongEn"},"content":"#### Motivation","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"TimothyLawSongEn"},"content":"As a FishTracker application, we provide a way for fishkeepers to track the `LastFedDates` of all their fishes,","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"TimothyLawSongEn"},"content":"as having multiple tanks and fishes makes feeding difficult to keep track of without a tracking system.","lastModifiedDate":"2023-03-24"},{"lineNumber":282,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"TimothyLawSongEn"},"content":"#### Implementation summary","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"TimothyLawSongEn"},"content":"As such, every `Fish` contains a `LastFedDate` object, which contains a date field which records their `lastFedDate`.","lastModifiedDate":"2023-03-24"},{"lineNumber":285,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":286,"author":{"gitId":"TimothyLawSongEn"},"content":"When the fishkeeper decides to feed a particular tank by invoking the command `tank feed \u003cindex\u003e`,","lastModifiedDate":"2023-03-24"},{"lineNumber":287,"author":{"gitId":"TimothyLawSongEn"},"content":"the program will feed all fishes in that tank, changing `LastFedDate`  of all fishes in that tank.","lastModifiedDate":"2023-03-24"},{"lineNumber":288,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":289,"author":{"gitId":"TimothyLawSongEn"},"content":"#### How `TankFeedCommand` is executed","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"TimothyLawSongEn"},"content":"When a command `tank feed \u003cindex\u003e` is invoked, it first passes through the main parser `AddressBookParser`,","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"TimothyLawSongEn"},"content":"before being delegated to command-specific parsers, namely `TankParser` -\u003e `TankFeedCommandParser`,","lastModifiedDate":"2023-03-24"},{"lineNumber":292,"author":{"gitId":"TimothyLawSongEn"},"content":"which returns a `TankFeedCommand` to `LogicManager`.","lastModifiedDate":"2023-03-24"},{"lineNumber":293,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":294,"author":{"gitId":"TimothyLawSongEn"},"content":"With this, `LogicManager` will invoke `execute` on `TankFeedCommand` with the following code `command.execute(model);`,","lastModifiedDate":"2023-03-24"},{"lineNumber":295,"author":{"gitId":"TimothyLawSongEn"},"content":"where `model.setLastFedDateFishes(tankToFeed, formattedDate);` will be called.","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":297,"author":{"gitId":"TimothyLawSongEn"},"content":"The `setLastFedDateFishes(tankToFeed, formattedDate)` function will be called down the chain of classes","lastModifiedDate":"2023-03-24"},{"lineNumber":298,"author":{"gitId":"TimothyLawSongEn"},"content":"[`ModelManager` -\u003e `Tank` -\u003e `AddressBook` -\u003e `UniqueFishList`].","lastModifiedDate":"2023-03-24"},{"lineNumber":299,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"TimothyLawSongEn"},"content":"`UniqueFishList#setLastFedDateFishes(String newDate)` will then call","lastModifiedDate":"2023-03-24"},{"lineNumber":301,"author":{"gitId":"TimothyLawSongEn"},"content":"`internalList.stream().forEach(fish -\u003e fish.setLastFedDate(newDate));`,","lastModifiedDate":"2023-03-24"},{"lineNumber":302,"author":{"gitId":"TimothyLawSongEn"},"content":"creating a new stream from `internalList` containing references to all Fish objects in `internalList`.","lastModifiedDate":"2023-03-24"},{"lineNumber":303,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"TimothyLawSongEn"},"content":"Every `Fish` object will call `fish.setLastFedDate(newDate)`, where a new `LastFedDate` object with the updated date","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"TimothyLawSongEn"},"content":"will be created and replace the `Fish`\u0027s `lastFedDate` field.","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":307,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":308,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"bokuanT"},"content":"Step 2. The user executes `delete 5` command to delete the 5th fish in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-02-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"bokuanT"},"content":"Step 3. The user executes `add n/David …​` to add a new fish. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-02-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"Step 4. The user now decides that adding the fish was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-02-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"bokuanT"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the fish being deleted).","lastModifiedDate":"2023-02-26"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"ryanchua00"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2023-03-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":397,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":398,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":399,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":400,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"ryanchua00"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-27"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"bokuanT"},"content":"\u003e This product is for fish enthusiasts who wants to keep track of their numerous fishes\u0027 details, such as their health, tank status, feeding requirements etc.","lastModifiedDate":"2023-02-24"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"bokuanT"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-24"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"bokuanT"},"content":"\u003e This product makes it easier for fish keepers to keep track of numerous tasks to maintain the health of the fish and fish tanks. There are many fine details that go into maintaining an environment for live aquatic animals, and this product will help track them.","lastModifiedDate":"2023-02-24"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                          | So that I can…​                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"bokuanT"},"content":"|---------|---------|---------------------------------------|------------------------------------------------|","lastModifiedDate":"2023-02-24"},{"lineNumber":422,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | be able to create weekly tasks        | have a record of my tasks throughout the week |","lastModifiedDate":"2023-02-28"},{"lineNumber":423,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | keep track of the individual tanks    | so that I can manage them in the future        |","lastModifiedDate":"2023-02-24"},{"lineNumber":424,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | access a local fish database          | know more about my fish                        |","lastModifiedDate":"2023-02-24"},{"lineNumber":425,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | delete my fish from the system easily | get rid of dead fish                           |","lastModifiedDate":"2023-02-28"},{"lineNumber":426,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | delete a task                         | check off completed tasks                      |","lastModifiedDate":"2023-02-24"},{"lineNumber":427,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | delete a tank                         | keep my tank status updated if I retire a tank |","lastModifiedDate":"2023-02-24"},{"lineNumber":428,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | view all my fishes at a glance                          |  keep track of their numbers |","lastModifiedDate":"2023-02-28"},{"lineNumber":429,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | view my weekly tasks I need to fulfill for each of my fish tanks | not miss any tasks throughout the week |","lastModifiedDate":"2023-02-28"},{"lineNumber":430,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | transfer my data from one system to another | change my systems |","lastModifiedDate":"2023-02-28"},{"lineNumber":431,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | fish keeper | delete fish from a tank | move them to different tanks |","lastModifiedDate":"2023-02-28"},{"lineNumber":432,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | fish keeper | know which food can be fed to each fish | keep them well fed |","lastModifiedDate":"2023-02-28"},{"lineNumber":433,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | owner of multiple fish tanks | know the number and type of fish in each tank | monitor their condition |","lastModifiedDate":"2023-02-28"},{"lineNumber":434,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | know the number of fish for each species | know if any species requires help |","lastModifiedDate":"2023-02-28"},{"lineNumber":435,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | know the health conditions of my fish | be updated on their conditions |","lastModifiedDate":"2023-02-28"},{"lineNumber":436,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | attach a picture to the fish\u0027s entry | identify it and track it\u0027s growth |","lastModifiedDate":"2023-02-28"},{"lineNumber":437,"author":{"gitId":"ryanchua00"},"content":"| `*` | expert user | customize my entries fields | suit the app to my use |","lastModifiedDate":"2023-02-28"},{"lineNumber":438,"author":{"gitId":"ryanchua00"},"content":"| `*` | inexperienced fish keeper | know what are the required equipment for keeping fish | my fish won\u0027t die |","lastModifiedDate":"2023-02-28"},{"lineNumber":439,"author":{"gitId":"ryanchua00"},"content":"| `*` | inexperienced fish keeper | know what equipment is compatible with my tanks | |","lastModifiedDate":"2023-02-28"},{"lineNumber":440,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know the conditions of my equipment | maintain them |","lastModifiedDate":"2023-02-28"},{"lineNumber":441,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know ammonia levels in fish tanks | adjust the amount at the end of every week |","lastModifiedDate":"2023-02-28"},{"lineNumber":442,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know nitrate levels in fish tanks | adjust the amount at the end of every week |","lastModifiedDate":"2023-02-28"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"ryanchua00"},"content":"(For all use cases below, the **System** is `*Fish Ahoy!*` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-27"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"bokuanT"},"content":"**Use case: Add a fish**","lastModifiedDate":"2023-02-24"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"bokuanT"},"content":"1. User adds a fish","lastModifiedDate":"2023-02-24"},{"lineNumber":456,"author":{"gitId":"ryanchua00"},"content":"2. Fish is added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"bokuanT"},"content":"* 1a. User specifies a tank.","lastModifiedDate":"2023-02-24"},{"lineNumber":463,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":464,"author":{"gitId":"bokuanT"},"content":"    * 1a1. Fish is added to the tank.","lastModifiedDate":"2023-02-24"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"ryanchua00"},"content":"**Use case: Add a tank**","lastModifiedDate":"2023-02-28"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":470,"author":{"gitId":"ryanchua00"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":472,"author":{"gitId":"ryanchua00"},"content":"1. User adds a tank","lastModifiedDate":"2023-02-28"},{"lineNumber":473,"author":{"gitId":"ryanchua00"},"content":"2. Tank is added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":475,"author":{"gitId":"ryanchua00"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":476,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":477,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":478,"author":{"gitId":"bokuanT"},"content":"**Use case: Add a task**","lastModifiedDate":"2023-02-24"},{"lineNumber":479,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":480,"author":{"gitId":"bokuanT"},"content":"**MSS**","lastModifiedDate":"2023-02-24"},{"lineNumber":481,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":482,"author":{"gitId":"bokuanT"},"content":"1. User adds a task","lastModifiedDate":"2023-02-24"},{"lineNumber":483,"author":{"gitId":"ryanchua00"},"content":"2. Task is added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":484,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":485,"author":{"gitId":"bokuanT"},"content":"   Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":486,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":487,"author":{"gitId":"bokuanT"},"content":"**Extensions**","lastModifiedDate":"2023-02-24"},{"lineNumber":488,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":489,"author":{"gitId":"bokuanT"},"content":"* 1a. User specifies if the task is a `todo`.","lastModifiedDate":"2023-02-24"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"bokuanT"},"content":"    * 1a1. `todo` task is created.","lastModifiedDate":"2023-02-24"},{"lineNumber":492,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":493,"author":{"gitId":"bokuanT"},"content":"    Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":494,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":495,"author":{"gitId":"bokuanT"},"content":"* 1b. User specifies if the task is a `deadline`.","lastModifiedDate":"2023-02-24"},{"lineNumber":496,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":497,"author":{"gitId":"bokuanT"},"content":"  * 1b1. `deadline` task is created.","lastModifiedDate":"2023-02-24"},{"lineNumber":498,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":499,"author":{"gitId":"bokuanT"},"content":"    Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":500,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":501,"author":{"gitId":"ryanchua00"},"content":"* 1c. User specifies if the task includes a `fish`.","lastModifiedDate":"2023-02-28"},{"lineNumber":502,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":503,"author":{"gitId":"ryanchua00"},"content":"    * 1b1. task is created and `fish` is tagged to it.","lastModifiedDate":"2023-02-28"},{"lineNumber":504,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":505,"author":{"gitId":"ryanchua00"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"    *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"bokuanT"},"content":"2.  Should be able to hold up to 1000 fish, tanks and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-24"},{"lineNumber":513,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"ryanchua00"},"content":"4.  A user with average experience of CLI should be able to use the system.","lastModifiedDate":"2023-02-28"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"ryanchua00"},"content":"* **Fish**: A fish owned by the user to be added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":523,"author":{"gitId":"ryanchua00"},"content":"* **Tank**: A fish tank owned by the user to house fish to be added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":524,"author":{"gitId":"ryanchua00"},"content":"* **Task**: A weekly task of the user regarding fish-keeping to be added to *Fish Ahoy!*","lastModifiedDate":"2023-03-27"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"ryanchua00"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2023-03-27"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"bokuanT"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample data. The window size may not be optimum.","lastModifiedDate":"2023-04-05"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"bokuanT"},"content":"### Deleting a fish","lastModifiedDate":"2023-02-26"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"bokuanT"},"content":"1. Deleting a fish while all fish are being shown","lastModifiedDate":"2023-02-26"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"bokuanT"},"content":"   1. Prerequisites: List all fish using the `list fishes` command. Multiple fish in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"ryanchua00"},"content":"   1. Test case: `fish delete 1`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":560,"author":{"gitId":"bokuanT"},"content":"      Expected: First fish is deleted from the list. Details of the deleted fish shown in the status message. ","lastModifiedDate":"2023-04-05"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"ryanchua00"},"content":"   1. Test case: `fish delete 0`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":563,"author":{"gitId":"bokuanT"},"content":"      Expected: No fish is deleted. Error details shown in the status message. Fish panels remains the same.","lastModifiedDate":"2023-04-05"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"ryanchua00"},"content":"   1. Other incorrect delete commands to try: `fish delete`, `fish delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":566,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":569,"author":{"gitId":"bokuanT"},"content":"### Readings graph feature","lastModifiedDate":"2023-04-05"},{"lineNumber":570,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":571,"author":{"gitId":"bokuanT"},"content":"1. Checking that graphs of each tank can display readings correctly","lastModifiedDate":"2023-04-05"},{"lineNumber":572,"author":{"gitId":"bokuanT"},"content":"   1. Prerequisites: The tanks are the default sample tanks, \"freshwater tank\" and \"saltwater tank\"","lastModifiedDate":"2023-04-05"},{"lineNumber":573,"author":{"gitId":"bokuanT"},"content":"   2. Test case: paste the following test values into `readings.json`: \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":574,"author":{"gitId":"bokuanT"},"content":"```json","lastModifiedDate":"2023-04-05"},{"lineNumber":575,"author":{"gitId":"bokuanT"},"content":"{","lastModifiedDate":"2023-04-05"},{"lineNumber":576,"author":{"gitId":"bokuanT"},"content":"  \"readingLevels\" : [ {","lastModifiedDate":"2023-04-05"},{"lineNumber":577,"author":{"gitId":"bokuanT"},"content":"    \"tankName\" : \"freshwater tank\",","lastModifiedDate":"2023-04-05"},{"lineNumber":578,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesAmmonia\" : \"0.2,0.3,0.0\",","lastModifiedDate":"2023-04-05"},{"lineNumber":579,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesAmmonia\" : \"03/04/2023 14:00,04/04/2023 20:01,05/04/2023 14:02\",","lastModifiedDate":"2023-04-05"},{"lineNumber":580,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesPH\" : \"7.1,6.8,7.0\",","lastModifiedDate":"2023-04-05"},{"lineNumber":581,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesPH\" : \"03/04/2023 14:00,04/04/2023 20:01,05/04/2023 14:02\",","lastModifiedDate":"2023-04-05"},{"lineNumber":582,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesTemp\" : \"26.0,25.0,26.2\",","lastModifiedDate":"2023-04-05"},{"lineNumber":583,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesTemp\" : \"03/04/2023 14:00,04/04/2023 20:01,05/04/2023 14:02\"","lastModifiedDate":"2023-04-05"},{"lineNumber":584,"author":{"gitId":"bokuanT"},"content":"  }, {","lastModifiedDate":"2023-04-05"},{"lineNumber":585,"author":{"gitId":"bokuanT"},"content":"    \"tankName\" : \"saltwater tank\",","lastModifiedDate":"2023-04-05"},{"lineNumber":586,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesAmmonia\" : \"\",","lastModifiedDate":"2023-04-05"},{"lineNumber":587,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesAmmonia\" : \"\",","lastModifiedDate":"2023-04-05"},{"lineNumber":588,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesPH\" : \"\",","lastModifiedDate":"2023-04-05"},{"lineNumber":589,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesPH\" : \"\",","lastModifiedDate":"2023-04-05"},{"lineNumber":590,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedValuesTemp\" : \"\",","lastModifiedDate":"2023-04-05"},{"lineNumber":591,"author":{"gitId":"bokuanT"},"content":"    \"commaSeperatedDatesTemp\" : \"\"","lastModifiedDate":"2023-04-05"},{"lineNumber":592,"author":{"gitId":"bokuanT"},"content":"  } ]","lastModifiedDate":"2023-04-05"},{"lineNumber":593,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":594,"author":{"gitId":"bokuanT"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":595,"author":{"gitId":"bokuanT"},"content":"Expected: \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":596,"author":{"gitId":"bokuanT"},"content":"![expectedReadingFromSample](images/expectedReadingFromSample.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":597,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":598,"author":{"gitId":"bokuanT"},"content":":exclamation: Warning: If you want to test with more of your own values, you should ensure all 3 types of ","lastModifiedDate":"2023-04-05"},{"lineNumber":599,"author":{"gitId":"bokuanT"},"content":"readings come as a set e.g. if any readings were to be made, it would be all 3 and they are made at the same time","lastModifiedDate":"2023-04-05"},{"lineNumber":600,"author":{"gitId":"bokuanT"},"content":"as the app ensures this","lastModifiedDate":"2023-04-05"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"bokuanT"},"content":"   1. Missing data files are automatically created. If data files are corrupted, delete all data files","lastModifiedDate":"2023-04-05"},{"lineNumber":607,"author":{"gitId":"bokuanT"},"content":"   so new ones will be created, containing our sample data.","lastModifiedDate":"2023-04-05"},{"lineNumber":608,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":609,"author":{"gitId":"ryanchua00"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":611,"author":{"gitId":"ryanchua00"},"content":"## Appendix: Planned Enhancements","lastModifiedDate":"2023-04-04"},{"lineNumber":612,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":613,"author":{"gitId":"ryanchua00"},"content":"1. The current error message for an invalid index is too general. We plan to make the error message also more accurate ","lastModifiedDate":"2023-04-04"},{"lineNumber":614,"author":{"gitId":"ryanchua00"},"content":"   by filtering by why the index is invalid.","lastModifiedDate":"2023-04-04"},{"lineNumber":615,"author":{"gitId":"ryanchua00"},"content":"   ","lastModifiedDate":"2023-04-04"},{"lineNumber":616,"author":{"gitId":"ryanchua00"},"content":"    1. [-MAX_INT....0]: Index must be a positive non-zero integer","lastModifiedDate":"2023-04-04"},{"lineNumber":617,"author":{"gitId":"ryanchua00"},"content":"    2. [4..MAX_INT]: Index is out-of-bounds. Index must correspond to a valid tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":618,"author":{"gitId":"ryanchua00"},"content":"   ","lastModifiedDate":"2023-04-04"},{"lineNumber":619,"author":{"gitId":"bokuanT"},"content":"2. The current parameter parsing does not check for nonsensical or invalid values. We plan do execute sanity checks to ","lastModifiedDate":"2023-04-05"},{"lineNumber":620,"author":{"gitId":"bokuanT"},"content":"    protect the user from receiving unintentional results for the following parameters:","lastModifiedDate":"2023-04-05"},{"lineNumber":621,"author":{"gitId":"bokuanT"},"content":"   1. Last fed dates: Check for invalid dates like 30th February and reject them","lastModifiedDate":"2023-04-05"},{"lineNumber":622,"author":{"gitId":"bokuanT"},"content":"   2. Feeding interval: While it makes sense that a feeding interval can be 0 days and 25 hours, it ","lastModifiedDate":"2023-04-05"},{"lineNumber":623,"author":{"gitId":"bokuanT"},"content":"   makes our `fish sort by/fi` less intuitive as ours sorts by days then hours. `0d25h` will appear before `1d0h`","lastModifiedDate":"2023-04-05"},{"lineNumber":624,"author":{"gitId":"bokuanT"},"content":"   . We can automatically convert feeding intervals such that hours is less than 24 in future iterations","lastModifiedDate":"2023-04-05"},{"lineNumber":625,"author":{"gitId":"bokuanT"},"content":"   3. Readings: Ammonia levels, temperatures and pH can accept amy numerical value that may be far out of the boundaries","lastModifiedDate":"2023-04-05"},{"lineNumber":626,"author":{"gitId":"bokuanT"},"content":"   of our GUI graph axes. In future iterations, we will check that they are realistic values, which are","lastModifiedDate":"2023-04-05"},{"lineNumber":627,"author":{"gitId":"bokuanT"},"content":"   values bounded by the axes of our respective graphs.","lastModifiedDate":"2023-04-05"},{"lineNumber":628,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":629,"author":{"gitId":"bokuanT"},"content":"3. Alphanumeric fields may be truncated if they are too long as we do not limit their length. They","lastModifiedDate":"2023-04-05"},{"lineNumber":630,"author":{"gitId":"bokuanT"},"content":"may also become truncated if the user\u0027s app window size is too small. A side effect of this can be for example,","lastModifiedDate":"2023-04-05"},{"lineNumber":631,"author":{"gitId":"bokuanT"},"content":"fish with long names, which are supposed to be distinct, will appear as the same after truncation.","lastModifiedDate":"2023-04-05"},{"lineNumber":632,"author":{"gitId":"bokuanT"},"content":"We will limit the length of such parameters in future enhancements to avoid this. ","lastModifiedDate":"2023-04-05"},{"lineNumber":633,"author":{"gitId":"bokuanT"},"content":"    ","lastModifiedDate":"2023-04-05"},{"lineNumber":634,"author":{"gitId":"ryanchua00"},"content":"4. Logging messages on the terminal are not optimized for Fish Ahoy! We plan to improve this by simple changes from ","lastModifiedDate":"2023-04-06"},{"lineNumber":635,"author":{"gitId":"ryanchua00"},"content":"   \"Addressbook\" to \"Fish Ahoy\", as well as fixing the fxml versions in fxml files. Furthermore, we can add more useful ","lastModifiedDate":"2023-04-06"},{"lineNumber":636,"author":{"gitId":"ryanchua00"},"content":"   logging messages related to Fish Ahoy commands such as information on newly added commands, so the user may gain more ","lastModifiedDate":"2023-04-06"},{"lineNumber":637,"author":{"gitId":"ryanchua00"},"content":"   information. For instance, Tank readings could display the current list of values, so the user can understand the graph.","lastModifiedDate":"2023-04-06"},{"lineNumber":638,"author":{"gitId":"bokuanT"},"content":"   ","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"TimothyLawSongEn":30,"bryanongjx":32,"bokuanT":121,"ryanchua00":139,"-":316}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/logo_UG.png\" width\u003d\"300\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"# Table of Contents","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"  * [Introduction](#introduction)","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * [Using this guide](#using-this-guide)","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * [Glossary](#glossary)","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * [Quickstart](#quick-start)","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"  * [About the interface](#about-the-interface)","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"  * [*Fish Ahoy!* commands](#fish-ahoy-commands)","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"  * [Features](#features)","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    * [Tanks](#tanks)","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    * [Tank readings](#tank-readings)","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"      * [Adding a tank `tank add`](#adding-a-tank-tank-add)","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"      * [Deleting a tank `tank delete`](#deleting-a-tank-tank-delete)","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"      * [Editing a tank `tank edit`](#editing-a-tank-tank-edit)","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"      * [Feeding a tank `tank feed`](#feeding-a-tank-tank-feed)","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"      * [Viewing a tank `tank view`](#viewing-a-tank-tank-view)","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"      * [Adding a set of readings `tank addReadings`](#adding-a-set-of-readings-tank-addreadings)","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"      * [Deleting a most recent set of readings `tank delLastReadings`](#deleting-the-most-recent-set-of-readings-tank-dellastreadings)","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    * [Fishes](#fishes)","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"      * [Adding a fish `fish add`](#adding-a-fish-fish-add)","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"      * [Deleting a fish `fish delete`](#deleting-a-fish-fish-delete)","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"      * [Editing a fish `fish edit`](#editing-a-fish-fish-edit)","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"      * [Sorting fishes `fish sort`](#sorting-fishes-fish-sort)","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"      * [Viewing fishes `fish view`](#viewing-a-fish-fish-view)","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"      * [Listing fishes `list fishes`](#listing-fishes-list-fishes)","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    * [Tasks](#tasks)","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"      * [Adding a task `task add`](#adding-a-task-task-add)","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"      * [Deleting a task `task delete`](#deleting-a-task-task-delete)","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"      * [Editing a task `task edit`](#editing-a-task-task-edit)","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"      * [Listing tasks `list task`](#listing-tasks-list-task)","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"      * [Feeding reminders](#feeding-reminders)","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    * [Storage](#storage)","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    * [Help](#help)","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    * [FAQ](#faq)","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    * [Summary of commands](#command-summary)","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    * [Summary of prefixes in commands](#command-prefix-summary)","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"# Introduction","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"Welcome to the *Fish Ahoy! User Guide*! \u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* Is a **desktop app for managing your fish, fish tanks, and relevant tasks, optimized for use via a Command","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). \u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* **streamlines** the fish keeping experience by helping you keep track of your many **fishes**, **tanks** and ","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"**weekly tasks**, such as feeding and cleaning. ","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* **simplifies** commands to revolve around **fish**, **tank** and **task**. When you want to, for example,","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"perform an action on **tanks**, the commands all begin with `tank`.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"# Using this guide","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"This guide will explain how you can use *Fish Ahoy!* for your own fish keeping activities. It is designed to","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"cater to all levels of fish keeping expertise, from novice to expert fish keepers. It does not assume any prior","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"knowledge of fish keeping, only the simplest components of an aquarium such as a tank, fish, and basic fish keeping","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"equipment.","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"For **new users**, follow our [Quick Start Guide](#quick-start) below to get started with your fish-keeping journey with *Fish Ahoy!*.","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"For **amateur users**, choose a feature from our [table of contents](#table-of-contents) above to find answers and get step-by-step instructions on how to make","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"*Fish Ahoy!* work for you!","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"For **experienced users**, refer to our [command summary](#command-summary) or [prefix summary](#command-prefix-summary) to obtain information you might need at a glance.","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"These are the symbols employed in this user guide:","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"| Symbol               | Meaning                                                                                                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"|----------------------|--------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"| :information_source: | Additional information. More relevant to **amateur** and **experienced** users.                              |","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"| :bulb:               | Helpful tip from the developers.                                                                             |","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"| :exclamation:        | Warning. Attempting to perform an action with a warning will lead to an **error** or unintended consequences |","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: These symbols will be housed in blockquotes like this","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"These are the special text formatting employed in this user guide: ","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"| Font                 | Meaning                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"|----------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"| **Bold**             | You should pay closer attention to bolded words as they are more important                                                                                                                                                                                |","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"| `Code`               | Used for coding syntax. Parts of a *Fish Ahoy!* command will be in this format. Command Prompt commands and file names in the [Quick start](#quick-start) are also in this format                                                                         |","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"| [Links]()            | A link to a section in this user guide that will provide more in-depth information                                                                                                                                                                        |","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"| *Italics*            | The application name, *Fish Ahoy!* is in this format.                                                                                                                                                                                                     |","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"| `\u003cCOMMAND CONTENTS\u003e` | Generalises a part of a [command](#glossary). You can choose the exact value of the content in these brackets \u003cbr\u003e example: `\u003cPARAMETERS\u003e` mean that you need to specify the exact values of the parameters in *Fish Ahoy!*, subject to their constraints |","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"# Glossary","lastModifiedDate":"2023-04-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"These are the definitions to some technical terms: ","lastModifiedDate":"2023-04-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"| Word           | Meaning                                                                                                                                                                                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"|----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"| Command        | A series of words you type in the [Command Line](#about-the-interface) to perform an action                                                                                                             |","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"| Command type   | Identifies the type of information the command modifies. \u003cbr\u003e Command types: `tank`, `fish`, `task`                                                                                                     |","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"| Command action | Specifies exactly what action the command performs. \u003cbr\u003e Some command actions: `add`, `delete`, `edit`                                                                                                  |","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"| Parameter      | Part of a command. Provides the command the information it requires. Parameters are preceded with a prefix.                                                                                             |","lastModifiedDate":"2023-04-03"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"| Prefix         | Part of a parameter. Specifies what type of information the parameter is providing. \u003cbr\u003e [Prefixes:](#command-prefix-summary) `n/`, `lfd/`, `s/`, `fi/`, `tg/`, `by/`, `d/`, `al/`, `ph/`, `tp/`, `tk/` |","lastModifiedDate":"2023-04-03"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"| GUI/ Interface | The visual and graphical components of *Fish Ahoy!* It is what you see when you open *Fish Ahoy!*                                                                                                       |","lastModifiedDate":"2023-04-03"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"| Object         | An object is either a tank, fish or task. This term is used when all 3 types, tank, task and fish, are applicable.                                                                                      |","lastModifiedDate":"2023-04-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"# Quick start","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"1. Ensure you have [Java 11](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html) or above installed in your Computer.","lastModifiedDate":"2023-04-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: You can check by typing `java --version` in your Command Prompt for Windows or Terminal App for macOS","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"2. Download the latest `FishAhoy.jar` from [here](https://github.com/AY2223S2-CS2103T-T17-4/tp/releases).","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"3. Copy the file `FishAhoy.jar` to the folder you want to use as the home folder for *Fish Ahoy!*.","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: Data files of *Fish Ahoy!* will be also stored in the folder you keep it in.","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"4. Double-click the file to open *Fish Ahoy!* ","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: There is sample data present when you first open *Fish Ahoy!*. Use `edit` or `delete` commands to show your own tanks! ","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"5. Type a command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"   Some examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"  * `fish add n/Bobby lfd/01/01/2023 15:00 s/Guppy fi/0d5h tk/1`: Add a fish named Bobby to your fish book. Its last fed date, species, feeding interval and tank are specified with the `lfd/`, `s/`, `fi/` and `tk/` prefixes respectively.","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"  * `fish delete 1`: Deletes the first fish shown in the [centre panel of the interface](#about-the-interface).","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"  * `tank view 1`: View all fishes and tasks regarding the first tank in the [left panel of the interface](#about-the-interface).","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"6. Refer to [About the Interface](#about-the-interface) below for details on the interface.","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"# About the Interface","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"The *Fish Ahoy!* interface consists of three main components, the **Command Line**, **Alerts**, and **Panels**, ","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"and two buttons, **File** and **Help**.","lastModifiedDate":"2023-03-31"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"![Ui](images/UiIntro.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"The **Command Line** is where you can enter various commands to enter information into *Fish Ahoy!*. ","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"Refer to the [Features](#features) below for details of each command!","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"The **Alerts** will display the results of each command, and display additional help specific to the command.","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: If you are unsure of the command format, simply enter the command type you want to use, e.g. `fish`, followed by the command action","lastModifiedDate":"2023-04-03"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"you would like to use, e.g. `add`. Information on prefixes will be displayed in the Alerts!\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"The **Panels** will display all the information on your Tanks, Fishes and Tasks. The leftmost panel displays tanks, centre panel display fishes and the right panel displays tasks These panels will automatically update ","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"whenever you enter a command. Try it out!","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":166,"author":{"gitId":"ryanchua00"},"content":"The **File** button will present a menu where you can exit the application. Exiting from the application using ","lastModifiedDate":"2023-03-31"},{"lineNumber":167,"author":{"gitId":"ryanchua00"},"content":"Windows/Mac OS native close buttons are also fine.","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":169,"author":{"gitId":"ryanchua00"},"content":"The **Help** button will present a menu where you can display the *Fish Ahoy! User Guide*. If you require extra information,","lastModifiedDate":"2023-03-31"},{"lineNumber":170,"author":{"gitId":"ryanchua00"},"content":"do use this to redirect you to our user guide!","lastModifiedDate":"2023-03-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"ryanchua00"},"content":"## Tank Interface","lastModifiedDate":"2023-04-06"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":174,"author":{"gitId":"ryanchua00"},"content":"A sample Tank item is shown below. For each Tank you add in *Fish Ahoy!*, you have to add a ","lastModifiedDate":"2023-04-06"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"[Description]((#description)). A [Tank Index](#index-parameters) is then automatically assigned to the tank. ","lastModifiedDate":"2023-04-06"},{"lineNumber":176,"author":{"gitId":"ryanchua00"},"content":"The **Number of fish** will be automatically updated whenever you add/delete a fish from this tank in *Fish Ahoy!* ","lastModifiedDate":"2023-04-06"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"The [Ammonia](#tank-ammonia-level-reading-alammonia_level), [Temperature](#tank-temperature-reading-tptemperature)and","lastModifiedDate":"2023-04-06"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"[pH](#tank-ph-reading-phph) are generated from [readings](#tank-readings) that you add to *Fish Ahoy!*","lastModifiedDate":"2023-04-06"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"![Ui](images/UiTank.png) ","lastModifiedDate":"2023-04-06"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"## Fish Interface","lastModifiedDate":"2023-04-06"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"A sample Fish item is shown below. Each Fish you add in *Fish Ahoy!* has multiple [parameters](#parameters-br), such as ","lastModifiedDate":"2023-04-06"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"[Name](#name-nname), [Species](#species-sspecies), [Last Fed Date](#last-fed-date-lfdlast_fed_date), ","lastModifiedDate":"2023-04-06"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"[Feeding Interval](#feeding-interval-fifeeding_interval), which [Tank](#tank-tktank_index) it is in and what ","lastModifiedDate":"2023-04-06"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"[Tags](#tags-tgtag) it has. There is also a [Fish Index](#index-parameters) which is automatically assigned to the fish. ","lastModifiedDate":"2023-04-06"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"The **Fish Icon** is matched to the [Species](#species-sspecies) of the fish!","lastModifiedDate":"2023-04-06"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"![Ui](images/UiFish.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"# *Fish Ahoy!* Commands","lastModifiedDate":"2023-04-03"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"In general, the command format is as follows:\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"`\u003cCOMMAND TYPE\u003e \u003cCOMMAND ACTION\u003e \u003cPARAMETERS\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: `list` commands do not follow this format, but are of format `list \u003cCOMMAND TYPE\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"## Command types and actions","lastModifiedDate":"2023-04-03"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"* Command types","lastModifiedDate":"2023-04-03"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"  * There are 3 command types. They are the `tank`, `fish` and `task` command types","lastModifiedDate":"2023-04-03"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"  * They specify what they modify. `tank` commands modify tanks, `fish` commands modify fish and `task` commands modify tasks","lastModifiedDate":"2023-04-03"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"* Command actions","lastModifiedDate":"2023-04-03"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"  * These specify what the command does. For example, `tank add` adds a tank to *Fish Ahoy!*.","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"## Parameters \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"* Parameters are additional pieces of information a command needs to perform its action. ","lastModifiedDate":"2023-04-03"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"  * For example, in the `tank add` command, a description parameter `d/\u003cDESCRIPTION\u003e` is needed","lastModifiedDate":"2023-04-03"},{"lineNumber":213,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"### Index parameters","lastModifiedDate":"2023-04-03"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"* Used as parameters for commands with `delete`, `edit` and `view` actions","lastModifiedDate":"2023-04-03"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"* Index parameters are **positive integers** (1, 2, 3...)","lastModifiedDate":"2023-04-03"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"* Index parameters do not require a prefix. For example, the command is as follows: `tank delete 1`","lastModifiedDate":"2023-04-03"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"* In the features section, index parameters will be as such: `\u003cXXX_INDEX\u003e`, and `XXX` can be `TANK`, `FISH` or `TASK`","lastModifiedDate":"2023-04-03"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Ensure that the index you input corresponds to an existing item. ","lastModifiedDate":"2023-04-03"},{"lineNumber":220,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e Look at the [respective panels](#about-the-interface) for the index of the type of object you want to refer to.","lastModifiedDate":"2023-04-03"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":222,"author":{"gitId":"ryanchua00"},"content":"![Ui](images/UiIndex.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":223,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"bokuanT"},"content":"### Prefix parameters","lastModifiedDate":"2023-04-03"},{"lineNumber":225,"author":{"gitId":"bokuanT"},"content":"* Used as parameters for commands with `add`, `edit` and `addReadings` actions","lastModifiedDate":"2023-04-03"},{"lineNumber":226,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters require a prefix. For example, the command is as follows: `tank add d/\u003cTANK_NAME\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"* In the features section, prefix parameters will be as such: `X/\u003cCONTENT\u003e` where `X` is a valid prefix and `\u003cCONTENT\u003e` is the content of this parameter, subject to its constraints","lastModifiedDate":"2023-04-03"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"* You can only have multiple values for tag prefixes `tg/\u003cTAG\u003e`. All other prefixes can only have 1 value. ","lastModifiedDate":"2023-04-03"},{"lineNumber":229,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: You can have multiple prefix parameters for the same prefix, but only the last one will be used.","lastModifiedDate":"2023-04-03"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003eFor example: `tank add d/Tank 1 d/Tank 2` will create a tank called \u0027Tank 2\u0027.","lastModifiedDate":"2023-04-03"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: For alphanumeric parameters, they are case-sensitive!","lastModifiedDate":"2023-04-03"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003eFor Example: `d/Freshwater tank` is different from `d/freshwater tank`","lastModifiedDate":"2023-04-03"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Redundant spaces will be removed automatically for prefix parameters","lastModifiedDate":"2023-04-03"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e For example: `d/ Tank 1` does not make the description \u0027 Tank 1\u0027, but is the same as `d/Tank 1`.","lastModifiedDate":"2023-04-03"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: The order you type distinct prefix parameters do not matter!","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e For example, `tank addReadings tk/1 al/1 ph/6 tp/23` is the same as `tank addReadings al/1 ph/6 tp/23 tk/1`","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Alphanumeric parameters like descriptions and names may be truncated it they are too long!","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"\u003e Adjust the window size of *Fish Ahoy!* to better show such truncated fields. If it is still not fully showing,","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"\u003e the name you picked might be too long! Consider adding the information of fish that cannot be displayed in tags!","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"#### Description `d/\u003cDESCRIPTION\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"  * Type: `Tank`","lastModifiedDate":"2023-04-03"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"  * `\u003cDESCRIPTION\u003e` should only contain alphanumeric characters and spaces","lastModifiedDate":"2023-04-03"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"  * Prefix: `d/`","lastModifiedDate":"2023-04-03"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"  * Example: `d/Tank 1`","lastModifiedDate":"2023-04-03"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"#### Name `n/\u003cNAME\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"* `\u003cNAME\u003e` should only contain alphanumeric characters and spaces","lastModifiedDate":"2023-04-03"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"* Prefix: `n/`","lastModifiedDate":"2023-04-03"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"* Example: `n/Nemo`","lastModifiedDate":"2023-04-03"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"#### Last Fed Date `lfd/\u003cLAST_FED_DATE\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"* `\u003cLAST_FED_DATE\u003e` should be in the format `DD/MM/YYYY HH:MM` where `DD` is the day of the month, `MM` is the month of the year and `YYYY` is the year. `HH` is the hour of the day and `MM` is the minute of the hour.","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"* Prefix: `lfd/`","lastModifiedDate":"2023-04-03"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"* Example: `lfd/01/04/2023 12:00`","lastModifiedDate":"2023-04-03"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Remember to input 2 digits for `DD` and `MM`. ","lastModifiedDate":"2023-04-03"},{"lineNumber":263,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e For example, `DD` and `MM` for the 9th of April should be `09` and `04` respectively.","lastModifiedDate":"2023-04-03"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":265,"author":{"gitId":"bokuanT"},"content":"#### Species `s/\u003cSPECIES\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"* `\u003cSPECIES\u003e` should only contain alphanumeric characters and spaces","lastModifiedDate":"2023-04-03"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"* Prefix: `s/`","lastModifiedDate":"2023-04-03"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"* Example: `s/guppy`","lastModifiedDate":"2023-04-03"},{"lineNumber":270,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Look out for the unique fish icons for different species of fishes!","lastModifiedDate":"2023-04-03"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":272,"author":{"gitId":"bokuanT"},"content":"#### Feeding interval `fi/\u003cFEEDING_INTERVAL\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"* `\u003cFEEDING_INTERVAL\u003e` should be in the format `\u003cDAYS\u003ed\u003cHOURS\u003eh` where `\u003cDAYS\u003e` and `\u003cHOURS\u003e` specifies the days and hours of the feeding interval respectively","lastModifiedDate":"2023-04-03"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"* Prefix: `fi/`","lastModifiedDate":"2023-04-03"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"* Example: `fi/1d12h`","lastModifiedDate":"2023-04-03"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":278,"author":{"gitId":"bokuanT"},"content":"#### Tags `[tg/\u003cTAG\u003e]`","lastModifiedDate":"2023-04-03"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"* Multiple tags allowed for one fish. A fish can also have no tags.","lastModifiedDate":"2023-04-04"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"* `\u003cTAG\u003e` should only contain alphanumeric characters, with **no** spaces","lastModifiedDate":"2023-04-03"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"* Prefix: `tg/`","lastModifiedDate":"2023-04-03"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"* Example: `tg/sick tg/fat`","lastModifiedDate":"2023-04-03"},{"lineNumber":284,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":285,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: the syntax we use for tags are enclosed in square brackets `[tg/\u003cTAG\u003e]`, to show that it can contain","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"bokuanT"},"content":"\u003e 0 or more tags.","lastModifiedDate":"2023-04-04"},{"lineNumber":287,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"bokuanT"},"content":"#### Sorting `by/\u003cPREFIX_PARAMETER\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":289,"author":{"gitId":"bokuanT"},"content":"* Type: `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":290,"author":{"gitId":"bokuanT"},"content":"* `\u003cPREFIX_PARAMETER\u003e` `n`, `lfd`, `s`, `fi`, or `tk`. These correspond to the parameters in this section with the same prefix.","lastModifiedDate":"2023-04-03"},{"lineNumber":291,"author":{"gitId":"bokuanT"},"content":"* Prefix: `by/`","lastModifiedDate":"2023-04-03"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"* Example: `by/lfd`","lastModifiedDate":"2023-04-03"},{"lineNumber":293,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":294,"author":{"gitId":"bokuanT"},"content":"#### Tank ammonia level reading `al/\u003cAMMONIA_LEVEL\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":295,"author":{"gitId":"bokuanT"},"content":"* Type: `Tank`","lastModifiedDate":"2023-04-03"},{"lineNumber":296,"author":{"gitId":"bokuanT"},"content":"* `\u003cAMMONIA_LEVEL\u003e` A number, with or without decimal points.","lastModifiedDate":"2023-04-03"},{"lineNumber":297,"author":{"gitId":"bokuanT"},"content":"* Prefix: `al/`","lastModifiedDate":"2023-04-03"},{"lineNumber":298,"author":{"gitId":"bokuanT"},"content":"* Example: `al/2`","lastModifiedDate":"2023-04-03"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":300,"author":{"gitId":"bokuanT"},"content":"#### Tank pH reading `ph/\u003cPH\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"* Type: `Tank`","lastModifiedDate":"2023-04-03"},{"lineNumber":302,"author":{"gitId":"bokuanT"},"content":"* `\u003cPH\u003e` A number, with or without decimal points.","lastModifiedDate":"2023-04-03"},{"lineNumber":303,"author":{"gitId":"bokuanT"},"content":"* Prefix: `ph/`","lastModifiedDate":"2023-04-03"},{"lineNumber":304,"author":{"gitId":"bokuanT"},"content":"* Example: `al/7.1`","lastModifiedDate":"2023-04-03"},{"lineNumber":305,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":306,"author":{"gitId":"bokuanT"},"content":"#### Tank temperature reading `tp/\u003cTEMPERATURE\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"* Type: `Tank`","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"bokuanT"},"content":"* `\u003cTEMPERATURE\u003e` A number, with or without decimal points.","lastModifiedDate":"2023-04-03"},{"lineNumber":309,"author":{"gitId":"bokuanT"},"content":"* Prefix: `tp/`","lastModifiedDate":"2023-04-03"},{"lineNumber":310,"author":{"gitId":"bokuanT"},"content":"* Example: `tp/28`","lastModifiedDate":"2023-04-03"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":312,"author":{"gitId":"bokuanT"},"content":"#### Tank `tk/\u003cTANK_INDEX\u003e`","lastModifiedDate":"2023-04-03"},{"lineNumber":313,"author":{"gitId":"bokuanT"},"content":"* Type: `Task`, `Fish`","lastModifiedDate":"2023-04-03"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"* `\u003cTANK_INDEX\u003e` Positive integer (1, 2, 3...) and is one of the tank indexes of the listed tanks in the [left tank panel](#about-the-interface)","lastModifiedDate":"2023-04-03"},{"lineNumber":315,"author":{"gitId":"bokuanT"},"content":"* Prefix: `tk/`","lastModifiedDate":"2023-04-03"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"* Example: `tk/1`","lastModifiedDate":"2023-04-03"},{"lineNumber":317,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":318,"author":{"gitId":"bokuanT"},"content":"#### Priority `p/\u003cPRIORITY\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"bokuanT"},"content":"* Type: `Task`","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"bokuanT"},"content":"* `\u003cPRIORITY\u003e` One of the following: low, medium, high","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"bokuanT"},"content":"* Prefix: `p/`","lastModifiedDate":"2023-04-04"},{"lineNumber":322,"author":{"gitId":"bokuanT"},"content":"* Example: `p/high`","lastModifiedDate":"2023-04-04"},{"lineNumber":323,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":324,"author":{"gitId":"bokuanT"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":325,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":326,"author":{"gitId":"ryanchua00"},"content":"# Features","lastModifiedDate":"2023-03-17"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"ryanchua00"},"content":"## Tanks","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"ryanchua00"},"content":"Tanks form the basis of *Fish Ahoy!*, as most, if not all our activities revolve around them. Aquarium tanks are the ","lastModifiedDate":"2023-03-26"},{"lineNumber":331,"author":{"gitId":"ryanchua00"},"content":"first requirement of fish keeping. (Can\u0027t have a fish without a tank!) Similarly, *Fish Ahoy!* also requires you to add","lastModifiedDate":"2023-03-26"},{"lineNumber":332,"author":{"gitId":"ryanchua00"},"content":"a tank first, before allowing you to add in any fishes. These tanks directly represent your tanks in real life, so ","lastModifiedDate":"2023-03-26"},{"lineNumber":333,"author":{"gitId":"ryanchua00"},"content":"customize them with their own names and add in their respective fishes!","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"bokuanT"},"content":"In the list, each tank has an [index](#index-parameters). Use these indexes to perform certain operations on them.","lastModifiedDate":"2023-04-05"},{"lineNumber":335,"author":{"gitId":"ryanchua00"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"## Tank readings","lastModifiedDate":"2023-04-04"},{"lineNumber":337,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"If the species of fish you are keeping require close monitoring of environmental conditions, this feature is for you. Each","lastModifiedDate":"2023-04-04"},{"lineNumber":339,"author":{"gitId":"bokuanT"},"content":"tank keep tracks of 3 types of reading levels- ammonia level, pH and temperature. Use the following commands","lastModifiedDate":"2023-04-04"},{"lineNumber":340,"author":{"gitId":"bokuanT"},"content":"to log down the respective readings.","lastModifiedDate":"2023-04-04"},{"lineNumber":341,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":342,"author":{"gitId":"bokuanT"},"content":"Currently, there are seven command actions of type tank:","lastModifiedDate":"2023-04-04"},{"lineNumber":343,"author":{"gitId":"ryanchua00"},"content":"* [Adding a tank `tank add`](#adding-a-tank-tank-add)","lastModifiedDate":"2023-03-27"},{"lineNumber":344,"author":{"gitId":"ryanchua00"},"content":"* [Deleting a tank `tank delete`](#deleting-a-tank-tank-delete)","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"ryanchua00"},"content":"* [Editing a tank `tank edit`](#editing-a-tank-tank-edit)","lastModifiedDate":"2023-04-04"},{"lineNumber":346,"author":{"gitId":"ryanchua00"},"content":"* [Feeding a tank `tank feed`](#feeding-a-tank-tank-feed)","lastModifiedDate":"2023-03-28"},{"lineNumber":347,"author":{"gitId":"ryanchua00"},"content":"* [Viewing a tank `tank view`](#viewing-a-tank-tank-view)","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"bokuanT"},"content":"* [Adding a set of readings to a tank `tank addReadings`](#adding-a-set-of-readings-tank-addreadings)","lastModifiedDate":"2023-04-04"},{"lineNumber":349,"author":{"gitId":"bokuanT"},"content":"* [Deleting a most recent set of readings of a tank `tank delLastReadings`](#deleting-the-most-recent-set-of-readings-tank-dellastreadings)","lastModifiedDate":"2023-04-04"},{"lineNumber":350,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":351,"author":{"gitId":"TimothyLawSongEn"},"content":"### Adding a tank: `tank add`","lastModifiedDate":"2023-03-26"},{"lineNumber":352,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":353,"author":{"gitId":"bokuanT"},"content":"You can add a tank to *Fish Ahoy!* with the `tank add` command.","lastModifiedDate":"2023-04-03"},{"lineNumber":354,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":355,"author":{"gitId":"ryanchua00"},"content":"Use this command to add your own tank with a customized name to *Fish Ahoy!* This will start your journey into managing ","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"ryanchua00"},"content":"your aquarium.","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"ryanchua00"},"content":"Format: `tank add d/\u003cTANK_NAME\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":359,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":360,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":361,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":362,"author":{"gitId":"bokuanT"},"content":"  * `d/\u003cTANK_NAME\u003e` - [Description prefix.](#description-ddescription) Specifies the name of the tank","lastModifiedDate":"2023-04-03"},{"lineNumber":363,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_NAME\u003e` is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-03"},{"lineNumber":364,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":365,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: You cannot add tanks with the same description to *Fish Ahoy!*","lastModifiedDate":"2023-04-03"},{"lineNumber":366,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":367,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-03"},{"lineNumber":368,"author":{"gitId":"bokuanT"},"content":"* `tank add d/Freshwater tank` adds a new tank with the following details:","lastModifiedDate":"2023-04-03"},{"lineNumber":369,"author":{"gitId":"bokuanT"},"content":"  * Description: Freshwater tank","lastModifiedDate":"2023-04-03"},{"lineNumber":370,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":371,"author":{"gitId":"TimothyLawSongEn"},"content":"### Deleting a tank: `tank delete`","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"bokuanT"},"content":"You can delete a tank entry from *Fish Ahoy!* with the `tank delete` command.","lastModifiedDate":"2023-04-03"},{"lineNumber":374,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"bokuanT"},"content":"Use this command to remove tanks from the system, when you are retiring a tank.","lastModifiedDate":"2023-04-03"},{"lineNumber":376,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":377,"author":{"gitId":"TimothyLawSongEn"},"content":"Format: `tank delete \u003cTANK_INDEX\u003e`","lastModifiedDate":"2023-03-26"},{"lineNumber":378,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":379,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":380,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":381,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTANK_INDEX\u003e` - The tank [index.](#index-parameters) Specifies which tank to delete.","lastModifiedDate":"2023-04-03"},{"lineNumber":382,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-03"},{"lineNumber":383,"author":{"gitId":"bokuanT"},"content":"  ","lastModifiedDate":"2023-04-03"},{"lineNumber":384,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: You can\u0027t delete a tank that has fishes and tasks attached to it. Remove those first before deleting the tank.","lastModifiedDate":"2023-04-03"},{"lineNumber":385,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":386,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-03"},{"lineNumber":387,"author":{"gitId":"bokuanT"},"content":"* `tank delete 2` deletes the second tank in the [tanks panel](#about-the-interface)","lastModifiedDate":"2023-04-03"},{"lineNumber":388,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":389,"author":{"gitId":"bokuanT"},"content":"### Editing a tank: `tank edit`","lastModifiedDate":"2023-04-04"},{"lineNumber":390,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":391,"author":{"gitId":"bokuanT"},"content":"You can edit the details of an existing tank with the `tank edit` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":392,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":393,"author":{"gitId":"bokuanT"},"content":"Use this command if you want to update the original sample tank names to match your tank names, or if you decide that you want to rename","lastModifiedDate":"2023-04-04"},{"lineNumber":394,"author":{"gitId":"bokuanT"},"content":"an existing tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":395,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":396,"author":{"gitId":"bokuanT"},"content":"Format: `tank edit \u003cTANK_INDEX\u003e d/\u003cDESCRIPTION\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":397,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":398,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":399,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":400,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTANK_INDEX\u003e` - The tank [index.](#index-parameters) Specifies which tank to delete.","lastModifiedDate":"2023-04-04"},{"lineNumber":401,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":402,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":403,"author":{"gitId":"bokuanT"},"content":"  * `d/\u003cTANK_NAME\u003e` - [Description prefix.](#description-ddescription) Specifies the name of the tank","lastModifiedDate":"2023-04-04"},{"lineNumber":404,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_NAME\u003e` is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-04"},{"lineNumber":405,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":406,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: For `edit` command actions, you must change **at least one** field! In this case, you must include","lastModifiedDate":"2023-04-04"},{"lineNumber":407,"author":{"gitId":"bokuanT"},"content":"\u003e a new tank description when you want to use `tank edit`.","lastModifiedDate":"2023-04-04"},{"lineNumber":408,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":409,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":410,"author":{"gitId":"bokuanT"},"content":"* `tank edit 2 d/My new tank` changes the name of the second tank in the [tanks panel](#about-the-interface) to \u0027My new tank\u0027.","lastModifiedDate":"2023-04-04"},{"lineNumber":411,"author":{"gitId":"bokuanT"},"content":"    ","lastModifiedDate":"2023-04-04"},{"lineNumber":412,"author":{"gitId":"ryanchua00"},"content":"### Feeding a tank: `tank feed`","lastModifiedDate":"2023-03-28"},{"lineNumber":413,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"bokuanT"},"content":"You can feed all the fish in a tank, updating all the fishes\u0027 last fed date to the current date and time with the `tank feed` command.","lastModifiedDate":"2023-04-03"},{"lineNumber":415,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":416,"author":{"gitId":"bokuanT"},"content":"Use this command when you feed your fishes in real life, so you can keep track of when you last fed your fishes in *Fish Ahoy!*","lastModifiedDate":"2023-04-03"},{"lineNumber":417,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":418,"author":{"gitId":"ryanchua00"},"content":"Format: `tank feed \u003cTANK_INDEX\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":419,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":420,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":421,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-03"},{"lineNumber":422,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTANK_INDEX\u003e` - The tank [index.](#index-parameters) Specifies which tank to delete.","lastModifiedDate":"2023-04-03"},{"lineNumber":423,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-03"},{"lineNumber":424,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":425,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: If you do not want to set the fishes\u0027 last fed date to the current date and time, you can manually update it with the","lastModifiedDate":"2023-04-03"},{"lineNumber":426,"author":{"gitId":"bokuanT"},"content":"\u003e `fish edit \u003cFISH_INDEX\u003e lfd/\u003cLAST_FED_DATE\u003e` command!","lastModifiedDate":"2023-04-03"},{"lineNumber":427,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":428,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":429,"author":{"gitId":"bokuanT"},"content":"* It is currently the 6th of April, 2.31 pm. If you have a tank which index is 1, with 3 fishes, named \u0027Nemo\u0027, \u0027Dory\u0027 and \u0027Marlin\u0027. `tank feed 1` sets the following details of all three fishes:","lastModifiedDate":"2023-04-06"},{"lineNumber":430,"author":{"gitId":"ryanchua00"},"content":"  * Last fed date: 06/04/2023 14:31","lastModifiedDate":"2023-04-06"},{"lineNumber":431,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":432,"author":{"gitId":"ryanchua00"},"content":"![AddReadingDemo](images/UiTankFeedDemo.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":433,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":434,"author":{"gitId":"TimothyLawSongEn"},"content":"### Viewing a tank: `tank view`","lastModifiedDate":"2023-03-26"},{"lineNumber":435,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":436,"author":{"gitId":"bokuanT"},"content":"You can view the specific tasks and fishes belonging to the specified tank with the `tank view` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":437,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":438,"author":{"gitId":"bokuanT"},"content":"Use this command when you want to inspect a particular tank, to check on its fishes and tasks!","lastModifiedDate":"2023-04-04"},{"lineNumber":439,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":440,"author":{"gitId":"TimothyLawSongEn"},"content":"Format: `tank view \u003cTANK_INDEX\u003e`","lastModifiedDate":"2023-03-26"},{"lineNumber":441,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":442,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":443,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":444,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTANK_INDEX\u003e` - The tank [index.](#index-parameters) Specifies which tank to delete.","lastModifiedDate":"2023-04-04"},{"lineNumber":445,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":446,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":447,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: After viewing a specific tank, use `list fishes` and `list tasks` to see","lastModifiedDate":"2023-04-04"},{"lineNumber":448,"author":{"gitId":"bokuanT"},"content":"\u003e the rest of the fishes and tasks belonging to other tanks again!","lastModifiedDate":"2023-04-04"},{"lineNumber":449,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":450,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: To ensure you are still viewing the correct tank after adding or editing a fish or task,","lastModifiedDate":"2023-04-05"},{"lineNumber":451,"author":{"gitId":"bokuanT"},"content":"\u003e use `tank view` again!","lastModifiedDate":"2023-04-05"},{"lineNumber":452,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":453,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Tasks that do not have a tank attached will not be shown when you view a tank! To see them","lastModifiedDate":"2023-04-05"},{"lineNumber":454,"author":{"gitId":"bokuanT"},"content":"\u003e again, use `list tasks`","lastModifiedDate":"2023-04-05"},{"lineNumber":455,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":456,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":457,"author":{"gitId":"bokuanT"},"content":"* You have 2 tanks, \u0027Freshwater tank\u0027 with index 1 and \u0027Saltwater tank\u0027 with index 2. \u0027Freshwater tank\u0027 has a fish named \u0027Guppy\u0027 with a task named \u0027clean tank\u0027.","lastModifiedDate":"2023-04-04"},{"lineNumber":458,"author":{"gitId":"bokuanT"},"content":"\u0027Saltwater tank\u0027 has a fish named \u0027Clown fish\u0027 and a task named \u0027change thermometer\u0027. `tank view 1` lists the following information in the respective panels:","lastModifiedDate":"2023-04-04"},{"lineNumber":459,"author":{"gitId":"bokuanT"},"content":"  * Tanks panel: tanks - \u0027Freshwater tank\u0027 and \u0027Saltwater tank\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":460,"author":{"gitId":"bokuanT"},"content":"  * Fish panel: fishes - \u0027Guppy\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":461,"author":{"gitId":"bokuanT"},"content":"  * Task panel: tasks - \u0027clean tank\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":462,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":463,"author":{"gitId":"ryanchua00"},"content":"![AddReadingDemo](images/UiTankViewDemo.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":464,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":465,"author":{"gitId":"bokuanT"},"content":"### Adding a set of readings: `tank addReadings`","lastModifiedDate":"2023-04-04"},{"lineNumber":466,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"bokuanT"},"content":"You can add a set of ammonia level, pH and temperature readings to the specified tank with the `tank addReadings` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":468,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"bokuanT"},"content":"Use this command if you have the relevant equipment, and you want to log down the current readings!","lastModifiedDate":"2023-04-04"},{"lineNumber":470,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"bokuanT"},"content":"Format: `tank addReadings tk/\u003cTANK_INDEX\u003e al/\u003cAMMONIA_LEVEL\u003e ph/\u003cPH\u003e tp/\u003cTEMPERATURE\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":472,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":473,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":474,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":475,"author":{"gitId":"bokuanT"},"content":"  * `tk/\u003cTANK_INDEX\u003e` - [Tank prefix.](#tank-tktank_index) Specifies the index of the tank to add readings to","lastModifiedDate":"2023-04-04"},{"lineNumber":476,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank","lastModifiedDate":"2023-04-04"},{"lineNumber":477,"author":{"gitId":"bokuanT"},"content":"  * `al/\u003cAMMONIA_LEVEL\u003e` - [Ammonia level prefix.](#tank-ammonia-level-reading-alammonia_level) Specifies the current ammonia level of the tank","lastModifiedDate":"2023-04-04"},{"lineNumber":478,"author":{"gitId":"bokuanT"},"content":"    * `\u003cAMMONIA_LEVEL\u003e` is a number, with or without decimal points. The unit is in ppm (parts per million)","lastModifiedDate":"2023-04-04"},{"lineNumber":479,"author":{"gitId":"bokuanT"},"content":"  * `ph/\u003cPH\u003e` - [pH prefix.](#tank-ph-reading-phph) Specifies the current pH of the tank","lastModifiedDate":"2023-04-04"},{"lineNumber":480,"author":{"gitId":"bokuanT"},"content":"    * `\u003cPH\u003e` is a number, with or without decimal points. pH is between 0-14, with 7 being neutral","lastModifiedDate":"2023-04-04"},{"lineNumber":481,"author":{"gitId":"bokuanT"},"content":"  * `tp/\u003cTEMPERATURE\u003e` - [Temperature prefix.](#tank-temperature-reading-tptemperature) Specifies the current temperature of the tank","lastModifiedDate":"2023-04-04"},{"lineNumber":482,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTEMPERATURE\u003e` is a number, with or without decimal points. The unit is in degrees celcius","lastModifiedDate":"2023-04-04"},{"lineNumber":483,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":484,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: While adding readings, take note that you **cannot add more than 1 reading per minute**. Trying to do so","lastModifiedDate":"2023-04-04"},{"lineNumber":485,"author":{"gitId":"bokuanT"},"content":"will replace the previous reading made in the same minute!","lastModifiedDate":"2023-04-04"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: The time associated with the readings you add is the time when you input your `tank addReadings` command!","lastModifiedDate":"2023-04-04"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":489,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: If you do not have the relevant equipment to track certain readings, you can input 0 for the value of that type of reading!","lastModifiedDate":"2023-04-04"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":491,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Normal and realistic readings for ammonia levels, pH and temperature are as follows: 0-2 ppm, pH of 5-8 and 23-27 degrees celsius!","lastModifiedDate":"2023-04-04"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: **All 3 types of readings** must be logged at once. You must fill in all 3 prefix parameters!","lastModifiedDate":"2023-04-04"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":495,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":496,"author":{"gitId":"ryanchua00"},"content":"* Scenario 1: It is currently the 3rd of April, 12 pm. `tank addReadings tk/1 al/0.2 ph/7 tp/27.2` adds the readings to the first tank in the [tanks panel](#about-the-interface) with the following details:","lastModifiedDate":"2023-04-06"},{"lineNumber":497,"author":{"gitId":"bokuanT"},"content":"  * Ammonia level: 0.2 ppm","lastModifiedDate":"2023-04-04"},{"lineNumber":498,"author":{"gitId":"bokuanT"},"content":"  * pH: 7","lastModifiedDate":"2023-04-04"},{"lineNumber":499,"author":{"gitId":"bokuanT"},"content":"  * Temperature: 27.2 degrees celcius","lastModifiedDate":"2023-04-04"},{"lineNumber":500,"author":{"gitId":"bokuanT"},"content":"  * Date and time associated with each reading: 03/04/2023 1200","lastModifiedDate":"2023-04-04"},{"lineNumber":501,"author":{"gitId":"bokuanT"},"content":"* Scenario 2 (Screenshot below): On 6th April 2.33 pm, `tank addReadings tk/1 al/4 ph/14 tp/40` adds the following readings to the first tank in the [tanks panel](#about-the-interface) with the following details:","lastModifiedDate":"2023-04-06"},{"lineNumber":502,"author":{"gitId":"ryanchua00"},"content":"  * Ammonia level: 4 ppm","lastModifiedDate":"2023-04-06"},{"lineNumber":503,"author":{"gitId":"ryanchua00"},"content":"  * pH: 14","lastModifiedDate":"2023-04-06"},{"lineNumber":504,"author":{"gitId":"ryanchua00"},"content":"  * Temperature: 40 degrees celcius","lastModifiedDate":"2023-04-06"},{"lineNumber":505,"author":{"gitId":"ryanchua00"},"content":"  * Date and time associated with each reading: 06/04/2023 1433","lastModifiedDate":"2023-04-06"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"ryanchua00"},"content":"![AddReadingDemo](images/UiAddReadingsDemo.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":509,"author":{"gitId":"bokuanT"},"content":"### Deleting the most recent set of readings: `tank delLastReadings`","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"bokuanT"},"content":"You can delete the most recent set of readings from the specified tank with the `tank delLastReadings` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":513,"author":{"gitId":"bokuanT"},"content":"Use this command if you accidentally keyed in the wrong set of readings. You can then add a new set of readings to correct the mistake!","lastModifiedDate":"2023-04-04"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":515,"author":{"gitId":"bokuanT"},"content":"Format: `tank delLastReadings \u003cTANK_INDEX\u003e`","lastModifiedDate":"2023-03-30"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":517,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":518,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":519,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTANK_INDEX\u003e` - The tank [index.](#index-parameters) Specifies which tank to delete","lastModifiedDate":"2023-04-04"},{"lineNumber":520,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank","lastModifiedDate":"2023-04-04"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":522,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: You must have at least one reading for the specified tank to use `tank delLastReadings` for that tank!","lastModifiedDate":"2023-04-04"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":524,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":525,"author":{"gitId":"ryanchua00"},"content":"* Scenario 1: You have one tank, \u0027Freshwater tank\u0027 of index 1, with 2 sets of readings. One set made at 12pm and one set made at 3pm. `tank delLastReadings 1`","lastModifiedDate":"2023-04-06"},{"lineNumber":526,"author":{"gitId":"bokuanT"},"content":"deletes the most recent readings, the set made at 3pm.","lastModifiedDate":"2023-04-04"},{"lineNumber":527,"author":{"gitId":"ryanchua00"},"content":"* Scenario 2 (Screenshot below) : You mistakenly add a set of readings to \u0027Freshwater tank\u0027 of index 1. ","lastModifiedDate":"2023-04-06"},{"lineNumber":528,"author":{"gitId":"ryanchua00"},"content":"  `tank delLastReadings 1` deletes the most recent set of readings.","lastModifiedDate":"2023-04-06"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":530,"author":{"gitId":"ryanchua00"},"content":"![AddReadingDemo](images/UiDelLastReadingsDemo.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":532,"author":{"gitId":"ryanchua00"},"content":"## Fishes","lastModifiedDate":"2023-03-17"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":534,"author":{"gitId":"ryanchua00"},"content":"Fishes are yet another core aspect of *Fish Ahoy!* This app is built around helping you keep these little guys healthy, ","lastModifiedDate":"2023-03-28"},{"lineNumber":535,"author":{"gitId":"ryanchua00"},"content":"so many important details such as species, last fed date, feeding intervals are being recorded. *Fish Ahoy!* features ","lastModifiedDate":"2023-03-28"},{"lineNumber":536,"author":{"gitId":"ryanchua00"},"content":"images for common species of fish currently, and aims to expand to include more fishes in the future!","lastModifiedDate":"2023-03-28"},{"lineNumber":537,"author":{"gitId":"bokuanT"},"content":"In the list, each fish has an [index](#index-parameters). Use these indexes to perform certain operations on them.","lastModifiedDate":"2023-04-05"},{"lineNumber":538,"author":{"gitId":"ryanchua00"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":540,"author":{"gitId":"bokuanT"},"content":"Currently, there are six command actions of type fish:","lastModifiedDate":"2023-04-04"},{"lineNumber":541,"author":{"gitId":"ryanchua00"},"content":"* [Adding a fish `fish add`](#adding-a-fish-fish-add)","lastModifiedDate":"2023-03-28"},{"lineNumber":542,"author":{"gitId":"ryanchua00"},"content":"* [Deleting a fish `fish delete`](#deleting-a-fish-fish-delete)","lastModifiedDate":"2023-03-28"},{"lineNumber":543,"author":{"gitId":"bokuanT"},"content":"* [Editing a fish `fish edit`](#editing-a-fish-fish-edit)","lastModifiedDate":"2023-04-05"},{"lineNumber":544,"author":{"gitId":"ryanchua00"},"content":"* [Sorting fishes `fish sort`](#sorting-fishes-fish-sort)","lastModifiedDate":"2023-03-28"},{"lineNumber":545,"author":{"gitId":"ryanchua00"},"content":"* [Viewing fishes `fish view`](#viewing-a-fish-fish-view)","lastModifiedDate":"2023-03-28"},{"lineNumber":546,"author":{"gitId":"ryanchua00"},"content":"* [Listing fishes `list fishes`](#listing-fishes-list-fishes)","lastModifiedDate":"2023-03-28"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":548,"author":{"gitId":"ryanchua00"},"content":"### Adding a fish: `fish add`","lastModifiedDate":"2023-03-27"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":550,"author":{"gitId":"bokuanT"},"content":"You can add a fish to a specified tank in *Fish Ahoy!* with the `fish add` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":552,"author":{"gitId":"bokuanT"},"content":"Use this command to add your fishes to tanks. By adding fishes in tanks that you own, you can easily categorise them by tanks and store","lastModifiedDate":"2023-04-04"},{"lineNumber":553,"author":{"gitId":"ryanchua00"},"content":"important information about them.","lastModifiedDate":"2023-03-28"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":555,"author":{"gitId":"bokuanT"},"content":"Format: `fish add n/\u003cFISH_NAME\u003e lfd/\u003cLAST_FED_DATE\u003e s/\u003cSPECIES\u003e fi/\u003cFEEDING_INTERVAL\u003e tk/\u003cTANK_INDEX\u003e [tg/\u003cTAG\u003e]...`","lastModifiedDate":"2023-04-04"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":558,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":559,"author":{"gitId":"bokuanT"},"content":"  * `n/\u003cFISH_NAME\u003e` - [Name prefix.](#name-nname) Specifies the name of this fish you want to add","lastModifiedDate":"2023-04-04"},{"lineNumber":560,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFISH_NAME\u003e` is is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-04"},{"lineNumber":561,"author":{"gitId":"bokuanT"},"content":"  * `lfd/\u003cLAST_FED_DATE\u003e` - [Last fed date prefix.](#last-fed-date-lfdlast_fed_date) Specifies the date and time this fish was last fed","lastModifiedDate":"2023-04-04"},{"lineNumber":562,"author":{"gitId":"bokuanT"},"content":"    * `\u003cLAST_FED_DATE\u003e` should be in the format `DD/MM/YYYY HH:MM`","lastModifiedDate":"2023-04-04"},{"lineNumber":563,"author":{"gitId":"bokuanT"},"content":"  * `s/\u003cSPECIES\u003e` - [Species prefix.](#species-sspecies) Specifies the species of this fish","lastModifiedDate":"2023-04-04"},{"lineNumber":564,"author":{"gitId":"bokuanT"},"content":"    * `\u003cSPECIES\u003e` should only contain alphanumeric characters and spaces.","lastModifiedDate":"2023-04-04"},{"lineNumber":565,"author":{"gitId":"bokuanT"},"content":"  * `fi/\u003cFEEDING_INTERVAL\u003e` - [Feeding interval prefix](#feeding-interval-fifeeding_interval) Specifies how often this fish needs to be fed","lastModifiedDate":"2023-04-04"},{"lineNumber":566,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFEEDING_INTERVAL\u003e` should be in the format `\u003cDAYS\u003ed\u003cHOURS\u003eh`","lastModifiedDate":"2023-04-04"},{"lineNumber":567,"author":{"gitId":"bokuanT"},"content":"  * `tk/\u003cTANK_INDEX\u003e` - [Tank prefix.](#tank-tktank_index) Specifies the index of the tank to add readings to.","lastModifiedDate":"2023-04-04"},{"lineNumber":568,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":569,"author":{"gitId":"bokuanT"},"content":"  * `[tg/\u003cTAG\u003e]...` - [Tags prefix.](#tags-tgtag) Specifies the additional tags of this fish","lastModifiedDate":"2023-04-04"},{"lineNumber":570,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTAG\u003e` should only contain alphanumeric characters, with **no** spaces","lastModifiedDate":"2023-04-04"},{"lineNumber":571,"author":{"gitId":"bokuanT"},"content":"    * Optional, or can have multiple","lastModifiedDate":"2023-04-04"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: A fish **must** belong in a tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":574,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":575,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: syntax we use for tags are enclosed in square brackets followed by \u0027...\u0027 `[tg/\u003cTAG\u003e]...`, to show that a fish can contain 0 or more tags.","lastModifiedDate":"2023-04-04"},{"lineNumber":576,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":577,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: You **cannot** add two fishes of the same name to *Fish Ahoy!*","lastModifiedDate":"2023-04-04"},{"lineNumber":578,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":579,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":580,"author":{"gitId":"bokuanT"},"content":"* `fish add n/Nemo s/Clown Fish lfd/04/04/2023 11:30 fi/2d0h tk/1` adds a new fish with the following details:","lastModifiedDate":"2023-04-04"},{"lineNumber":581,"author":{"gitId":"bokuanT"},"content":"  * Name: Nemo","lastModifiedDate":"2023-04-04"},{"lineNumber":582,"author":{"gitId":"bokuanT"},"content":"  * Species: Clown Fish","lastModifiedDate":"2023-04-04"},{"lineNumber":583,"author":{"gitId":"bokuanT"},"content":"  * Last fed date: 4th April 2023, 1130 am","lastModifiedDate":"2023-04-04"},{"lineNumber":584,"author":{"gitId":"bokuanT"},"content":"  * Feeding interval: 2 days 0 hours","lastModifiedDate":"2023-04-04"},{"lineNumber":585,"author":{"gitId":"bokuanT"},"content":"  * Tank: Tank with index 1","lastModifiedDate":"2023-04-04"},{"lineNumber":586,"author":{"gitId":"ryanchua00"},"content":"  ","lastModifiedDate":"2023-03-28"},{"lineNumber":587,"author":{"gitId":"ryanchua00"},"content":"### Deleting a fish: `fish delete`","lastModifiedDate":"2023-03-27"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"bokuanT"},"content":"You can delete a fish from *Fish Ahoy!* with the `fish delete` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"bokuanT"},"content":"Use this command if you no longer want to keep track of this fish, if it has died or otherwise!","lastModifiedDate":"2023-04-04"},{"lineNumber":592,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":593,"author":{"gitId":"ryanchua00"},"content":"Format: `fish delete \u003cFISH_INDEX\u003e`","lastModifiedDate":"2023-03-17"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":596,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":597,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":598,"author":{"gitId":"bokuanT"},"content":"  * `\u003cFISH_INDEX\u003e` - The fish index. Specifies which fish to delete","lastModifiedDate":"2023-04-04"},{"lineNumber":599,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFISH_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual fish","lastModifiedDate":"2023-04-04"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":601,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Deleting a fish is irreversible! Only delete a fish if you are sure!","lastModifiedDate":"2023-04-04"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":603,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":604,"author":{"gitId":"bokuanT"},"content":"* `fish delete 3` deletes the third fish **currently displayed** in the [fishes panel](#about-the-interface)","lastModifiedDate":"2023-04-04"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":606,"author":{"gitId":"bokuanT"},"content":"### Editing a fish: `fish edit`","lastModifiedDate":"2023-04-04"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":608,"author":{"gitId":"bokuanT"},"content":"You can edit the details of an existing fish with the `fish edit` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":610,"author":{"gitId":"bokuanT"},"content":"Use this command if you want to update the original sample fish names to match your fish names, or if you decide that you want to rename an existing fish.","lastModifiedDate":"2023-04-04"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":612,"author":{"gitId":"bokuanT"},"content":"Format: `fish edit \u003cFISH_INDEX\u003e [n/\u003cFISH_NAME\u003e] [lfd/\u003cLAST_FED_DATE\u003e] [s/\u003cSPECIES\u003e] [fi/\u003cFEEDING_INTERVAL\u003e] [tk/\u003cTANK_INDEX\u003e] [tg/\u003cTAG\u003e]...`","lastModifiedDate":"2023-04-04"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":614,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":615,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":616,"author":{"gitId":"bokuanT"},"content":"  * `\u003cFISH_INDEX\u003e` - The fish index. Specifies which fish to delete","lastModifiedDate":"2023-04-04"},{"lineNumber":617,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFISH_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual fish","lastModifiedDate":"2023-04-04"},{"lineNumber":618,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":619,"author":{"gitId":"bokuanT"},"content":"  * `[n/\u003cFISH_NAME\u003e]` - [Name prefix.](#name-nname) Specifies the name of this fish you want to add","lastModifiedDate":"2023-04-04"},{"lineNumber":620,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFISH_NAME\u003e` is is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-04"},{"lineNumber":621,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the name of a fish","lastModifiedDate":"2023-04-04"},{"lineNumber":622,"author":{"gitId":"bokuanT"},"content":"  * `[lfd/\u003cLAST_FED_DATE\u003e]` - [Last fed date prefix.](#last-fed-date-lfdlast_fed_date) Specifies the date and time this fish was last fed","lastModifiedDate":"2023-04-04"},{"lineNumber":623,"author":{"gitId":"bokuanT"},"content":"    * `\u003cLAST_FED_DATE\u003e` should be in the format `DD/MM/YYYY HH:MM`","lastModifiedDate":"2023-04-04"},{"lineNumber":624,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the last fed date of a fish","lastModifiedDate":"2023-04-04"},{"lineNumber":625,"author":{"gitId":"bokuanT"},"content":"  * `[s/\u003cSPECIES\u003e]` - [Species prefix.](#species-sspecies) Specifies the species of this fish","lastModifiedDate":"2023-04-04"},{"lineNumber":626,"author":{"gitId":"bokuanT"},"content":"    * `\u003cSPECIES\u003e` should only contain alphanumeric characters and spaces","lastModifiedDate":"2023-04-04"},{"lineNumber":627,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the species of a fish","lastModifiedDate":"2023-04-04"},{"lineNumber":628,"author":{"gitId":"bokuanT"},"content":"  * `[fi/\u003cFEEDING_INTERVAL\u003e]` - [Feeding interval prefix](#feeding-interval-fifeeding_interval) Specifies how often this fish needs to be fed","lastModifiedDate":"2023-04-04"},{"lineNumber":629,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFEEDING_INTERVAL\u003e` should be in the format `\u003cDAYS\u003ed\u003cHOURS\u003eh`","lastModifiedDate":"2023-04-04"},{"lineNumber":630,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the feeding interval of a fish","lastModifiedDate":"2023-04-04"},{"lineNumber":631,"author":{"gitId":"bokuanT"},"content":"  * `[tk/\u003cTANK_INDEX\u003e]` - [Tank prefix.](#tank-tktank_index) Specifies the index of the tank to add readings to","lastModifiedDate":"2023-04-04"},{"lineNumber":632,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank","lastModifiedDate":"2023-04-04"},{"lineNumber":633,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the tank of a fish","lastModifiedDate":"2023-04-04"},{"lineNumber":634,"author":{"gitId":"bokuanT"},"content":"  * `[tg/\u003cTAG\u003e]...` - [Tags prefix.](#tags-tgtag) Specifies the additional tags of this fish","lastModifiedDate":"2023-04-04"},{"lineNumber":635,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTAG\u003e` should only contain alphanumeric characters, with **no** spaces","lastModifiedDate":"2023-04-04"},{"lineNumber":636,"author":{"gitId":"bokuanT"},"content":"    * Optional, or can have multiple","lastModifiedDate":"2023-04-04"},{"lineNumber":637,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":638,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: Editing tags will cause the tags to be set to your input!","lastModifiedDate":"2023-04-04"},{"lineNumber":639,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e For example: If a fish with index 1 has no tags, and you use `fish edit 1 tg/Fat tg/Sick`, that fish","lastModifiedDate":"2023-04-04"},{"lineNumber":640,"author":{"gitId":"bokuanT"},"content":"\u003e will have the tags \u0027Fat\u0027 and \u0027Sick\u0027!","lastModifiedDate":"2023-04-04"},{"lineNumber":641,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":642,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: After editing a fish, **all** fishes will be listed, akin to `list fishes`","lastModifiedDate":"2023-04-05"},{"lineNumber":643,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":644,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Even though all parameters are listed as optional, you still need to edit","lastModifiedDate":"2023-04-04"},{"lineNumber":645,"author":{"gitId":"bokuanT"},"content":"\u003e at least 1 parameter!","lastModifiedDate":"2023-04-04"},{"lineNumber":646,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":647,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":648,"author":{"gitId":"bokuanT"},"content":"* You have a fish named \u0027Nemo\u0027 with index 1. Using `fish edit 1 n/Found nemo` will result the fish to have the ","lastModifiedDate":"2023-04-04"},{"lineNumber":649,"author":{"gitId":"bokuanT"},"content":"following details:","lastModifiedDate":"2023-04-04"},{"lineNumber":650,"author":{"gitId":"bokuanT"},"content":"  * Name: \u0027Found nemo\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":651,"author":{"gitId":"bokuanT"},"content":"  * Other details: same as before","lastModifiedDate":"2023-04-04"},{"lineNumber":652,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":653,"author":{"gitId":"ryanchua00"},"content":"### Sorting fishes: `fish sort`","lastModifiedDate":"2023-03-26"},{"lineNumber":654,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":655,"author":{"gitId":"bokuanT"},"content":"You can sort the fishes in *Fish Ahoy!* by a specified parameter with the `fish sort` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":656,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":657,"author":{"gitId":"ryanchua00"},"content":"Use this command to view the fish at once by the attribute you want. This can be helpful if you need to see which fish","lastModifiedDate":"2023-03-26"},{"lineNumber":658,"author":{"gitId":"ryanchua00"},"content":"has not been fed in a long time, or see which fish you need to attend to first. It can also be used to organize the","lastModifiedDate":"2023-03-26"},{"lineNumber":659,"author":{"gitId":"ryanchua00"},"content":"results to your liking.  ","lastModifiedDate":"2023-03-26"},{"lineNumber":660,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":661,"author":{"gitId":"bokuanT"},"content":"Format: `fish sort by/\u003cPREFIX_PARAMETER\u003e [tk/\u003cTANK_INDEX\u003e]`","lastModifiedDate":"2023-04-04"},{"lineNumber":662,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":663,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":664,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":665,"author":{"gitId":"bokuanT"},"content":"  * `by/\u003cPREFIX_PARAMETER\u003e` - [Sorting prefix.](#sorting-byprefix_parameter) Specifies how you want to sort your fishes by","lastModifiedDate":"2023-04-04"},{"lineNumber":666,"author":{"gitId":"bokuanT"},"content":"    * `\u003cPREFIX_PARAMETER\u003e` is one of the following: ","lastModifiedDate":"2023-04-04"},{"lineNumber":667,"author":{"gitId":"bokuanT"},"content":"      * `n` - Fish name, sorted lexicographically","lastModifiedDate":"2023-04-04"},{"lineNumber":668,"author":{"gitId":"bokuanT"},"content":"      * `lfd` - Fish last fed date, sorted from earliest to latest","lastModifiedDate":"2023-04-04"},{"lineNumber":669,"author":{"gitId":"bokuanT"},"content":"      * `s` - Fish species, sorted lexicographically ","lastModifiedDate":"2023-04-04"},{"lineNumber":670,"author":{"gitId":"bokuanT"},"content":"      * `fi` - Feeding interval, sorted by days first, then by hours","lastModifiedDate":"2023-04-05"},{"lineNumber":671,"author":{"gitId":"bokuanT"},"content":"      * `tk` - Tank name, sorted lexicographically","lastModifiedDate":"2023-04-04"},{"lineNumber":672,"author":{"gitId":"bokuanT"},"content":"  * `[tk/\u003cTANK_INDEX\u003e]` - [Tank prefix.](#tank-tktank_index) Specifies which tank\u0027s fishes you want to sort and display","lastModifiedDate":"2023-04-04"},{"lineNumber":673,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank","lastModifiedDate":"2023-04-04"},{"lineNumber":674,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to sort and display fishes from the specified tank. Don\u0027t include this to sort all fishes","lastModifiedDate":"2023-04-04"},{"lineNumber":675,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":676,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: After sorting, a new set of indexes will appear for each fish. Refer to ","lastModifiedDate":"2023-04-04"},{"lineNumber":677,"author":{"gitId":"bokuanT"},"content":"\u003e these updated indexes for future fish indexes use!","lastModifiedDate":"2023-04-04"},{"lineNumber":678,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":679,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: Note that `fish sort` only sorts the fishes that are present in the fish panel!","lastModifiedDate":"2023-04-04"},{"lineNumber":680,"author":{"gitId":"bokuanT"},"content":"\u003e \u003cbr\u003e For example, `fish view` would result in only 1 fish in the fish panel, and `fish sort` after will not show more fish. You can use `list fishes` before","lastModifiedDate":"2023-04-04"},{"lineNumber":681,"author":{"gitId":"bokuanT"},"content":"\u003e using `fish sort` instead.","lastModifiedDate":"2023-04-04"},{"lineNumber":682,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":683,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: The tank prefix is enclosed in square brackets `[tk/\u003cTANK_INDEX\u003e]` because it is optional,","lastModifiedDate":"2023-04-04"},{"lineNumber":684,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":685,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Subsequent fishes added will be given an index according to previous `fish sort` commands!","lastModifiedDate":"2023-04-04"},{"lineNumber":686,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":687,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: If you have feeding intervals with hours greater than 23, `fish sort by/fi` may not work","lastModifiedDate":"2023-04-05"},{"lineNumber":688,"author":{"gitId":"bokuanT"},"content":"\u003e as you thought it would! A fish with feeding interval `0d26h` will appear before one with `1d0h`!","lastModifiedDate":"2023-04-05"},{"lineNumber":689,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":690,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":691,"author":{"gitId":"ryanchua00"},"content":"* There are 3 fishes, \u0027Nemo\u0027, \u0027Dory\u0027 and \u0027Marlin\u0027 in the tank with index 1. There is a fish named \u0027Crush\u0027 in the tank with index 2.","lastModifiedDate":"2023-04-06"},{"lineNumber":692,"author":{"gitId":"bokuanT"},"content":"Using `tank view 1` followed by `tank sort by/n tk/1` will result in the following fishes displayed in the fish panel in the order:","lastModifiedDate":"2023-04-04"},{"lineNumber":693,"author":{"gitId":"ryanchua00"},"content":"  * 1 - \u0027Dory\u0027","lastModifiedDate":"2023-04-06"},{"lineNumber":694,"author":{"gitId":"ryanchua00"},"content":"  * 2 - \u0027Marlin\u0027","lastModifiedDate":"2023-04-06"},{"lineNumber":695,"author":{"gitId":"ryanchua00"},"content":"  * 3 - \u0027Nemo\u0027","lastModifiedDate":"2023-04-06"},{"lineNumber":696,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":697,"author":{"gitId":"ryanchua00"},"content":"![AddReadingDemo](images/UiSortNameDemo.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":698,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":699,"author":{"gitId":"ryanchua00"},"content":"### Viewing a fish: `fish view`","lastModifiedDate":"2023-03-28"},{"lineNumber":700,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":701,"author":{"gitId":"bokuanT"},"content":"You can view a specific with in *Fish Ahoy!*, specified by the given fish index.","lastModifiedDate":"2023-04-04"},{"lineNumber":702,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":703,"author":{"gitId":"bokuanT"},"content":"Use this command to display a single fish, making it easier for you to see its information.","lastModifiedDate":"2023-04-04"},{"lineNumber":704,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":705,"author":{"gitId":"ryanchua00"},"content":"Format: `fish view \u003cFISH_INDEX\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":706,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":707,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":708,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":709,"author":{"gitId":"bokuanT"},"content":"  * `\u003cFISH_INDEX\u003e` - The fish index. Specifies which fish to view","lastModifiedDate":"2023-04-04"},{"lineNumber":710,"author":{"gitId":"bokuanT"},"content":"    * `\u003cFISH_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual fish","lastModifiedDate":"2023-04-04"},{"lineNumber":711,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":712,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Calling this command will change the indexes of your fish. To view other fishes again, use `list fishes` or `tank view`","lastModifiedDate":"2023-04-05"},{"lineNumber":713,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":714,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":715,"author":{"gitId":"bokuanT"},"content":"* The fish panel is currently showing fish from \u0027freshwater tank\u0027. There are 2 fishes in the fish panel, \u0027guppy\u0027 with index 1 and \u0027goldfish\u0027 with index 2.","lastModifiedDate":"2023-04-04"},{"lineNumber":716,"author":{"gitId":"bokuanT"},"content":"`fish view 2` shows only \u0027goldfish\u0027 in the fish panel. Other panels are unchanged","lastModifiedDate":"2023-04-04"},{"lineNumber":717,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":718,"author":{"gitId":"ryanchua00"},"content":"### Listing fishes: `list fishes`","lastModifiedDate":"2023-03-28"},{"lineNumber":719,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":720,"author":{"gitId":"bokuanT"},"content":"You can list all fishes you own with the `list fishes` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":721,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":722,"author":{"gitId":"bokuanT"},"content":"Use this command to see all the fishes you own across all tanks, or to list all fishes again after a `tank view` or `fish view` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":723,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":724,"author":{"gitId":"ryanchua00"},"content":"Format: `list fishes`","lastModifiedDate":"2023-03-28"},{"lineNumber":725,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":726,"author":{"gitId":"bokuanT"},"content":"Parameters: No parameters","lastModifiedDate":"2023-04-04"},{"lineNumber":727,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":728,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":729,"author":{"gitId":"bokuanT"},"content":"* You have 3 fishes, \u0027fish 1\u0027, \u0027fish 2\u0027 and \u0027fish 3\u0027 with indexes 1, 2 and 3 respectively. You use the `fish view 1` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":730,"author":{"gitId":"bokuanT"},"content":"Only \u0027fish 1\u0027 is displayed in the fish panel. Using `list fishes` will display all 3 fishes in the fish panel again","lastModifiedDate":"2023-04-04"},{"lineNumber":731,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":732,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":733,"author":{"gitId":"ryanchua00"},"content":"## Tasks","lastModifiedDate":"2023-03-17"},{"lineNumber":734,"author":{"gitId":"ryanchua00"},"content":"These are the routine tasks that all fish keepers have to undertake to keep their fish bright and healthy. Create tasks ","lastModifiedDate":"2023-03-28"},{"lineNumber":735,"author":{"gitId":"ryanchua00"},"content":"to remind you and help you in your fish keeping. *Fish Ahoy!* will automatically generate feeding reminders for you ","lastModifiedDate":"2023-03-28"},{"lineNumber":736,"author":{"gitId":"ryanchua00"},"content":"based off your fishes\u0027 last fed date. These will have a **high** priority to remind you to feed them!","lastModifiedDate":"2023-03-28"},{"lineNumber":737,"author":{"gitId":"bokuanT"},"content":"In the list, each task has an [index](#index-parameters). Use these indexes to perform certain operations on them.","lastModifiedDate":"2023-04-05"},{"lineNumber":738,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":739,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Tasks are sorted by highest priority to the lowest priority in the task panel!","lastModifiedDate":"2023-04-04"},{"lineNumber":740,"author":{"gitId":"bokuanT"},"content":"\u003e A task with no priority is of the lowest level, and `high` is the highest.","lastModifiedDate":"2023-04-04"},{"lineNumber":741,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":742,"author":{"gitId":"bokuanT"},"content":"Currently, there are four command actions of type task:","lastModifiedDate":"2023-04-05"},{"lineNumber":743,"author":{"gitId":"ryanchua00"},"content":"* [Adding a task `task add`](#adding-a-task-task-add)","lastModifiedDate":"2023-03-28"},{"lineNumber":744,"author":{"gitId":"ryanchua00"},"content":"* [Deleting a task `task delete`](#deleting-a-task-task-delete)","lastModifiedDate":"2023-03-28"},{"lineNumber":745,"author":{"gitId":"bokuanT"},"content":"* [Editing a task `task edit`](#editing-a-task-task-edit)","lastModifiedDate":"2023-04-05"},{"lineNumber":746,"author":{"gitId":"ryanchua00"},"content":"* [Listing tasks `list tasks`](#listing-tasks-list-tasks)","lastModifiedDate":"2023-04-06"},{"lineNumber":747,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":748,"author":{"gitId":"ryanchua00"},"content":"### Adding a task: `task add`","lastModifiedDate":"2023-03-27"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"bokuanT"},"content":"You can add a task to *Fish Ahoy!* with the `task add` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"ryanchua00"},"content":"Use this command to add your weekly tasks into *Fish Ahoy!* such as tank cleaning and equipment maintenance.","lastModifiedDate":"2023-03-28"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"bokuanT"},"content":"Format: `task add d/\u003cTASK_NAME\u003e [tk/\u003cTANK_INDEX\u003e] [p/\u003cPRIORITY_LEVEL\u003e]`","lastModifiedDate":"2023-04-04"},{"lineNumber":755,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":756,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":757,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":758,"author":{"gitId":"bokuanT"},"content":"  * `d/\u003cTASK_NAME\u003e` - [Description prefix.](#description-ddescription) Specifies the name of the task","lastModifiedDate":"2023-04-04"},{"lineNumber":759,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTASK_NAME\u003e` is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-04"},{"lineNumber":760,"author":{"gitId":"bokuanT"},"content":"  * `[tk/\u003cTANK_INDEX\u003e]` - [Tank prefix.](#tank-tktank_index) Specifies the index of the tank to add this task to.","lastModifiedDate":"2023-04-04"},{"lineNumber":761,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":762,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to attach this task to a tank","lastModifiedDate":"2023-04-04"},{"lineNumber":763,"author":{"gitId":"bokuanT"},"content":"  * `[p/\u003cPRIORITY_LEVEL\u003e]` - [Priority prefix.](#priority-ppriority) Specifies the priority of this task","lastModifiedDate":"2023-04-04"},{"lineNumber":764,"author":{"gitId":"bokuanT"},"content":"    * `\u003cPRIORITY\u003e` is one of the following: low, medium, high","lastModifiedDate":"2023-04-04"},{"lineNumber":765,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to attach a priority to a task","lastModifiedDate":"2023-04-04"},{"lineNumber":766,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":767,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: The tank and priority prefix are enclosed in square brackets `[tk/\u003cTANK_INDEX\u003e]`, `[p/\u003cPRIORITY_LEVEL\u003e]` because they are is optional","lastModifiedDate":"2023-04-04"},{"lineNumber":768,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":769,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: Can\u0027t seem to see your newly added tasks? Ensure you are not limiting","lastModifiedDate":"2023-04-04"},{"lineNumber":770,"author":{"gitId":"bokuanT"},"content":"\u003e your tasks to a specific tank with the `list tasks` command!","lastModifiedDate":"2023-04-04"},{"lineNumber":771,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":772,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Within the same tank (two tasks that both do not have a tank attached are considered to be in the same tank)","lastModifiedDate":"2023-04-06"},{"lineNumber":773,"author":{"gitId":"bokuanT"},"content":"\u003e, you cannot have tasks with the same name!","lastModifiedDate":"2023-04-06"},{"lineNumber":774,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":775,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":776,"author":{"gitId":"bokuanT"},"content":"* You have \u0027Clean tank\u0027 with no priority in your task panel. `task add d/Feed fish p/high` will display the","lastModifiedDate":"2023-04-04"},{"lineNumber":777,"author":{"gitId":"bokuanT"},"content":"following tasks in your task panel:","lastModifiedDate":"2023-04-04"},{"lineNumber":778,"author":{"gitId":"bokuanT"},"content":"  * 1 - \u0027Feed fish\u0027 with high priority","lastModifiedDate":"2023-04-04"},{"lineNumber":779,"author":{"gitId":"bokuanT"},"content":"  * 2 - \u0027Clean tank\u0027 with no priority","lastModifiedDate":"2023-04-04"},{"lineNumber":780,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":781,"author":{"gitId":"ryanchua00"},"content":"### Deleting a task: `task delete`","lastModifiedDate":"2023-03-27"},{"lineNumber":782,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":783,"author":{"gitId":"bokuanT"},"content":"You can delete a task entry from *Fish Ahoy!* with the `task delete` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":784,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":785,"author":{"gitId":"bokuanT"},"content":"Use this command to delete a task from *Fish Ahoy!*, when you have completed the task.","lastModifiedDate":"2023-04-04"},{"lineNumber":786,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":787,"author":{"gitId":"ryanchua00"},"content":"Format: `task delete \u003cTASK_INDEX\u003e`","lastModifiedDate":"2023-03-27"},{"lineNumber":788,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":789,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":790,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":791,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTASK_INDEX\u003e` - The task [index](#index-parameters). Specifies which task to delete","lastModifiedDate":"2023-04-05"},{"lineNumber":792,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTASK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual task","lastModifiedDate":"2023-04-04"},{"lineNumber":793,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":794,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":795,"author":{"gitId":"bokuanT"},"content":"* `task delete 1` deletes the first task listed in the [tasks panel](#about-the-interface)","lastModifiedDate":"2023-04-04"},{"lineNumber":796,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":797,"author":{"gitId":"bokuanT"},"content":"### Editing a task: `task edit`","lastModifiedDate":"2023-04-04"},{"lineNumber":798,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":799,"author":{"gitId":"bokuanT"},"content":"You can edit the details of an existing task with the `task edit` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":800,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":801,"author":{"gitId":"bokuanT"},"content":"Use this command if you want to update the original sample task descriptions to match your task descriptions, or if you decide that you want to rename an existing task or update its priority or tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":802,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":803,"author":{"gitId":"bokuanT"},"content":"Format: `task edit \u003cTASK_INDEX\u003e [d/\u003cTASK_DESCRIPTION\u003e] [tk/\u003cTANK_INDEX\u003e] [p/\u003cPRIORITY\u003e]`","lastModifiedDate":"2023-04-04"},{"lineNumber":804,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":805,"author":{"gitId":"bokuanT"},"content":"Parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":806,"author":{"gitId":"bokuanT"},"content":"* Index parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":807,"author":{"gitId":"bokuanT"},"content":"  * `\u003cTASK_INDEX\u003e` - The task [index](#index-parameters). Specifies which task to delete","lastModifiedDate":"2023-04-05"},{"lineNumber":808,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTASK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual task","lastModifiedDate":"2023-04-04"},{"lineNumber":809,"author":{"gitId":"bokuanT"},"content":"* Prefix parameters:","lastModifiedDate":"2023-04-04"},{"lineNumber":810,"author":{"gitId":"bokuanT"},"content":"  * `[d/\u003cTASK_NAME\u003e]` - [Description prefix.](#description-ddescription) Specifies the name of the task","lastModifiedDate":"2023-04-04"},{"lineNumber":811,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTASK_NAME\u003e` is alphanumeric and can contain spaces. It is case-sensitive","lastModifiedDate":"2023-04-04"},{"lineNumber":812,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the name of a task","lastModifiedDate":"2023-04-04"},{"lineNumber":813,"author":{"gitId":"bokuanT"},"content":"  * `[tk/\u003cTANK_INDEX\u003e]` - [Tank prefix.](#tank-tktank_index) Specifies the index of the tank to add this task to.","lastModifiedDate":"2023-04-04"},{"lineNumber":814,"author":{"gitId":"bokuanT"},"content":"    * `\u003cTANK_INDEX\u003e` is a positive integer (1, 2, 3...) and must correspond to an actual tank.","lastModifiedDate":"2023-04-04"},{"lineNumber":815,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the tank of a task","lastModifiedDate":"2023-04-04"},{"lineNumber":816,"author":{"gitId":"bokuanT"},"content":"  * `[p/\u003cPRIORITY_LEVEL\u003e]` - [Priority prefix.](#priority-ppriority) Specifies the priority of this task","lastModifiedDate":"2023-04-04"},{"lineNumber":817,"author":{"gitId":"bokuanT"},"content":"    * `\u003cPRIORITY\u003e` is one of the following: low, medium, high","lastModifiedDate":"2023-04-04"},{"lineNumber":818,"author":{"gitId":"bokuanT"},"content":"    * Optional. Include this to edit the priority of a task","lastModifiedDate":"2023-04-04"},{"lineNumber":819,"author":{"gitId":"bokuanT"},"content":"    ","lastModifiedDate":"2023-04-04"},{"lineNumber":820,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Even though all parameters are listed as optional, you still need to edit at least 1 parameter!","lastModifiedDate":"2023-04-04"},{"lineNumber":821,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":822,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Feeding reminders are automated and managed by *Fish Ahoy!* so you cannot","lastModifiedDate":"2023-04-05"},{"lineNumber":823,"author":{"gitId":"bokuanT"},"content":"\u003e edit a feeding reminder","lastModifiedDate":"2023-04-05"},{"lineNumber":824,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":825,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: As mentioned, you cannot have 2 tasks of the same name, with the same tank as they are duplicates. You cannot edit","lastModifiedDate":"2023-04-06"},{"lineNumber":826,"author":{"gitId":"bokuanT"},"content":"\u003e a task\u0027s tank if it will cause a duplicate task!","lastModifiedDate":"2023-04-06"},{"lineNumber":827,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":828,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":829,"author":{"gitId":"bokuanT"},"content":"* You have a task with description \u0027Clean tank\u0027 of index 1, and it is attached to \u0027freshwater tank\u0027. `task edit 1 d/clean tank again` will change the task to have the following details:","lastModifiedDate":"2023-04-04"},{"lineNumber":830,"author":{"gitId":"bokuanT"},"content":"  * Description: \u0027clean tank again\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":831,"author":{"gitId":"bokuanT"},"content":"  * Tank: \u0027freshwater tank\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":832,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":833,"author":{"gitId":"ryanchua00"},"content":"### Listing tasks: `list tasks`","lastModifiedDate":"2023-03-30"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"bokuanT"},"content":"You can list all tasks you have with the `list tasks` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"bokuanT"},"content":"Use this command to list all tasks of all tanks, after filtering the tasks with the `tank view` command.","lastModifiedDate":"2023-04-04"},{"lineNumber":838,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":839,"author":{"gitId":"ryanchua00"},"content":"Format: `list tasks`","lastModifiedDate":"2023-04-02"},{"lineNumber":840,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":841,"author":{"gitId":"bokuanT"},"content":"Parameters: No parameters","lastModifiedDate":"2023-04-04"},{"lineNumber":842,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":843,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":844,"author":{"gitId":"bokuanT"},"content":"* You have 2 tanks, \u0027freshwater tank\u0027 of index 1 and \u0027saltwater tank\u0027 of index 2. The \u0027clean tank\u0027 task is attached to \u0027freshwater tank\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":845,"author":{"gitId":"bokuanT"},"content":"and the \u0027feed fish\u0027 task is attached to \u0027saltwater tank\u0027. You use `tank view 1` and can only see \u0027clean tank\u0027","lastModifiedDate":"2023-04-04"},{"lineNumber":846,"author":{"gitId":"bokuanT"},"content":"in the tasks panel. `list tasks` will display both tasks in the task panel again","lastModifiedDate":"2023-04-04"},{"lineNumber":847,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":848,"author":{"gitId":"bokuanT"},"content":"### Feeding reminders","lastModifiedDate":"2023-03-31"},{"lineNumber":849,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":850,"author":{"gitId":"bokuanT"},"content":"You do not use commands to create feeding reminders, they are automatically created when you open *Fish Ahoy!*","lastModifiedDate":"2023-04-04"},{"lineNumber":851,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":852,"author":{"gitId":"bokuanT"},"content":"If you see these reminders, it might be time to feed your fish!","lastModifiedDate":"2023-03-31"},{"lineNumber":853,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":854,"author":{"gitId":"bokuanT"},"content":"Format: You cannot make these in the command line, they are made when you open *Fish Ahoy!*","lastModifiedDate":"2023-04-04"},{"lineNumber":855,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":856,"author":{"gitId":"bokuanT"},"content":"Parameters: No parameters","lastModifiedDate":"2023-04-04"},{"lineNumber":857,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":858,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: These reminders are only updated when you open *Fish Ahoy!*","lastModifiedDate":"2023-04-04"},{"lineNumber":859,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":860,"author":{"gitId":"bokuanT"},"content":"\u003e :information_source: Additional information: Each tank can have up to 1 feeding reminder, consolidating all hungry","lastModifiedDate":"2023-04-04"},{"lineNumber":861,"author":{"gitId":"bokuanT"},"content":"\u003e fish in that tank","lastModifiedDate":"2023-04-04"},{"lineNumber":862,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":863,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Get rid of this reminder and feed your fish at the same time with the [`tank feed` command!](#feeding-a-tank-tank-feed)","lastModifiedDate":"2023-04-04"},{"lineNumber":864,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":865,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: Feeding reminders have a high priority! They will appear at the top of the tasks panel","lastModifiedDate":"2023-04-04"},{"lineNumber":866,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":867,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: Feeding reminders are automated and managed by *Fish Ahoy!* so you cannot","lastModifiedDate":"2023-04-05"},{"lineNumber":868,"author":{"gitId":"bokuanT"},"content":"\u003e edit a feeding reminder","lastModifiedDate":"2023-04-05"},{"lineNumber":869,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":870,"author":{"gitId":"bokuanT"},"content":"Example:","lastModifiedDate":"2023-04-04"},{"lineNumber":871,"author":{"gitId":"bokuanT"},"content":"* It is the 6th of April 2023, 11am. You have fishes named \u0027Dory\u0027, \u0027Nemo\u0027 and \u0027Marlin\u0027 in \u0027freshwater tank\u0027 with a last fed date of 28/03/2023 13:00, 12:00 and 23:00 respectively. When you open *Fish Ahoy!*, you will see the following task in the task panel:","lastModifiedDate":"2023-04-06"},{"lineNumber":872,"author":{"gitId":"bokuanT"},"content":"  * Description: Tank feeding reminder","lastModifiedDate":"2023-04-04"},{"lineNumber":873,"author":{"gitId":"ryanchua00"},"content":"\u003cbr\u003e               Nemo last fed on 28-Mar-2023 12:00","lastModifiedDate":"2023-04-06"},{"lineNumber":874,"author":{"gitId":"ryanchua00"},"content":"    \u003cbr\u003e               Dory last fed on 28-Mar-2023 13:00","lastModifiedDate":"2023-04-06"},{"lineNumber":875,"author":{"gitId":"ryanchua00"},"content":"    \u003cbr\u003e               Marlin last fed on 28-Mar-2023 23:00","lastModifiedDate":"2023-04-06"},{"lineNumber":876,"author":{"gitId":"bokuanT"},"content":"  * Priority: high","lastModifiedDate":"2023-04-04"},{"lineNumber":877,"author":{"gitId":"bokuanT"},"content":"  * Tank: freshwater tank","lastModifiedDate":"2023-04-04"},{"lineNumber":878,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":879,"author":{"gitId":"ryanchua00"},"content":"![UiFeedingReminder](images/UiTankFeed1.png)","lastModifiedDate":"2023-04-06"},{"lineNumber":880,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":881,"author":{"gitId":"ryanchua00"},"content":"## Storage","lastModifiedDate":"2023-03-27"},{"lineNumber":882,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"bokuanT"},"content":"App data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":888,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: You might want to use this only if you are an experienced user with a large collection of fish","lastModifiedDate":"2023-04-04"},{"lineNumber":889,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":890,"author":{"gitId":"bokuanT"},"content":"App data are saved as a JSON file `[JAR file location]/data/fishahoy.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":892,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: If you have a set of ammonia, pH and temperature readings you want to input in bulk,","lastModifiedDate":"2023-04-04"},{"lineNumber":893,"author":{"gitId":"bokuanT"},"content":"you might want to insert it directly in the `readings.json` file!","lastModifiedDate":"2023-03-31"},{"lineNumber":894,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":895,"author":{"gitId":"bokuanT"},"content":"\u003e :exclamation: Warning: If your changes to the data file makes its format invalid, *Fish Ahoy!* will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-04-06"},{"lineNumber":896,"author":{"gitId":"bokuanT"},"content":"\u003e This will result in a completely empty interface. Delete your `data` folder, containing `addressbook.json` and so on","lastModifiedDate":"2023-04-06"},{"lineNumber":897,"author":{"gitId":"bokuanT"},"content":"\u003e to revert back to the default *Fish Ahoy!*","lastModifiedDate":"2023-04-06"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"ryanchua00"},"content":"## Help","lastModifiedDate":"2023-03-28"},{"lineNumber":900,"author":{"gitId":"ryanchua00"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-03-28"},{"lineNumber":901,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":902,"author":{"gitId":"bokuanT"},"content":"Opens up a web-viewer showing this user guide!","lastModifiedDate":"2023-03-31"},{"lineNumber":903,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":904,"author":{"gitId":"bokuanT"},"content":"\u003e :bulb: Tip: If you do not have internet connection, an offline version will still be loaded!","lastModifiedDate":"2023-04-04"},{"lineNumber":905,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":906,"author":{"gitId":"ryanchua00"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":907,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":908,"author":{"gitId":"ryanchua00"},"content":"Format: `help`","lastModifiedDate":"2023-03-28"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":910,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":911,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"bokuanT"},"content":"**A**: Install *Fish Ahoy!*  in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous *Fish Ahoy!* home folder.","lastModifiedDate":"2023-04-05"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"bokuanT"},"content":"| Action     | Format, Examples                                                                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":923,"author":{"gitId":"bokuanT"},"content":"|------------|-------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":924,"author":{"gitId":"bokuanT"},"content":"| **Add**    | `fish add` `tank add` `task add` \u003cbr\u003e`tank addReadings`                                                                 |                                                                                                |","lastModifiedDate":"2023-04-05"},{"lineNumber":925,"author":{"gitId":"bokuanT"},"content":"| **Delete** | `fish delete INDEX` `tank delete INDEX` `task delete INDEX` \u003cbr\u003e`tank delLastReadings INDEX` \u003cbr\u003e e.g., `tank delete 3` |","lastModifiedDate":"2023-03-31"},{"lineNumber":926,"author":{"gitId":"bokuanT"},"content":"| **Edit**   | `fish edit INDEX` `tank edit INDEX` `task edit INDEX`                                                                   |                                                                    |","lastModifiedDate":"2023-04-05"},{"lineNumber":927,"author":{"gitId":"bokuanT"},"content":"| **Sort**   | `fish sort KEYWORD [TANK]`\u003cbr\u003e e.g., `fish sort by/n tk/2`                                                              |","lastModifiedDate":"2023-03-31"},{"lineNumber":928,"author":{"gitId":"bokuanT"},"content":"| **List**   | `list tasks` `list fishes`                                                                                              |","lastModifiedDate":"2023-04-05"},{"lineNumber":929,"author":{"gitId":"bokuanT"},"content":"| **Help**   | `help`                                                                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":930,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":931,"author":{"gitId":"bokuanT"},"content":"## Command prefix summary","lastModifiedDate":"2023-03-31"},{"lineNumber":932,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":933,"author":{"gitId":"bokuanT"},"content":"| Type              | Attribute                 | Prefix   |","lastModifiedDate":"2023-03-31"},{"lineNumber":934,"author":{"gitId":"bokuanT"},"content":"|-------------------|---------------------------|----------|","lastModifiedDate":"2023-04-03"},{"lineNumber":935,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Name**                  | **n/**   |","lastModifiedDate":"2023-03-31"},{"lineNumber":936,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Last fed date**         | **lfd/** |","lastModifiedDate":"2023-03-31"},{"lineNumber":937,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Species**               | **s/**   |","lastModifiedDate":"2023-03-31"},{"lineNumber":938,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Feeding Interval**      | **fi/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":939,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Tag**                   | **tg/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":940,"author":{"gitId":"bokuanT"},"content":"| **Fish**          | **Sorting**               | **by/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":941,"author":{"gitId":"bokuanT"},"content":"| **Tank**/**Task** | **Description**           | **d/**   |","lastModifiedDate":"2023-04-03"},{"lineNumber":942,"author":{"gitId":"bokuanT"},"content":"| **Tank**          | **Ammonia level reading** | **al/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":943,"author":{"gitId":"bokuanT"},"content":"| **Tank**          | **PH reading**            | **ph/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":944,"author":{"gitId":"bokuanT"},"content":"| **Tank**          | **Temperature reading**   | **tp/**  |","lastModifiedDate":"2023-03-31"},{"lineNumber":945,"author":{"gitId":"bokuanT"},"content":"| **Task**          | **Priority**              | **p/**   |","lastModifiedDate":"2023-04-04"},{"lineNumber":946,"author":{"gitId":"bokuanT"},"content":"| **All**           | **Tank**                  | **tk/**  |","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"TimothyLawSongEn":11,"bryanongjx":4,"bokuanT":616,"ryanchua00":211,"-":104}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"ryanchua00"},"content":"    content: \"Fish Ahoy!\";","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"ryanchua00":1,"-":294}},{"path":"docs/diagrams/AddTaskDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"!include style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"participant \":TaskAddCommandParser\" as TaskAddCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"participant \"d:TaskAddCommand\" as TaskAddCommand LOGIC_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"end box","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"end box","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"[-\u003e LogicManager : execute(\"task add 1\")","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"activate LogicManager","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"task add d/feed fish\")","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"create TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"AddressBookParser -\u003e TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"activate TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"deactivate TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"AddressBookParser -\u003e TaskAddCommandParser : parse(\"feed fish\")","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"activate TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"create TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommandParser -\u003e TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"activate TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommand --\u003e TaskAddCommandParser : d","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"deactivate TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"deactivate TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"destroy TaskAddCommandParser","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"LogicManager -\u003e TaskAddCommand : execute()","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"activate TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommand -\u003e Model : addTask(new Task(\"feed fish\"))","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"activate Model","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"Model --\u003e TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"deactivate Model","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"create CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommand -\u003e CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"activate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"CommandResult --\u003e TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"TaskAddCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"deactivate TaskAddCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"@enduml","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bryanongjx":71}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"user -[USER_COLOR]\u003e ui : \"fish delete 1\"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"fish delete 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteFish(f)","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":3,"-":35}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"AddressBook *-right-\u003e \"1\" UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"UniqueTagList -[hidden]down- UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"UniqueTagList -[hidden]down- UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"UniqueFishList -right-\u003e Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Fish -up-\u003e \"*\" Tag","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Name","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Phone","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Email","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Address","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"participant \":FishDeleteCommandParser\" as FishDeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"participant \"d:FishDeleteCommand\" as FishDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"[-\u003e LogicManager : execute(\"fish delete 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"fish delete 1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"create FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"AddressBookParser -\u003e FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"activate FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"deactivate FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"AddressBookParser -\u003e FishDeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"activate FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"create FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommandParser -\u003e FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"activate FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommand --\u003e FishDeleteCommandParser : d","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"deactivate FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"deactivate FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"destroy FishDeleteCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"LogicManager -\u003e FishDeleteCommand : execute()","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"activate FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommand -\u003e Model : deleteFish(1)","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"Model --\u003e FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"CommandResult --\u003e FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"FishDeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"deactivate FishDeleteCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":28,"-":41}},{"path":"docs/diagrams/FeedingReminderSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"Participant \":MainWindow\" as mainwindow UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"Participant \":TaskFeedingReminderCommand\" LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"user -\u003e ui : Starts app","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"activate ui","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"ui -\u003e mainwindow : signal to create reminders","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"activate mainwindow","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"mainwindow -\u003e logic : getTaskFeedingReminderList()","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"activate logic","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"logic -\u003e model : executeFeedingReminderInitModel()","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"activate model","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"model --\u003e logic : feedingReminders","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"deactivate model","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"logic --\u003e mainwindow : feedingReminders","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"logic -[hidden]-\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"loop for each feedingReminder","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        mainwindow -\u003e logic : create and execute reminder","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        activate logic","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        logic -\u003e \":TaskFeedingReminderCommand\"  ** : new","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        activate \":TaskFeedingReminderCommand\"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        \":TaskFeedingReminderCommand\" --\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        deactivate \":TaskFeedingReminderCommand\"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        logic -[hidden]-\u003e \":TaskFeedingReminderCommand\"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        logic -\u003e \":TaskFeedingReminderCommand\" : execute(model)","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        activate \":TaskFeedingReminderCommand\"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        \":TaskFeedingReminderCommand\" --\u003e logic : CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        deactivate \":TaskFeedingReminderCommand\"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        logic -\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        storage -\u003e storage : Save to file","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e storage","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e logic","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        logic -\u003e storage : saveTaskList(tasklist)","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        storage -\u003e storage : Save to file","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e storage","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e logic","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        logic -\u003e storage : saveTankList(tanklist)","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        storage -\u003e storage : Save to file","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        activate storage","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e storage","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        storage --\u003e logic","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        logic --\u003e mainwindow : CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        mainwindow -\u003e mainwindow : handleGuiChange()","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        activate mainwindow","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        deactivate mainwindow","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"end","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"mainwindow --\u003e ui","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"deactivate mainwindow","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"ui --\u003e user","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"deactivate ui","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"deactivate user","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bokuanT":94}},{"path":"docs/diagrams/FishSortDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"participant \":FishSortCommand\" as FishSortCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"participant \":SortedList\" as SortedList MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"participant \":FilteredFish\" as FilteredFish MODEL_COLOR","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"[-\u003e FishSortCommand : execute","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"activate FishSortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"FishSortCommand -\u003e Model : sortFilteredFishList","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"Model -\u003e SortedList : setComparator","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"activate SortedList","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"SortedList -\u003e FilteredFish : Updates","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"SortedList --\u003e Model","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"deactivate SortedList","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"Model --\u003e FishSortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"FishSortCommand -\u003e Model : getFilteredTankList","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"Model --\u003e FishSortCommand","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"deactivate Model","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"FishSortCommand -\u003e Model : updateFilteredFishList","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"activate Model","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"Model -\u003e FilteredFish : setPredicate","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"activate FilteredFish","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"FilteredFish --\u003e Model","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"deactivate FilteredFish","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"Model --\u003e FishSortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"[\u003c--FishSortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"deactivate FishSortCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"ryanchua00":52}},{"path":"docs/diagrams/FishTankTaskClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"@startuml","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"!include style.puml","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTankList\" as ReadOnlyTankList","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyTaskList\" as ReadOnlyTaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"Class AddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"Class TankList","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Class TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"Class ModelManager","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"Class UserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"Class UniqueFishList","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"Class Fish","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"Class Species","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"Class LastFedDate","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"Class Name","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"Class FeedingInterval","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"Class Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"Class UniqueTankList","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"Class Tank","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"Class TankName","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"Class UniqueTaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"Class Task","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"Class Description","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"TankList .up.|\u003e ReadOnlyTankList","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"TaskList .up.|\u003e ReadOnlyTaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"Model .left.\u003e ReadOnlyTankList","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"Model .left.\u003e ReadOnlyTaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"ModelManager -left-\u003e \"1\" TankList","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"ModelManager -left-\u003e \"1\" TaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"AddressBook *--\u003e \"1\" UniqueFishList","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"TankList *--\u003e \"1\" UniqueTankList","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"TaskList *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"UniqueFishList --\u003e \"~* all\" Fish","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"UniqueTankList --\u003e \"~* all\" Tank","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Name","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e FeedingInterval","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e LastFedDate","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Species","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"Fish *-left-\u003e Tank","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"Tank *--\u003e TankName","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"Tank *-up-\u003e \"1\" AddressBook","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"Task *--\u003e Description","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"Task -right-\u003e \"0..1\" Tank","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"Name -[hidden]right-\u003e FeedingInterval","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"FeedingInterval -[hidden]right-\u003e Species","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"Species -[hidden]right-\u003e LastFedDate","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"ModelManager --\u003e\"~* filtered\" Fish","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"@enduml","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"bokuanT":81}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Class UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"Class Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"AddressBook *--\u003e \"1\" UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"UniqueFishList --\u003e \"~* all\" Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Name","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Phone","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Email","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Address","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e \"*\" Tag","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"ModelManager --\u003e\"~* filtered\" Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"Class JsonAdaptedFish","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedFish","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"JsonAdaptedFish --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"Class MainContent","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Class FishListPanel","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"Class TaskListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"Class TankListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"Class FishCard","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"Class TankCard","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"Class TaskCard","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"MainWindow *-down-\u003e \"1\" MainContent","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"MainContent *-down-\u003e \"1\" FishListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"MainContent *-down-\u003e \"1\" TaskListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"MainContent *-down-\u003e \"1\" TankListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"FishListPanel -down-\u003e \"*\" FishCard","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"TankListPanel -down-\u003e \"*\" TankCard","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"TaskListPanel -down-\u003e \"*\" TaskCard","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"MainContent --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"FishCard --|\u003e UiPart","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"TaskCard --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"TankCard --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"FishListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"TaskListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"TankListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"FishCard ..\u003e Model","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"TaskCard ..\u003e Model","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"TankCard ..\u003e Model","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"MainContent -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":25,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"ecp -\u003e ec ++: index, editFishDescriptor","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"bokuanT":1,"-":20}},{"path":"docs/team/bokuant.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Bo Kuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: *Fish Ahoy!*","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"*Fish Ahoy!* Is a **desktop app for managing your fish, fish tanks, and relevant tasks, optimized for use via a Command","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). \u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"*Fish Ahoy!* **streamlines** the fish keeping experience by helping you keep track of your many **fishes**, **tanks** and","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"**weekly tasks**, such as feeding and cleaning.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"Given below are my major contributions to the project.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the entire task interface feature, including feeding reminders, excluding task priorities","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"  * What it does:","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    * Allows users to keep track of tasks and save them to their hard disk, viewing them again after opening *Fish Ahoy!*","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    * Get feeding reminders automatically whenever they open the app and any tank have hungry fish","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    * Also implemented feature where feeding reminder for a tank is deleted when `tank feed` command is used","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user a major proportion of our user stories include allowing","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"users to keep track of their fish-keeping tasks. Also, a main feature of a fish keeping app should be keeping your fish alive","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"by reminding you to feed them.","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This was the first feature to be added, without reference to previous implementations within our own group.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"This made the implementation more difficult as I could not reference the github diffs of previous feature PRs.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Credits: Task implementation was inspired by [SoConnect](https://github.com/AY2223S1-CS2103T-W15-1/tp) and fxml file was reused. However, our implementation is entirely new.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a backend of the whole tank readings feature excluding some basic model files that required further enhancement","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"  * What it does: ","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    * Allows users to keep track of aquarium environmental readings by adding and deleting readings and saving them to the hard disk","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"  * Justification: This is crucial for fish survival, as indicated by some user stories","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"  * Highlights: Storage architecture of this feature did not follow that of previous features like fish, tank or task. There is ","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"one additional layer of abstraction where the complete readings are a list of individual tank readings, which then contain ","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"each tank\u0027s respective ammonia level, pH and temperature readings. This reduces code needed and increases the ease of adding enhancements","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"like adding more types of readings in the future.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbokuant\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"* **Project management/ contributions to team based tasks**:","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Checked, approved and merged the majority of PRs, handling conflicts and helped fix group mates\u0027 PRs which could not even","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"pass CI checks: [232](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/232), [73](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/73) - `v1.1 - v1.4`","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"  * Managed team\u0027s weekly dashboard tasks, ensuring they are marked as completed","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Ensure project progress is on schedule","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"  * Refactored `Person` to `Fish`","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"  * Changed several attributes of persons to match attributes of fishes","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    * Wrote the entire draft of the user guide in doc format and transferred it to `md` format in `v1.1`","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    * Rewrote the entire `features` section of every command to tackle documentation bugs surfaced in PE-D, adding examples and ","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"more detailed usage (`v1.4`)","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    * Added `using this guide` and `glossary` section in `v1.4`","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    * Ensured that additional information (:information_source:), warnings (:exclamation:) and tips (:bulb:) are consistent","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"throughout the UG. Added several useful additional information, warnings and tips also in `v1.4`","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the feeding reminders feature.","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    * Refactored many origial `.puml` files to align AB3 diagrams with *Fish Ahoy!*","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"  * Posted in forum when github was down so `v1.3` deadline was extended [298](https://github.com/nus-cs2103-AY2223S2/forum/issues/298)","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"  * Helped team clarify `v1.4` feature freeze constraints [335](https://github.com/nus-cs2103-AY2223S2/forum/issues/335)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"  ","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":64}},{"path":"docs/team/bryanongjx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Bryan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"* **New Feature**: Added the ability to add priorities to tasks.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"  * What it does: allows the user to assign priorities (low / medium / high) to tasks.","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"  * Justification: This feature improves the product significantly as it allows users to priorities their tasks and later sort them in the user interface.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"  * Credits: *nil*","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    Fish Ahoy! - is a desktop Fish Manager application used for managing your fish / tanks. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bryanongjx":5,"bokuanT":40}},{"path":"docs/team/diamondroxxx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Avery\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/team/ryanchua00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"### Project: *Fish Ahoy!*","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* Is a **desktop app for managing your fish, fish tanks, and relevant tasks, optimized for use via a Command","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). \u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"*Fish Ahoy!* **streamlines** the fish keeping experience by helping you keep track of your many **fishes**, **tanks** and","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"**weekly tasks**, such as feeding and cleaning.","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"* **New Fish Sort command**: Added a sorting function for user to sort fish.","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"  * What it does: allows the user to sort fish by a given attribute.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"  * Justification: This feature improves the product significantly because a user can sort his fishes to his own preference, ","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    and change the ordering of the fishes.","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"  * Highlights: This enhancement builds upon existing FilteredList functionality through integrating a SortedList. ","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    It required a study of design alternatives and Java FilteredList and SortedList implementations.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    ","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"* **Improved Task Sorting**: Added a sorting based off priority to Tasks.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"  * What it does: allows the user to easily view tasks based off priority.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"  * Justification: This feature improves the product because a user can now see the most urgent tasks first and focus on them,","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    improving the benefits of the tasks feature for the user.","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"  * Highlights: This enhancement also uses SortedLists to sort the tasks by priority. To facilitate this, I also added ","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    enums for priority to allow for easier sorting. (Pull Requests [\\#119](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/119), [\\#214](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/214))","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    ","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dryanchua00\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"* **Project management/Contributions to team-based tasks**:","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"  * Managed releases `v1.3` - `v1.3.1` (2 releases) on GitHub.","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"  * Checked, approved and merged 32+ PRs, handling conflicts and helped fix group mates\u0027 PRs: ","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    * Thoroughly reviewed PRs: [\\#49](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/49)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"      [\\#63](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/63) - `v1.1 - v1.4`","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"  * Created 28 and closed 53 issues, of which the latter 40 was assigned and closed by me.","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"  * Ensure project progress is on schedule.","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"  * Summarise and delegate tasks at every project meeting, see [Project notes](https://docs.google.com/document/d/1SKZt5__jKFv3l1Zu2YpQm-VNddbT2NYJlIxam2Zethk/edit#bookmark\u003did.pnxemekevmpi).","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  ","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"  * Wrote additional tests for existing features to increase coverage (Pull requests [\\#67](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/67), [\\#39](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/39))","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"  * **Improved Help page**: Added a JavaFX WebView to load the UserGuide.","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    * What it does: allows the user to seek for help from the application.","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    * Justification: This feature improves the product because a user can now access the help page from the application,","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"      and also a local html version of the help page if there is not internet access.","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    * Highlights: This enhancement uses JavaFX WebView to load the help page.","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"    * Credits: After coming up with the idea to use JavaFX WebView, I referenced an already existing implementation of a","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"      help page built on JavaFX WebView from [AY2223S1-CS2103- F14-1](https://github.com/AY2223S1-CS2103-F14-1/tp/pull/66)","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"      ","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    * Created and added all Ui images, including feature screenshots.","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"    * Update features to latest command format (Pull Request [\\#55](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/55)).    ","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"    * Update descriptions for (Pull Request [\\#80](https://github.com/AY2223S2-CS2103T-T17-4/tp/pull/80)):","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"      * Tanks, Fishes and Tasks.","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"      * Feature `fish sort`.","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"      * Introduction section.","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"    * Add implementation details of the `fish sort` feature.","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"    * Add sequence diagram for `fish sort`.","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    * Add acknowledgements section.","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"  * Contributed to forum discussions ([\\#296](https://github.com/nus-cs2103-AY2223S2/forum/issues/296))","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"  * Helped team clarify an issue in `v1.4` feature freeze ([\\#334](https://github.com/nus-cs2103-AY2223S2/forum/issues/334))","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":20,"ryanchua00":47}},{"path":"docs/team/timothylawsongen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Timothy\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":" * Changes the remark of an existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"            + \": Edits the remark of the fish identified \"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            + \"by the index number used in the last fish listing. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"     * @param index of the fish in the filtered fish list to edit the remark","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"     * @param remark of the fish to be updated to","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of fish data. We achieve that by working with the `Fish` model. Each field in a Fish is implemented as a separate class (e.g. a `Name` object represents the fish’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"Create a new `Remark` in `seedu.address.model.fish`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"Simply add the following to [`seedu.address.ui.FishCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"Then insert the following into [`main/resources/view/FishListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"**`FishListCard.fxml`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"## Modify `Fish` to support a `Remark` field","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"Since `FishCard` displays data from a `Fish`, we need to update `Fish` to get our `Remark` displayed!","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"### Modify `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"We change the constructor of `Fish` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"### Update other usages of `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"Unfortunately, a change to `Fish` will cause other commands to break, you will have to modify these commands to use the updated `Fish`!","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Fish` class to find these commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"AddressBook stores data by serializing `JsonAdaptedFish` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedFish` to work with our new `Fish`!","lastModifiedDate":"2023-02-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"Now that we have finalized the `Fish` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-02-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"public FishCard(Fish fish, int displayedIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"    remark.setText(fish.getRemark().value);","lastModifiedDate":"2023-02-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Fish`. Since all fields in a `Fish` are immutable, we create a new instance of a `Fish` with the values that we want and","lastModifiedDate":"2023-02-26"},{"lineNumber":329,"author":{"gitId":"bokuanT"},"content":"save it with `Model#setFish()`.","lastModifiedDate":"2023-02-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_Fish_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"bokuanT"},"content":"        Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":347,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new Fish(","lastModifiedDate":"2023-02-26"},{"lineNumber":348,"author":{"gitId":"bokuanT"},"content":"                fishToEdit.getName(), fishToEdit.getPhone(), fishToEdit.getEmail(),","lastModifiedDate":"2023-02-26"},{"lineNumber":349,"author":{"gitId":"bokuanT"},"content":"                fishToEdit.getAddress(), remark, fishToEdit.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"bokuanT"},"content":"        model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":352,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(PREDICATE_SHOW_ALL_Fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(generateSuccessMessage(editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"bokuanT"},"content":"     * {@code fishToEdit}.","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"bokuanT"},"content":"    private String generateSuccessMessage(Fish fishToEdit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"bokuanT"},"content":"        return String.format(message, fishToEdit);","lastModifiedDate":"2023-02-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"bokuanT":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Fish` class.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"The `address` field in `Fish` is actually an instance of the `seedu.address.model.fish.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditFishDescriptor` may require more careful inspection.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"Let’s try removing references to `Address` in `EditFishDescriptor`.","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"1. Safe delete the field `address` in `EditFishDescriptor`.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Fish` class will require you to modify its constructor.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `FishCard` that has not been removed nor identified.","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"A quick look at the `FishCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`**","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"**`FishCard.fxml`**","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"\u003cLabel fx:id\u003d\"lastFedDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastFedDate\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"\u003cLabel fx:id\u003d\"species\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$species\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"**`invalidFishAddressBook.json`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"  \"fish\": [ {","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    \"name\": \"Fish with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    \"lastFedDate\": \"9482424\",","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"    \"species\": \"Guppy\",","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":15,"-":95}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditFishDescriptor`. Recall that we can verify the contents of `editFishDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"       Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"       Fish editedFish \u003d createEditedFish(fishToEdit, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"       if (!fishToEdit.isSameFish(editedFish) \u0026\u0026 model.hasFish(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_Fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"       model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"       model.updateFilteredFishList(PREDICATE_SHOW_ALL_Fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_Fish_SUCCESS, editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"   * it uses the `setFish()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the fish data.","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"   * it uses the `updateFilteredFishList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ fish.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"     FYI, The \u0027filtered list\u0027 is the list of fish resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the fish so that the user can see the edited fish along with all other fish. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of fish is being tracked.","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"        fish.addAll(","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"            source.getFishList()","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"                  .map(JsonAdaptedFish::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"1. It appears that a `JsonAdaptedFish` is created for each `Fish` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-02-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"    5.  Add a new field to `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":17,"-":284}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/*Hi all, let\u0027s have a good team project*/","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ryanchua00":2,"-":25}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.FullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleReadingsUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleTankUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleTaskUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.AddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonTankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.TankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.FullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.JsonFullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.task.JsonTaskListStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.task.TaskListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.UserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        TankListStorage tankListStorage \u003d new JsonTankListStorage(userPrefs.getTankListFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevelsStorage fullReadingLevelsStorage \u003d new JsonFullReadingLevelsStorage(userPrefs","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"                .getFullReadingsLevelsPath());","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage, tankListStorage,","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"                fullReadingLevelsStorage);","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTankList initialTankList;","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyReadingLevels initialFullReadings;","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"            initialData \u003d readAddressBookFromStorage(storage);","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d readTaskListFromStorage(storage);","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d readTankListFromStorage(storage);","lastModifiedDate":"2023-04-05"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"            initialFullReadings \u003d readReadingLevelsFromStorage(storage);","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Files\");","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2023-04-05"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d new TankList();","lastModifiedDate":"2023-04-05"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"            initialFullReadings \u003d new FullReadingLevels();","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Files\");","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d new TankList();","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"            initialFullReadings \u003d new FullReadingLevels();","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        return new ModelManager(initialData, userPrefs, initialTaskList, initialTankList, initialFullReadings);","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    private ReadOnlyAddressBook readAddressBookFromStorage(Storage storage) throws DataConversionException,","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        return initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    private ReadOnlyTaskList readTaskListFromStorage(Storage storage) throws DataConversionException,","lastModifiedDate":"2023-04-05"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTaskList initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        if (!taskListOptional.isPresent()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Data file not found. Will be starting with a sample Task List\");","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        initialData \u003d taskListOptional.orElseGet(SampleTaskUtil::getSampleTaskList);","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"        return initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"    private ReadOnlyTankList readTankListFromStorage(Storage storage) throws DataConversionException,","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyTankList\u003e tankListOptional;","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTankList initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        tankListOptional \u003d storage.readTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        if (!tankListOptional.isPresent()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Data file not found. Will be starting with a sample Tank List\");","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        initialData \u003d tankListOptional.orElseGet(SampleTankUtil::getSampleTankList);","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        return initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"    private ReadOnlyReadingLevels readReadingLevelsFromStorage(Storage storage) throws DataConversionException,","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyReadingLevels\u003e readingLevelsOptional;","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyReadingLevels initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"        readingLevelsOptional \u003d storage.readFullReadingLevels();","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        if (!readingLevelsOptional.isPresent()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Data file not found. Will be starting with a sample Reading levels\");","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"        initialData \u003d readingLevelsOptional.orElseGet(SampleReadingsUtil::getSampleFullReadingLevels);","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"        return initialData;","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"    private void executeAutoInitActions() {","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"        executeFeedingReminderFeature();","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"    private void executeFeedingReminderFeature() {","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"        ui.executeFeedingReminderInitUi();","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"        logger.info(\"Checking for feeding reminders \" + MainApp.VERSION);","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"        executeAutoInitActions();","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":93,"-":176}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"     * The current elements being displayed","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    public enum GuiMode { DISPLAY_FISHES, DISPLAY_SORTED_FISHES }","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    private static final GuiMode DEFAULT_GUI_MODE \u003d GuiMode.DISPLAY_FISHES;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    private final GuiMode guiMode;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"        guiMode \u003d DEFAULT_GUI_MODE;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        guiMode \u003d DEFAULT_GUI_MODE;","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width, position, and guiMode.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, GuiMode guiMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"        this.guiMode \u003d guiMode;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"    private GuiSettings(double windowWidth, double windowHeight, Point windowCoordinates, GuiMode guiMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"        this.windowCoordinates \u003d windowCoordinates;","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        this.guiMode \u003d guiMode;","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"    public GuiSettings changeGuiMode(GuiMode newMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"        return new GuiSettings(windowWidth, windowHeight, windowCoordinates, newMode);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"Diamondroxxx"},"content":"    public GuiMode getGuiMode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Diamondroxxx"},"content":"        return guiMode;","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"Diamondroxxx"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates)","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Diamondroxxx"},"content":"                \u0026\u0026 guiMode \u003d\u003d o.guiMode;","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"Diamondroxxx"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates, guiMode);","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":79,"Diamondroxxx":36}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_FISHES_LISTED_OVERVIEW \u003d \"%1$d Fishes listed!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_INVALID_FISH_DISPLAYED_INDEX \u003d \"The fish index provided is invalid.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_INVALID_TANK_DISPLAYED_INDEX \u003d \"The tank index provided is invalid.\";","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":1,"ryanchua00":3,"-":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered list of Fishes */","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    ObservableList\u003cFish\u003e getSortedFishList();","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"    ObservableList\u003cTank\u003e getFilteredTankList();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    ArrayList\u003cTaskFeedingReminder\u003e getTaskFeedingReminderList();","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * Executes the auto feeding reminder feature for Logic","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * @return CommandResult of trying to create feeding reminders","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    CommandResult executeFeedingReminderInitLogic(TaskFeedingReminder taskFeedingReminder) throws CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":18,"ryanchua00":1,"-":48,"Diamondroxxx":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskFeedingReminderCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            storage.saveTankList(model.getTankList());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            storage.saveFullReadingLevels(model.getFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"    public ObservableList\u003cFish\u003e getSortedFishList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"        return model.getSortedFishList();","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"Diamondroxxx"},"content":"    public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"Diamondroxxx"},"content":"        return model.getFilteredTankList();","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTaskFeedingReminder\u003e getTaskFeedingReminderList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        return model.executeFeedingReminderInitModel();","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    public CommandResult executeFeedingReminderInitLogic(TaskFeedingReminder taskFeedingReminder)","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        //create command","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        Command remindCommand \u003d new TaskFeedingReminderCommand(taskFeedingReminder);","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        CommandResult commandResult \u003d remindCommand.execute((model));","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"            storage.saveTankList(model.getTankList());","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"            storage.saveFullReadingLevels(model.getFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        return commandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bokuanT":42,"ryanchua00":3,"-":80,"Diamondroxxx":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * Adds a fish to the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a fish to the address book. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_LAST_FED_DATE + \"LAST FED DATE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_SPECIES + \"SPECIES \"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_FEEDING_INTERVAL + \"FEEDING INTERVAL \"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"TANK INDEX\"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_LAST_FED_DATE + \"01/01/2023 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_SPECIES + \"Guppy \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_FEEDING_INTERVAL + \"0d5h \"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New fish added: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book\";","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_MISSING_TANK \u003d \"The tank index specified does not exist\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    private final Fish toAdd;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    private final Index tankIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Creates an AddCommand to add the specified {@code Fish}","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"    public AddCommand(Fish fish, Index tankIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        toAdd \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        if (model.hasFish(toAdd)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        Tank tank;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"            ObservableList\u003cTank\u003e list \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        // check that tank is non-null","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"        // assigns fish to tank","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        toAdd.setTank(tank);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        model.addFish(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bryanongjx":3,"bokuanT":23,"ryanchua00":17,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    /** The UI should change what it is displaying **/","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    private final boolean changeGui;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean changeGui) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        this.changeGui \u003d changeGui;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    public boolean isChangeGui() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"        return changeGui;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"                \u0026\u0026 changeGui \u003d\u003d otherCommandResult.changeGui;","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, changeGui);","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":67,"Diamondroxxx":13}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Deletes a fish identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            + \": Deletes the fish identified by the index number used in the displayed fish list.\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_FISH_SUCCESS \u003d \"Deleted Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        model.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FISH_SUCCESS, fishToDelete));","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.fish.FishAddCommand.MESSAGE_MISSING_TANK;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":" * Edits the details of an existing fish in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the fish identified \"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            + \"by the index number used in the displayed fish list. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_LAST_FED_DATE + \"LAST FED DATE] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"            + \"[\" + PREFIX_SPECIES + \"SPECIES] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_FEEDING_INTERVAL + \"FEEDING INTERVAL] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_TANK + \"TANK] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_LAST_FED_DATE + \"02/01/2023 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_SPECIES + \"Guppy \";","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_EDIT_FISH_SUCCESS \u003d \"Edited Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USE_INDEX \u003d \"Use a numerical index of a tank eg. /tk 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    private final EditFishDescriptor editFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * @param index of the fish in the filtered fish list to edit","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * @param editFishDescriptor details to edit the fish with","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public EditCommand(Index index, EditFishDescriptor editFishDescriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        this.editFishDescriptor \u003d new EditFishDescriptor(editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d createEditedFish(fishToEdit, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        //editedFish\u0027s tank attribute is only an index","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        Tank tank;","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"            int ind \u003d Integer.valueOf(editedFish.getTank().getTankName().fullTankName);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"            Index tankIndex \u003d Index.fromOneBased(ind);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_USE_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        editedFish.setTank(tank);","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        if (!fishToEdit.isSameFish(editedFish) \u0026\u0026 model.hasFish(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        boolean differentTanks \u003d !fishToEdit.getTank().equals(editedFish.getTank());","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        if (differentTanks) { //update fishlist/addressbooks within a tank","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"            fishToEdit.getTank().getFishList().removeFish(fishToEdit);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            editedFish.getTank().getFishList().addFish(fishToEdit);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            fishToEdit.getTank().getFishList().setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FISH_SUCCESS, editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"     * Creates and returns a {@code Fish} with the details of {@code fishToEdit}","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"     * edited with {@code editFishDescriptor}.","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    private static Fish createEditedFish(Fish fishToEdit, EditFishDescriptor editFishDescriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        assert fishToEdit !\u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        Name updatedName \u003d editFishDescriptor.getName().orElse(fishToEdit.getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime updatedLastFedDate \u003d editFishDescriptor.getLastFedDate()","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"TimothyLawSongEn"},"content":"                .orElse(fishToEdit.getLastFedDateTime());","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"bryanongjx"},"content":"        Species updatedSpecies \u003d editFishDescriptor.getSpecies().orElse(fishToEdit.getSpecies());","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        FeedingInterval updatedFeedingInterval \u003d editFishDescriptor.getFeedingInterval()","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"                .orElse(fishToEdit.getFeedingInterval());","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        Tank updatedTank \u003d editFishDescriptor.getTank().orElse(fishToEdit.getTank());","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        Set\u003cTag\u003e updatedTags \u003d editFishDescriptor.getTags().orElse(fishToEdit.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        return new Fish(updatedName, updatedLastFedDate, updatedSpecies, updatedFeedingInterval, updatedTank,","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                updatedTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 editFishDescriptor.equals(e.editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"     * Stores the details to edit the fish with. Each non-empty field value will replace the","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"     * corresponding field value of the fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"    public static class EditFishDescriptor {","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"TimothyLawSongEn"},"content":"        private LastFedDateTime lastFedDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"bryanongjx"},"content":"        private Species species;","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        private FeedingInterval feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        private Tank tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"        public EditFishDescriptor() {}","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"        public EditFishDescriptor(EditFishDescriptor toCopy) {","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"            setLastFedDate(toCopy.lastFedDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"bryanongjx"},"content":"            setSpecies(toCopy.species);","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"            setFeedingInterval(toCopy.feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"            setTank(toCopy.tank);","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"            return CollectionUtil.isAnyNonNull(name, lastFedDate, species, feedingInterval, tank, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setLastFedDate(LastFedDateTime lastFedDate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"            this.lastFedDate \u003d lastFedDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cLastFedDateTime\u003e getLastFedDate() {","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(lastFedDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"bryanongjx"},"content":"        public void setSpecies(Species species) {","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"bryanongjx"},"content":"            this.species \u003d species;","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"bryanongjx"},"content":"        public Optional\u003cSpecies\u003e getSpecies() {","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"bryanongjx"},"content":"            return Optional.ofNullable(species);","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"        public void setFeedingInterval(FeedingInterval feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"            this.feedingInterval \u003d feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cFeedingInterval\u003e getFeedingInterval() {","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"        public void setTank(Tank tank) {","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"            this.tank \u003d tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cTank\u003e getTank() {","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(tank);","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"            if (!(other instanceof EditFishDescriptor)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"            EditFishDescriptor e \u003d (EditFishDescriptor) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"                    \u0026\u0026 getLastFedDate().equals(e.getLastFedDate())","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"bryanongjx"},"content":"                    \u0026\u0026 getSpecies().equals(e.getSpecies())","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"                    \u0026\u0026 getFeedingInterval().equals(e.getFeedingInterval())","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"                    \u0026\u0026 getTank().equals(e.getTank())","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"TimothyLawSongEn":6,"bryanongjx":12,"bokuanT":91,"ryanchua00":2,"-":155}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"Diamondroxxx":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Finds and lists all Fishes in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all Fishes whose names contain any of \"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                String.format(Messages.MESSAGE_FISHES_LISTED_OVERVIEW, model.getFilteredFishList().size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bokuanT":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"Diamondroxxx":1}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Lists all Fishes in the address book to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"public abstract class ListCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    public static final String MESSAGE_SUCCESS_FISHES \u003d \"Listed all fishes\";","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_SUCCESS_TASKS \u003d \"Listed all tasks\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" fishes: lists all fishes.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"            + COMMAND_WORD + \" tasks: lists all tasks.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    /* Singleton for ListFishCommand */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    public static final ListCommand LIST_FISHES \u003d new ListFishCommand();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    /* Singleton for ListTaskCommand */","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    public static final ListCommand LIST_TASKS \u003d new ListTaskCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    private static class ListFishCommand extends ListCommand {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            model.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"            model.setGuiMode(GuiSettings.GuiMode.DISPLAY_FISHES);","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"            return new CommandResult(MESSAGE_SUCCESS_FISHES, false, false, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    private static class ListTaskCommand extends ListCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"            model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"            return new CommandResult(MESSAGE_SUCCESS_TASKS);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":3,"ryanchua00":13,"-":19,"Diamondroxxx":14}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":" * Parses input arguments and creates a new FishAddCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"public class FishAddCommand extends FishCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    public static final String FISH_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + FISH_COMMAND_WORD","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \": Adds a fish to the address book.\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_LAST_FED_DATE + \"LAST FED DATE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_SPECIES + \"SPECIES \"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_FEEDING_INTERVAL + \"FEEDING INTERVAL \"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"TANK INDEX \"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + FISH_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_NAME + \"Johnny \"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_LAST_FED_DATE + \"01/01/2023 12:00 \"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_SPECIES + \"Guppy \"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_FEEDING_INTERVAL + \"0d5h \"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New fish added: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book\";","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_MISSING_TANK \u003d \"The tank index specified does not exist\";","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    private final Fish toAdd;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"    private final Index tankIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"     * Creates an AddCommand to add the specified {@code Fish}","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"    public FishAddCommand(Fish fish, Index tankIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        toAdd \u003d fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"        if (model.hasFish(toAdd)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"        Tank tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"        // check that tank is non-null","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"        // assigns fish to tank","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        toAdd.setTank(tank);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        //each tank has individual fishlist/addressbook","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        tank.addFish(toAdd);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"        model.addFish(toAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof FishAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 toAdd.equals(((FishAddCommand) other).toAdd));","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":5,"bryanongjx":74,"bokuanT":9}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" * Adds Fish to Fish Ahoy!","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"public abstract class FishCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public static final String COMMAND_WORD \u003d \"fish\";","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003cfish command word\u003e\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"            + \"Fish commands: add, \"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"            + \"delete, \"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"            + \"view, \"","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"            + \"sort\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bryanongjx":26,"ryanchua00":3}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":" * Deletes a fish identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"public class FishDeleteCommand extends FishCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public static final String FISH_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + FISH_COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"            + \": Deletes the fish identified by the index number used in the displayed fish list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + FISH_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_DELETE_FISH_SUCCESS \u003d \"Deleted Fish: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    public FishDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"        Fish fishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        //get tank of fishToDelete to update the Tank\u0027s fish list","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        Tank tank \u003d fishToDelete.getTank();","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        model.deleteFish(fishToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        tank.getFishList().removeFish(fishToDelete);","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FISH_SUCCESS, fishToDelete));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof FishDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 targetIndex.equals(((FishDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":2,"bryanongjx":52,"bokuanT":4}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.commands.fish.FishAddCommand.MESSAGE_MISSING_TANK;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":" * Edits the details of an existing fish in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"public class FishEditCommand extends FishCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String FISH_COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + FISH_COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \": Edits the details of the fish identified \"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"by the index number used in the displayed fish list. \"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_LAST_FED_DATE + \"LAST FED DATE] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_SPECIES + \"SPECIES] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_FEEDING_INTERVAL + \"FEEDING INTERVAL] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_TANK + \"TANK] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + FISH_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_LAST_FED_DATE + \"02/01/2023 12:30 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_SPECIES + \"Guppy \";","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_EDIT_FISH_SUCCESS \u003d \"Edited Fish: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USE_INDEX \u003d \"Use a numerical index of a tank eg. tk/1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final EditFishDescriptor editFishDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param index of the fish in the filtered fish list to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param editFishDescriptor details to edit the fish with","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"    public FishEditCommand(Index index, EditFishDescriptor editFishDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(editFishDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.editFishDescriptor \u003d new EditFishDescriptor(editFishDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"TimothyLawSongEn"},"content":"        Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"TimothyLawSongEn"},"content":"        Fish editedFish \u003d createEditedFish(fishToEdit, editFishDescriptor, model);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!fishToEdit.isSameFish(editedFish) \u0026\u0026 model.hasFish(editedFish)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"TimothyLawSongEn"},"content":"        model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"TimothyLawSongEn"},"content":"        boolean differentTanks \u003d !fishToEdit.getTank().equals(editedFish.getTank());","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (differentTanks) { //update fishlist/addressbooks within a tank","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"TimothyLawSongEn"},"content":"            fishToEdit.getTank().getFishList().removeFish(fishToEdit);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"TimothyLawSongEn"},"content":"            editedFish.getTank().getFishList().addFish(fishToEdit);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"TimothyLawSongEn"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"TimothyLawSongEn"},"content":"            fishToEdit.getTank().getFishList().setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FISH_SUCCESS, editedFish));","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Creates and returns a {@code Fish} with the details of {@code fishToEdit}","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"TimothyLawSongEn"},"content":"     * edited with {@code editFishDescriptor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static Fish createEditedFish(Fish fishToEdit, EditFishDescriptor editFishDescriptor, Model model)","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"TimothyLawSongEn"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"TimothyLawSongEn"},"content":"        assert fishToEdit !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"TimothyLawSongEn"},"content":"        Name updatedName \u003d editFishDescriptor.getName().orElse(fishToEdit.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime updatedLastFedDate \u003d editFishDescriptor.getLastFedDate()","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"TimothyLawSongEn"},"content":"                .orElse(fishToEdit.getLastFedDateTime());","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"TimothyLawSongEn"},"content":"        Species updatedSpecies \u003d editFishDescriptor.getSpecies().orElse(fishToEdit.getSpecies());","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"TimothyLawSongEn"},"content":"        FeedingInterval updatedFeedingInterval \u003d editFishDescriptor.getFeedingInterval()","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"TimothyLawSongEn"},"content":"                .orElse(fishToEdit.getFeedingInterval());","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"TimothyLawSongEn"},"content":"        Tank updatedTank;","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"TimothyLawSongEn"},"content":"            updatedTank \u003d editFishDescriptor.getTankIndex()","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"TimothyLawSongEn"},"content":"                    .map(ind -\u003e model.getFilteredTankList().get(ind.getZeroBased()))","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"TimothyLawSongEn"},"content":"                    .orElse(fishToEdit.getTank());","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"TimothyLawSongEn"},"content":"            //            int ind \u003d Integer.valueOf(editedFish.getTank().getTankName().fullTankName);","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"TimothyLawSongEn"},"content":"            //            Index tankIndex \u003d Index.fromOneBased(ind);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"TimothyLawSongEn"},"content":"            //            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(MESSAGE_USE_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"TimothyLawSongEn"},"content":"        Set\u003cTag\u003e updatedTags \u003d editFishDescriptor.getTags().orElse(fishToEdit.getTags());","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new Fish(updatedName, updatedLastFedDate, updatedSpecies, updatedFeedingInterval, updatedTank,","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"TimothyLawSongEn"},"content":"                updatedTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"TimothyLawSongEn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"TimothyLawSongEn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"TimothyLawSongEn"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"TimothyLawSongEn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!(other instanceof FishEditCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"TimothyLawSongEn"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"TimothyLawSongEn"},"content":"        // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"TimothyLawSongEn"},"content":"        FishEditCommand e \u003d (FishEditCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"TimothyLawSongEn"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 editFishDescriptor.equals(e.editFishDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Stores the details to edit the fish with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"TimothyLawSongEn"},"content":"     * corresponding field value of the fish.","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static class EditFishDescriptor {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"TimothyLawSongEn"},"content":"        private Name name;","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"TimothyLawSongEn"},"content":"        private LastFedDateTime lastFedDate;","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"TimothyLawSongEn"},"content":"        private Species species;","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"TimothyLawSongEn"},"content":"        private FeedingInterval feedingInterval;","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"TimothyLawSongEn"},"content":"        private Index tankIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"TimothyLawSongEn"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"TimothyLawSongEn"},"content":"        public EditFishDescriptor() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"TimothyLawSongEn"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"TimothyLawSongEn"},"content":"        public EditFishDescriptor(EditFishDescriptor toCopy) {","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"TimothyLawSongEn"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"TimothyLawSongEn"},"content":"            setLastFedDate(toCopy.lastFedDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"TimothyLawSongEn"},"content":"            setSpecies(toCopy.species);","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"TimothyLawSongEn"},"content":"            setFeedingInterval(toCopy.feedingInterval);","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"TimothyLawSongEn"},"content":"            setTankIndex(toCopy.tankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"TimothyLawSongEn"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"TimothyLawSongEn"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"TimothyLawSongEn"},"content":"            return CollectionUtil.isAnyNonNull(name, lastFedDate, species, feedingInterval, tankIndex, tags);","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setLastFedDate(LastFedDateTime lastFedDate) {","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.lastFedDate \u003d lastFedDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cLastFedDateTime\u003e getLastFedDate() {","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(lastFedDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setSpecies(Species species) {","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.species \u003d species;","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cSpecies\u003e getSpecies() {","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(species);","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setFeedingInterval(FeedingInterval feedingInterval) {","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.feedingInterval \u003d feedingInterval;","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cFeedingInterval\u003e getFeedingInterval() {","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(feedingInterval);","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setTankIndex(Index tankIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cIndex\u003e getTankIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(tankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"TimothyLawSongEn"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"TimothyLawSongEn"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"TimothyLawSongEn"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"TimothyLawSongEn"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"TimothyLawSongEn"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"TimothyLawSongEn"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"TimothyLawSongEn"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"TimothyLawSongEn"},"content":"                return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"TimothyLawSongEn"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"TimothyLawSongEn"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"TimothyLawSongEn"},"content":"            if (!(other instanceof EditFishDescriptor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"TimothyLawSongEn"},"content":"                return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"TimothyLawSongEn"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"TimothyLawSongEn"},"content":"            // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"TimothyLawSongEn"},"content":"            EditFishDescriptor e \u003d (EditFishDescriptor) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"TimothyLawSongEn"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"TimothyLawSongEn"},"content":"                    \u0026\u0026 getLastFedDate().equals(e.getLastFedDate())","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"TimothyLawSongEn"},"content":"                    \u0026\u0026 getSpecies().equals(e.getSpecies())","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"TimothyLawSongEn"},"content":"                    \u0026\u0026 getFeedingInterval().equals(e.getFeedingInterval())","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"TimothyLawSongEn"},"content":"                    \u0026\u0026 getTankIndex().equals(e.getTankIndex())","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"TimothyLawSongEn"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"TimothyLawSongEn":269}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishSortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.model.Model.SHOW_FISHES_IN_TANK;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":" * Sorts {@code Fish} using an attribute from the given {@code FishList}.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"public class FishSortCommand extends FishCommand {","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    public static final String FISH_COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + FISH_COMMAND_WORD","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"            + \": Sorts the fish list by the given attribute.\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_SORT_BY + \"ATTRIBUTE \"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"            + \"[\" + PREFIX_TANK + \"TANK INDEX]...\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + FISH_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_SORT_BY + \"lfd \"","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_TANK + \"1\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"            + \"Sorting Options: n/lfd/s/fi/tk\";","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_VIEW_FISH_SUCCESS \u003d \"Showing sorted Fish\";","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    private final Comparator\u003cFish\u003e fishComparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    private final Index tankIndex;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"     * Constructs an {@code FishSortCommand} to view an existing {@code Tank}.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"     * @param fishComparator The index of the {@code Fish} to view.","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"     * @param tankIndex Optional tankIndex to sort by specified tank.","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    public FishSortCommand(Comparator\u003cFish\u003e fishComparator, Index tankIndex) {","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(fishComparator);","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        this.fishComparator \u003d fishComparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        model.sortFilteredFishList(fishComparator);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"        // If optional tank index was given, display sorting by tank","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"        if (tankIndex !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"            List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"            if (tankIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"            Tank tankToView \u003d lastShownList.get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            // display filtered fish only","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"            model.updateFilteredFishList(SHOW_FISHES_IN_TANK.apply(tankToView));","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        return new CommandResult(MESSAGE_VIEW_FISH_SUCCESS, false, false, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof FishSortCommand // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 fishComparator.equals(((FishSortCommand) other).fishComparator)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"ryanchua00":76}},{"path":"src/main/java/seedu/address/logic/commands/fish/FishViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":" * Views a {@code Fish} identified using it\u0027s displayed index from the {@code FishList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"public class FishViewCommand extends FishCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    public static final String FISH_COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + FISH_COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"            + \": Displays the Fish identified by the index number used in the displayed Fish List.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + FISH_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    public static final String MESSAGE_VIEW_FISH_SUCCESS \u003d \"Viewing Fish: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs an {@code FishViewCommand} to view an existing {@code Tank}.","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"     * @param targetIndex The index of the {@code Fish} to view.","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    public FishViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        Fish fishToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        model.updateFilteredFishList(fish -\u003e fish \u003d\u003d fishToView);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_FISH_SUCCESS, fishToView));","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"                || (other instanceof FishViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 targetIndex.equals(((FishViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bryanongjx":51,"Diamondroxxx":8}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" * Parses input arguments and creates a new TankAddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommand extends TankCommand {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"            + \": Adds a Tank to Fish Ahoy!. \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_DESCRIPTION + \"Saltwater Tank 1 \";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Tank added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DUPLICATE_TANK \u003d \"This Tank already exists in Fish Ahoy!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    private final Tank toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"     * Constructs a {@code TankAddCommand} with the {@code Tank} to be added to the {@code TankList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public TankAddCommand(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        toAdd \u003d tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        if (model.hasTank(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        toAdd.getReadingLevels().setTank(toAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        model.addTank(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        model.addIndividualReadingLevels(toAdd.getReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 toAdd.equals(((TankAddCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":1,"bokuanT":2,"ryanchua00":53}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Adds Tank to Fish Ahoy!","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public abstract class TankCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final String COMMAND_WORD \u003d \"tank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003ctank command word\u003e\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"            + \"Tank commands: add, \"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"            + \"delete, \"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            + \"view, \"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"            + \"addReadings, \"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"            + \"delLastReadings\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryanongjx":1,"bokuanT":3,"ryanchua00":25}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":" * Deletes a {@code Tank} identified using it\u0027s displayed index from the {@code TankList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"public class TankDeleteCommand extends TankCommand {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"            + \": Deletes the Tank identified by the index number used in the displayed Tank List.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DELETE_TANK_SUCCESS \u003d \"Deleted Tank: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DELETE_TANK_FAILURE \u003d \"You can\u0027t delete this tank as \"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"            + \"there are fishes and tasks still present!\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"            + \"Delete the fishes and tasks in this tank before deleting this tank.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"     * Constructs an {@code TankDeleteCommand} to delete an existing {@code Tank}.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"     * @param targetIndex The index of the {@code Tank} to delete.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    public TankDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        /* Throw exception if fishes are still present in tank */","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        if (tankToDelete.getFishList().size() \u003e 0) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(MESSAGE_DELETE_TANK_FAILURE);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"        /* Throw exception if tasks are still present in tank */","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"            if (task.isTankRelatedTask() \u0026\u0026 tankToDelete.isSameTank(task.getTank())) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"                throw new CommandException(MESSAGE_DELETE_TANK_FAILURE);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        model.deleteIndividualReadingLevels(tankToDelete.getReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        model.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TANK_SUCCESS, tankToDelete));","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 targetIndex.equals(((TankDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bokuanT":1,"ryanchua00":78}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TANKS;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":" * Edits the details of an existing fish in the address book.","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankEditCommand extends TankCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \": Edits the details of the tank identified \"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"by the index number used in the displayed tank list. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"Description]\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"            + PREFIX_DESCRIPTION + \"Glass Tank\";","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_EDIT_TANK_SUCCESS \u003d \"Edited Tank: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_DUPLICATE_TANK \u003d \"This tank already exists in the address book.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USE_INDEX \u003d \"Use a numerical index of a tank eg. tk/1\";","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final EditTankDescriptor editTankDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param index of the fish in the filtered fish list to edit","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param editTankDescriptor details to edit the fish with","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankEditCommand(Index index, EditTankDescriptor editTankDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(editTankDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.editTankDescriptor \u003d new EditTankDescriptor(editTankDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"        Tank tankToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"        editTankDescriptor.getName().ifPresent(newTankName -\u003e tankToEdit.setTankName(newTankName));","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        Tank editedTank \u003d createEditedTank(tankToEdit, editTankDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        TankList tankList \u003d (TankList) model.getTankList();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        tankList.setTank(tankToEdit, editedTank);","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"        model.updateFilteredTankList(PREDICATE_SHOW_ALL_TANKS);","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TANK_SUCCESS, tankToEdit));","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Creates and returns a {@code Fish} with the details of {@code fishToEdit}","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"TimothyLawSongEn"},"content":"     * edited with {@code editFishDescriptor}.","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static Tank createEditedTank(Tank tankToEdit, EditTankDescriptor editTankDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"TimothyLawSongEn"},"content":"        assert tankToEdit !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"TimothyLawSongEn"},"content":"        TankName updatedName \u003d editTankDescriptor.getName().orElse(tankToEdit.getTankName());","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"TimothyLawSongEn"},"content":"        AddressBook fishList \u003d tankToEdit.getFishList();","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"TimothyLawSongEn"},"content":"        UniqueIndividualReadingLevels readingLevels \u003d tankToEdit.getReadingLevels();","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new Tank(updatedName, fishList, readingLevels);","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"TimothyLawSongEn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"TimothyLawSongEn"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"TimothyLawSongEn"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"TimothyLawSongEn"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!(other instanceof seedu.address.logic.commands.fish.FishEditCommand)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"TimothyLawSongEn"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"TimothyLawSongEn"},"content":"        // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"TimothyLawSongEn"},"content":"        TankEditCommand e \u003d (TankEditCommand) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"TimothyLawSongEn"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 editTankDescriptor.equals(e.editTankDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Stores the details to edit the fish with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"TimothyLawSongEn"},"content":"     * corresponding field value of the fish.","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static class EditTankDescriptor {","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"TimothyLawSongEn"},"content":"        private TankName name;","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"TimothyLawSongEn"},"content":"        public EditTankDescriptor() {}","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"TimothyLawSongEn"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"TimothyLawSongEn"},"content":"        public EditTankDescriptor(EditTankDescriptor toCopy) {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"TimothyLawSongEn"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"TimothyLawSongEn"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"TimothyLawSongEn"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"TimothyLawSongEn"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"TimothyLawSongEn"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"TimothyLawSongEn"},"content":"            return CollectionUtil.isAnyNonNull(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setName(TankName name) {","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"TimothyLawSongEn"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"TimothyLawSongEn"},"content":"        public Optional\u003cTankName\u003e getName() {","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"TimothyLawSongEn"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"TimothyLawSongEn"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"TimothyLawSongEn"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"TimothyLawSongEn"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"TimothyLawSongEn"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"TimothyLawSongEn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"TimothyLawSongEn"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"TimothyLawSongEn"},"content":"            if (!(other instanceof EditTankDescriptor)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"TimothyLawSongEn"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"TimothyLawSongEn"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"TimothyLawSongEn"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"TimothyLawSongEn"},"content":"            EditTankDescriptor e \u003d (EditTankDescriptor) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"TimothyLawSongEn"},"content":"            return getName().equals(e.getName());","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"TimothyLawSongEn":159}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankFeedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.date.DateUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":" * Feeds a {@code Tank} identified using it\u0027s displayed index from the {@code TankList}.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankFeedCommand extends TankCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"feed\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \": Feeds all fishes in the Tank identified by the index number used in the displayed Tank List.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_FEED_TANK_SUCCESS \u003d \"Fed Tank: %1$s\";","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Constructs an {@code TankFeedCommand} to feed all fishes in an existing {@code Tank}.","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param targetIndex The index of the {@code Tank} to feed.","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankFeedCommand(Index targetIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        Tank tankToFeed \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"        //FEED ALL FISHES IN THIS TANK","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        String formattedNow \u003d DateUtil.getCurrentDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"        model.setLastFedDateTimeFishes(tankToFeed, formattedNow);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        deleteFeedingReminderForThisTank(model, tankToFeed);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new CommandResult(String.format(MESSAGE_FEED_TANK_SUCCESS, tankToFeed));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    private void deleteFeedingReminderForThisTank(Model model, Tank tankToFeed) {","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        for (Task t : lastShownList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            if (t.getIsReminder() \u0026\u0026 t.getTank().equals(tankToFeed)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"                model.deleteTask(t);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"                || (other instanceof TankFeedCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 targetIndex.equals(((TankFeedCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"TimothyLawSongEn":63,"bokuanT":13}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import static seedu.address.model.Model.SHOW_FISHES_IN_TANK;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.model.Model.SHOW_TANK_TASKS;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.commons.core.GuiSettings.GuiMode;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":" * Displays a {@code Tank} identified using it\u0027s displayed index from the {@code TankList}.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankViewCommand extends TankCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \": Displays the Tank identified by the index number used in the displayed Tank List.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    public static final String MESSAGE_VIEW_TANK_SUCCESS \u003d \"Viewing Tank: %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs an {@code TankViewCommand} to view an existing {@code Tank}.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"     * @param targetIndex The index of the {@code Tank} to view.","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankViewCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"        Tank tankToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"        model.updateFilteredFishList(SHOW_FISHES_IN_TANK.apply(tankToView));","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"        model.updateFilteredTaskList(SHOW_TANK_TASKS.apply(tankToView));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"        model.setGuiMode(GuiMode.DISPLAY_FISHES);","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_TANK_SUCCESS, tankToView), false, false, true);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"                || (other instanceof TankViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 targetIndex.equals(((TankViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":55,"ryanchua00":2,"Diamondroxxx":9}},{"path":"src/main/java/seedu/address/logic/commands/tank/readings/ReadingsAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.tank.readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMMONIA_LEVEL;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PH;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEMPERATURE;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new ReadingsAddCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"public class ReadingsAddCommand extends TankCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"addReadings\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"            + \": Adds a set of readings to a tank. \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"INDEX \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_AMMONIA_LEVEL + \"AMMONIA LEVEL \\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_PH + \"PH \\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TEMPERATURE + \"TEMPERATURE \\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_AMMONIA_LEVEL + \"1.2 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_PH + \"7 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TEMPERATURE + \"28 \";","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New set of readings added: %1$s, %2$s, %3$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_MISSING_TANK \u003d \"The tank index specified does not exist\";","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    private final AmmoniaLevel toAddAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    private final PH toAddPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    private final Temperature toAddTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    private final Index tankIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * Creates a ReadingsAddCommand to add the specified {@code readings}","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public ReadingsAddCommand(AmmoniaLevel ammoniaLevel, PH pH, Temperature temperature, Index tankIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(ammoniaLevel);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tankIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        toAddAmmonia \u003d ammoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        toAddPH \u003d pH;","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        toAddTemp \u003d temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        Tank tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        // check that tank is non-null","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels readingLevels \u003d tank.getReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        model.addReadingsToIndividualReadingLevels(toAddAmmonia, toAddPH, toAddTemp, tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAddAmmonia, toAddPH, toAddTemp));","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":75}},{"path":"src/main/java/seedu/address/logic/commands/tank/readings/ReadingsDeleteLastCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.tank.readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new ReadingsDeleteLastCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class ReadingsDeleteLastCommand extends TankCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"delLastReadings\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            + \": Deletes the last readings of each type of the tank specified by the given index.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted set of readings: %1$s, %2$s, %3$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_READING_FAILURE \u003d \"You can\u0027t delete readings from this tank as \"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            + \"there are no readings present!\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            + \"Add some readings before trying to delete readings.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public ReadingsDeleteLastCommand(Index targetIndex) {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Tank tankToDeleteFrom \u003d model.getFilteredTankList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels individualReadingLevels \u003d tankToDeleteFrom.getReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        /* Throw exception if fishes are still present in tank */","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        if (individualReadingLevels.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DELETE_READING_FAILURE);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        Reading[] removed \u003d model.deleteLastEntryFromIndividualReadings(individualReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, removed[0], removed[1], removed[2]));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":59}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.fish.FishAddCommand.MESSAGE_MISSING_TANK;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class TaskAddCommand extends TaskCommand {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TASK_COMMAND_WORD","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            + \": Adds a Task to Fish Ahoy!. \\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_TANK + \"\u003coptional\u003e TANK INDEX \"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_PRIORITY + \"\u003coptional\u003e PRIORITY \"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TASK_COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_DESCRIPTION + \"Clean fresh water tank \"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"            + PREFIX_PRIORITY + \"medium\";","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This Task already exists in Fish Ahoy!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    private final Index tankIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code TaskAddCommand} with the {@code Task} to be added to the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public TaskAddCommand(Task task, Index tankIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public Tank getTaskTank(Index ind, Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        if (ind \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        Tank tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_MISSING_TANK);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        return tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        Tank tank \u003d getTaskTank(tankIndex, model);","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        toAdd.setTank(tank);","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskAddCommand // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 toAdd.equals(((TaskAddCommand) other).toAdd));","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bryanongjx":4,"bokuanT":77,"ryanchua00":1}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Adds Task to Fish Ahoy!","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003ctask command word\u003e\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            + \"Task commands: add, \"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            + \"delete, \"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            + \"edit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":27}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Deletes a {@code Task} identified using it\u0027s displayed index from the {@code TaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class TaskDeleteCommand extends TaskCommand {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TASK_COMMAND_WORD","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            + \": Deletes the Task identified by the index number used in the displayed Task List.\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TASK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Constructs an {@code TaskDeleteCommand} to delete an existing {@code Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @param targetIndex The index of the {@code Task} to delete.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TaskDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 targetIndex.equals(((TaskDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":60}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.exceptions.TaskHasNoPriorityException;","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" * Edits the details of an existing task in the task list.","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"public class TaskEditCommand extends TaskCommand {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TASK_COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            + \": Edits the details of the task identified \"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_TANK + \"TANK] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            + \"[\" + PREFIX_PRIORITY + \"PRIORITY] \\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TASK_COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_TANK + \"1 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_PRIORITY + \"high \"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_DESCRIPTION + \"new task \";","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the task list.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_BAD_TANK_INDEX \u003d \"The given tank index is invalid.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CANNOT_EDIT_REMINDER \u003d \"You cannot edit feeding reminders!\"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"            + \" Leave it to Fish Ahoy!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    private final Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * Constructor for task edit command","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     * @param index index of task of interest","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * @param editTaskDescriptor the new task after being edited","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public TaskEditCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        this.editTaskDescriptor \u003d editTaskDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        List\u003cTask\u003e lastShownTasks \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownTasks.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        Task taskToEdit \u003d lastShownTasks.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        if (taskToEdit.getIsReminder()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_CANNOT_EDIT_REMINDER);","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"            editTaskDescriptor.updateTankInstance(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_BAD_TANK_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        if (!taskToEdit.equals(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     * Creates the edited task","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     * @param taskToEdit original task","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"     * @param editTaskDescriptor task descriptor of the new task","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     * @return new Task instance","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    public static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        Tank updatedTank \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        if (editTaskDescriptor.tank !\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"            updatedTank \u003d editTaskDescriptor.tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"            if (taskToEdit.isTankRelatedTask()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                updatedTank \u003d taskToEdit.getTank();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        Priority updatedPriority;","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            updatedPriority \u003d editTaskDescriptor.getPriority().orElse(taskToEdit.getPriority());","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        } catch (TaskHasNoPriorityException e) { //orElse is always executed so we need this catch block","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"            //if editTask has p","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"            if (editTaskDescriptor.getPriority().isPresent()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"                updatedPriority \u003d editTaskDescriptor.getPriority().get();","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"            } else { //since we are in this catch block, the original task has not priority. This else block is","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"                //if the edited task is taking the original priority","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"                updatedPriority \u003d null;","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        return new Task(updatedDescription, updatedTank, updatedPriority);","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"     * Stores the details to edit the task with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"     * corresponding field value of the task.","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"        private Description description;","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        private Index tankIndex \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        private Priority priority;","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"        private Tank tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"            setPriority(toCopy.priority);","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"            setTankIndex(toCopy.tankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"            return CollectionUtil.isAnyNonNull(description, tankIndex, priority);","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-30"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"        public void setPriority(Priority priority) {","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"            this.priority \u003d priority;","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cPriority\u003e getPriority() {","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(priority);","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"        public void setTankIndex(Index tankIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"            this.tankIndex \u003d tankIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cIndex\u003e getTankIndex() {","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(tankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"        public Optional\u003cTank\u003e getTank() {","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"            return Optional.ofNullable(tank);","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"        /**","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"         * Updates the tank of this editTaskDescriptor to the real instance","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"         * @param model model of Fish Ahoy!","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"        public void updateTankInstance(Model model) {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"            if (tankIndex \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"bokuanT"},"content":"                return;","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"            tank \u003d model.getFilteredTankList().get(tankIndex.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"                return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"                return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"                    \u0026\u0026 getTankIndex().equals(e.getTankIndex())","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"                    \u0026\u0026 getPriority().equals(e.getPriority());","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bokuanT":215}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskFeedingReminderCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates a Task Command for Feeding Reminders.","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * This is not a user command but executed automatically on opening Fish Ahoy","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class TaskFeedingReminderCommand extends TaskCommand {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Feeding Reminder Task added: %1$s\";","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This Task already exists in Fish Ahoy!\";","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private final TaskFeedingReminder toAdd;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code TaskFeedingReminderCommand} with the {@code Task} to be added to the {@code TaskList}.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public TaskFeedingReminderCommand(TaskFeedingReminder taskFeedingReminder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(taskFeedingReminder);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        this.toAdd \u003d taskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            //This is a more updated version of the reminder, so delete it","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"            //We call delete on toAdd as the equals method of Reminders are s.t","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            //they are equal","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            model.deleteTask(toAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"bokuanT":42}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.UnassignedTank;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                        PREFIX_FEEDING_INTERVAL, PREFIX_TANK,","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                PREFIX_FEEDING_INTERVAL, PREFIX_TANK)","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime lastFedDate \u003d ParserUtil.parseLastFedDate(argMultimap.getValue(PREFIX_LAST_FED_DATE).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"        Species species \u003d ParserUtil.parseSpecies(argMultimap.getValue(PREFIX_SPECIES).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        FeedingInterval feedingInterval \u003d ParserUtil.parseFeedingInterval(argMultimap.getValue(PREFIX_FEEDING_INTERVAL)","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                .get());","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        // checks for tank Index","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        Index tankIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TANK).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        Tank tempTank \u003d new UnassignedTank(null, null);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new Fish(name, lastFedDate, species, feedingInterval, tempTank, tagList);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        return new AddCommand(fish, tankIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"TimothyLawSongEn":2,"bryanongjx":3,"bokuanT":18,"ryanchua00":3,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.fish.FishCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.task.TaskCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.fish.FishParser;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.tank.TankParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.task.TaskParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"            return new TaskParser().parseCommand(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankParser().parseCommand(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"        case FishCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"            return new FishParser().parseCommand(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TimothyLawSongEn":7,"bryanongjx":5,"bokuanT":3,"-":75,"Diamondroxxx":1}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"    /* Fish prefix definitions */","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_LAST_FED_DATE \u003d new Prefix(\"lfd/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    public static final Prefix PREFIX_SPECIES \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_FEEDING_INTERVAL \u003d new Prefix(\"fi/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tg/\");","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public static final Prefix PREFIX_TANK \u003d new Prefix(\"tk/\");","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public static final Prefix PREFIX_SORT_BY \u003d new Prefix(\"by/\");","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /* Task prefixes */","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public static final Prefix PREFIX_PRIORITY \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /* Tank reading prefixes */","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_AMMONIA_LEVEL \u003d new Prefix(\"al/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_PH \u003d new Prefix(\"ph/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_TEMPERATURE \u003d new Prefix(\"tp/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":9,"ryanchua00":4,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                        PREFIX_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                        PREFIX_TANK, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor editFishDescriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_LAST_FED_DATE).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setLastFedDate(ParserUtil.parseLastFedDate(argMultimap.getValue(PREFIX_LAST_FED_DATE)","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                    .get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"        if (argMultimap.getValue(PREFIX_SPECIES).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"            editFishDescriptor.setSpecies(ParserUtil.parseSpecies(argMultimap.getValue(PREFIX_SPECIES).get()));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_FEEDING_INTERVAL).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setFeedingInterval(ParserUtil.parseFeedingInterval(argMultimap","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"                    .getValue(PREFIX_FEEDING_INTERVAL).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_TANK).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setTank(ParserUtil.parseTankForEditCommand(argMultimap.getValue(PREFIX_TANK).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editFishDescriptor::setTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        if (!editFishDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        return new EditCommand(index, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"TimothyLawSongEn":1,"bryanongjx":3,"bokuanT":19,"-":67}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bokuanT":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":" * Parses input arguments and creates a new ListCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    public ListCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"        if (Objects.equals(argMultimap.getPreamble(), \"fishes\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"            return ListCommand.LIST_FISHES;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"        } else if (Objects.equals(argMultimap.getPreamble(), \"tasks\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"            return ListCommand.LIST_TASKS;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ListCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ryanchua00":2,"Diamondroxxx":26}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.model.date.DateUtil.parseFeedingIntervalDays;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.model.date.DateUtil.parseFeedingIntervalHours;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String lastFedDate} into a {@code LastFedDate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException if the given {@code lastFedDate} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static LastFedDateTime parseLastFedDate(String lastFedDate) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(lastFedDate);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        String trimmedLastFedDate \u003d lastFedDate.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"        System.out.println(trimmedLastFedDate);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!LastFedDateTime.isValidLastFedDateTime(trimmedLastFedDate)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(LastFedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new LastFedDateTime(trimmedLastFedDate);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String feedingInterval} into an {@code FeedingInterval}.","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException if the given {@code feedingInterval} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    public static FeedingInterval parseFeedingInterval(String feedingInterval) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        String trimmedFeedingInterval \u003d feedingInterval.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        if (!FeedingInterval.isValidFeedingInterval(trimmedFeedingInterval)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(FeedingInterval.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"            parseFeedingIntervalDays(trimmedFeedingInterval);","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"            throw new ParseException(\"The days integer provided is not a valid integer.\");","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"            parseFeedingIntervalHours(trimmedFeedingInterval);","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"            throw new ParseException(\"The hours integer provided is not a valid integer.\");","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return new FeedingInterval(trimmedFeedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"bryanongjx"},"content":"     * Parses a {@code String species} into an {@code Species}.","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException if the given {@code species} is invalid.","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"bryanongjx"},"content":"    public static Species parseSpecies(String species) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(species);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"bryanongjx"},"content":"        String trimmedSpecies \u003d species.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"bryanongjx"},"content":"        if (!Species.isValidSpecies(trimmedSpecies)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(Species.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"bryanongjx"},"content":"        return new Species(trimmedSpecies);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String} into an {@code Description}.","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the given {@code description} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-02-27"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"bryanongjx"},"content":"     * Parses a {@code String} into an {@code Priority}.","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException If the given {@code description} is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"bryanongjx"},"content":"    public static Priority parsePriority(String priority) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"bryanongjx"},"content":"        if (!Priority.isValidPriority(priority)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(Priority.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"bryanongjx"},"content":"        return new Priority(priority);","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":174,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses a {@code String} into an {@code TankName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the given {@code fullTankName} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static TankName parseTankName(String fullTankName) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(fullTankName);","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"TimothyLawSongEn"},"content":"        String trimmedDescription \u003d fullTankName.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!Description.isValidDescription(fullTankName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(TankName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new TankName(trimmedDescription);","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"     * Parses a {@code String} into an {@code Tank}.","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"ryanchua00"},"content":"     * @throws ParseException If the given {@code tank} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static Tank parseTankForEditCommand(String tank) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"        String trimmedTank \u003d tank.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"        if (!TankName.isValidTankName(trimmedTank)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"TimothyLawSongEn"},"content":"            );","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"        Tank retTank \u003d new Tank(new TankName(trimmedTank), new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"        return retTank;","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses a {@code String} into an {@code Index}.","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static Index parseTank(String strTankIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(strTankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"TimothyLawSongEn"},"content":"        String trimmedStrTankIndex \u003d strTankIndex.trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"TimothyLawSongEn"},"content":"        int index \u003d Integer.valueOf(trimmedStrTankIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"TimothyLawSongEn"},"content":"        Index newTankIndex \u003d Index.fromOneBased(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"TimothyLawSongEn"},"content":"        return newTankIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        if (!TankName.isValidTankName(trimmedTank)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"TimothyLawSongEn"},"content":"        //            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        }","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        Tank retTank \u003d new Tank(new TankName(trimmedTank), new AddressBook(),","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"TimothyLawSongEn"},"content":"        //        return retTank;","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String} into an {@code AmmoniaLevel}.","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the given {@code ammoniaLevelValue} or {@code date} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"    public static AmmoniaLevel parseAmmoniaLevel(String ammoniaLevelValue, String date) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(ammoniaLevelValue);","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"        String trimmedValue \u003d ammoniaLevelValue.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"        if (!AmmoniaLevel.isValidAmmoniaLevel(trimmedValue, date)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(AmmoniaLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"        return new AmmoniaLevel(trimmedValue, date, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String} into an {@code PH}.","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the given {@code pHLevelValue} or {@code date} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"    public static PH parsePH(String pHLevelValue, String date) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(pHLevelValue);","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"        String trimmedValue \u003d pHLevelValue.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"        if (!PH.isValidPH(trimmedValue, date)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(PH.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"        return new PH(trimmedValue, date, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String} into an {@code Temperature}.","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the given {@code tempLevelValue} or {@code date} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"    public static Temperature parseTemperature(String tempLevelValue, String date) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tempLevelValue);","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"        String trimmedValue \u003d tempLevelValue.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"bokuanT"},"content":"        if (!Temperature.isValidTemperature(trimmedValue, date)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(Temperature.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"        return new Temperature(trimmedValue, date, null);","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TimothyLawSongEn":43,"bryanongjx":23,"bokuanT":81,"ryanchua00":27,"-":96}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.fish.FishAddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.UnassignedTank;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"public class FishAddCommandParser {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"    public FishAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                        PREFIX_FEEDING_INTERVAL, PREFIX_TANK,","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                PREFIX_FEEDING_INTERVAL, PREFIX_TANK)","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime lastFedDate \u003d ParserUtil.parseLastFedDate(argMultimap.getValue(PREFIX_LAST_FED_DATE).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        Species species \u003d ParserUtil.parseSpecies(argMultimap.getValue(PREFIX_SPECIES).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        FeedingInterval feedingInterval \u003d ParserUtil.parseFeedingInterval(argMultimap.getValue(PREFIX_FEEDING_INTERVAL)","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                .get());","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        // checks for tank Index","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        Index tankIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TANK).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        Tank tempTank \u003d new UnassignedTank(null, null);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new Fish(name, lastFedDate, species, feedingInterval, tempTank, tagList);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"        return new FishAddCommand(fish, tankIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bryanongjx"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"bryanongjx"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":3,"bryanongjx":57,"bokuanT":15}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.fish.FishDeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"public class FishDeleteCommandParser {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public FishDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"            return new FishDeleteCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bryanongjx":30}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishEditCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishEditCommand.EditFishDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"public class FishEditCommandParser implements Parser\u003cFishEditCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"    public FishEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_LAST_FED_DATE, PREFIX_SPECIES,","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"                        PREFIX_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"                        PREFIX_TANK, PREFIX_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"        EditFishDescriptor editFishDescriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_LAST_FED_DATE).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setLastFedDate(ParserUtil.parseLastFedDate(argMultimap.getValue(PREFIX_LAST_FED_DATE)","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"                    .get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_SPECIES).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setSpecies(ParserUtil.parseSpecies(argMultimap.getValue(PREFIX_SPECIES).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_FEEDING_INTERVAL).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setFeedingInterval(ParserUtil.parseFeedingInterval(argMultimap","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"                    .getValue(PREFIX_FEEDING_INTERVAL).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_TANK).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"            editFishDescriptor.setTankIndex(ParserUtil.parseTank(argMultimap.getValue(PREFIX_TANK).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editFishDescriptor::setTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!editFishDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(FishEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new FishEditCommand(index, editFishDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"TimothyLawSongEn"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"TimothyLawSongEn"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"TimothyLawSongEn"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"TimothyLawSongEn"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"TimothyLawSongEn"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"TimothyLawSongEn"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"TimothyLawSongEn"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"TimothyLawSongEn":94}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishAddCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishDeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishSortCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishViewCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":" * Parses user input for {@code Fish} commands.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"public class FishParser {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"     * Used for separation of fish command word and args.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cfishCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"     * Parses user input into {@code Fish} command for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * @param userInput User input string excluding the \"Fish\" command word.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     * @return The {@code Fish} command based on the user input.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FishCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"        final String fishCommandWord \u003d matcher.group(\"fishCommandWord\");","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        switch (fishCommandWord) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        case FishAddCommand.FISH_COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"            return new FishAddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"        case FishDeleteCommand.FISH_COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"            return new FishDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"        case FishViewCommand.FISH_COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"            return new FishViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        case FishSortCommand.FISH_COMMAND_WORD:","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommandParser().parse(arguments);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        case FishEditCommand.FISH_COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new FishEditCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"        default:","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"                        FishCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":8,"bryanongjx":48,"ryanchua00":2}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishSortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.fish.FishSortCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"public class FishSortCommandParser implements Parser\u003cFishSortCommand\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    /* Compares names and sorts them lexicographically from small to large */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cFish\u003e NAME_COMPARATOR \u003d Comparator.comparing(f","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            -\u003e f.getName().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    /* Compares last fed date and sorts them lexicographically from small to large */","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cFish\u003e LAST_FED_COMPARATOR \u003d Comparator.comparing(f","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"            -\u003e f.getLastFedDateTime().getLocalDateTime());","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    /* Compares species and sorts them lexicographically from small to large */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cFish\u003e SPECIES_COMPARATOR \u003d Comparator.comparing(f","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"            -\u003e f.getSpecies().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    /* Compares feeding intervals and sorts them lexicographically from small to large */","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cFish\u003e FEEDING_COMPARATOR \u003d (f1, f2) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        int d1 \u003d Integer.parseInt(f1.getFeedingInterval().days);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        int h1 \u003d Integer.parseInt(f1.getFeedingInterval().hours);","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        int d2 \u003d Integer.parseInt(f2.getFeedingInterval().days);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        int h2 \u003d Integer.parseInt(f2.getFeedingInterval().hours);","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        if (d1 \u003d\u003d d2) {","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"            if (h1 \u003d\u003d h2) {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"                return 0;","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"            return h1 \u003e h2 ? 1 : -1;","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        } else {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"            return d1 \u003e d2 ? 1 : -1;","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"    };","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"    /* Compares tank names and sorts them lexicographically from small to large */","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cFish\u003e TANK_COMPARATOR \u003d Comparator.comparing(f","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"            -\u003e f.getTank().getTankName().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"     * Parses the given {@code String} of arguments in the context of the FishSortCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"     * and returns an FishSortCommand object for execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"    public FishSortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SORT_BY, PREFIX_TANK);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_SORT_BY)","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        // Checks for a value, skips if no tankIndex was given","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        String index \u003d argMultimap.getValue(PREFIX_TANK).orElse(null);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        Index tankIndex \u003d null;","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        if (index !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"            tankIndex \u003d ParserUtil.parseIndex(index);","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        String sortBy \u003d argMultimap.getValue(PREFIX_SORT_BY).get();","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"        switch (sortBy) {","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"        case \"n\":","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommand(NAME_COMPARATOR, tankIndex);","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        case \"lfd\":","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommand(LAST_FED_COMPARATOR, tankIndex);","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        case \"s\":","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommand(SPECIES_COMPARATOR, tankIndex);","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        case \"fi\":","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommand(FEEDING_COMPARATOR, tankIndex);","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"        case \"tk\":","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"            return new FishSortCommand(TANK_COMPARATOR, tankIndex);","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        default:","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"                    FishSortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"TimothyLawSongEn":1,"ryanchua00":98}},{"path":"src/main/java/seedu/address/logic/parser/fish/FishViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.logic.parser.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.commands.fish.FishViewCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"public class FishViewCommandParser implements Parser\u003cFishViewCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    public FishViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"            return new FishViewCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FishViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bryanongjx":30}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankAddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankAddCommandParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskAddCommand}","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskAddCommand} object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"                    TankAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        TankName tankName \u003d ParserUtil.parseTankName(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        Tank tank \u003d new Tank(tankName, new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new TankAddCommand(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":51,"bokuanT":2,"ryanchua00":1}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankDeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankDeleteCommandParser implements Parser\u003cTankDeleteCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankDeleteCommand(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":31}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.fish.FishEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankEditCommandParser {","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskAddCommand}","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskAddCommand} object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TankEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"        TankEditCommand.EditTankDescriptor editTankDescriptor \u003d new TankEditCommand.EditTankDescriptor();","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"            editTankDescriptor.setName(ParserUtil.parseTankName(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!editTankDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(FishEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new TankEditCommand(index, editTankDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"TimothyLawSongEn":61}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankFeedCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankFeedCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new {@code TankFeedCommand} object.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankFeedCommandParser implements Parser\u003cTankFeedCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TankFeedCommand}","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TankFeedCommand} object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankFeedCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankFeedCommand(index);","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankFeedCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"TimothyLawSongEn":32}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankAddCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankDeleteCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankFeedCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankViewCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.readings.ReadingsAddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.readings.ReadingsDeleteLastCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.tank.readings.ReadingAddCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.tank.readings.ReadingDeleteLastCommandParser;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":" * Parses user input for {@code Tank} commands.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     * Used for separation of fish command word and args.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ctankCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses user input into {@code Task} command for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param userInput User input string excluding the \"Task\" command word.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @return The {@code Task} command based on the user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"        final String tankCommandWord \u003d matcher.group(\"tankCommandWord\");","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"        switch (tankCommandWord) {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankAddCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankAddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankDeleteCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankViewCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankFeedCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankFeedCommandParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankEditCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankEditCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        case ReadingsAddCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            return new ReadingAddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        case ReadingsDeleteLastCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            return new ReadingDeleteLastCommandParser().parse(arguments);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"                    TankCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":57,"bryanongjx":2,"bokuanT":8}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankViewCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankViewCommandParser implements Parser\u003cTankViewCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankViewCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"TimothyLawSongEn":31}},{"path":"src/main/java/seedu/address/logic/parser/tank/readings/ReadingAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.tank.readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AMMONIA_LEVEL;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEMPERATURE;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.readings.ReadingsAddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.date.DateUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new ReadingAddCommand object","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"public class ReadingAddCommandParser implements Parser\u003cReadingsAddCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the ReadingsAddCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * and returns an ReadingsAddCommand object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public ReadingsAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TANK, PREFIX_AMMONIA_LEVEL, PREFIX_PH,","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                PREFIX_TEMPERATURE);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TANK, PREFIX_AMMONIA_LEVEL, PREFIX_PH, PREFIX_TEMPERATURE)","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReadingsAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        Index tankIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TANK).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"        String currentDateTime \u003d DateUtil.getCurrentDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        String ammoniaValue \u003d argMultimap.getValue(PREFIX_AMMONIA_LEVEL).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        String pHValue \u003d argMultimap.getValue(PREFIX_PH).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        String tempValue \u003d argMultimap.getValue(PREFIX_TEMPERATURE).get();","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"        AmmoniaLevel ammoniaLevel \u003d ParserUtil.parseAmmoniaLevel(ammoniaValue, currentDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        PH pH \u003d ParserUtil.parsePH(pHValue, currentDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"        Temperature temp \u003d ParserUtil.parseTemperature(tempValue, currentDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        return new ReadingsAddCommand(ammoniaLevel, pH, temp, tankIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bryanongjx":4,"bokuanT":57}},{"path":"src/main/java/seedu/address/logic/parser/tank/readings/ReadingDeleteLastCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.tank.readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.tank.readings.ReadingsDeleteLastCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new {@code ReadingDeleteLastCommand} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class ReadingDeleteLastCommandParser implements Parser\u003cReadingsDeleteLastCommand\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ReadingsDeleteLastCommand}","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * and returns a {@code ReadingsDeleteLastCommand} object for execution.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public ReadingsDeleteLastCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            return new ReadingsDeleteLastCommand(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"                            ReadingsDeleteLastCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":30}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskAddCommand;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.UnassignedTank;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"public class TaskAddCommandParser {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskAddCommand}","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * and returns a {@code TaskAddCommand} object for execution.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public TaskAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_TANK, PREFIX_PRIORITY);","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                    TaskAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        //tanks are optional. If no tank, index \u003d -1 fromZeroBased","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        Index index \u003d getTankIndex(argMultimap);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"        Priority priority \u003d getPriority(argMultimap);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        //if user did not input a tank index, Task will have null for tank","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"        //if user did not input a priority, Task will have null for priority","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        UnassignedTank tank \u003d index \u003d\u003d null ? null : new UnassignedTank(null, null);","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"        Task task \u003d new Task(description, tank, priority);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return new TaskAddCommand(task, index);","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    private Index getTankIndex(ArgumentMultimap argMap) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        boolean hasTank \u003d arePrefixesPresent(argMap, PREFIX_TANK);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        if (!hasTank) {","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        Index tankIndex \u003d ParserUtil.parseIndex(argMap.getValue(PREFIX_TANK).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        return tankIndex;","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"    private Priority getPriority(ArgumentMultimap argMap) throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"        boolean hasPriority \u003d arePrefixesPresent(argMap, PREFIX_PRIORITY);","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"        if (!hasPriority) {","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"            return null;","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"        Priority priority \u003d ParserUtil.parsePriority(argMap.getValue(PREFIX_PRIORITY).get());","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"        return priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bryanongjx":15,"bokuanT":63,"ryanchua00":2}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskDeleteCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class TaskDeleteCommandParser implements Parser\u003cTaskDeleteCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public TaskDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            return new TaskDeleteCommand(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":30}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskEditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PRIORITY;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskEditCommand.EditTaskDescriptor;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new TaskEditCommandParser object","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class TaskEditCommandParser {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the TaskEditCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * and returns an TaskEditCommand object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public TaskEditCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_PRIORITY, PREFIX_TANK);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        Index index;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TaskEditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            editTaskDescriptor.setDescription(ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"                    .get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_TANK).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            editTaskDescriptor.setTankIndex(ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TANK)","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                    .get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        if (argMultimap.getValue(PREFIX_PRIORITY).isPresent()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            editTaskDescriptor.setPriority(ParserUtil.parsePriority(argMultimap.getValue(PREFIX_PRIORITY)","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                    .get()));","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(TaskEditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        return new TaskEditCommand(index, editTaskDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"bokuanT":59}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskAddCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskDeleteCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskEditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Parses user input for {@code Task} commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class TaskParser {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * Used for separation of task command word and args.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ctaskCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * Parses user input into {@code Task} command for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @param userInput User input string excluding the \"Task\" command word.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @return The {@code Task} command based on the user input.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        final String taskCommandWord \u003d matcher.group(\"taskCommandWord\");","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        switch (taskCommandWord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        case TaskAddCommand.TASK_COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            return new TaskAddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        case TaskDeleteCommand.TASK_COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            return new TaskDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        case TaskEditCommand.TASK_COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            return new TaskEditCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        default:","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":52}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.UniqueFishList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameFish comparison)","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private final UniqueFishList fishes;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        fishes \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Creates an AddressBook using the fishes in the {@code toBeCopied}","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the fish list with {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not contain duplicate fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        this.fishes.setFishes(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        setFishes(newData.getFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    //// fish-level operations","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a fish with the same identity as {@code fish} exists in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        return fishes.contains(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * Adds a fish to the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * The fish must not already exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public void addFish(Fish p) {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        fishes.add(p);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given fish {@code target} in the list with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        fishes.setFish(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    public void removeFish(Fish key) {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        fishes.remove(key);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Sets the lastFedDate field of all fishes in this {@code fishes} list","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"TimothyLawSongEn"},"content":"     * with new LastFedDate object with {@code newDate}.","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setLastFedDateTimeFishes(String newDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"TimothyLawSongEn"},"content":"        fishes.setLastFedDateTimeFishes(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        return fishes.asUnmodifiableObservableList().size() + \" fishes\";","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        return fishes.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fishes.equals(((AddressBook) other).fishes));","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        return fishes.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"Diamondroxxx"},"content":"    public int size() {","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"Diamondroxxx"},"content":"        return fishes.size();","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TimothyLawSongEn":8,"bokuanT":32,"-":91,"Diamondroxxx":3}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    Predicate\u003cFish\u003e PREDICATE_SHOW_ALL_FISHES \u003d unused -\u003e true;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    Predicate\u003cTank\u003e PREDICATE_SHOW_ALL_TANKS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    Function\u003cTank, Predicate\u003cFish\u003e\u003e SHOW_FISHES_IN_TANK \u003d tank -\u003e (fish -\u003e fish.isInTank(tank));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    Function\u003cTank, Predicate\u003cTask\u003e\u003e SHOW_TANK_TASKS \u003d tank","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"            -\u003e (task -\u003e task.isTankRelatedTask() \u0026\u0026 task.getTank().isSameTank(tank));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"     * Change the user prefs\u0027 GUI Mode while keeping everything else the same","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    void setGuiMode(GuiSettings.GuiMode newMode);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a fish with the same identity as {@code fish} exists in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    boolean hasFish(Fish fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     * The fish must exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    void deleteFish(Fish target);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * Adds the given fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not already exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    void addFish(Fish fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given fish {@code target} with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    void setFish(Fish target, Fish editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered fish list */","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"    /** Returns an unmodifiable view of the sorted fish list */","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"    ObservableList\u003cFish\u003e getSortedFishList();","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     * Updates the filter of the filtered fish list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredFishList(Predicate\u003cFish\u003e predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"     * Sorts the filtered fish list by the given {@code comparator}.","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"    void sortFilteredFishList(Comparator\u003cFish\u003e comparator);","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a Task with the same identity as {@code Task} exists in Fish Ahoy!.","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"     * Adds the given Task.","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"     * {@code Task} must not already exist in Fish Ahoy!.","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given Task.","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"     * The Task must exist in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"    void setTankList(ReadOnlyTankList tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"    ReadOnlyTankList getTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"    void setTankListFilePath(Path tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a Tank with the same identity as {@code Tank} exists in Fish Ahoy!.","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"    boolean hasTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"     * Adds the given Tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"     * {@code Tank} must not already exist in Fish Ahoy!.","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"    void addTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given Tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"     * The Tank must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"    void deleteTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"    void setTank(Tank target, Tank editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered tank list */","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTank\u003e getFilteredTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredTankList(Predicate\u003cTank\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"TimothyLawSongEn"},"content":"    void setLastFedDateTimeFishes(Tank tankToFeed, String formattedDate);","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"     * Executes the auto feeding reminder feature for Model","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTaskFeedingReminder\u003e executeFeedingReminderInitModel();","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FullReadingLevels  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"    void addReadingsToIndividualReadingLevels(AmmoniaLevel a, PH ph, Temperature temp, Tank t);","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"    void setFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"    ReadOnlyReadingLevels getFullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"    boolean hasIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"    void deleteIndividualReadingLevels(UniqueIndividualReadingLevels target);","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"    Reading[] deleteLastEntryFromIndividualReadings(UniqueIndividualReadingLevels target);","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"    void addIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"    void setIndividualReadingLevels(UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"                                    UniqueIndividualReadingLevels editedList);","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cUniqueIndividualReadingLevels\u003e getFilteredReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredReadingLevels(Predicate\u003cUniqueIndividualReadingLevels\u003e predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"TimothyLawSongEn":4,"bokuanT":113,"ryanchua00":16,"-":70,"Diamondroxxx":8}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.FullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    /* Compares tasks and sorts them in order of high \u003e medium \u003e low */","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    public static final Comparator\u003cTask\u003e PRIORITY_COMPARATOR \u003d (t1, t2) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        return t1.hasPriority()","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"                ? t2.hasPriority()","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"                    ? t1.getPriority().compare(t2.getPriority())","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"                    : -1 /* if t2 has no priority, order behind t1*/","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"                : 1; /* if t1 has no priority, order behind t2 regardless*/","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    };","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cFish\u003e filteredFish;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    private final SortedList\u003cFish\u003e sortedFish;","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    private final TankList tankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cTank\u003e filteredTanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    private final FullReadingLevels fullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cUniqueIndividualReadingLevels\u003e filteredReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"                        ReadOnlyTaskList taskList, ReadOnlyTankList tankList, ReadOnlyReadingLevels fullReadings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(addressBook, userPrefs, taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        sortedFish \u003d new SortedList\u003c\u003e(this.addressBook.getFishList());","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        filteredFish \u003d new FilteredList\u003c\u003e(sortedFish);","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        SortedList\u003cTask\u003e sortedTasks \u003d new SortedList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        sortedTasks.setComparator(PRIORITY_COMPARATOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(sortedTasks);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        this.tankList \u003d new TankList(tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        filteredTanks \u003d new FilteredList\u003c\u003e(this.tankList.getTankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingLevels \u003d new FullReadingLevels(fullReadings);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        filteredReadingLevels \u003d new FilteredList\u003c\u003e(this.fullReadingLevels.getFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        updateTanksOfEachFishAndFishListOfEachTank();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        updateTankOfEachTask();","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        updateTankOfEachIndividualReadings();","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     * Another constructor for model manager","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskList(), new TankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"                new FullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"     * Sets the Tank attribute of each tank\u0027s UniqueIndividualReadings to the correct real instance","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    public void updateTankOfEachIndividualReadings() {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        for (UniqueIndividualReadingLevels r : fullReadingLevels.getFullReadingLevels()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"            Tank duplicateTank \u003d r.getTank();","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"            Tank realTankInstance \u003d getTankListTankInstance(duplicateTank);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"            realTankInstance.setIndividualReadingLeves(r);","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"            r.setTank(realTankInstance);","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"     * Points the {@code Tank} object in each Task to the right instance.","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    public void updateTankOfEachTask() {","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            if (t.isTankRelatedTask()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"                Tank realInstance \u003d getTankListTankInstance(t.getTank());","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                t.setTank(realInstance);","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"     * Points the {@code Tank} attribute of a Fish to the correct instance of {@code Tank}","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"     * and sets each {@code Fish} in the fishlist/addressbook of a tank to the correct instance","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    public void updateTanksOfEachFishAndFishListOfEachTank() {","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        for (Fish f : addressBook.getFishList()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"            Tank t \u003d f.getTank();","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"            Tank realInstance \u003d getTankListTankInstance(t);","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(realInstance);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"            realInstance.getFishList().addFish(f);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"            f.setTank(realInstance);","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    public Tank getTankListTankInstance(Tank duplicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        for (Tank t : tankList.getTankList()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"            if (t.equals(duplicate)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                return t;","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        return null;","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"Diamondroxxx"},"content":"    public void setGuiMode(GuiSettings.GuiMode newMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"Diamondroxxx"},"content":"        requireNonNull(newMode);","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"Diamondroxxx"},"content":"        GuiSettings currentSettings \u003d userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"Diamondroxxx"},"content":"        userPrefs.setGuiSettings(currentSettings.changeGuiMode(newMode));","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"        return userPrefs.getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"    public void setTankListFilePath(Path tankListFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"        userPrefs.setTaskListFilePath(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"    public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"        return addressBook.hasFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":220,"author":{"gitId":"bokuanT"},"content":"    public void deleteFish(Fish target) {","lastModifiedDate":"2023-02-26"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"        addressBook.removeFish(target);","lastModifiedDate":"2023-02-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":225,"author":{"gitId":"bokuanT"},"content":"    public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"        addressBook.setFish(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Fish List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the list of {@code Fish} backed by the internal list of","lastModifiedDate":"2023-02-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"        return filteredFish;","lastModifiedDate":"2023-02-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"ryanchua00"},"content":"    public ObservableList\u003cFish\u003e getSortedFishList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":249,"author":{"gitId":"ryanchua00"},"content":"        return sortedFish;","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":251,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-02-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"        filteredFish.setPredicate(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":258,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"ryanchua00"},"content":"    public void sortFilteredFishList(Comparator\u003cFish\u003e comparator) {","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(comparator);","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"ryanchua00"},"content":"        sortedFish.setComparator(comparator);","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":279,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredFish.equals(other.filteredFish)","lastModifiedDate":"2023-02-28"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 taskList.equals(other.taskList)","lastModifiedDate":"2023-02-28"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredTanks.equals(other.filteredTanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":285,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":286,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":287,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":288,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":289,"author":{"gitId":"ryanchua00"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":290,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":291,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":293,"author":{"gitId":"bokuanT"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":294,"author":{"gitId":"bokuanT"},"content":"        return taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":295,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":296,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":297,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":298,"author":{"gitId":"ryanchua00"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":299,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":300,"author":{"gitId":"ryanchua00"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":302,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":303,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":304,"author":{"gitId":"bokuanT"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":305,"author":{"gitId":"bokuanT"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":306,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":308,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":309,"author":{"gitId":"ryanchua00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":310,"author":{"gitId":"ryanchua00"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":312,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":313,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-28"},{"lineNumber":315,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":317,"author":{"gitId":"bokuanT"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":318,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":319,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":320,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TaskList Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":321,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":322,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":323,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the {@code TaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":324,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":325,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":326,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":327,"author":{"gitId":"bokuanT"},"content":"        return filteredTasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":329,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":330,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":331,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":332,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":333,"author":{"gitId":"bokuanT"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList tank \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"    public void setTankList(ReadOnlyTankList tankList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"bokuanT"},"content":"        this.tankList.resetData(tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"    public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"bokuanT"},"content":"        return tankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":345,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":346,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":348,"author":{"gitId":"bokuanT"},"content":"    public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":349,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":350,"author":{"gitId":"bokuanT"},"content":"        return tankList.hasTank(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":353,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":354,"author":{"gitId":"bokuanT"},"content":"    public void deleteTank(Tank target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":355,"author":{"gitId":"bokuanT"},"content":"        tankList.removeTank(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":356,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":357,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":358,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":359,"author":{"gitId":"bokuanT"},"content":"    public void addTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":360,"author":{"gitId":"bokuanT"},"content":"        tankList.addTank(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":361,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":362,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":363,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":364,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":365,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":366,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":367,"author":{"gitId":"bokuanT"},"content":"        tankList.setTank(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":368,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":370,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":371,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Sets the lastFedDate field of all fishes in this {@code tankToFeed}","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"TimothyLawSongEn"},"content":"     * with new LastFedDate object with {@code newDate}.","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":374,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":375,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setLastFedDateTimeFishes(Tank tankToFeed, String newDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":376,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireAllNonNull(tankToFeed, newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":377,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"TimothyLawSongEn"},"content":"        tankToFeed.setLastFedDateTimeFishes(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":379,"author":{"gitId":"TimothyLawSongEn"},"content":"        updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-03-24"},{"lineNumber":380,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":381,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":382,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TankList Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":383,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":384,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":385,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":386,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":387,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":388,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":389,"author":{"gitId":"bokuanT"},"content":"        return filteredTanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":390,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":391,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":393,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":394,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":395,"author":{"gitId":"bokuanT"},"content":"        filteredTanks.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":396,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":397,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Feeding reminders \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":399,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":400,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTaskFeedingReminder\u003e executeFeedingReminderInitModel() {","lastModifiedDate":"2023-03-23"},{"lineNumber":401,"author":{"gitId":"bokuanT"},"content":"        //create new Feeding reminders and returns it","lastModifiedDate":"2023-03-23"},{"lineNumber":402,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTank\u003e tanksWithUnfedFish \u003d tankList.getTanksWithUnfedFish();","lastModifiedDate":"2023-03-23"},{"lineNumber":403,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTaskFeedingReminder\u003e reminders \u003d TaskFeedingReminder","lastModifiedDate":"2023-03-23"},{"lineNumber":404,"author":{"gitId":"bokuanT"},"content":"                .createListOfFeedingReminders(tanksWithUnfedFish);","lastModifiedDate":"2023-03-23"},{"lineNumber":405,"author":{"gitId":"bokuanT"},"content":"        return reminders;","lastModifiedDate":"2023-03-23"},{"lineNumber":406,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":407,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":408,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FullReadingLevels  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":409,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":410,"author":{"gitId":"bokuanT"},"content":"    public void addReadingsToIndividualReadingLevels(AmmoniaLevel a, PH pH, Temperature temp, Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":411,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingLevels.addReadingsToIndividualReadingLevels(a, pH, temp, t);","lastModifiedDate":"2023-03-29"},{"lineNumber":412,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":413,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":414,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":415,"author":{"gitId":"bokuanT"},"content":"    public void setFullReadingLevels(ReadOnlyReadingLevels readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":416,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingLevels.resetData(readingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":417,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":418,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":419,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":420,"author":{"gitId":"bokuanT"},"content":"    public ReadOnlyReadingLevels getFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":421,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":422,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":423,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":424,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":425,"author":{"gitId":"bokuanT"},"content":"    public boolean hasIndividualReadingLevels(UniqueIndividualReadingLevels readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":426,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(readingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":427,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.hasIndividualReadingLevels(readingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":428,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":429,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":431,"author":{"gitId":"bokuanT"},"content":"    public void deleteIndividualReadingLevels(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":432,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.removeIndividualReadingLevel(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":433,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":434,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":435,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":436,"author":{"gitId":"bokuanT"},"content":"    public Reading[] deleteLastEntryFromIndividualReadings(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":437,"author":{"gitId":"bokuanT"},"content":"        return target.removeLastReadings();","lastModifiedDate":"2023-03-29"},{"lineNumber":438,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":439,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":440,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":441,"author":{"gitId":"bokuanT"},"content":"    public void addIndividualReadingLevels(UniqueIndividualReadingLevels readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":442,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.addIndividualReadingLevel(readingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":443,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":444,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":445,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":446,"author":{"gitId":"bokuanT"},"content":"    public void setIndividualReadingLevels(UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":447,"author":{"gitId":"bokuanT"},"content":"                                           UniqueIndividualReadingLevels editedList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":448,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedList);","lastModifiedDate":"2023-03-29"},{"lineNumber":449,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.setIndividualReadingLevel(target, editedList);","lastModifiedDate":"2023-03-29"},{"lineNumber":450,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":451,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":452,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered FullReadingLevels Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":453,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":454,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":455,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the {@code FullReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":456,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":457,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":458,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cUniqueIndividualReadingLevels\u003e getFilteredReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":459,"author":{"gitId":"bokuanT"},"content":"        return filteredReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":460,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":461,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":462,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":463,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredReadingLevels(Predicate\u003cUniqueIndividualReadingLevels\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":464,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":465,"author":{"gitId":"bokuanT"},"content":"        filteredReadingLevels.setPredicate(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":466,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":468,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TimothyLawSongEn":12,"bokuanT":281,"ryanchua00":35,"-":133,"Diamondroxxx":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the Fishes list.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     * This list will not contain any duplicate Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":4,"-":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyTankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Unmodifiable view of a Tank List","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public interface ReadOnlyTankList {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"            * Returns an unmodifiable view of the tanks list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"            * This list will not contain any duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"            */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTank\u003e getTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" * Unmodifiable view of a Task List","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":3}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bokuanT":4,"-":16}},{"path":"src/main/java/seedu/address/model/TankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.UniqueTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Wraps all data at the product level","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameTank comparison)","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TankList implements ReadOnlyTankList {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private final UniqueTankList tanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        tanks \u003d new UniqueTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public TankList() {}","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Creates a Tank List using the tanks in the {@code toBeCopied}","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TankList(ReadOnlyTankList toBeCopied) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this();","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the tank list with {@code tank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * {@code tank} must not contain duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        this.tanks.setTanks(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * Resets the existing data of this {@code TankList} with {@code newData}.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    public void resetData(ReadOnlyTankList newData) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        setTanks(newData.getTankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    //// tank-level operations","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a tank with the same identity as {@code tank} exists in the tank list.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        return tanks.contains(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * Adds a tank to the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * The tank must not already exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public void addTank(Tank p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        tanks.add(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given tank {@code target} in the list with {@code editedTank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * The tank identity of {@code editedTank} must not be the same as another existing tank in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        tanks.setTank(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * Removes {@code key} from this {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     * {@code key} must exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    public void removeTank(Tank key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        tanks.remove(key);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    public ArrayList\u003cTank\u003e getTanksWithUnfedFish() {","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTank\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        for (Tank t : tanks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"            if (t.hasUnfedFish()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"                ret.add(t);","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    //// util methods","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        return tanks.asUnmodifiableObservableList().size() + \" tanks\";","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        return tanks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TankList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 tanks.equals(((TankList) other).tanks));","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        return tanks.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":130}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" * Wraps all data at the product level","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     *   among constructors.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public TaskList() {}","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code TaskList} using the {@code Task}s in the {@code toBeCopied}.","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the {@code TaskList} with {@code Tasks}.","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * {@code Tasks} must not contain duplicate {@code Task}s.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    //// Task-level operations","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a {@code Task} identical to {@code Task} exists in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     * Adds a {@code Task} to the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * The {@code Task} must not already exist in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given {@code Task} in the {@code TaskList} with {@code editedTask}.","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the {@code TaskList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the {@code TaskList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * Removes a {@code Task} from this {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * The {@code Task} must exist in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    //// util methods","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":103,"ryanchua00":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasklist.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private Path tankListFilePath \u003d Paths.get(\"data\", \"tanklist.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private Path fullReadingsLevelsPath \u003d Paths.get(\"data\", \"readings.json\");","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        setTankListFilePath(newUserPrefs.getTankListFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return taskListFilePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        return tankListFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public void setTankListFilePath(Path tankListFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        this.tankListFilePath \u003d tankListFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public Path getFullReadingsLevelsPath() {","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        return fullReadingsLevelsPath;","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    public void setFullReadingsLevelsPath(Path fullReadingsLevelsPath) {","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fullReadingsLevelsPath);","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingsLevelsPath \u003d fullReadingsLevelsPath;","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":30,"ryanchua00":3,"-":86}},{"path":"src/main/java/seedu/address/model/date/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.date;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Encapsulates useful date time operations in Fish Ahoy!.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class DateUtil {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     * Format of dates in Fish Ahoy!.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Format of dates in Task descriptions.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALID_NAME_FORMAT_DATE \u003d \"dd-LLL-yyyy\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALID_NAME_FORMAT_DATETIME \u003d \"dd-LLL-yyyy HH:mm\";","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Parses a string date  format in {@code DATE_FORMAT}","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * @param date Date in {@code String} form","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * @return {@code LocalDate} instance from given String","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public static LocalDate parseStringToDate(String date) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        return localDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Parses a feeding interval in the format \\days\\d\\hours\\h to return the days d","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * @param feedingInterval a feeding interval in the format \\days\\d\\hours\\h","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * @return number of days d","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public static int parseFeedingIntervalDays(String feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        int dIndex \u003d feedingInterval.indexOf(\u0027d\u0027);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        String daysString \u003d feedingInterval.substring(0, dIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        return Integer.parseInt(daysString);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Parses a feeding interval in the format \\days\\d\\hours\\h to return the hours h","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * @param feedingInterval a feeding interval in the format \\days\\d\\hours\\h","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * @return number of hours h","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public static int parseFeedingIntervalHours(String feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        int dIndex \u003d feedingInterval.indexOf(\u0027d\u0027);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        int hIndex \u003d feedingInterval.indexOf(\u0027h\u0027);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        String hoursString \u003d feedingInterval.substring(dIndex + 1, hIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        return Integer.parseInt(hoursString);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Checks if a Fish needs to be Fed based on lastFedDate and FeedingInterval","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param lfdt LastFedDate of FIsh","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * @param fi FeedingInterval of Fish","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * @return true if fish needs to be fed","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static boolean checkFishNeedsToBeFed(LastFedDateTime lfdt, FeedingInterval fi) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"        LocalDateTime lfdLocalDateTime \u003d lfdt.localDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"        LocalDateTime nowLocalDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"        LocalDateTime feedingDateTime \u003d lfdLocalDateTime.plusDays(Integer.valueOf(fi.days))","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"                .plusHours(Integer.valueOf(fi.hours));","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"        return feedingDateTime.isEqual(nowLocalDateTime) || feedingDateTime.isBefore(nowLocalDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * Returns a String that is a valid Task description","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param date LocalDateTime to be formated","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * @return Formatted string that is alphanumeric","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    public static String getTaskDescriptionDateFormat(LocalDate date) {","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"TimothyLawSongEn"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(VALID_NAME_FORMAT_DATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        return date.format(outputFormat);","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * Returns the current date","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * @return current date","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    public static String getCurrentDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        String formattedDate \u003d today.format(formatter);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        return formattedDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"     * Returns the current date time","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     * @return current date time","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    public static String getCurrentDateTime() {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        String formattedNow \u003d now.format(formatter);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        return formattedNow;","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"     * Returns a String that is a valid Task description","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param dateTime LocalDateTime to be formated","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @return Formatted string that is alphanumeric","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static String getTaskDescriptionDateTimeFormat(LocalDateTime dateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"TimothyLawSongEn"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(VALID_NAME_FORMAT_DATETIME);","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"TimothyLawSongEn"},"content":"        return dateTime.format(outputFormat);","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"TimothyLawSongEn":20,"bokuanT":96}},{"path":"src/main/java/seedu/address/model/fish/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s email in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":69}},{"path":"src/main/java/seedu/address/model/fish/FeedingInterval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.date.DateUtil.parseFeedingIntervalDays;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.date.DateUtil.parseFeedingIntervalHours;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s feeding interval in the fish address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidFeedingInterval(String)}","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class FeedingInterval {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Feeding interval should be in the format \u0027\u003cdays\u003ed\u003chours\u003eh\u0027,\"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            + \" and it should not be blank\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d+d\\\\d+h$\";","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public final String value;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public final String days;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public final String hours;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private final int daysInteger;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    private final int hoursInteger;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Constructs an {@code FeedingInterval}.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * @param feedingInterval A valid feedingInterval.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public FeedingInterval(String feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidFeedingInterval(feedingInterval), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        value \u003d feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        daysInteger \u003d parseFeedingIntervalDays(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        hoursInteger \u003d parseFeedingIntervalHours(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        days \u003d String.valueOf(daysInteger);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        hours \u003d String.valueOf(hoursInteger);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"     * Returns true if a given string is a valid feeding interval.","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidFeedingInterval(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"        if (daysInteger \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"            str.append(days).append(\" day\");","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"            if (daysInteger \u003e 1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"                str.append(\"s\");","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"            if (hoursInteger \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"                str.append(\", \");","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"        if (hoursInteger \u003e 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"            str.append(hours).append(\" hour\");","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"            if (hoursInteger \u003e 1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"                str.append(\"s\");","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"        return str.toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof FeedingInterval // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 value.equals(((FeedingInterval) other).value)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokuanT":70,"ryanchua00":1,"Diamondroxxx":18}},{"path":"src/main/java/seedu/address/model/fish/Fish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.date.DateUtil;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" * Represents a Fish in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class Fish {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    private final Species species;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    private LastFedDateTime lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final FeedingInterval feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private Tank tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"    public Fish(Name name, LastFedDateTime lastFedDateTime, Species species, FeedingInterval feedingInterval, Tank tank,","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"                Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireAllNonNull(name, lastFedDateTime, species, feedingInterval, tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.lastFedDateTime \u003d lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        this.species \u003d species;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        this.feedingInterval \u003d feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"    public LastFedDateTime getLastFedDateTime() {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"        return lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setLastFedDateTime(String dateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime newLastFedDateTime \u003d new LastFedDateTime(dateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.lastFedDateTime \u003d newLastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    public Species getSpecies() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        return species;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    public FeedingInterval getFeedingInterval() {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        return feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public Tank getTank() {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        return tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank t) {","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        tank \u003d t;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"    public boolean isInTank(Tank t) {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"        return tank \u003d\u003d t;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Fishes have the same name.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * This defines a weaker notion of equality between two Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    public boolean isSameFish(Fish otherFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        if (otherFish \u003d\u003d this) {","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        return otherFish !\u003d null","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getName().equals(getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     * Returns true if Fish needs to be fed","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     * @return true if Fish needs to be fed","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public boolean needsToBeFed() {","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"TimothyLawSongEn"},"content":"        return DateUtil.checkFishNeedsToBeFed(lastFedDateTime, feedingInterval);","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     * Returns formatted string of the last time this fish was fed on","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"     * @return formatted string of the last time this fish was fed on","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    public String getLastFedString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"TimothyLawSongEn"},"content":"        String ret \u003d this.getName() + \" last fed on \" + lastFedDateTime.getAlphaNumericDateTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"TimothyLawSongEn"},"content":"    public String getFishImage() {","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"TimothyLawSongEn"},"content":"        return this.species.getFishImageBySpecies();","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Fishes have the same identity and data fields.","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"     * This defines a stronger notion of equality between two Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof Fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        Fish otherFish \u003d (Fish) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        return otherFish.getName().equals(getName())","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 otherFish.getLastFedDateTime().equals(getLastFedDateTime())","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 otherFish.getSpecies().equals(getSpecies())","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getFeedingInterval().equals(getFeedingInterval())","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getTags().equals(getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"TimothyLawSongEn"},"content":"        return Objects.hash(name, lastFedDateTime, species, feedingInterval, tags);","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"TimothyLawSongEn"},"content":"                .append(\"; Last Fed Date Time: \")","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"TimothyLawSongEn"},"content":"                .append(getLastFedDateTime())","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"bryanongjx"},"content":"                .append(\"; Species: \")","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"bryanongjx"},"content":"                .append(getSpecies())","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"                .append(\"; Feeding Interval: \")","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"                .append(getFeedingInterval())","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"                .append(\"; Tank: \")","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"                .append(getTank());","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TimothyLawSongEn":21,"bryanongjx":7,"bokuanT":52,"ryanchua00":1,"-":83,"Diamondroxxx":4}},{"path":"src/main/java/seedu/address/model/fish/LastFedDateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.date.DateUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":" * Represents a Fish\u0027s last fed date time number in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLastFedDateTime(String)}","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"public class LastFedDateTime {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"            \"Last Fed Date Time is a date time in the format of \\\"dd/MM/yyyy HH:mm\\\"\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"            \"^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\\\d{4} (?:[01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public final String value;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    public final LocalDateTime localDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"    public final String alphaNumericDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code LastFedDate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param lastFedDateTime A valid last Fed Date number.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"    public LastFedDateTime(String lastFedDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(lastFedDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"        checkArgument(isValidLastFedDateTime(lastFedDateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"        value \u003d lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        localDateTime \u003d LocalDateTime.parse(lastFedDateTime, formatter);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        alphaNumericDateTime \u003d DateUtil.getTaskDescriptionDateTimeFormat(localDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a given string is a valid last Fed Date number.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static boolean isValidLastFedDateTime(String test) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"    public String getAlphaNumericDateTime() {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        return this.alphaNumericDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"    public LocalDateTime getLocalDateTime() {","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"        return this.localDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return value;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"                || (other instanceof LastFedDateTime // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"                \u0026\u0026 localDateTime.equals(((LastFedDateTime) other).localDateTime)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"TimothyLawSongEn":27,"bokuanT":45,"ryanchua00":2}},{"path":"src/main/java/seedu/address/model/fish/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s name in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":57}},{"path":"src/main/java/seedu/address/model/fish/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Tests that a {@code Fish}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public boolean test(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(fish.getName().fullName, keyword));","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":5,"-":26}},{"path":"src/main/java/seedu/address/model/fish/Species.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" * Represents a Fish\u0027s name in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"public class Species {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"            \"Species should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    public final String species;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"     * Constructs a {@code Species}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"     * @param species A valid species.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    public Species(String species) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(species);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        checkArgument(isValidSpecies(species), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        this.species \u003d species;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"    public static boolean isValidSpecies(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"    public String getFishImageBySpecies() {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"        String processedString \u003d this.species.toLowerCase().replaceAll(\"\\\\s\", \"\");","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"        switch (processedString) {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"guppies\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"guppy\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/guppy.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"goldfish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/goldfish.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"angelfish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/angelfish.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"catfish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/catfish.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"tetras\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"tetra\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"tetrafish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/tetra.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"bettafish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"betta\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/betta.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"flowerhornfish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"flowerhorn\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/flowerhorn.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"arowanafish\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"TimothyLawSongEn"},"content":"        case (\"arowana\"):","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/arowana.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"TimothyLawSongEn"},"content":"            return \"/images/species/default.png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"        return species;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof Species // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 species.equals(((Species) other).species)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"        return species.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"TimothyLawSongEn":31,"bryanongjx":59}},{"path":"src/main/java/seedu/address/model/fish/UniqueFishList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.FishNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A list of Fishes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A fish is considered unique by comparing using {@code Fish#isSameFish(Fish)}. As such, adding and updating of","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Fishes uses Fish#isSameFish(Fish) for equality so as to ensure that the fish being added or updated is","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * unique in terms of identity in the UniqueFishList. However, the removal of a fish uses Fish#equals(Object) so","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * as to ensure that the fish with exactly the same fields will be removed.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":" * @see Fish#isSameFish(Fish)","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"public class UniqueFishList implements Iterable\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cFish\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cFish\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent fish as the given argument.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Fish toCheck) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Adds a fish to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * The fish must not already exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void add(Fish toAdd) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * Replaces the fish {@code target} in the list with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            throw new FishNotFoundException();","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        if (!target.isSameFish(editedFish) \u0026\u0026 contains(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent fish from the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     * The fish must exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    public void remove(Fish toRemove) {","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"            throw new FishNotFoundException();","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(UniqueFishList replacement) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not contain duplicate fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        if (!fishesAreUnique(fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     * Sets the lastFedDate field of all fishes in this {@code internalListAmmonia} list","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"TimothyLawSongEn"},"content":"     * with new LastFedDate object with {@code newDate}.","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setLastFedDateTimeFishes(String newDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"TimothyLawSongEn"},"content":"        internalList.stream().forEach(fish -\u003e fish.setLastFedDateTime(newDateTime));","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cFish\u003e iterator() {","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueFishList // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                        \u0026\u0026 internalList.equals(((UniqueFishList) other).internalList));","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code fish} contains only unique fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    private boolean fishesAreUnique(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c fish.size() - 1; i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c fish.size(); j++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"                if (fish.get(i).isSameFish(fish.get(j))) {","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"Diamondroxxx"},"content":"    public int size() {","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"Diamondroxxx"},"content":"        return internalList.size();","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TimothyLawSongEn":8,"bokuanT":138,"Diamondroxxx":4}},{"path":"src/main/java/seedu/address/model/fish/exceptions/DuplicateFishException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Fishes (Fishes are considered duplicates if they have the same","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * identity).","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateFishException extends RuntimeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Fishes\");","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":11}},{"path":"src/main/java/seedu/address/model/fish/exceptions/FishNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class FishNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/java/seedu/address/model/tank/Tank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" *  Represents a Tank of the user that contains fish.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class Tank {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"    private TankName name;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    private final AddressBook fishList;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private UniqueIndividualReadingLevels readingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"     * Creates a Tank.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     * @param tankName Name of tank.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * @param fishList Fish in tank.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * @param readingLevels","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public Tank(TankName tankName, AddressBook fishList, UniqueIndividualReadingLevels readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        this.name \u003d tankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        this.fishList \u003d fishList;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        this.readingLevels \u003d readingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    public AddressBook getFishList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        return this.fishList;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TankName getTankName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return this.name;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setTankName(TankName newName) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.name \u003d newName;","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public UniqueIndividualReadingLevels getReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        return this.readingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public void setIndividualReadingLeves(UniqueIndividualReadingLevels readings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        this.readingLevels \u003d readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * Returns true if this tank has a fish fue to be feed today","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * @return true if this tank has a fish fue to be feed today","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public boolean hasUnfedFish() {","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        for (Fish f : fishList.getFishList()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            if (f.needsToBeFed()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public String getUnfedFishesString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        for (Fish f : fishList.getFishList()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"            if (f.needsToBeFed()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d f.getLastFedString();","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \"\\n\";","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"     * Adds a fish to the TankList.","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"     * @param fish fish to be added.","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"    public void addFish(Fish fish) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"        fishList.addFish(fish);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Sets the lastFedDate field of all fishes in this Tank\u0027s {@code fishList} list","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"TimothyLawSongEn"},"content":"     * with new LastFedDate object with {@code newDateTime}.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void setLastFedDateTimeFishes(String newDateTime) {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"TimothyLawSongEn"},"content":"        fishList.setLastFedDateTimeFishes(newDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Tanks have the same tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"     * This defines a weaker notion of equality between two Tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    public boolean isSameTank(Tank otherTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        if (otherTank \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        return otherTank !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherTank.getTankName().equals(getTankName());","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof seedu.address.model.tank.Tank)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        seedu.address.model.tank.Tank otherTank \u003d (seedu.address.model.tank.Tank) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        return otherTank.getTankName().equals(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        return Objects.hash(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        builder.append(getTankName());","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"TimothyLawSongEn":17,"bokuanT":92,"ryanchua00":23}},{"path":"src/main/java/seedu/address/model/tank/TankName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Tank\u0027s name in the {@code Tanklist}.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTankName(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class TankName {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public final String fullTankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code TankName}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param name A valid tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public TankName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidTankName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        fullTankName \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a given string is a valid Tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidTankName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        return fullTankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TankName // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fullTankName.equals(((TankName) other).fullTankName)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        return fullTankName.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":57}},{"path":"src/main/java/seedu/address/model/tank/TankNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Tests that a {@code Tank}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public class TankNameContainsKeywordsPredicate implements Predicate\u003cTank\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public TankNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public boolean test(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tank.getTankName().fullTankName, keyword));","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 keywords.equals(((TankNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":31}},{"path":"src/main/java/seedu/address/model/tank/UnassignedTank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Default tank to be assigned to a {@code Fish} when it is created in","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * AddCommandParser. Main difference is this tank is equal to any other tank","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * so in the case where all the attributes of fish A (except Tank), the user wants to add is","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * equal to Fish B that already exists, it is considered as a duplicate","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class UnassignedTank extends Tank {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    public UnassignedTank(TankName tankName, AddressBook fishList) {","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"        super(tankName, fishList, new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof seedu.address.model.tank.Tank)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        //Other is a tank","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokuanT":29}},{"path":"src/main/java/seedu/address/model/tank/UniqueTankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.exceptions.DuplicateTankException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.exceptions.TankNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A list of tanks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A tank is considered unique by comparing using {@code Tank#isSameTank(Tank)}. As such, adding and updating of","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Tankes uses Tank#isSameTank(Tank) for equality so as to ensure that the tank being added or updated is","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * unique in terms of identity in the UniqueTankList. However, the removal of a tank uses Tank#equals(Object) so","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * as to ensure that the tank with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":" * @see Tank#isSameTank(Tank)","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"public class UniqueTankList implements Iterable\u003cTank\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTank\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTank\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent tank as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Tank toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Adds a tank to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * The tank must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public void add(Tank toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * Replaces the tank {@code target} in the list with {@code editedTank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     * The tank identity of {@code editedTank} must not be the same as another existing tank in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            throw new TankNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        if (!target.isSameTank(editedTank) \u0026\u0026 contains(editedTank)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent tank from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * The tank must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    public void remove(Tank toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"            throw new TankNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(UniqueTankList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code tanks}.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * {@code tanks} must not contain duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        if (!tanksAreUnique(tanks)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cTank\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueTankList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 internalList.equals(((UniqueTankList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code tank} contains only unique tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    private boolean tanksAreUnique(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c tanks.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c tanks.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                if (tanks.get(i).isSameTank(tanks.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":136}},{"path":"src/main/java/seedu/address/model/tank/exceptions/DuplicateTankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Tanks (Tanks are considered duplicates if they have the same","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateTankException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateTankException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Tanks\");","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":12}},{"path":"src/main/java/seedu/address/model/tank/exceptions/TankNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class TankNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":7}},{"path":"src/main/java/seedu/address/model/tank/readings/AmmoniaLevel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Represents an AmmoniaLeve of a Tank\u0027s ammonia list.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAmmoniaLevel(String, String)}","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"public class AmmoniaLevel extends Reading {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            \"Ammonia Level should be a number, and it should not be blank.\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX_VALUE \u003d \"^-?\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALIDATION_REGEX_DATE \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            \"^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\\\d{4} (?:[01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private double value;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * Constructs a {@code AmmoniaLevel}.","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     * @param value A valid AmmoniaLevel;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     * @param date A valid date;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    public AmmoniaLevel(String value, String date, Tank tank) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        super(date, tank);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidAmmoniaLevel(value, date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        this.value \u003d Double.parseDouble(value);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the ammonia input is valid","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * @param value value","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param date date","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @return true if valid","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidAmmoniaLevel(String value, String date) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return value.matches(VALIDATION_REGEX_VALUE)","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 date.matches(VALIDATION_REGEX_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public double getValue() {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        return this.value;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof AmmoniaLevel // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 localDateTime.equals(((AmmoniaLevel) other).localDateTime)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"    public int hashcode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"        return (dateString + value).hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        return String.format(\"[%f, %s] [Ammonia]\", value, dateString);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"bryanongjx":48,"bokuanT":24}},{"path":"src/main/java/seedu/address/model/tank/readings/FullReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Wraps all data at the Ammonia list within tank level","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * Duplicates will replace existing entry (readings of same dates are duplicates)","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class FullReadingLevels implements ReadOnlyReadingLevels {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    private final UniqueFullReadingLevels fullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels \u003d new UniqueFullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public FullReadingLevels() {}","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * Creates an FullReadingLevels using the AmmoniaLevels in the {@code toBeCopied}","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public FullReadingLevels(ReadOnlyReadingLevels toBeCopied) {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        this();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the ammonia level list with {@code fullReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * {@code fullReadingLevels} must not contain duplicate fullReadingLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public void setFullReadingLevels(List\u003cUniqueIndividualReadingLevels\u003e fullReadingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingLevels.setReadingLevels(fullReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Resets the existing data of this {@code AmmoniaLevelLists} with {@code newData}.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * @param newData","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    public void resetData(ReadOnlyReadingLevels newData) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        setFullReadingLevels(newData.getFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    //// ammoniaLevel-level operations","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a reading Level with the same identity as {@code UniqueIndividualReadingLevels} exists","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * in the reading level list. They are same identity if they are of the same tank.","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public boolean hasIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevelList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(ammoniaLevelList);","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.containsSameTankReading(ammoniaLevelList);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * Adds an individual reading level to the FullReadingLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Readings of the same day will replace the other one on the same day","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    public void addIndividualReadingLevel(UniqueIndividualReadingLevels individualReadingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.add(individualReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given ammonia level {@code target} in the list with {@code editedReadingLevel}.","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the FullReadingLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setIndividualReadingLevel(UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"                                          UniqueIndividualReadingLevels editedReadingLevel) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editedReadingLevel);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.setUniqueIndividualReadingLevels(target, editedReadingLevel);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     * Removes {@code key} from this {@code FullReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"     * {@code key} must exist in the FullReadingLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    public void removeIndividualReadingLevel(UniqueIndividualReadingLevels key) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevels.remove(key);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     * Adds a set of readings to tank t","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     * @param a Ammonia Level readings","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     * @param pH pH readings","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     * @param temp Temperature readings","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"     * @param t target Tank","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    public void addReadingsToIndividualReadingLevels(AmmoniaLevel a, PH pH, Temperature temp, Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels target \u003d fullReadingLevels.getIndividualReadings(t);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        target.add(a, pH, temp);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    //// util methods","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.asUnmodifiableObservableList().size() + \" individual tank readings\";","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cUniqueIndividualReadingLevels\u003e getFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof FullReadingLevels // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fullReadingLevels.equals(((FullReadingLevels) other).fullReadingLevels));","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.hashCode();","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"    public int size() {","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":135}},{"path":"src/main/java/seedu/address/model/tank/readings/PH.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" * Represents a Tank\u0027s PH Level in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPH(String, String)}","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"public class PH extends Reading {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            \"PH should be a number, and it should not be blank\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX_VALUE \u003d \"^-?\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALIDATION_REGEX_DATE \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            \"^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\\\d{4} (?:[01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private double value;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * Constructs a {@code PH}.","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     * @param value A valid PH;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     * @param date A valid date;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    public PH(String value, String date, Tank tank) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        super(date, tank);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidPH(value, date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        this.value \u003d Double.parseDouble(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the PH input is valid","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * @param value value","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param date date","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @return true if valid","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidPH(String value, String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return value.matches(VALIDATION_REGEX_VALUE)","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 date.matches(VALIDATION_REGEX_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public double getValue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        return this.value;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof PH // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 localDateTime.equals(((PH) other).localDateTime)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"    public int hashcode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"        return (dateString + value).hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        return String.format(\"[%f, %s] [pH]\", value, dateString);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"bryanongjx":49,"bokuanT":23}},{"path":"src/main/java/seedu/address/model/tank/readings/ReadOnlyReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" * Unmodifiable view of a list of ammonia readings","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"public interface ReadOnlyReadingLevels {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the Fishes list.","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * This list will not contain any duplicate Fishes.","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cUniqueIndividualReadingLevels\u003e getFullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":14}},{"path":"src/main/java/seedu/address/model/tank/readings/Reading.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.date.DateUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":" * abstract class for Readings","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public abstract class Reading {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"            \"Reading dates should be in the format of dd/mm/yyyy HH:mm\";","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"            \"^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\\\d{4} (?:[01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    public final String dateString;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public final LocalDateTime localDateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"    public final String alphaNumericDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    public final Tank tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"     * Constructor for reading","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * @param dateTime dateTime reading was recorded","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     * @param tank the tank this reading belongs to","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    public Reading(String dateTime, Tank tank) {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"        checkArgument(isValidReading(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        dateString \u003d dateTime;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        localDateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"        alphaNumericDate \u003d DateUtil.getTaskDescriptionDateTimeFormat(localDateTime);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"    public boolean isValidReading(String test) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"    public abstract double getValue();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"    public abstract int hashcode();","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        return dateString;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"bryanongjx":54,"bokuanT":1,"Diamondroxxx":1}},{"path":"src/main/java/seedu/address/model/tank/readings/Temperature.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" * Represents a Tank\u0027s temperature in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTemperature(String, String)}","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"public class Temperature extends Reading {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            \"Temperature should be a number, and it should not be blank\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    /*","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX_VALUE \u003d \"^-?\\\\d+(\\\\.\\\\d+)?$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALIDATION_REGEX_DATE \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"            \"^(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[0-2])/\\\\d{4} (?:[01]\\\\d|2[0-3]):[0-5]\\\\d$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private double value;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"     * Constructs a {@code Temperature}.","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"     * @param value A valid temperature;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"     * @param date A valid date;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    public Temperature(String value, String date, Tank tank) {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        super(date, tank);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidTemperature(value, date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        this.value \u003d Double.parseDouble(value);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the temperature input is valid","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * @param value value","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param date date","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @return true if valid","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidTemperature(String value, String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return value.matches(VALIDATION_REGEX_VALUE)","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 date.matches(VALIDATION_REGEX_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public double getValue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        return this.value;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof Temperature // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 localDateTime.equals(((Temperature) other).localDateTime)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"    public int hashcode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"bryanongjx"},"content":"        return (dateString + value).hashCode();","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        return String.format(\"[%f, %s] [Temperature]\", value, dateString);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"bryanongjx":49,"bokuanT":23}},{"path":"src/main/java/seedu/address/model/tank/readings/UniqueFullReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.exceptions.DuplicateReadingException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.exceptions.ReadingNotFoundException;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A list of Readings of all tanks","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class UniqueFullReadingLevels implements Iterable\u003cUniqueIndividualReadingLevels\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public final ObservableList\u003cUniqueIndividualReadingLevels\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cUniqueIndividualReadingLevels\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list already contains a reading list with the same tank as toCheck","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public boolean containsSameTankReading(UniqueIndividualReadingLevels toCheck) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * Adds a reading to the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * A reading with the same tank as toAdd must no already exist in the list","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public void add(UniqueIndividualReadingLevels toAdd) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        if (containsSameTankReading(toAdd)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateReadingException();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public UniqueIndividualReadingLevels getIndividualReadings(Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        for (UniqueIndividualReadingLevels r : internalList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            if (r.getTank().equals(t)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                return r;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        throw new ReadingNotFoundException();","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     * Replaces a {@code UniqueIndividualReadingLevels} in the list with","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * {@code editedUniqueIndividualReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    public void setUniqueIndividualReadingLevels(","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"            UniqueIndividualReadingLevels editedUniqueIndividualReadingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedUniqueIndividualReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"            throw new ReadingNotFoundException();","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedUniqueIndividualReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent reading from the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * The reading must exist in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    public void remove(UniqueIndividualReadingLevels toRemove) {","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"            throw new ReadingNotFoundException();","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code UniqueIndividualAmmoniaLevelLists}.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * {@code UniqueIndividualAmmoniaLevelLists} must not contain duplicate UniqueIndividualAmmoniaLevelLists.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    public void setReadingLevels(List\u003cUniqueIndividualReadingLevels\u003e uniqueIndividualReadingLevelsList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(uniqueIndividualReadingLevelsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        if (!readingLevelsAreUnique(uniqueIndividualReadingLevelsList)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateReadingException();","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(uniqueIndividualReadingLevelsList);","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Readings} contains only unique Readings.","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    private boolean readingLevelsAreUnique(List\u003cUniqueIndividualReadingLevels\u003e readingLevelsList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c readingLevelsList.size() - 1; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c readingLevelsList.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"                if (readingLevelsList.get(i).equals(readingLevelsList.get(j))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cUniqueIndividualReadingLevels\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cUniqueIndividualReadingLevels\u003e iterator() {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueFullReadingLevels // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 internalList.equals(((UniqueFullReadingLevels) other).internalList));","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    public int size() {","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        return internalList.size();","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":139}},{"path":"src/main/java/seedu/address/model/tank/readings/UniqueIndividualReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.exceptions.DuplicateReadingException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.exceptions.ReadingNotFoundException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A list of Ammonia Readings of one tank","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class UniqueIndividualReadingLevels {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cAmmoniaLevel\u003e internalListAmmonia \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cAmmoniaLevel\u003e internalUnmodifiableListAmmonia \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalListAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cPH\u003e internalListPH \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cPH\u003e internalUnmodifiableListPH \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalListPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTemperature\u003e internalListTemp \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTemperature\u003e internalUnmodifiableListTemp \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalListTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    private Tank tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     * Constructor for an ammonia level list for a single tank","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * @param t Tank this list is associated to","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public UniqueIndividualReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent reading as the given argument.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public boolean containsSameDayReading(AmmoniaLevel toCheckAmmonia, PH toCheckPH,","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                                          Temperature toCheckTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheckAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheckPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheckTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        return internalListAmmonia.stream().anyMatch(toCheckAmmonia::equals)","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                || internalListPH.stream().anyMatch(toCheckPH::equals)","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"                || internalListTemp.stream().anyMatch(toCheckTemp::equals);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"     * Adds a reading to the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     * If a reading of the same day it replaces the old reading","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public void add(AmmoniaLevel toAddAmmonia, PH toAddPH, Temperature toAddTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAddAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAddPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAddTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        if (containsSameDayReading(toAddAmmonia, toAddPH, toAddTemp)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"            internalListAmmonia.remove(toAddAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"            internalListPH.remove(toAddPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            internalListTemp.remove(toAddTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        internalListAmmonia.add(toAddAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        internalListPH.add(toAddPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        internalListTemp.add(toAddTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Replaces a {@code reading} in the list with {@code editedReadings}.","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    public void setReadingsLevel(AmmoniaLevel targetAmmonia, AmmoniaLevel editedAmmoniaLevel,","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"                                 PH targetPH, PH editedPH,","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"                                 Temperature targetTemp, Temperature editedTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(targetAmmonia, editedAmmoniaLevel, targetPH, editedPH, targetTemp, editedTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        int indexAmmonia \u003d internalListAmmonia.indexOf(targetAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        int indexPH \u003d internalListPH.indexOf(targetPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        int indexTemp \u003d internalListTemp.indexOf(targetTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        if (indexAmmonia \u003d\u003d -1 || indexPH \u003d\u003d -1 || indexTemp \u003d\u003d -1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"            throw new ReadingNotFoundException();","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        internalListAmmonia.set(indexAmmonia, editedAmmoniaLevel);","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        internalListPH.set(indexPH, editedPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        internalListTemp.set(indexTemp, editedTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"     * Removes the most recent readings from the list.","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     * List must not be empty.","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    public Reading[] removeLastReadings() {","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        //For now, all readings come and go as a trio","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        int lastIndex \u003d internalListAmmonia.size() - 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        Reading a \u003d internalListAmmonia.remove(lastIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        Reading t \u003d internalListTemp.remove(lastIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        Reading p \u003d internalListPH.remove(lastIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        Reading[] ret \u003d new Reading[3];","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        ret[0] \u003d a;","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        ret[1] \u003d p;","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        ret[2] \u003d t;","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public void setReadings(UniqueIndividualReadingLevels replacement) {","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        internalListAmmonia.setAll(replacement.internalListAmmonia);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        internalListPH.setAll(replacement.internalListPH);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        internalListTemp.setAll(replacement.internalListTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code ammoniaLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"     * {@code ammoniaLevels} must not contain duplicate ammoniaLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    public void setReadings(List\u003cAmmoniaLevel\u003e ammoniaLevels, List\u003cPH\u003e pHs, List\u003cTemperature\u003e temperatures) {","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(ammoniaLevels, pHs, temperatures);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        if (!ammoniaLevelsAreUnique(ammoniaLevels)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateReadingException();","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        if (!pHsAreUnique(pHs)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateReadingException();","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        if (!temperaturesAreUnique(temperatures)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateReadingException();","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        internalListAmmonia.setAll(ammoniaLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        internalListPH.setAll(pHs);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        internalListTemp.setAll(temperatures);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Readings} contains only unique Readings.","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"    private boolean ammoniaLevelsAreUnique(List\u003cAmmoniaLevel\u003e ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c ammoniaLevels.size() - 1; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c ammoniaLevels.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"                if (ammoniaLevels.get(i).equals(ammoniaLevels.get(j))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Readings} contains only unique Readings.","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    private boolean pHsAreUnique(List\u003cPH\u003e pHs) {","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c pHs.size() - 1; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c pHs.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"                if (pHs.get(i).equals(pHs.get(j))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Readings} contains only unique Readings.","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"    private boolean temperaturesAreUnique(List\u003cTemperature\u003e temperaturess) {","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c temperaturess.size() - 1; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c temperaturess.size(); j++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"                if (temperaturess.get(i).equals(temperaturess.get(j))) {","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cAmmoniaLevel\u003e asUnmodifiableObservableListAmmonia() {","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableListAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cPH\u003e asUnmodifiableObservableListPH() {","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableListPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTemperature\u003e asUnmodifiableObservableListTemp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableListTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"     * Setter for tank","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"     * @param t Tank to be set to","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d t;","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"     * Getter for tank","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"     * @return tank of this list","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"    public Tank getTank() {","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"        return this.tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual ammonia levels","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual ammonia levels","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedValuesStringAmmonia() {","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"        for (AmmoniaLevel a : internalListAmmonia) {","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"bokuanT"},"content":"            String val \u003d Double.toString(a.getValue());","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d val;","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual ammonia levels","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual ammonia levels","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedDatesStringAmmonia() {","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"        for (AmmoniaLevel a : internalListAmmonia) {","lastModifiedDate":"2023-03-29"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"            String date \u003d a.dateString;","lastModifiedDate":"2023-03-29"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual PH levels","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual PH levels","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedValuesStringPH() {","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"        for (PH a : internalListPH) {","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"bokuanT"},"content":"            String val \u003d Double.toString(a.getValue());","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d val;","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual PH levels","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual PH levels","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedDatesStringPH() {","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"        for (PH a : internalListPH) {","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"            String date \u003d a.dateString;","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":293,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":294,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual Temp levels","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual Temp levels","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedValuesStringTemp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"bokuanT"},"content":"        for (Temperature a : internalListTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"            String val \u003d Double.toString(a.getValue());","lastModifiedDate":"2023-03-29"},{"lineNumber":302,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d val;","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"bokuanT"},"content":"     * Returns string for Json individual Temp levels","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"bokuanT"},"content":"     * @return string for Json individual Temp levels","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"bokuanT"},"content":"    public String getCommaSeperatedDatesStringTemp() {","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"        String ret \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"bokuanT"},"content":"        int ind \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"bokuanT"},"content":"        for (Temperature a : internalListTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"bokuanT"},"content":"            String date \u003d a.dateString;","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"bokuanT"},"content":"            ret +\u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"bokuanT"},"content":"            if (ind !\u003d size() - 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"bokuanT"},"content":"                ret +\u003d \",\";","lastModifiedDate":"2023-03-29"},{"lineNumber":323,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":324,"author":{"gitId":"bokuanT"},"content":"            ind++;","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":327,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":329,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":330,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":331,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":332,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueIndividualReadingLevels // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":333,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 tank.equals(((UniqueIndividualReadingLevels) other).tank));","lastModifiedDate":"2023-03-29"},{"lineNumber":334,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":337,"author":{"gitId":"bokuanT"},"content":"     * Returns size of each of the readings. The 3 types have the same number of total inputs","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"     * @return size integer","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"bokuanT"},"content":"    public int size() {","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"bokuanT"},"content":"        //for now all 3 readings come and go together, have same size","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"bokuanT"},"content":"        return internalListAmmonia.size();","lastModifiedDate":"2023-03-29"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":344,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":344}},{"path":"src/main/java/seedu/address/model/tank/readings/exceptions/DuplicateReadingException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Readings (Readings are considered duplicates if they have","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * the same identity).","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateReadingException extends RuntimeException {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateReadingException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in Readings on the same day\");","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":11}},{"path":"src/main/java/seedu/address/model/tank/readings/exceptions/ReadingNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.readings.exceptions;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified reading.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class ReadingNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" * Represents a description of a Task.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":" * Guarantees: Non-null description in valid form.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class Description {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"            \"Names should only contain alphanumeric characters and spaces,\"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"                    + \" and it should not be blank\";","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9\\\\s:-]*$\";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public final String description;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"     * @param description description of a Task.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public Description(String description) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return description;","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return description.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"TimothyLawSongEn":3,"bokuanT":36,"ryanchua00":12}},{"path":"src/main/java/seedu/address/model/task/Priority.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" * Represents the priority of a Task.","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":" * Guarantees: Non-null priority in valid form.","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"public class Priority {","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    enum PriorityLevel { LOW, MEDIUM, HIGH }","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"            \"Priority should be of the form: \u0027low\u0027 / \u0027medium\u0027 / \u0027high\u0027, and it should not be blank\";","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    public final PriorityLevel priority;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"     * Constructs a {@code Priority}.","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"     * @param priority priority level of a Task.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public Priority(String priority) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        requireNonNull(priority);","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        checkArgument(isValidPriority(priority), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        //this.priority \u003d priority;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        switch(priority) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        case \"low\":","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"            this.priority \u003d PriorityLevel.LOW;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"            break;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"        case \"medium\":","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"            this.priority \u003d PriorityLevel.MEDIUM;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"            break;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        case \"high\":","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"            this.priority \u003d PriorityLevel.HIGH;","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"            break;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        default:","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"            throw new IllegalArgumentException(\"Unexpected priority level\");","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"     * Returns true if a given string is a valid priority.","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    public static boolean isValidPriority(String test) {","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"        return test.equals(\"low\") || test.equals(\"medium\") || test.equals(\"high\");","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"     * Inverts natural order and returns comparison.","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"     * @param p priority to compare against.","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"     * @return int value of ordering.","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"    public int compare(Priority p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        return -1 * this.priority.compareTo(p.priority);","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"bryanongjx"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        switch(this.priority) {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        case LOW:","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"            return \"low\";","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        case MEDIUM:","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            return \"medium\";","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        case HIGH:","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"            return \"high\";","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        default:","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"            throw new IllegalArgumentException(\"Unexpected priority level\");","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"bryanongjx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"bryanongjx"},"content":"                || (other instanceof Priority// instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"bryanongjx"},"content":"                \u0026\u0026 priority.equals(((Priority) other).priority)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"bryanongjx"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"        return priority.hashCode();","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bryanongjx":46,"bokuanT":1,"ryanchua00":36}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.exceptions.TaskHasNoPriorityException;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.exceptions.TaskHasNoTankException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" *  Represents a Task of the user","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class Task {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    protected boolean isReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    private final Description description;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    private final boolean isTankRelatedTask;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private Tank tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"    private Priority priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"    private boolean hasPriority;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Constructor for a Task","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * @param description Description of task","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * @param tank Tank (if applicable) tied to this task","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"     * @param priority Priority (if applicable) tied to this task","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    public Task(Description description, Tank tank, Priority priority) {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        this.isTankRelatedTask \u003d this.tank !\u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        this.hasPriority \u003d this.priority !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        this.isReminder \u003d false;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return this.description;","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bryanongjx"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        if (!hasPriority) {","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"            throw new TaskHasNoPriorityException(this);","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"bryanongjx"},"content":"        return this.priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"    public boolean hasPriority() {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"        return this.hasPriority;","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public boolean getIsReminder() {","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return this.isReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    public Tank getTank() {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        if (!isTankRelatedTask) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            throw new TaskHasNoTankException(this);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank tank) {","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    public boolean isTankRelatedTask() {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        return isTankRelatedTask;","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        boolean bothHasTank \u003d isTankRelatedTask() \u0026\u0026 otherTask.isTankRelatedTask();","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        boolean bothNoTank \u003d !isTankRelatedTask() \u0026\u0026 !otherTask.isTankRelatedTask();","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        boolean hasSameTank \u003d (bothHasTank \u0026\u0026 (tank.equals(otherTask.getTank()))) || bothNoTank;","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        return otherTask.getDescription().equals(description)","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 hasSameTank;","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        return Objects.hash(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        builder.append(getDescription());","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bryanongjx":20,"bokuanT":77,"ryanchua00":3}},{"path":"src/main/java/seedu/address/model/task/TaskFeedingReminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" *  Represents a Feeding Reminder for the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" *  Automatically sets description to fish that have not been fed","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" *  This should be instantiated only for tanks with fish that are not fed yet","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class TaskFeedingReminder extends Task {","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     * Constructor for when creating a new TaskFeedingReminder when hungry fish","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     * detected","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * @param t {@code Tank} with hungry fish","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public TaskFeedingReminder(Tank t) {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        super(new Description(\"Tank feeding reminder \\n\" + t.getUnfedFishesString()), t, new Priority(\"high\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        this.isReminder \u003d true;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * constructor for instantiating from Json memory","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param d {@code Descriptor}","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @param t Tank associated with this reminder","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public TaskFeedingReminder(Description d, Tank t) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        super(d, t, new Priority(\"high\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        this.isReminder \u003d true;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Returns a list of Feeding reminders","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * @param tanks Tanks which have hungry fishes","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * @return a list of Feeding reminders","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public static ArrayList\u003cTaskFeedingReminder\u003e createListOfFeedingReminders(ArrayList\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTaskFeedingReminder\u003e ret \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        for (Tank t : tanks) {","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"            ret.add(new TaskFeedingReminder(t));","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        builder.append(\"Feeding Reminder for \");","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        builder.append(getTank());","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        if (other instanceof TaskFeedingReminder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"            TaskFeedingReminder otherTask \u003d (TaskFeedingReminder) other;","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"            return getTank().equals(otherTask.getTank());","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"bokuanT":69}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" * A list of Tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * The Task must not already exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Replaces a {@code Task} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * The {@code editedTask} must not be the same as an existing {@code Task} in the list.","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        if (!target.equals(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent Task from the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     * The Task must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Tasks} contains only unique Tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"                if (tasks.get(i).equals(tasks.get(j))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":112,"ryanchua00":19}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Task (Task are considered duplicates if they have the same","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * description).","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Tasks\");","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":12}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskHasNoPriorityException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":" * Signals that a Task instance\u0027s Tank is being accessed even if it has no Tank","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"public class TaskHasNoPriorityException extends RuntimeException {","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"    public TaskHasNoPriorityException(Task task) {","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"        super(\"This task has no priority: \" + task.toString());","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"bryanongjx":12}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskHasNoTankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" * Signals that a Task instance\u0027s Tank is being accessed even if it has no Tank","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"public class TaskHasNoTankException extends RuntimeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    public TaskHasNoTankException(Task task) {","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"        super(\"This task has no tank: \" + task.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"bokuanT":12}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified {@code Task}.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class TaskNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"    public TaskNotFoundException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"        super(\"Task not found\");","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"bokuanT":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.util.SampleTankUtil.getSampleTanks;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static Fish[] getSampleFishes() {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        Tank[] tanks \u003d getSampleTanks();","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        return new Fish[] {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Nemo\"), new LastFedDateTime(\"28/03/2023 12:00\"), new Species(\"Guppy\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"1d0h\"), tanks[0],","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesA\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Dory\"), new LastFedDateTime(\"28/03/2023 13:00\"), new Species(\"Tetra\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"0d5h\"), tanks[0],","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesA\", \"anotherTag\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Marlin\"), new LastFedDateTime(\"28/03/2023 23:00\"), new Species(\"Parrot Fish\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"1d5h\"), tanks[0],","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesB\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Bruce\"), new LastFedDateTime(\"25/03/2023 21:00\"), new Species(\"Arowana\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"2d0h\"), tanks[1],","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesA\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Chum\"), new LastFedDateTime(\"25/03/2023 07:30\"), new Species(\"Flowerhorn\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"1d12h\"), tanks[1],","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesB\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            new Fish(new Name(\"Anchor\"), new LastFedDateTime(\"25/03/2023 12:30\"), new Species(\"Beta Fish\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                new FeedingInterval(\"3d0h\"), tanks[1],","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                    getTagSet(\"tempSpeciesC\"))","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        for (Fish sampleFish : getSampleFishes()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            sampleAb.addFish(sampleFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"TimothyLawSongEn":1,"bryanongjx":1,"bokuanT":24,"ryanchua00":6,"-":33}},{"path":"src/main/java/seedu/address/model/util/SampleReadingsUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.FullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Contains utility methods for populating {@code FullReadingLevels}! with sample data.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public class SampleReadingsUtil {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static UniqueIndividualReadingLevels[] getSampleIndividualReadings() {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"        //There are 2 sample tanks, so 1 individual readings for each tank","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"        Tank[] sampleTanks \u003d SampleTankUtil.getSampleTanks();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels[] ret \u003d new UniqueIndividualReadingLevels[] {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            new UniqueIndividualReadingLevels(),","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            new UniqueIndividualReadingLevels()","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        ret[0].setTank(sampleTanks[0]);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        ret[1].setTank(sampleTanks[1]);","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static ReadOnlyReadingLevels getSampleFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevels sampleFullReadings \u003d new FullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        for (UniqueIndividualReadingLevels r : getSampleIndividualReadings()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"            sampleFullReadings.addIndividualReadingLevel(r);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        return sampleFullReadings;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":31}},{"path":"src/main/java/seedu/address/model/util/SampleTankUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Contains utility methods for populating {@code Tanklist}! with sample data.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class SampleTankUtil {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    public static Tank[] getSampleTanks() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"        return new Tank[] {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            new Tank(new TankName(\"freshwater tank\"), new AddressBook(), new UniqueIndividualReadingLevels()),","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            new Tank(new TankName(\"saltwater tank\"), new AddressBook(), new UniqueIndividualReadingLevels())","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"        };","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static ReadOnlyTankList getSampleTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        TankList sampleTankList \u003d new TankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        for (Tank sampleTank : getSampleTanks()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            sampleTankList.addTank(sampleTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        return sampleTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":27,"ryanchua00":1}},{"path":"src/main/java/seedu/address/model/util/SampleTaskUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":" * Contains utility methods for populating Fish Ahoy! with sample data.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class SampleTaskUtil {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        return new Task[] {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            new Task(new Description(\"clean tank\"), new Tank(new TankName(\"freshwater tank\"), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"                    new UniqueIndividualReadingLevels()),","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"                    new Priority(\"medium\")),","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            new Task(new Description(\"feed fish\"), null, new Priority(\"medium\"))","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        };","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        TaskList sampleTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            sampleTaskList.addTask(sampleTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        return sampleTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":29,"ryanchua00":3}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.AddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.UserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList()","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTankList\u003e readTankList()","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTankList\u003e readTankList(Path filePath)","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    void saveTankList(ReadOnlyTankList tankList) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    void saveTankList(ReadOnlyTankList tankList, Path filePath) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Readings methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    Path getFullReadingLevelsFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels()","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels(Path filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    void saveFullReadingLevels(ReadOnlyReadingLevels fullAmmoniaLevels) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    void saveFullReadingLevels(ReadOnlyReadingLevels fullAmmoniaLevels, Path filePath) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":49,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.AddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.TankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.FullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.task.TaskListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.UserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private final TaskListStorage taskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    private final TankListStorage tankListStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private final FullReadingLevelsStorage fullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                          UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                          TaskListStorage taskListStorage, TankListStorage tankListStorage,","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                          FullReadingLevelsStorage ammoniaLevelsStorage) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        this.tankListStorage \u003d tankListStorage;","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        this.fullReadingLevelsStorage \u003d ammoniaLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList()","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        return tankListStorage.getTankListFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTankList\u003e readTankList()","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        return readTankList(tankListStorage.getTankListFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTankList\u003e readTankList(Path filePath)","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        return tankListStorage.readTankList(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList(ReadOnlyTankList tankList) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"        saveTankList(tankList, tankListStorage.getTankListFilePath());","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList(ReadOnlyTankList tankList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        tankListStorage.saveTankList(tankList, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Readings methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"    public Path getFullReadingLevelsFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevelsStorage.getFullReadingLevelsFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels()","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"        return readFullReadingLevels(fullReadingLevelsStorage.getFullReadingLevelsFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels(Path filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevelsStorage.readFullReadingLevels(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"    public void saveFullReadingLevels(ReadOnlyReadingLevels fullReadingLevels) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"        saveFullReadingLevels(fullReadingLevels, fullReadingLevelsStorage.getFullReadingLevelsFilePath());","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"    public void saveFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels, Path filePath) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"        fullReadingLevelsStorage.saveFullReadingLevels(ammoniaLevels, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":111,"-":77}},{"path":"src/main/java/seedu/address/storage/fish/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.fish;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bokuanT":1,"-":44}},{"path":"src/main/java/seedu/address/storage/fish/JsonAdaptedFish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.fish;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@link Fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedFish {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Fish\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"    private final String lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    private final String species;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    private final String feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    private final String tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedFish} with the given fish details.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"    public JsonAdaptedFish(@JsonProperty(\"name\") String name, @JsonProperty(\"lastFedDateTime\") String lastFedDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"species\") String species,","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"feedingInterval\") String feedingInterval,","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"tank\")String tank, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.lastFedDateTime \u003d lastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"        this.species \u003d species;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        this.feedingInterval \u003d feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Fish} into this class for Jackson use.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedFish(Fish source) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"TimothyLawSongEn"},"content":"        lastFedDateTime \u003d source.getLastFedDateTime().value;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"bryanongjx"},"content":"        species \u003d source.getSpecies().species;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        feedingInterval \u003d source.getFeedingInterval().value;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        tank \u003d source.getTank().getTankName().fullTankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted fish object into the model\u0027s {@code Fish} object.","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    public Fish toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        final List\u003cTag\u003e fishTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"            fishTags.add(tag.toModelType());","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (lastFedDateTime \u003d\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, LastFedDateTime.class","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"                    .getSimpleName()));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!LastFedDateTime.isValidLastFedDateTime(lastFedDateTime)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new IllegalValueException(LastFedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"TimothyLawSongEn"},"content":"        final LastFedDateTime modelLastFedDateTime \u003d new LastFedDateTime(lastFedDateTime);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"        if (species \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Species.class.getSimpleName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"bryanongjx"},"content":"        if (!Species.isValidSpecies(species)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"bryanongjx"},"content":"            throw new IllegalValueException(Species.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"bryanongjx"},"content":"        final Species modelSpecies \u003d new Species(species);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        if (feedingInterval \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, FeedingInterval.class","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                    .getSimpleName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        if (!FeedingInterval.isValidFeedingInterval(feedingInterval)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(FeedingInterval.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        final FeedingInterval modelFeedingInterval \u003d new FeedingInterval(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        if (tank \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Tank.class.getSimpleName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        if (!TankName.isValidTankName(tank)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(TankName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        //TODO: explore if it is possible to use the real Tank object instead of making new ones with same name","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        //final Tank modelTankUnassigned \u003d new UnassignedTank(null, null);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        final Tank modelTankUnassigned \u003d new Tank(new TankName(tank), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(fishTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new Fish(modelName, modelLastFedDateTime, modelSpecies, modelFeedingInterval, modelTankUnassigned,","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                modelTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TimothyLawSongEn":11,"bryanongjx":9,"bokuanT":49,"-":63}},{"path":"src/main/java/seedu/address/storage/fish/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.fish;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":2,"-":46}},{"path":"src/main/java/seedu/address/storage/fish/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.fish;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":1,"-":79}},{"path":"src/main/java/seedu/address/storage/fish/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.fish;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"fishes list contains duplicate fish(es).\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedFish\u003e fishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"fishes\") List\u003cJsonAdaptedFish\u003e fishes) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.fishes.addAll(fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        fishes.addAll(source.getFishList().stream().map(JsonAdaptedFish::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedFish jsonAdaptedFish : fishes) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            Fish fish \u003d jsonAdaptedFish.toModelType();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            if (addressBook.hasFish(fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":14,"-":46}},{"path":"src/main/java/seedu/address/storage/tank/JsonAdaptedTank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@link Tank}.","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedTank {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Tank\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private final String tankName;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedTank} with the given details.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTank(@JsonProperty(\"tank_name\") String tankName) {","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        this.tankName \u003d tankName;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Tank} into this class for Jackson use.","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTank(Tank source) {","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        tankName \u003d source.getTankName().fullTankName;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted Tank object into the model\u0027s {@code Tank} object.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Tank.","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public Tank toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        if (tankName \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                    TankName.class.getSimpleName()));","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        if (!TankName.isValidTankName(tankName)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(TankName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        final TankName modelTankName \u003d new TankName(tankName);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        return new Tank(modelTankName, new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokuanT":52}},{"path":"src/main/java/seedu/address/storage/tank/JsonSerializableTankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * An Immutable {@code TankList} that is serializable to JSON format.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"@JsonRootName(value \u003d \"tanklist\")","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class JsonSerializableTankList {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TANK \u003d \"tank List contains duplicate tank(s).\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedTank\u003e tanks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableTankList} with the given {@code Tanks}.","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTankList(@JsonProperty(\"tanks\") List\u003cJsonAdaptedTank\u003e tanks) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.tanks.addAll(tanks);","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code ReadOnlyTankList} into this class for Jackson use.","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableTankList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTankList(ReadOnlyTankList source) {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        tanks.addAll(source.getTankList().stream().map(JsonAdaptedTank::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Converts this Tank list into the model\u0027s {@code TankList} object.","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public TankList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        TankList tankList \u003d new TankList();","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedTank jsonAdaptedTank : tanks) {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            Tank tank \u003d jsonAdaptedTank.toModelType();","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            if (tankList.hasTank(tank)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            tankList.addTank(tank);","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        return tankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokuanT":61}},{"path":"src/main/java/seedu/address/storage/tank/JsonTankListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A class to access {@code TankList} data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class JsonTankListStorage implements TankListStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTankListStorage.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public JsonTankListStorage(Path filePath) {","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        return filePath;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTankList\u003e readTankList() throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return readTankList(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code TankList} data as a {@link ReadOnlyTankList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The path of the {@code TankList} data file.","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTankList\u003e readTankList(Path filePath)","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cJsonSerializableTankList\u003e jsonTankList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                filePath, JsonSerializableTankList.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (jsonTankList.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            return Optional.of(jsonTankList.get().toModelType());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList(ReadOnlyTankList tankList) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        saveTankList(tankList, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Similar to {@link #saveTankList(ReadOnlyTankList)}.","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList(ReadOnlyTankList tankList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(tankList, filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTankList(tankList), filePath);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokuanT":84}},{"path":"src/main/java/seedu/address/storage/tank/TankListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Represents a storage for Tank List.","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public interface TankListStorage {","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTankList\u003e readTankList() throws DataConversionException,","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTankList\u003e readTankList(Path filePath)","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    void saveTankList(ReadOnlyTankList tankList) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    void saveTankList(ReadOnlyTankList tankList, Path filePath) throws IOException;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"bokuanT":26}},{"path":"src/main/java/seedu/address/storage/tank/readings/ammonialevels/FullReadingLevelsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank.readings.ammonialevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Represents a storage for FullReadingLevels.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public interface FullReadingLevelsStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    Path getFullReadingLevelsFilePath();","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels() throws DataConversionException,","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels(Path filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    void saveFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    void saveFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels, Path filePath) throws IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":27}},{"path":"src/main/java/seedu/address/storage/tank/readings/ammonialevels/JsonAdaptedIndividualReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank.readings.ammonialevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@code IndividualAmmoniaLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedIndividualReadingLevels {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Tank\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CORRUPTED_READINGS \u003d \"Some readings data is corrupted\";","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final String tankName;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedValuesAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedDatesAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedValuesPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedDatesPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedValuesTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    private final String commaSeperatedDatesTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedTank} with the given details.","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedIndividualReadingLevels(@JsonProperty(\"tankName\") String tankName,","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedValuesAmmonia\")","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                                                      String commaSeperatedValuesAmmonia,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedDatesAmmonia\")","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                                                          String commaSeperatedDatesAmmonia,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedValuesPH\")","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                                                          String commaSeperatedValuesPH,","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedDatesPH\")","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                                                          String commaSeperatedDatesPH,","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedValuesTemp\")","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                                                          String commaSeperatedValuesTemp,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                                              @JsonProperty(\"commaSeperatedDatesTemp\")","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                                                          String commaSeperatedDatesTemp) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        this.tankName \u003d tankName;","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedValuesAmmonia \u003d commaSeperatedValuesAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedDatesAmmonia \u003d commaSeperatedDatesAmmonia;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedValuesPH \u003d commaSeperatedValuesPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedDatesPH \u003d commaSeperatedDatesPH;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedValuesTemp \u003d commaSeperatedValuesTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        this.commaSeperatedDatesTemp \u003d commaSeperatedDatesTemp;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Tank} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedIndividualReadingLevels(UniqueIndividualReadingLevels source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        tankName \u003d source.getTank().getTankName().fullTankName;","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedValuesAmmonia \u003d source.getCommaSeperatedValuesStringAmmonia();","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedDatesAmmonia \u003d source.getCommaSeperatedDatesStringAmmonia();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedValuesPH \u003d source.getCommaSeperatedValuesStringPH();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedDatesPH \u003d source.getCommaSeperatedDatesStringPH();","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedValuesTemp \u003d source.getCommaSeperatedValuesStringTemp();","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        commaSeperatedDatesTemp \u003d source.getCommaSeperatedDatesStringTemp();","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted IndividualReadingsList object into the model\u0027s","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * {@code UniqueIndividualReadingLevels} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Tank.","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    public UniqueIndividualReadingLevels toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        if (tankName \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"                    TankName.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        if (!TankName.isValidTankName(tankName)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(TankName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        final TankName modelTankName \u003d new TankName(tankName);","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        Tank tank \u003d new Tank(modelTankName, new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        boolean hasCorruptedData \u003d commaSeperatedDatesAmmonia \u003d\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"                || commaSeperatedDatesPH \u003d\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"                || commaSeperatedDatesTemp \u003d\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"                || commaSeperatedValuesAmmonia \u003d\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"                || commaSeperatedValuesPH \u003d\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"                || commaSeperatedValuesTemp \u003d\u003d null;","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        if (hasCorruptedData) {","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(MESSAGE_CORRUPTED_READINGS);","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        String[] valuesAmmonia \u003d commaSeperatedValuesAmmonia.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        String[] datesAmmonia \u003d commaSeperatedDatesAmmonia.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        String[] valuesPH \u003d commaSeperatedValuesPH.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        String[] datesPH \u003d commaSeperatedDatesPH.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        String[] valuesTemp \u003d commaSeperatedValuesTemp.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        String[] datesTemp \u003d commaSeperatedDatesTemp.split(\",\");","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        //create unique adapted indi list","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels ret \u003d new UniqueIndividualReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        boolean noValuesPresent \u003d valuesAmmonia[0] \u003d\u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        if (noValuesPresent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            ret.setTank(tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"            return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        //for loop, create ammonia levels, add to list","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c valuesAmmonia.length; i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"            String curValueAmmonia \u003d valuesAmmonia[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"            String curDateAmmonia \u003d datesAmmonia[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"            String curValuePH \u003d valuesPH[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"            String curDatePH \u003d datesPH[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"            String curValueTemp \u003d valuesTemp[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"            String curDateTemp \u003d datesTemp[i];","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"            if (curValueAmmonia \u003d\u003d null || curDateAmmonia \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"                        AmmoniaLevel.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"            if (!AmmoniaLevel.isValidAmmoniaLevel(curValueAmmonia, curDateAmmonia)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(AmmoniaLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"            if (curValuePH \u003d\u003d null || curDatePH \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"                        PH.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"            if (!PH.isValidPH(curValuePH, curDatePH)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(PH.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"            if (curValueTemp \u003d\u003d null || curDateTemp \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"                        Temperature.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"            if (!Temperature.isValidTemperature(curValueTemp, curDateTemp)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(Temperature.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"            AmmoniaLevel curLevel \u003d new AmmoniaLevel(curValueAmmonia, curDateAmmonia, tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"            PH curPH \u003d new PH(curValuePH, curDatePH, tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"            Temperature curTemp \u003d new Temperature(curValueTemp, curDateTemp, tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"            ret.add(curLevel, curPH, curTemp);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        //set list\u0027s tank","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        ret.setTank(tank);","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        //return list","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        return ret;","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":157}},{"path":"src/main/java/seedu/address/storage/tank/readings/ammonialevels/JsonFullReadingLevelsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank.readings.ammonialevels;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A class to access {@code FullReadingLevels} data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class JsonFullReadingLevelsStorage implements FullReadingLevelsStorage {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFullReadingLevelsStorage.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public JsonFullReadingLevelsStorage(Path filePath) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public Path getFullReadingLevelsFilePath() {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        return filePath;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels() throws DataConversionException {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return readFullReadingLevels(filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code FullReadingLevels} data as a {@link ReadOnlyReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The path of the {@code FullReadingLevels} data file.","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyReadingLevels\u003e readFullReadingLevels(Path filePath)","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cJsonSerializableFullReadingLevels\u003e jsonFullReadingLevels \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                filePath, JsonSerializableFullReadingLevels.class);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        if (jsonFullReadingLevels.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            return Optional.of(jsonFullReadingLevels.get().toModelType());","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    public void saveFullReadingLevels(ReadOnlyReadingLevels readingLevels) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        saveFullReadingLevels(readingLevels, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * Similar to {@link #saveFullReadingLevels(ReadOnlyReadingLevels)}.","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    public void saveFullReadingLevels(ReadOnlyReadingLevels readingLevels, Path filePath) throws IOException {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(readingLevels, filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFullReadingLevels(readingLevels), filePath);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"bokuanT":82}},{"path":"src/main/java/seedu/address/storage/tank/readings/ammonialevels/JsonSerializableFullReadingLevels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.tank.readings.ammonialevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.FullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * An Immutable {@code FullReadingLevels} that is serializable to JSON format.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"@JsonRootName(value \u003d \"fullReadingLevels\")","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class JsonSerializableFullReadingLevels {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TANK \u003d \"JsonSerializableFullReadingLevels contains \"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            + \"duplicate tank(s).\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedIndividualReadingLevels\u003e readingLevels \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableFullReadingLevels} with the given {@code readingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableFullReadingLevels(@JsonProperty(\"readingLevels\")","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                                                         List\u003cJsonAdaptedIndividualReadingLevels\u003e readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        this.readingLevels.addAll(readingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code ReadOnlyReadingLevels} into this class for Jackson use.","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableFullReadingLevels}.","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableFullReadingLevels(ReadOnlyReadingLevels source) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        readingLevels.addAll(source.getFullReadingLevels().stream().map(JsonAdaptedIndividualReadingLevels::new)","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Converts this Full Reading Levels into the model\u0027s {@code FullReadingLevels} object.","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public FullReadingLevels toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevels fullReadingLevels \u003d new FullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedIndividualReadingLevels jsonAdaptedReadingList : readingLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            UniqueIndividualReadingLevels individualReadingLevels \u003d jsonAdaptedReadingList.toModelType();","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            if (fullReadingLevels.hasIndividualReadingLevels(individualReadingLevels)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            fullReadingLevels.addIndividualReadingLevel(individualReadingLevels);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return fullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":62}},{"path":"src/main/java/seedu/address/storage/task/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private final String description;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final String tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    private final String priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private final String isReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given details.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"                           @JsonProperty(\"tank\") String tank,","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"bryanongjx"},"content":"                           @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"isReminder\") String isReminder) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        this.isReminder \u003d isReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bryanongjx"},"content":"        if (source.hasPriority()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"            priority \u003d source.getPriority().toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"bryanongjx"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"            priority \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        isReminder \u003d String.valueOf(source.getIsReminder());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        if (source.isTankRelatedTask()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"            tank \u003d source.getTank().getTankName().fullTankName;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            tank \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted Task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Task.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        Tank modelTank \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        if (this.tank !\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"            modelTank \u003d new Tank(new TankName(this.tank), new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"bryanongjx"},"content":"        Priority modelPriority \u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"        if (this.priority !\u003d null) {","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"bryanongjx"},"content":"            modelPriority \u003d new Priority(this.priority);","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"bryanongjx"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        if (isReminder.equals(\"true\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"            TaskFeedingReminder task \u003d new TaskFeedingReminder(modelDescription, modelTank);","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"            return task;","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"bryanongjx"},"content":"        return new Task(modelDescription, modelTank, modelPriority);","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bryanongjx":17,"bokuanT":78,"ryanchua00":1}},{"path":"src/main/java/seedu/address/storage/task/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * An Immutable {@code TaskList} that is serializable to JSON format.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class JsonSerializableTaskList {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"task List contains duplicate task(s).\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given {@code Tasks}.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Converts this Task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            taskList.addTask(task);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        return taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":63}},{"path":"src/main/java/seedu/address/storage/task/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A class to access {@code TaskList} data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        return filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code TaskList} data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The path of the {@code TaskList} data file.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (jsonTaskList.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        requireAllNonNull(taskList, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":79,"ryanchua00":5}},{"path":"src/main/java/seedu/address/storage/task/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.task;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Represents a storage for Task List.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public interface TaskListStorage {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":27}},{"path":"src/main/java/seedu/address/storage/userprefs/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.userprefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bokuanT":1,"-":46}},{"path":"src/main/java/seedu/address/storage/userprefs/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage.userprefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bokuanT":1,"-":35}},{"path":"src/main/java/seedu/address/ui/FishCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * An UI component that displays information of a {@code Fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class FishCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"FishListCard.fxml\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private static final String NAME_HEADER \u003d \"Name: \";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private static final String LAST_FED_DATE_HEADER \u003d \"Last fed on: \";","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    private static final String SPECIES_HEADER \u003d \"Species: \";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private static final String FEEDING_INTERVAL_HEADER \u003d \"Feeding interval: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private static final String TANK_HEADER \u003d \"Tank: \";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public final Fish fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    private Label lastFedDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"bryanongjx"},"content":"    private Label species;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    private Label feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    private Label tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"    private ImageView fishImage;","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"TimothyLawSongEn"},"content":"    private Label test;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishCode} with the given {@code Fish} and index to display.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public FishCard(Fish fish, int displayedIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        this.fish \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"        String nameLabelToBeSet \u003d fish.getName().fullName;","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        name.setText(nameLabelToBeSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"TimothyLawSongEn"},"content":"        String lastFedDateLabelToBeSet \u003d LAST_FED_DATE_HEADER + fish.getLastFedDateTime().value;","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        lastFedDate.setText(lastFedDateLabelToBeSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"        String speciesLabelToBeSet \u003d fish.getSpecies().species;","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"        tags.getChildren().add(new Label(speciesLabelToBeSet));","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        String feedingIntervalLabelToBeSet \u003d FEEDING_INTERVAL_HEADER + fish.getFeedingInterval().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        feedingInterval.setText(feedingIntervalLabelToBeSet);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"        String tankLabelToBeSet \u003d fish.getTank().getTankName().fullTankName;","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        tags.getChildren().add(new Label(tankLabelToBeSet));","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        fish.getTags().stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":77,"author":{"gitId":"TimothyLawSongEn"},"content":"        Image image \u003d new Image(getClass().getResourceAsStream(fish.getFishImage()));","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"TimothyLawSongEn"},"content":"        fishImage.setImage(image);","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof FishCard)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        FishCard card \u003d (FishCard) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fish.equals(card.fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"TimothyLawSongEn":10,"bryanongjx":2,"bokuanT":25,"-":57,"Diamondroxxx":5}},{"path":"src/main/java/seedu/address/ui/FishListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Panel containing the list of Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class FishListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"FishListPanel.fxml\";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FishListPanel.class);","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private ListView\u003cFish\u003e fishListView;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public FishListPanel(ObservableList\u003cFish\u003e fishList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        fishListView.setItems(fishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        fishListView.setCellFactory(listView -\u003e new FishListViewCell());","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        fishListView.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Fish} using a {@code FishCard}.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    class FishListViewCell extends ListCell\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        protected void updateItem(Fish fish, boolean empty) {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            super.updateItem(fish, empty);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            if (empty || fish \u003d\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                setText(null);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                setGraphic(new FishCard(fish, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TimothyLawSongEn":1,"bokuanT":49,"Diamondroxxx":4}},{"path":"src/main/java/seedu/address/ui/MainContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * The Ui for Contenting both the list of fishes and tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author AY2223S1-CS2103T-W15-1/tp-reused","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//Reused from https://github.com/AY2223S1-CS2103T-W15-1/tp","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class MainContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainContent.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MainContent.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private HBox mainContent;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code MainContent} with the given","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * {@code tankListPanel}, {@code fishListPanel} and {@code taskListPanel}.","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public MainContent(TankListPanel tankListPanel, FishListPanel fishListPanel, TaskListPanel taskListPanel) {","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        HBox.setHgrow(tankListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        HBox.setHgrow(fishListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        HBox.setHgrow(taskListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        mainContent.getChildren().setAll(tankListPanel.getRoot(), fishListPanel.getRoot(), taskListPanel.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setMiddlePanel(UiPart\u003cRegion\u003e newPanel) {","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        mainContent.getChildren().set(1, newPanel.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof MainContent)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        MainContent content \u003d (MainContent) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return mainContent.equals(content.mainContent);","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":13,"-":45}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    private FishListPanel fishListPanel;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"    private TankListPanel tankListPanel;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    private MainContent mainContent;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    private StackPane mainContentPlaceholder;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"         * task: the code below can be removed once the bug reported here","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        fishListPanel \u003d new FishListPanel(logic.getFilteredFishList());","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Diamondroxxx"},"content":"        tankListPanel \u003d new TankListPanel(logic.getFilteredTankList());","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Diamondroxxx"},"content":"        mainContent \u003d new MainContent(tankListPanel, fishListPanel, taskListPanel);","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        mainContentPlaceholder.getChildren().add(mainContent.getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"Diamondroxxx"},"content":"     * Changes the GUI Mode.","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"Diamondroxxx"},"content":"    private void handleGuiChange() {","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"Diamondroxxx"},"content":"        GuiSettings.GuiMode newMode \u003d logic.getGuiSettings().getGuiMode();","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"Diamondroxxx"},"content":"        switch (newMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"Diamondroxxx"},"content":"        case DISPLAY_FISHES:","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"Diamondroxxx"},"content":"            mainContent.setMiddlePanel(fishListPanel);","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"Diamondroxxx"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"Diamondroxxx"},"content":"            break; // just keep the current mode","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"Diamondroxxx"},"content":"     * Refreshes the UI to reflect changes","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"Diamondroxxx"},"content":"    public void refreshPanes() {","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"Diamondroxxx"},"content":"        tankListPanel.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"Diamondroxxx"},"content":"        taskListPanel.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"Diamondroxxx"},"content":"        fishListPanel.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"    public FishListPanel getFishListPanel() {","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"        return fishListPanel;","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"Diamondroxxx"},"content":"            if (commandResult.isChangeGui()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"Diamondroxxx"},"content":"                handleGuiChange();","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"Diamondroxxx"},"content":"            refreshPanes();","lastModifiedDate":"2023-03-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"     * Executes automatic feeding reminder feature actions within","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"     * main window","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"    public void executeFeedingReminderInitMainWindow() {","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"        ArrayList\u003cTaskFeedingReminder\u003e taskFeedingReminders \u003d logic.getTaskFeedingReminderList();","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"        for (TaskFeedingReminder t : taskFeedingReminders) {","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"                CommandResult commandResult \u003d logic.executeFeedingReminderInitLogic(t);","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"                logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"                resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"                if (commandResult.isChangeGui()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"                    handleGuiChange();","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"                logger.info(\"Error executing feeding reminder init\");","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"                resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bokuanT":33,"-":189,"Diamondroxxx":31}},{"path":"src/main/java/seedu/address/ui/TankCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.chart.LineChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.chart.NumberAxis;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.chart.XYChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":" * An UI component that displays information of a {@code Tank}.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"public class TankCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    private static final String FXML \u003d \"TankListCard.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    public final Tank tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    private final LineChart\u003cNumber, Number\u003e ammoniaChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"    private final LineChart\u003cNumber, Number\u003e phChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    private final LineChart\u003cNumber, Number\u003e temperatureChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    private VBox vBox;","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"    private Label name;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    private Label id;","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"    private Label numberOfFish;","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"    private Label alignment;","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"    private GridPane readingsSummary;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"     * Creates a {@code TankCard} with the given {@code Tank} and index to display.","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"    public TankCard(Tank tank, int displayedIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"        super(FXML);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"        this.tank \u003d tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"        //alignment.setText(displayedIndex + \".  \");","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"        name.setText(tank.getTankName().toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"        numberOfFish.setText(\"x\" + tank.getFishList().size());","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"        UniqueIndividualReadingLevels readingLevels \u003d tank.getReadingLevels();","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"        ObservableList\u003cAmmoniaLevel\u003e ammoniaLevels \u003d readingLevels.asUnmodifiableObservableListAmmonia();","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"        ObservableList\u003cPH\u003e phLevels \u003d readingLevels.asUnmodifiableObservableListPH();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"        ObservableList\u003cTemperature\u003e temperatureLevels \u003d readingLevels.asUnmodifiableObservableListTemp();","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"        ammoniaChart \u003d createLineChart(ammoniaLevels, 0, 4);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"        ammoniaChart.setId(\"ammoniaChart\");","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        ammoniaChart.getXAxis().setLabel(\"Ammonia (ppm)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"        phChart \u003d createLineChart(phLevels, 0, 14);","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"        phChart.setId(\"phChart\");","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"        phChart.getXAxis().setLabel(\"pH (pH)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"        temperatureChart \u003d createLineChart(temperatureLevels, 10, 40);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"        temperatureChart.setId(\"temperatureChart\");","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"        temperatureChart.getXAxis().setLabel(\"Temperature (˚C)\");","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Diamondroxxx"},"content":"        readingsSummary.add(ammoniaChart, 0, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Diamondroxxx"},"content":"        readingsSummary.add(phChart, 0, 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Diamondroxxx"},"content":"        readingsSummary.add(temperatureChart, 1, 0);","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Diamondroxxx"},"content":"    private LineChart\u003cNumber, Number\u003e createLineChart(","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Diamondroxxx"},"content":"            ObservableList\u003c? extends Reading\u003e readings, double lowerBound, double upperBound) {","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Diamondroxxx"},"content":"        XYChart.Series\u003cNumber, Number\u003e series \u003d new XYChart.Series\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Diamondroxxx"},"content":"        for (int i \u003d 0; i \u003c readings.size(); i++) {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Diamondroxxx"},"content":"            series.getData().add(new XYChart.Data\u003c\u003e(i + 1, readings.get(i).getValue()));","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Diamondroxxx"},"content":"        NumberAxis xAxis \u003d new NumberAxis(1, readings.size(), 1);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Diamondroxxx"},"content":"        xAxis.setTickLabelsVisible(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Diamondroxxx"},"content":"        NumberAxis yAxis \u003d new NumberAxis(lowerBound, upperBound, upperBound - lowerBound);","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Diamondroxxx"},"content":"        LineChart\u003cNumber, Number\u003e lineChart \u003d new LineChart\u003c\u003e(xAxis, yAxis);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.getData().add(series);","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setPrefHeight(100);","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setMinHeight(100);","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setPrefWidth(50);","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setMinWidth(50);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setCreateSymbols(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Diamondroxxx"},"content":"        lineChart.setAnimated(false);","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Diamondroxxx"},"content":"        return lineChart;","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"Diamondroxxx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"Diamondroxxx"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"Diamondroxxx"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"Diamondroxxx"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"Diamondroxxx"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"Diamondroxxx"},"content":"        if (!(other instanceof TankCard)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"Diamondroxxx"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"Diamondroxxx"},"content":"        // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"Diamondroxxx"},"content":"        TankCard card \u003d (TankCard) other;","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"Diamondroxxx"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"Diamondroxxx"},"content":"                \u0026\u0026 tank.equals(card.tank);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Diamondroxxx":123}},{"path":"src/main/java/seedu/address/ui/TankListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":" * Panel containing the list of Tanks.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"public class TankListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    private static final String FXML \u003d \"TankListPanel.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FishListPanel.class);","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    private ListView\u003cTank\u003e tankListView;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"     * Creates a {@code FishListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    public TankListPanel(ObservableList\u003cTank\u003e tankList) {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"        super(FXML);","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        tankListView.setItems(tankList);","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        tankListView.setCellFactory(listView -\u003e new TankListViewCell());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        tankListView.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Tank} using a {@code TankCard}.","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    class TankListViewCell extends ListCell\u003cTank\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        protected void updateItem(Tank tank, boolean empty) {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"            super.updateItem(tank, empty);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"            if (empty || tank \u003d\u003d null) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"                setText(null);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"            } else {","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"                setGraphic(new TankCard(tank, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Diamondroxxx":52}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    public final Task task;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    private HBox taskCardPane;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private Label id;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private Label description;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"bryanongjx"},"content":"        if (task.hasPriority()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"            tags.getChildren().add(new Label(\"Priority: \" + task.getPriority().priority));","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        if (task.isTankRelatedTask()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"            tags.getChildren().add(new Label(task.getTank().getTankName().fullTankName));","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bryanongjx":1,"bokuanT":52,"ryanchua00":3,"Diamondroxxx":6}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code taskListPanel} with the given taskHeader and {@code ObservableList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    public void refresh() {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        taskListView.refresh();","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code task} using {@code taskCard}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                setText(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":46,"ryanchua00":2,"Diamondroxxx":4}},{"path":"src/main/java/seedu/address/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"     * Executes the auto feeding reminder feature for Ui","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    void executeFeedingReminderInitUi();","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":5,"-":13}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/FishAhoyIcon.png\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    public void executeFeedingReminderInitUi() {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        mainWindow.executeFeedingReminderInitMainWindow();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bokuanT":5,"ryanchua00":1,"-":87}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-padding: 5 5 5 5;","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":109,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-font-size: 22px;","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":120,"author":{"gitId":"Diamondroxxx"},"content":"     -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":124,"author":{"gitId":"Diamondroxxx"},"content":"     -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":125,"author":{"gitId":"Diamondroxxx"},"content":"     -fx-border-color: derive(#181823, 12%);","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":134,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":269,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":272,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":277,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":294,"author":{"gitId":"Diamondroxxx"},"content":".chart-plot-background {","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"Diamondroxxx"},"content":".chart-vertical-zero-line {","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"Diamondroxxx"},"content":".chart-horizontal-zero-line {","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"Diamondroxxx"},"content":".chart-vertical-grid-lines {","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":308,"author":{"gitId":"Diamondroxxx"},"content":".chart-horizontal-grid-lines {","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"Diamondroxxx"},"content":".chart-series-line {","lastModifiedDate":"2023-03-30"},{"lineNumber":313,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: #537fe7;","lastModifiedDate":"2023-03-31"},{"lineNumber":314,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke-width: 1;","lastModifiedDate":"2023-03-30"},{"lineNumber":315,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":316,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":317,"author":{"gitId":"Diamondroxxx"},"content":".axis {","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-stroke: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":319,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-fill: transparent;","lastModifiedDate":"2023-03-30"},{"lineNumber":320,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-tick-label-fill: white;","lastModifiedDate":"2023-03-30"},{"lineNumber":321,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-tick-length: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-minor-tick-length: 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":324,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"Diamondroxxx"},"content":".axis-label {","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-font-size: 9;","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-border-color: transparent transparent #ffffff transparent;","lastModifiedDate":"2023-03-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"bokuanT"},"content":"#filterField, #FishListPanel, #FishWebpage {","lastModifiedDate":"2023-02-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: transparent, #181823, transparent, #181823;","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":372,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"Diamondroxxx"},"content":"#alignment {","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-26"},{"lineNumber":375,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-26"},{"lineNumber":376,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-text-fill: transparent;","lastModifiedDate":"2023-03-26"},{"lineNumber":377,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":378,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"Diamondroxxx"},"content":"#fishCardBody {","lastModifiedDate":"2023-03-31"},{"lineNumber":380,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-31"},{"lineNumber":381,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: derive(#181823, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":382,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":383,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":384,"author":{"gitId":"Diamondroxxx"},"content":"#tankCardBody {","lastModifiedDate":"2023-03-31"},{"lineNumber":385,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-31"},{"lineNumber":386,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: derive(#181823, 20%);","lastModifiedDate":"2023-03-31"},{"lineNumber":387,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":388,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":389,"author":{"gitId":"Diamondroxxx"},"content":"#taskCardPane {","lastModifiedDate":"2023-03-31"},{"lineNumber":390,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":391,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-border-color: derive(#181823, 10%);","lastModifiedDate":"2023-03-31"},{"lineNumber":392,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":393,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"Diamondroxxx"},"content":"#readingsSummary {","lastModifiedDate":"2023-03-31"},{"lineNumber":395,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-hgap: 3;","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-padding: 5 9 5 0;","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-31"},{"lineNumber":399,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":400,"author":{"gitId":"Diamondroxxx"},"content":"#ammoniaChart, #phChart, #temperatureChart {","lastModifiedDate":"2023-03-31"},{"lineNumber":401,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-31"},{"lineNumber":402,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background-color: derive(#181823, 30%);","lastModifiedDate":"2023-03-31"},{"lineNumber":403,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"bokuanT":1,"-":319,"Diamondroxxx":83}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"    -fx-background: transparent;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"Diamondroxxx":1}},{"path":"src/main/resources/view/FishListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" stylesheets\u003d\"@DarkTheme.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"  \u003cGridPane id\u003d\"fishCardBody\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"          \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"               \u003cImageView fx:id\u003d\"fishImage\" fitHeight\u003d\"40\" fitWidth\u003d\"40\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"                     \u003cInsets bottom\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"                     \u003cInsets bottom\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"               \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            \u003cLabel fx:id\u003d\"lastFedDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastFedDate\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            \u003cLabel fx:id\u003d\"feedingInterval\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$feedingInterval\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"TimothyLawSongEn":1,"bokuanT":2,"-":24,"Diamondroxxx":29}},{"path":"src/main/resources/view/FishListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"  \u003cListView fx:id\u003d\"fishListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":1,"-":7}},{"path":"src/main/resources/view/MainContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003cHBox fx:id\u003d\"mainContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"         title\u003d\"Fish Ahoy!\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    \u003cImage url\u003d\"@/images/fishicon.png\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        \u003cVBox fx:id\u003d\"mainContent\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"          \u003cStackPane fx:id\u003d\"mainContentPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":2,"-":56}},{"path":"src/main/resources/view/TankListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    \u003cGridPane id\u003d\"tankCardBody\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cVBox fx:id\u003d\"vBox\" alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"45.0\" prefWidth\u003d\"150.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"         \u003cHBox prefWidth\u003d\"130.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"               \u003cImageView fitHeight\u003d\"50.0\" fitWidth\u003d\"20.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003cimage\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"                     \u003cImage url\u003d\"@../images/fishicon.png\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"                  \u003c/image\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"               \u003cLabel fx:id\u003d\"numberOfFish\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$no_of_fish\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"         \u003cGridPane fx:id\u003d\"readingsSummary\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"           \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"             \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"             \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" percentWidth\u003d\"50\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"           \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"         \u003c/GridPane\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Diamondroxxx":53}},{"path":"src/main/resources/view/TankListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"    \u003cListView fx:id\u003d\"tankListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"Diamondroxxx":8}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"\u003cHBox id\u003d\"taskCardPane\" fx:id\u003d\"taskCardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"60\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"                \u003cVBox alignment\u003d\"CENTER\" maxWidth\u003d\"40\" minWidth\u003d\"40\" prefWidth\u003d\"40\" style\u003d\"-fx-padding: 0 10 0 0;\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label_task\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                        \u003cInsets left\u003d\"1\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                \u003cVBox spacing\u003d\"2\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"                    \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label_task\" text\u003d\"\\$description\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"               \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":40,"Diamondroxxx":6}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        final Index fifthFishIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(fifthFishIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(5.0f));","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bokuanT":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"        assertNotNull(AppUtil.getImage(\"/images/fishicon.png\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"bryanongjx":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEEDING_INTERVAL_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_FED_DATE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIES_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTanks;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonTankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.FullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.JsonFullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.task.JsonTaskListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        JsonTankListStorage tankListStorage \u003d new JsonTankListStorage(temporaryFolder.resolve(\"tankList.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevelsStorage ammoniaLevelsStorage \u003d new JsonFullReadingLevelsStorage(temporaryFolder","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"                .resolve(\"ammonialevels\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"                taskListStorage, tankListStorage, ammoniaLevelsStorage);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD + \" fishes\";","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS_FISHES, model);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        JsonTankListStorage tankListStorage \u003d new JsonTankListStorage(temporaryFolder.resolve(\"tankList.json\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevelsStorage ammoniaLevelsStorage \u003d new JsonFullReadingLevelsStorage(temporaryFolder","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"                .resolve(\"ammonialevels\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage,","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"                taskListStorage, tankListStorage, ammoniaLevelsStorage);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        // Initializes Tanks","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        TankList tankList \u003d new TankList();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"        tankList.setTanks(getTypicalTanks());","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        model.setTankList(tankList);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + LAST_FED_DATE_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_AMY + FEEDING_INTERVAL_DESC_AMY + TANK_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"        // Manually sets tanklist","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.setTankList(tankList);","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        expectedModel.addFish(expectedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    public void getFilteredFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"                model.getTankList(), model.getFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryanongjx":1,"bokuanT":32,"ryanchua00":11,"-":141,"Diamondroxxx":2}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), getTypicalTankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public void execute_newFish_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), getTypicalTankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        expectedModel.addFish(validFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(new AddCommand(validFish, Index.fromOneBased(1)), model,","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validFish), expectedModel);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Fish fishInList \u003d model.getAddressBook().getFishList().get(0);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(new AddCommand(fishInList, Index.fromOneBased(1)), model,","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"                AddCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bokuanT":16,"ryanchua00":6,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTanks;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public void constructor_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public void execute_fishAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        ModelStubAcceptingFishAdded modelStub \u003d new ModelStubAcceptingFishAdded();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        CommandResult commandResult \u003d new AddCommand(validFish, Index.fromOneBased(1)).execute(modelStub);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validFish), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Arrays.asList(validFish), modelStub.fishesAdded);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        AddCommand addCommand \u003d new AddCommand(validFish, Index.fromOneBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        ModelStub modelStub \u003d new ModelStubWithFish(validFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_FISH, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        Fish alice \u003d new FishBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        Fish bob \u003d new FishBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice, Index.fromOneBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob, Index.fromOneBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice, Index.fromOneBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        private TankList tankList;","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        private ModelStub() {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"            tankList \u003d new TankList();","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"            tankList.setTanks(getTypicalTanks());","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"Diamondroxxx"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"Diamondroxxx"},"content":"        public void setGuiMode(GuiSettings.GuiMode newMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"Diamondroxxx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        public void deleteFish(Fish target) {","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cFish\u003e getSortedFishList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"        public void sortFilteredFishList(Comparator\u003cFish\u003e comparator) {","lastModifiedDate":"2023-03-22"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":194,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":206,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":207,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":208,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":209,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":210,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":211,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":212,"author":{"gitId":"ryanchua00"},"content":"        public void addTask(Task task) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":213,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":214,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":215,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTask(Task task) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":216,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":217,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":218,"author":{"gitId":"ryanchua00"},"content":"        public void setTask(Task target, Task editedTask) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":219,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":220,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":221,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":222,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":223,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":224,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":225,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":226,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"ryanchua00"},"content":"        public void setTankList(ReadOnlyTankList tankList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"ryanchua00"},"content":"            this.tankList.resetData(tankList);","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"        public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"ryanchua00"},"content":"            return tankList;","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"        public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"        public void setTankListFilePath(Path tankListFilePath) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"        public void addTank(Tank tank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"        public void deleteTank(Tank tank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"        public void setTank(Tank target, Tank editedTank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"            FilteredList\u003cTank\u003e ret \u003d new FilteredList\u003c\u003e(tankList.getTankList());","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"            return ret;","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"TimothyLawSongEn"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setLastFedDateTimeFishes(Tank tankToFeed, String formattedDate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"TimothyLawSongEn"},"content":"            //TODO tests","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"        public ArrayList\u003cTaskFeedingReminder\u003e executeFeedingReminderInitModel() {","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"            //TODO tests","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"        public void addReadingsToIndividualReadingLevels(AmmoniaLevel a, PH ph, Temperature temp, Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"bokuanT"},"content":"        public void setFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"        public ReadOnlyReadingLevels getFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"bokuanT"},"content":"        public boolean hasIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":293,"author":{"gitId":"bokuanT"},"content":"        public void deleteIndividualReadingLevels(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":294,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"bokuanT"},"content":"        public Reading[] deleteLastEntryFromIndividualReadings(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"            return new Reading[0];","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":302,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":303,"author":{"gitId":"bokuanT"},"content":"        public void addIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"bokuanT"},"content":"        public void setIndividualReadingLevels(UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"bokuanT"},"content":"                                               UniqueIndividualReadingLevels editedList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cUniqueIndividualReadingLevels\u003e getFilteredReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredReadingLevels(Predicate\u003cUniqueIndividualReadingLevels\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"bokuanT"},"content":"     * A Model stub that contains a single fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":326,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"bokuanT"},"content":"    private class ModelStubWithFish extends ModelStub {","lastModifiedDate":"2023-02-26"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"        private final Fish fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":330,"author":{"gitId":"bokuanT"},"content":"        ModelStubWithFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":331,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":332,"author":{"gitId":"bokuanT"},"content":"            this.fish \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":337,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"            return this.fish.isSameFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"     * A Model stub that always accept the fish being added.","lastModifiedDate":"2023-02-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":345,"author":{"gitId":"bokuanT"},"content":"    private class ModelStubAcceptingFishAdded extends ModelStub {","lastModifiedDate":"2023-02-26"},{"lineNumber":346,"author":{"gitId":"bokuanT"},"content":"        final ArrayList\u003cFish\u003e fishesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":348,"author":{"gitId":"ryanchua00"},"content":"        ModelStubAcceptingFishAdded() {","lastModifiedDate":"2023-03-14"},{"lineNumber":349,"author":{"gitId":"ryanchua00"},"content":"            super();","lastModifiedDate":"2023-03-14"},{"lineNumber":350,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":353,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":354,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":355,"author":{"gitId":"bokuanT"},"content":"            return fishesAdded.stream().anyMatch(fish::isSameFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":359,"author":{"gitId":"bokuanT"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":360,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"bokuanT"},"content":"            fishesAdded.add(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":370,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"TimothyLawSongEn":5,"bokuanT":134,"ryanchua00":73,"-":153,"Diamondroxxx":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bokuanT":7,"ryanchua00":1,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":49,"Diamondroxxx":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    /* Sorting */","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    public static final String SORT_NAME \u003d \" \" + PREFIX_SORT_BY + \"n\";","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    public static final String SORT_LAST_FED_DATE \u003d \" \" + PREFIX_SORT_BY + \"lfd\";","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    public static final String SORT_SPECIES \u003d \" \" + PREFIX_SORT_BY + \"s\";","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    public static final String SORT_FEEDING \u003d \" \" + PREFIX_SORT_BY + \"fi\";","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    public static final String SORT_TANK \u003d \" \" + PREFIX_SORT_BY + \"tk\";","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    /* Tank additions */","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    public static final String VALID_TANK_INDEX \u003d \"1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    public static final String TANK_DESC \u003d \" \" + PREFIX_TANK + VALID_TANK_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALID_LAST_FED_DATE_AMY \u003d \"01/01/2000 00:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String VALID_LAST_FED_DATE_BOB \u003d \"02/01/2000 00:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALID_SPECIES_AMY \u003d \"Guppy\";","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"bryanongjx"},"content":"    public static final String VALID_SPECIES_BOB \u003d \"Tetra\";","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public static final String VALID_FEEDING_INTERVAL_AMY \u003d \"0d15h\";","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public static final String VALID_FEEDING_INTERVAL_BOB \u003d \"2d0h\";","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public static final String VALID_TANK_AMY \u003d \"1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    public static final String VALID_TANK_BOB \u003d \"2\";","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    public static final String LAST_FED_DATE_DESC_AMY \u003d \" \" + PREFIX_LAST_FED_DATE + VALID_LAST_FED_DATE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public static final String LAST_FED_DATE_DESC_BOB \u003d \" \" + PREFIX_LAST_FED_DATE + VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"bryanongjx"},"content":"    public static final String SPECIES_DESC_AMY \u003d \" \" + PREFIX_SPECIES + VALID_SPECIES_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"bryanongjx"},"content":"    public static final String SPECIES_DESC_BOB \u003d \" \" + PREFIX_SPECIES + VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public static final String FEEDING_INTERVAL_DESC_AMY \u003d \" \" + PREFIX_FEEDING_INTERVAL + VALID_FEEDING_INTERVAL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public static final String FEEDING_INTERVAL_DESC_BOB \u003d \" \" + PREFIX_FEEDING_INTERVAL + VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public static final String TANK_DESC_AMY \u003d \" \" + PREFIX_TANK + VALID_TANK_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    public static final String TANK_DESC_BOB \u003d \" \" + PREFIX_TANK + VALID_TANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String INVALID_LAST_FED_DATE_DESC \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"TimothyLawSongEn"},"content":"            \" \" + PREFIX_LAST_FED_DATE + \"11 Mar 2000 00:00\"; //not dd/mm/yyyy","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"bryanongjx"},"content":"    public static final String INVALID_SPECIES_DESC \u003d \" \" + PREFIX_SPECIES + \"guppy!\"; // \u0027!\u0027 not allowed in species","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    public static final String INVALID_FEEDING_INTERVAL_DESC \u003d \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_FEEDING_INTERVAL; // empty string not allowed for feeding intervals","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public static final String INVALID_TANK_DESC \u003d \" \" + PREFIX_TANK; // empty string not allowed for tanks","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    public static final EditCommand.EditFishDescriptor DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    public static final EditCommand.EditFishDescriptor DESC_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        DESC_AMY \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"                .withLastFedDate(VALID_LAST_FED_DATE_AMY).withSpecies(VALID_SPECIES_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"                .withFeedingInterval(VALID_FEEDING_INTERVAL_AMY).withTank(VALID_TANK_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        DESC_BOB \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"                .withLastFedDate(VALID_LAST_FED_DATE_BOB).withSpecies(VALID_SPECIES_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"                .withFeedingInterval(VALID_FEEDING_INTERVAL_BOB).withTank(VALID_TANK_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"     * - the address book, filtered fish list and selected fish in {@code actualModel} remain unchanged","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"     * Updates {@code model}\u0027s filtered list to show only the fish at the given {@code targetIndex} in the","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"    public static void showFishAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d model.getFilteredFishList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"        final String[] splitName \u003d fish.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"        assertEquals(1, model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"     * Updates {@code model}\u0027s filtered list to show only the fish at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"    public static void showTankAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"        Tank fish \u003d model.getFilteredTankList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"        final String[] splitName \u003d fish.getTankName().fullTankName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"        model.updateFilteredTankList(new TankNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(1, model.getFilteredTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"TimothyLawSongEn":4,"bryanongjx":6,"bokuanT":36,"ryanchua00":23,"-":98}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FISH_SUCCESS, fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        expectedModel.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFishList().size() + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FISH_SUCCESS, fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        expectedModel.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        showNoFish(expectedModel);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    private void showNoFish(Model model) {","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(p -\u003e false);","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        assertTrue(model.getFilteredFishList().isEmpty());","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bokuanT":36,"ryanchua00":1,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TYPICAL_TANK_2_STRING;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    private Model model;","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                new UserPrefs(),","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"                getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        //In edit command, a new fish with new tank is created. Since edited fish also belongs in tank index 1,","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        // hard coded 1 here","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        editedFish.setTank(new Tank(new TankName(\"1\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(editedFish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(expectedModel.getFilteredFishList().get(0), editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"                new UserPrefs(),","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"                getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        Index indexLastFish \u003d Index.fromOneBased(expectedModel.getFilteredFishList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        Fish lastFish \u003d expectedModel.getFilteredFishList().get(indexLastFish.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        FishBuilder fishInList \u003d new FishBuilder(lastFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bryanongjx"},"content":"        Fish editedFish \u003d fishInList.withName(VALID_NAME_BOB).withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"                .withSpecies(VALID_SPECIES_BOB).withTank(TYPICAL_TANK_2_STRING).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        //In edit command, a new fish with new tank is created. Since new fish is in tank 2, hard coded 2 here","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        editedFish.setTank(new Tank(new TankName(\"2\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(editedFish).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastFish, descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(lastFish, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"                new UserPrefs(),","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"                getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new FishBuilder(expectedModel.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased()))","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        //In edit command, a new fish with new tank is created. Since edited fish also belongs in tank index 1,","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        // hard coded 1 here","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        editedFish.setTank(new Tank(new TankName(\"1\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(editedFish).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH, descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(expectedModel.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased()), editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"                new UserPrefs(),","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"                getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        Fish fishInFilteredList \u003d expectedModel.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new FishBuilder(fishInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        //In edit command, a new fish with new tank is created. Since edited fish also belongs in tank index 1,","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        // hard coded 1 here","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        editedFish.setTank(new Tank(new TankName(\"1\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH,","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder(editedFish).build());","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(expectedModel.getFilteredFishList().get(0), editedFish);","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFishUnfilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        Fish firstFish \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        firstFish.setTank(new Tank(new TankName(\"1\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(firstFish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_FISH, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFishFilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        // edit fish in filtered list into a duplicate in address book","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        Fish fishInList \u003d model.getAddressBook().getFishList().get(INDEX_SECOND_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        // user inputs tank attribute will be a number for edit commands","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        fishInList.setTank(new Tank(new TankName(\"1\"), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH,","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder(fishInList).build());","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"    public void execute_invalidFishIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFishList().size() + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"        //The fish parameter of edit commands have tank attribute as an index.","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_BOB).withTank(\"1\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"    public void execute_invalidFishIndexFilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"        //The fish parameter of edit commands have tank attribute as an index.","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder().withName(VALID_NAME_BOB).withTank(\"1\").build());","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_FISH, DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor copyDescriptor \u003d new EditFishDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_FISH, copyDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_FISH, DESC_AMY)));","lastModifiedDate":"2023-02-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_FISH, DESC_BOB)));","lastModifiedDate":"2023-02-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bryanongjx":1,"bokuanT":118,"ryanchua00":3,"-":100}},{"path":"src/test/java/seedu/address/logic/commands/EditFishDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class EditFishDescriptorTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptorWithSameValues \u003d new EditFishDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        // different lastFedDate -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withLastFedDate(VALID_LAST_FED_DATE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"        // different species -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"bryanongjx"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withSpecies(VALID_SPECIES_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        // different feeding interval -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        // different tank -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withTank(VALID_TANK_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":18,"-":43}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Diamondroxxx":1}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FISHES_LISTED_OVERVIEW;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.CARL;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ELLE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.FIONA;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void execute_zeroKeywords_noFishFound() {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FISHES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        expectedModel.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public void execute_multipleKeywords_multipleFishesFound() {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FISHES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        expectedModel.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":21,"ryanchua00":1,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"Diamondroxxx":1}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), getTypicalTankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"        CommandResult expectedResult \u003d new CommandResult(ListCommand.MESSAGE_SUCCESS_FISHES, false, false, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        expectedModel.setGuiMode(GuiSettings.GuiMode.DISPLAY_FISHES);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"        assertCommandSuccess(ListCommand.LIST_FISHES, model, expectedResult, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        CommandResult expectedResult \u003d new CommandResult(ListCommand.MESSAGE_SUCCESS_FISHES, false, false, true);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"        expectedModel.setGuiMode(GuiSettings.GuiMode.DISPLAY_FISHES);","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"        assertCommandSuccess(ListCommand.LIST_FISHES, model, expectedResult, expectedModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":10,"ryanchua00":1,"-":31,"Diamondroxxx":7}},{"path":"src/test/java/seedu/address/logic/commands/fish/FishSortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.fish;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.fish.FishSortCommandParser;","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"public class FishSortCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"            getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    private final String[] unsortedNames \u003d {\"Amy Bee\", \"Zebra\", \"Benson\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    private final String[] sortedNames \u003d {\"Amy Bee\", \"Benson\", \"Zebra\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    private final String[] unsortedDates \u003d {\"10/06/2003 00:00\", \"15/06/2003 00:00\", \"10/06/2003 12:00\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    private final String[] sortedDates \u003d {\"10/06/2003 00:00\", \"10/06/2003 12:00\", \"15/06/2003 00:00\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    private final String[] unsortedIntervals \u003d {\"2d1h\", \"12d20h\", \"0d5h\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    private final String[] sortedIntervals \u003d {\"0d5h\", \"2d1h\", \"12d20h\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    private final String[] unsortedSpecies \u003d {\"Tetra\", \"Beta\", \"Parrot\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    private final String[] sortedSpecies \u003d {\"Beta\", \"Parrot\", \"Tetra\"};","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    private final int[] unsortedTankIndexes \u003d {1, 2, 1};","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    private final int[] sortedTankIndexes \u003d {2, 1, 1};","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    public void constructor_nullComparator_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FishSortCommand(null, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        Comparator\u003cFish\u003e validComp \u003d (o1, o2) -\u003e 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FishSortCommand(validComp, null).execute(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    public void execute_invalidTankIndex_throwsCommandException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        Comparator\u003cFish\u003e validComp \u003d (o1, o2) -\u003e 0;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(CommandException.class, () -\u003e new FishSortCommand(validComp, Index.fromOneBased(5))","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"                .execute(model));","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"    public void execute_sortNameCommand_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        FishBuilder fishBuilder \u003d new FishBuilder();","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withName(unsortedNames[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"            Fish fish \u003d fishBuilder.build();","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"            model.addFish(fish);","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"            new FishSortCommand(FishSortCommandParser.NAME_COMPARATOR, null).execute(model);","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"            fail(\"Exception in sortNameCommandTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cFish\u003e list \u003d model.getFilteredFishList();","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(sortedNames[i], list.get(i).getName().toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"    public void execute_sortLastFedDateCommand_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        FishBuilder fishBuilder \u003d new FishBuilder();","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withName(unsortedNames[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withLastFedDate(unsortedDates[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"            Fish fish \u003d fishBuilder.build();","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"            model.addFish(fish);","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"            new FishSortCommand(FishSortCommandParser.LAST_FED_COMPARATOR, null).execute(model);","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"            fail(\"Exception in sortLastFedDateCommandTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cFish\u003e list \u003d model.getFilteredFishList();","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(sortedDates[i], list.get(i).getLastFedDateTime().toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"    public void execute_sortFeedingIntervalCommand_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"        FishBuilder fishBuilder \u003d new FishBuilder();","lastModifiedDate":"2023-04-07"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withName(unsortedNames[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withFeedingInterval(unsortedIntervals[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"            Fish fish \u003d fishBuilder.build();","lastModifiedDate":"2023-04-07"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"            model.addFish(fish);","lastModifiedDate":"2023-04-07"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"            new FishSortCommand(FishSortCommandParser.FEEDING_COMPARATOR, null).execute(model);","lastModifiedDate":"2023-04-07"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"            fail(\"Exception in sortFeedingIntervalCommandTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cFish\u003e list \u003d model.getFilteredFishList();","lastModifiedDate":"2023-04-07"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(sortedIntervals[i], list.get(i).getFeedingInterval().value);","lastModifiedDate":"2023-04-07"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"    public void execute_sortSpeciesCommand_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"        FishBuilder fishBuilder \u003d new FishBuilder();","lastModifiedDate":"2023-04-07"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withName(unsortedNames[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withSpecies(unsortedSpecies[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"            Fish fish \u003d fishBuilder.build();","lastModifiedDate":"2023-04-07"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"            model.addFish(fish);","lastModifiedDate":"2023-04-07"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"            new FishSortCommand(FishSortCommandParser.SPECIES_COMPARATOR, null).execute(model);","lastModifiedDate":"2023-04-07"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"            fail(\"Exception in sortFeedingIntervalCommandTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cFish\u003e list \u003d model.getFilteredFishList();","lastModifiedDate":"2023-04-07"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(sortedSpecies[i], list.get(i).getSpecies().toString());","lastModifiedDate":"2023-04-07"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"    public void execute_sortTankCommand_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"        FishBuilder fishBuilder \u003d new FishBuilder();","lastModifiedDate":"2023-04-07"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cTank\u003e tankList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-04-07"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c 3; i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"            fishBuilder.withName(unsortedNames[i]);","lastModifiedDate":"2023-04-07"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"            Fish fish \u003d fishBuilder.build();","lastModifiedDate":"2023-04-07"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"            fish.setTank(tankList.get(unsortedTankIndexes[i] - 1));","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"            model.addFish(fish);","lastModifiedDate":"2023-04-07"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"        try {","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"            new FishSortCommand(FishSortCommandParser.TANK_COMPARATOR, null).execute(model);","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"            fail(\"Exception in sortFeedingIntervalCommandTest\");","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"        ObservableList\u003cFish\u003e list \u003d model.getFilteredFishList();","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-04-07"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"            assertEquals(tankList.get(sortedTankIndexes[i] - 1), list.get(i).getTank());","lastModifiedDate":"2023-04-07"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ryanchua00":158}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.testutil.TankBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":" * Contains integration tests (interaction with the Model) for {@code TankAddCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommandIntegrationTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    private Model model;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), getTypicalTankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public void execute_newTank_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.addTank(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(new TankAddCommand(validTank), model,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"                String.format(TankAddCommand.MESSAGE_SUCCESS, validTank), expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    public void execute_duplicateTank_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        Tank fishInList \u003d model.getTankList().getTankList().get(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(new TankAddCommand(fishInList), model, TankAddCommand.MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bokuanT":4,"ryanchua00":46}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.AmmoniaLevel;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.PH;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.ReadOnlyReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Reading;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.Temperature;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.TaskFeedingReminder;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.testutil.TankBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    public void constructor_nullTank_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TankAddCommand(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TankAddCommand(validTank).execute(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        ModelStub modelStub \u003d new ModelStubWithTank(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addCommand \u003d new TankAddCommand(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(CommandException.class, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"        Tank saltwaterTank \u003d new TankBuilder().withTankName(\"Saltwater Tank 1\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        Tank freshwaterTank \u003d new TankBuilder().withTankName(\"Freshwater Tank 3\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addSaltwaterCommand \u003d new TankAddCommand(saltwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addFreshwaterCommand \u003d new TankAddCommand(freshwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(addSaltwaterCommand.equals(addSaltwaterCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addSaltwaterCommandCopy \u003d new TankAddCommand(saltwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(addSaltwaterCommand.equals(addSaltwaterCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(addFreshwaterCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Diamondroxxx"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"Diamondroxxx"},"content":"        public void setGuiMode(GuiSettings.GuiMode newMode) {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"Diamondroxxx"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"        public void deleteFish(Fish target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"        public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cFish\u003e getSortedFishList() {","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":163,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"ryanchua00"},"content":"        public void sortFilteredFishList(Comparator\u003cFish\u003e comparator) {","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"ryanchua00"},"content":"        public void addTask(Task task) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTask(Task task) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"ryanchua00"},"content":"        public void setTask(Task target, Task editedTask) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"ryanchua00"},"content":"        public void setTankList(ReadOnlyTankList tankList) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"ryanchua00"},"content":"        public Path getTankListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"ryanchua00"},"content":"        public void setTankListFilePath(Path tankListFilePath) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"ryanchua00"},"content":"        public void addTank(Tank tank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTank(Tank tank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"ryanchua00"},"content":"        public void setTank(Tank target, Tank editedTank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"TimothyLawSongEn"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"TimothyLawSongEn"},"content":"        public void setLastFedDateTimeFishes(Tank tankToFeed, String formattedDate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"TimothyLawSongEn"},"content":"            //TODO tests","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"        public ArrayList\u003cTaskFeedingReminder\u003e executeFeedingReminderInitModel() {","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"            //TODO tests","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"        public void addReadingsToIndividualReadingLevels(AmmoniaLevel a, PH ph, Temperature temp, Tank t) {","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"        public void setFullReadingLevels(ReadOnlyReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"bokuanT"},"content":"        public ReadOnlyReadingLevels getFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"        public boolean hasIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":270,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":272,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"        public void deleteIndividualReadingLevels(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"bokuanT"},"content":"        public Reading[] deleteLastEntryFromIndividualReadings(UniqueIndividualReadingLevels target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"            return new Reading[0];","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"        public void addIndividualReadingLevels(UniqueIndividualReadingLevels ammoniaLevels) {","lastModifiedDate":"2023-03-29"},{"lineNumber":284,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":285,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":286,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":287,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":288,"author":{"gitId":"bokuanT"},"content":"        public void setIndividualReadingLevels(UniqueIndividualReadingLevels target,","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"bokuanT"},"content":"                                               UniqueIndividualReadingLevels editedList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":290,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":293,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":294,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cUniqueIndividualReadingLevels\u003e getFilteredReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredReadingLevels(Predicate\u003cUniqueIndividualReadingLevels\u003e predicate) {","lastModifiedDate":"2023-03-29"},{"lineNumber":300,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":302,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":305,"author":{"gitId":"ryanchua00"},"content":"     * A Model stub that contains a single tank.","lastModifiedDate":"2023-03-08"},{"lineNumber":306,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStubWithTank extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"ryanchua00"},"content":"        private final Tank tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"ryanchua00"},"content":"        ModelStubWithTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"ryanchua00"},"content":"            this.tank \u003d tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"ryanchua00"},"content":"            return this.tank.isSameTank(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":323,"author":{"gitId":"ryanchua00"},"content":"     * A Model stub that always accept the tank being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":324,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStubAcceptingTankAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":326,"author":{"gitId":"ryanchua00"},"content":"        final ArrayList\u003cTank\u003e tanksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":327,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":328,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":329,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":330,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":331,"author":{"gitId":"ryanchua00"},"content":"            return tanksAdded.stream().anyMatch(tank::isSameTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":332,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":333,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":334,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":335,"author":{"gitId":"ryanchua00"},"content":"        public void addTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":336,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":337,"author":{"gitId":"ryanchua00"},"content":"            tanksAdded.add(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":338,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":339,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":340,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":341,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":342,"author":{"gitId":"ryanchua00"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-08"},{"lineNumber":343,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":344,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":345,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":346,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":5,"bokuanT":64,"ryanchua00":272,"Diamondroxxx":5}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTankAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":" * {@code TankDeleteCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"public class TankDeleteCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"            getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    /* Test needs to be redone after tank delete changes","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d model.getFilteredTankList().get(INDEX_FIRST_TANK.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(TankDeleteCommand.MESSAGE_DELETE_TANK_SUCCESS, tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), );","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTankList().size() + 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"    /* Test needs to be redone after tank delete changes","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"        showTankAtIndex(model, INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d model.getFilteredTankList().get(INDEX_FIRST_TANK.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(TankDeleteCommand.MESSAGE_DELETE_TANK_SUCCESS, tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), );","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        showNoTank(expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"        showTankAtIndex(model, INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTankList().getTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteFirstCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteSecondCommand \u003d new TankDeleteCommand(INDEX_SECOND_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteFirstCommandCopy \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"        // different tank -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"    private void showNoTank(Model model) {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"        model.updateFilteredTankList(p -\u003e false);","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(model.getFilteredTankList().isEmpty());","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bokuanT":4,"ryanchua00":113}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEEDING_INTERVAL_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEEDING_INTERVAL_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FEEDING_INTERVAL_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LAST_FED_DATE_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SPECIES_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_FED_DATE_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_FED_DATE_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIES_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIES_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_INDEX;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        // multiple LastFedDates - last LastFedDate accepted","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_AMY + LAST_FED_DATE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        // multiple species - last species accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"bryanongjx"},"content":"        assertParseSuccess(parser, TANK_DESC + NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        // multiple feeding intervals - last feeding interval accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_AMY + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        // multiple tanks - last tank accepted","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_AMY + TANK_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFishMultipleTags \u003d new FishBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"                new AddCommand(expectedFishMultipleTags, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + LAST_FED_DATE_DESC_AMY + SPECIES_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_AMY + TANK_DESC_AMY,","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"                new AddCommand(expectedFish, Index.fromOneBased(1)));","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"        // missing tank prefix","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_AMY + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_BOB + VALID_TANK_INDEX, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + LAST_FED_DATE_DESC_AMY + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        // missing LastFedDate prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_LAST_FED_DATE_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB,","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        // missing species prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_AMY + VALID_SPECIES_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"                        + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        // missing feeding interval prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_AMY + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"                        + VALID_FEEDING_INTERVAL_BOB + TANK_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        // missing tank prefix","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_AMY + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + VALID_TANK_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"bryanongjx"},"content":"        assertParseFailure(parser, VALID_TANK_INDEX + VALID_NAME_BOB + LAST_FED_DATE_DESC_AMY + VALID_SPECIES_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"                        + VALID_FEEDING_INTERVAL_BOB + VALID_TANK_BOB, expectedMessage);","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"        // invalid LastFedDate","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_LAST_FED_DATE_DESC + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"TimothyLawSongEn"},"content":"                LastFedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"        // invalid species","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + INVALID_SPECIES_DESC","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"                Species.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        // invalid feeding interval","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"                + INVALID_FEEDING_INTERVAL_DESC + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"                FeedingInterval.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"                + TANK_DESC_BOB + INVALID_FEEDING_INTERVAL_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + LAST_FED_DATE_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + TANK_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"TimothyLawSongEn":2,"bryanongjx":2,"bokuanT":88,"ryanchua00":10,"-":72}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(FishUtil.getAddCommand(fish));","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        AddCommand newCommand \u003d new AddCommand(fish, Index.fromOneBased(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        assertEquals(newCommand, command);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_FISH.getOneBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_FISH), command);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(fish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"                + INDEX_FIRST_FISH.getOneBased() + \" \" + FishUtil.getEditFishDescriptorDetails(descriptor));","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_FISH, descriptor), command);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"Diamondroxxx"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" fishes\") instanceof ListCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" tasks\") instanceof ListCommand);","lastModifiedDate":"2023-04-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bokuanT":18,"ryanchua00":1,"-":83,"Diamondroxxx":1}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_FISH));","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bokuanT":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEEDING_INTERVAL_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.FEEDING_INTERVAL_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_FEEDING_INTERVAL_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LAST_FED_DATE_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SPECIES_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TANK_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_FED_DATE_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_FED_DATE_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIES_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SPECIES_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TANK_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LAST_FED_DATE_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"TimothyLawSongEn"},"content":"                LastFedDateTime.MESSAGE_CONSTRAINTS); // invalid lastFedDate","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"bryanongjx"},"content":"        assertParseFailure(parser, \"1\" + INVALID_SPECIES_DESC, Species.MESSAGE_CONSTRAINTS); // invalid species","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        // invalid feeding interval","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, \"1\" + INVALID_FEEDING_INTERVAL_DESC, FeedingInterval.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TANK_DESC, TankName.MESSAGE_CONSTRAINTS); //invalid tank","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"bryanongjx"},"content":"        // invalid lastFedDate followed by valid species","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"bryanongjx"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LAST_FED_DATE_DESC + SPECIES_DESC_AMY,","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"TimothyLawSongEn"},"content":"                LastFedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        // valid lastFedDate followed by invalid lastFedDate. The test case for invalid lastFedDate followed by valid","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        // lastFedDate","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, \"1\" + LAST_FED_DATE_DESC_BOB + INVALID_LAST_FED_DATE_DESC,","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"TimothyLawSongEn"},"content":"                LastFedDateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Fish} being edited,","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_SPECIES_DESC + VALID_FEEDING_INTERVAL_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"                        + VALID_LAST_FED_DATE_AMY,","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        String userInput \u003d targetIndex.getOneBased() + LAST_FED_DATE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_AMY + FEEDING_INTERVAL_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"                + TANK_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                .withLastFedDate(VALID_LAST_FED_DATE_BOB).withSpecies(VALID_SPECIES_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"                .withFeedingInterval(VALID_FEEDING_INTERVAL_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).withTank(VALID_TANK_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bryanongjx"},"content":"        String userInput \u003d targetIndex.getOneBased() + LAST_FED_DATE_DESC_BOB + SPECIES_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"bryanongjx"},"content":"                .withSpecies(VALID_SPECIES_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"        // lastFedDate","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"        userInput \u003d targetIndex.getOneBased() + LAST_FED_DATE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withLastFedDate(VALID_LAST_FED_DATE_AMY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"bryanongjx"},"content":"        // species","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"bryanongjx"},"content":"        userInput \u003d targetIndex.getOneBased() + SPECIES_DESC_AMY;","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"bryanongjx"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withSpecies(VALID_SPECIES_AMY).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"        // feeding interval","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"        userInput \u003d targetIndex.getOneBased() + FEEDING_INTERVAL_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withFeedingInterval(VALID_FEEDING_INTERVAL_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"bokuanT"},"content":"        // tank","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"bokuanT"},"content":"        userInput \u003d targetIndex.getOneBased() + TANK_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withTank(VALID_TANK_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"        String userInput \u003d targetIndex.getOneBased() + LAST_FED_DATE_DESC_AMY + FEEDING_INTERVAL_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"                + SPECIES_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"                + TAG_DESC_FRIEND + LAST_FED_DATE_DESC_AMY + FEEDING_INTERVAL_DESC_AMY + SPECIES_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"                + TAG_DESC_FRIEND + TANK_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"                + LAST_FED_DATE_DESC_BOB + FEEDING_INTERVAL_DESC_BOB + SPECIES_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"                .withSpecies(VALID_SPECIES_BOB).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"                .withTank(VALID_TANK_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_LAST_FED_DATE_DESC + LAST_FED_DATE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"        userInput \u003d targetIndex.getOneBased() + SPECIES_DESC_BOB + INVALID_LAST_FED_DATE_DESC","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"                + FEEDING_INTERVAL_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"                + LAST_FED_DATE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"bryanongjx"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"                .withSpecies(VALID_SPECIES_BOB).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"TimothyLawSongEn":4,"bryanongjx":10,"bokuanT":79,"-":143}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"bokuanT":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/FishSortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_FEEDING;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_LAST_FED_DATE;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_NAME;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_SPECIES;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SORT_TANK;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SORT_BY;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.fish.FishSortCommand;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.parser.fish.FishSortCommandParser;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"public class FishSortCommandParserTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    private final FishSortCommandParser parser \u003d new FishSortCommandParser();","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    public void parse_allScenarios_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"        assertParseSuccess(parser, SORT_NAME,","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"                new FishSortCommand(FishSortCommandParser.NAME_COMPARATOR, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        assertParseSuccess(parser, SORT_LAST_FED_DATE,","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"                new FishSortCommand(FishSortCommandParser.LAST_FED_COMPARATOR, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        assertParseSuccess(parser, SORT_SPECIES,","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"                new FishSortCommand(FishSortCommandParser.SPECIES_COMPARATOR, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        assertParseSuccess(parser, SORT_FEEDING,","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"                new FishSortCommand(FishSortCommandParser.FEEDING_COMPARATOR, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"        assertParseSuccess(parser, SORT_TANK,","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"                new FishSortCommand(FishSortCommandParser.TANK_COMPARATOR, null));","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishSortCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        // missing input","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_BY + \" \", expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FishSortCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        // extra character","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_BY + \"lfdd\", expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        // missing character","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_BY + \"lf\", expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"        // invalid character","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_BY + \"@\", expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"        // integer character","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SORT_BY + \"-1\", expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"ryanchua00":59}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static final String INVALID_LAST_FED_DATE \u003d \"20 Mar 2023 00:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private static final String INVALID_FEEDING_INTERVAL \u003d \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"    private static final String INVALID_SPECIES \u003d \"asd123 @!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static final String VALID_LAST_FED_DATE \u003d \"04/01/2022 00:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private static final String VALID_FEEDING_INTERVAL \u003d \"5d0h\";","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"    private static final String VALID_SPECIES \u003d \"Guppy\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertEquals(INDEX_FIRST_FISH, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        assertEquals(INDEX_FIRST_FISH, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    public void parseLastFedDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLastFedDate((String) null));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    public void parseLastFedDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLastFedDate(INVALID_LAST_FED_DATE));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    public void parseLastFedDate_validValueWithoutWhitespace_returnsLastFedDate() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime expectedLastFedDate \u003d new LastFedDateTime(VALID_LAST_FED_DATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedLastFedDate, ParserUtil.parseLastFedDate(VALID_LAST_FED_DATE));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    public void parseLastFedDate_validValueWithWhitespace_returnsTrimmedLastFedDate() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        String lastFedDateWithWhitespace \u003d WHITESPACE + VALID_LAST_FED_DATE + WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"TimothyLawSongEn"},"content":"        LastFedDateTime expectedLastFedDate \u003d new LastFedDateTime(VALID_LAST_FED_DATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedLastFedDate, ParserUtil.parseLastFedDate(lastFedDateWithWhitespace));","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseFeedingInterval((String) null));","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseFeedingInterval(INVALID_FEEDING_INTERVAL));","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        FeedingInterval expectedFeedingInterval \u003d new FeedingInterval(VALID_FEEDING_INTERVAL);","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedFeedingInterval, ParserUtil.parseFeedingInterval(VALID_FEEDING_INTERVAL));","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_FEEDING_INTERVAL + WHITESPACE;","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        FeedingInterval expectedFeedingInterval \u003d new FeedingInterval(VALID_FEEDING_INTERVAL);","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedFeedingInterval, ParserUtil.parseFeedingInterval(addressWithWhitespace));","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"bryanongjx"},"content":"    public void parseSpecies_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"bryanongjx"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseSpecies((String) null));","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"bryanongjx"},"content":"    public void parseSpecies_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"bryanongjx"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseSpecies(INVALID_SPECIES));","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"bryanongjx"},"content":"    public void parseSpecies_validValueWithoutWhitespace_returnsSpecies() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"bryanongjx"},"content":"        Species expectedSpecies \u003d new Species(VALID_SPECIES);","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(expectedSpecies, ParserUtil.parseSpecies(VALID_SPECIES));","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"bryanongjx"},"content":"    public void parseSpecies_validValueWithWhitespace_returnsTrimmedSpecies() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"bryanongjx"},"content":"        String speciesWithWhitespace \u003d WHITESPACE + VALID_SPECIES + WHITESPACE;","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"bryanongjx"},"content":"        Species expectedSpecies \u003d new Species(VALID_SPECIES);","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"bryanongjx"},"content":"        assertEquals(expectedSpecies, ParserUtil.parseSpecies(speciesWithWhitespace));","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"TimothyLawSongEn":5,"bryanongjx":14,"bokuanT":23,"-":154}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Collections.emptyList(), addressBook.getFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public void resetData_withDuplicateFishes_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        // Two fish with the same identity fields","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e newFish \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        assertFalse(addressBook.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        assertTrue(addressBook.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        assertTrue(addressBook.hasFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    public void getFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * A stub ReadOnlyAddressBook whose fish list can violate interface constraints.","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        private final ObservableList\u003cFish\u003e fish \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        AddressBookStub(Collection\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"            this.fish.setAll(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cFish\u003e getFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"            return fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"bokuanT":34,"-":70}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BENSON;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalReadings.getTypicalFullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        modelManager.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        assertTrue(modelManager.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    public void getFilteredFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withFish(ALICE).withFish(BENSON).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, getTypicalTaskList(), getTypicalTankList(),","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"                getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels())));","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        modelManager.updateFilteredFishList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels())));","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"        modelManager.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"                getTypicalTankList(), getTypicalFullReadingLevels())));","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"bokuanT":28,"ryanchua00":1,"-":111}},{"path":"src/test/java/seedu/address/model/fish/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":67}},{"path":"src/test/java/seedu/address/model/fish/FeedingIntervalTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public class FeedingIntervalTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e new FeedingInterval(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new FeedingInterval(invalidAddress));","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public void isValidFeedingInterval() {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        // null address","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e FeedingInterval.isValidFeedingInterval(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        assertFalse(FeedingInterval.isValidFeedingInterval(\"\")); // empty string","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        assertFalse(FeedingInterval.isValidFeedingInterval(\" \")); // spaces only","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        assertFalse(FeedingInterval.isValidFeedingInterval(\"1dnh\")); // wrong format","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        assertFalse(FeedingInterval.isValidFeedingInterval(\"1h5h\")); // wrong format","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        // valid addresses","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        assertTrue(FeedingInterval.isValidFeedingInterval(\"1d5h\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        assertTrue(FeedingInterval.isValidFeedingInterval(\"15d0h\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        assertTrue(FeedingInterval.isValidFeedingInterval(\"0d1h\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"bokuanT":38}},{"path":"src/test/java/seedu/address/model/fish/FishTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class FishTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e fish.getTags().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void isSameFish() {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        assertTrue(ALICE.isSameFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        assertFalse(ALICE.isSameFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                .withSpecies(VALID_SPECIES_BOB).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        assertTrue(ALICE.isSameFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        assertFalse(ALICE.isSameFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        Fish editedBob \u003d new FishBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        assertFalse(BOB.isSameFish(editedBob));","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        editedBob \u003d new FishBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        assertFalse(BOB.isSameFish(editedBob));","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        Fish aliceCopy \u003d new FishBuilder(ALICE).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        // different lastFedDate -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withLastFedDate(VALID_LAST_FED_DATE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"        // different species -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bryanongjx"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withSpecies(VALID_SPECIES_BOB).build();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        // different FeedingInterval -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"bryanongjx":4,"bokuanT":29,"-":59}},{"path":"src/test/java/seedu/address/model/fish/LastFedDateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"public class LastFedDateTimeTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LastFedDateTime(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void constructor_invalidLastFedDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"        String invalidLastFedDate \u003d \"\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LastFedDateTime(invalidLastFedDate));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"    public void isValidLastFedDate() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"        // null date","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertThrows(NullPointerException.class, () -\u003e LastFedDateTime.isValidLastFedDateTime(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"        // invalid date","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\"\")); // empty string","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\" \")); // spaces only","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\"01.01.2000 00:00\")); // format is dd/mm/yyyy","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\"1a/05/2000 00:00\")); // alphabets within digits","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(LastFedDateTime.isValidLastFedDateTime(\"32/01/2023 00:00\")); // invalid date","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"        // valid dates","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertTrue(LastFedDateTime.isValidLastFedDateTime(\"12/12/2000 00:00\")); // exactly 3 numbers","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertTrue(LastFedDateTime.isValidLastFedDateTime(\"05/05/2022 00:00\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertTrue(LastFedDateTime.isValidLastFedDateTime(\"06/05/2021 00:00\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"TimothyLawSongEn":40}},{"path":"src/test/java/seedu/address/model/fish/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"bryanongjx"},"content":"        // Keywords match last fed date, species and address, but does not match name","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"bryanongjx"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"06/01/2000\", \"Guppy\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"TimothyLawSongEn"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice\").withLastFedDate(\"06/01/2000 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"                .withSpecies(\"Guppy\").withFeedingInterval(\"1d1h\").withTank(\"tank 1\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"TimothyLawSongEn":1,"bryanongjx":2,"bokuanT":10,"-":62}},{"path":"src/test/java/seedu/address/model/fish/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":39}},{"path":"src/test/java/seedu/address/model/fish/SpeciesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryanongjx"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"bryanongjx"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"bryanongjx"},"content":"public class SpeciesTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"bryanongjx"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"bryanongjx"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Species(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"bryanongjx"},"content":"    public void constructor_invalidSpecies_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"        String invalidSpecies \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bryanongjx"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Species(invalidSpecies));","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"bryanongjx"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"bryanongjx"},"content":"    public void isValidSpecies() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"bryanongjx"},"content":"        // null date","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"        assertThrows(NullPointerException.class, () -\u003e Species.isValidSpecies(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"bryanongjx"},"content":"        // invalid species","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"bryanongjx"},"content":"        assertFalse(Species.isValidSpecies(\"\")); // empty string","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"bryanongjx"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"bryanongjx"},"content":"        // valid species","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"        assertTrue(Species.isValidSpecies(\"Guppy\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"        assertTrue(Species.isValidSpecies(\"Tetra\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bryanongjx"},"content":"        assertTrue(Species.isValidSpecies(\"Betta\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"bryanongjx"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"bryanongjx"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"bryanongjx":35}},{"path":"src/test/java/seedu/address/model/fish/UniqueFishListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.FishNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class UniqueFishListTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final UniqueFishList uniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void contains_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.contains(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishNotInList_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        assertFalse(uniqueFishList.contains(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishInList_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        assertTrue(uniqueFishList.contains(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        assertTrue(uniqueFishList.contains(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public void add_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.add(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    public void add_duplicateFish_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.add(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void setFish_nullTargetFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFish(null, ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    public void setFish_nullEditedFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFish(ALICE, null));","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public void setFish_targetFishNotInList_throwsFishNotFoundException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        assertThrows(FishNotFoundException.class, () -\u003e uniqueFishList.setFish(ALICE, ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishIsSameFish_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasSameIdentity_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasNonUniqueIdentity_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.setFish(ALICE, BOB));","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    public void remove_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.remove(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    public void remove_fishDoesNotExist_throwsFishNotFoundException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        assertThrows(FishNotFoundException.class, () -\u003e uniqueFishList.remove(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"    public void remove_existingFish_removesFish() {","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.remove(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_nullUniqueFishList_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFishes((UniqueFishList) null));","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_uniqueFishList_replacesOwnListWithProvidedUniqueFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFishes(expectedUniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFishes((List\u003cFish\u003e) null));","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e fishList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFishes(fishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_listWithDuplicateFishes_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e listWithDuplicateFish \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.setFishes(listWithDuplicateFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"            -\u003e uniqueFishList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":172}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFishTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.storage.fish.JsonAdaptedFish.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BENSON;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAdaptedFish;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAdaptedTag;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedFishTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private static final String INVALID_LAST_FED_DATE \u003d \"+651234\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    private static final String INVALID_SPECIES \u003d \"example.com\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private static final String INVALID_FEEDING_INTERVAL \u003d \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private static final String INVALID_TANK \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static final String VALID_LAST_FED_DATE \u003d BENSON.getLastFedDateTime().toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"bryanongjx"},"content":"    private static final String VALID_SPECIES \u003d BENSON.getSpecies().toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    private static final String VALID_FEEDING_INTERVAL \u003d BENSON.getFeedingInterval().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    private static final String VALID_TANK \u003d BENSON.getTank().getTankName().fullTankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_validFishDetails_returnsFish() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(BENSON);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        assertEquals(BENSON, fish.toModelType());","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(INVALID_NAME, VALID_LAST_FED_DATE, VALID_SPECIES, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                        VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(null, VALID_LAST_FED_DATE, VALID_SPECIES,","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"                VALID_FEEDING_INTERVAL, VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidLastFedDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, INVALID_LAST_FED_DATE, VALID_SPECIES, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"                        VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"TimothyLawSongEn"},"content":"        String expectedMessage \u003d LastFedDateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_nullLastFedDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, null, VALID_SPECIES, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"                VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"TimothyLawSongEn"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LastFedDateTime.class.getSimpleName());","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"bryanongjx"},"content":"    public void toModelType_invalidSpecies_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_LAST_FED_DATE, INVALID_SPECIES, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"                        VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"bryanongjx"},"content":"        String expectedMessage \u003d Species.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"bryanongjx"},"content":"    public void toModelType_nullSpecies_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, VALID_LAST_FED_DATE, null, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"                VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"bryanongjx"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Species.class.getSimpleName());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidFeedingInterval_throwsIllegalValueException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_LAST_FED_DATE, VALID_SPECIES, INVALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"                        VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d FeedingInterval.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, VALID_LAST_FED_DATE, VALID_SPECIES, null,","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"                VALID_TANK, VALID_TAGS);","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, FeedingInterval.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_LAST_FED_DATE, VALID_SPECIES, VALID_FEEDING_INTERVAL,","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"                        VALID_TANK, invalidTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"TimothyLawSongEn":4,"bryanongjx":7,"bokuanT":52,"-":60}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTankTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.storage.tank.JsonAdaptedTank.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TANK_A;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonAdaptedTank;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Test class for {@code JsonAdaptedTank}","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"class JsonAdaptedTankTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private static final String INVALID_TANK_NAME \u003d \"T@nk_A\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_validTankDetails_returnsTank() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedTank tank \u003d new JsonAdaptedTank(TANK_A);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        assertEquals(TANK_A, tank.toModelType());","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedTank tank \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedTank(INVALID_TANK_NAME);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d TankName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tank::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedTank tank \u003d new JsonAdaptedTank((String) null);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TankName.class.getSimpleName());","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, tank::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"bokuanT":40}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.HOON;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.IDA;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    public void readAddressBook_invalidFishAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidFishAddressBook.json\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public void readAddressBook_invalidAndValidFishAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidFishAddressBook.json\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        original.addFish(HOON);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        original.removeFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        original.addFish(IDA);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":12,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonSerializableAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.TypicalFishes;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private static final Path TYPICAL_FISHES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFishesAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private static final Path INVALID_FISH_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFishAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private static final Path DUPLICATE_FISH_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateFishAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_typicalFishesFile_success() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FISHES_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        AddressBook typicalFishesAddressBook \u003d TypicalFishes.getTypicalAddressBook();","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        assertEquals(addressBookFromFile, typicalFishesAddressBook);","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidFishFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FISH_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_duplicateFishes_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_FISH_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_FISH,","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":14,"-":34}},{"path":"src/test/java/seedu/address/storage/JsonSerializableTankListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonSerializableTankList;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.TypicalTanks;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * Test class for {@code JsonSerializableTankList}","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"class JsonSerializableTankListTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableTankListTest\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private static final Path TYPICAL_TANKS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalTanksTankList.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private static final Path INVALID_TANK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTankTankList.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private static final Path DUPLICATE_TANK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTankTankList.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_typicalTanksFile_success() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableTankList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_TANKS_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                JsonSerializableTankList.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        TankList tankListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        TankList typicalTanksTankList \u003d TypicalTanks.getTypicalTankListVersionTwo();","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        assertEquals(tankListFromFile, typicalTanksTankList);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidTankFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableTankList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TANK_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                JsonSerializableTankList.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_duplicateTanks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableTankList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TANK_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"                JsonSerializableTankList.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableTankList.MESSAGE_DUPLICATE_TANK,","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"bokuanT":50}},{"path":"src/test/java/seedu/address/storage/JsonTankListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TANK_A;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TANK_D;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TANK_E;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankListVersionTwo;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonTankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" * Test class for {@code JsonTankListStorage}","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"class JsonTankListStorageTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonTankListStorageTest\");","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    @TempDir","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public void readTankList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e readTankList(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    private java.util.Optional\u003cReadOnlyTankList\u003e readTankList(String filePath) throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        return new JsonTankListStorage(Paths.get(filePath)).readTankList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                : null;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        assertFalse(readTankList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTankList(\"notJsonFormatTankList.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public void readTankList_invalidTankTankList_throwDataConversionException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTankList(\"invalidTankTankList.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void readTankList_invalidAndValidTankTankList_throwDataConversionException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readTankList(\"invalidAndValidTankTankList.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    public void readAndSaveTankList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        Path filePath \u003d testFolder.resolve(\"TempTankList.json\");","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        TankList original \u003d getTypicalTankListVersionTwo();","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        JsonTankListStorage jsonTankListStorage \u003d new JsonTankListStorage(filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        jsonTankListStorage.saveTankList(original, filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTankList readBack \u003d jsonTankListStorage.readTankList(filePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        assertEquals(original, new TankList(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        original.addTank(TANK_D);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        original.removeTank(TANK_A);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        jsonTankListStorage.saveTankList(original, filePath);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        readBack \u003d jsonTankListStorage.readTankList(filePath).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        assertEquals(original, new TankList(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        original.addTank(TANK_E);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        jsonTankListStorage.saveTankList(original); // file path not specified","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        readBack \u003d jsonTankListStorage.readTankList().get(); // file path not specified","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        assertEquals(original, new TankList(readBack));","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList_nullTankList_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTankList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"     * Saves {@code tankList} at the specified {@code filePath}.","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    private void saveTankList(ReadOnlyTankList tankList, String filePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"            new JsonTankListStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"                    .saveTankList(tankList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    public void saveTankList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveTankList(new TankList(), null));","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"bokuanT":114}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"bokuanT":1,"-":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.fish.JsonAddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.JsonTankListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.FullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.tank.readings.ammonialevels.JsonFullReadingLevelsStorage;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.task.JsonTaskListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.userprefs.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        JsonTankListStorage tankListStorage \u003d new JsonTankListStorage(getTempFilePath(\"tanklist\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevelsStorage ammoniaLevelsStorage \u003d new JsonFullReadingLevelsStorage(","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                getTempFilePath(\"ammonialevels\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage, tankListStorage,","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                ammoniaLevelsStorage);","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":1,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withFish(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Adds a new {@code Fish} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public AddressBookBuilder withFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditFishDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" * A utility class to help with building EditFishDescriptor objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class EditFishDescriptorBuilder {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private EditFishDescriptor descriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder() {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder(EditFishDescriptor descriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.descriptor \u003d new EditFishDescriptor(descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code EditFishDescriptor} with fields containing {@code fish}\u0027s details","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        descriptor.setName(fish.getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"        descriptor.setLastFedDate(fish.getLastFedDateTime());","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"bryanongjx"},"content":"        descriptor.setSpecies(fish.getSpecies());","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        descriptor.setFeedingInterval(fish.getFeedingInterval());","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTank(fish.getTank());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTags(fish.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Name} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code LastFedDate} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withLastFedDate(String lastFedDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"TimothyLawSongEn"},"content":"        descriptor.setLastFedDate(new LastFedDateTime(lastFedDate));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bryanongjx"},"content":"     * Sets the {@code Species} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bryanongjx"},"content":"    public EditFishDescriptorBuilder withSpecies(String species) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"bryanongjx"},"content":"        descriptor.setSpecies(new Species(species));","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code FeedingInterval} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withFeedingInterval(String feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        descriptor.setFeedingInterval(new FeedingInterval(feedingInterval));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Tank} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withTank(String tank) {","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTank(new Tank(new TankName(tank), new AddressBook(), new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditFishDescriptor}","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptor build() {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return descriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TimothyLawSongEn":3,"bryanongjx":4,"bokuanT":93}},{"path":"src/test/java/seedu/address/testutil/FishBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.FeedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.fish.LastFedDateTime;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Species;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A utility class to help with building Fish objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class FishBuilder {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final String DEFAULT_LAST_FED_DATE \u003d \"01/01/2000 00:00\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bryanongjx"},"content":"    public static final String DEFAULT_SPECIES \u003d \"Guppy\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_FEEDING_INTERVAL \u003d \"0d15h\";","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_TANK \u003d \"Saltwater Tank 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private Name name;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"    private LastFedDateTime lastFedDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"bryanongjx"},"content":"    private Species species;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    private FeedingInterval feedingInterval;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    private Tank tank;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishBuilder} with the default details.","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder() {","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"        lastFedDate \u003d new LastFedDateTime(DEFAULT_LAST_FED_DATE);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"bryanongjx"},"content":"        species \u003d new Species(DEFAULT_SPECIES);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        feedingInterval \u003d new FeedingInterval(DEFAULT_FEEDING_INTERVAL);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        tank \u003d new Tank(new TankName(DEFAULT_TANK), new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Initializes the FishBuilder with the data of {@code fishToCopy}.","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder(Fish fishToCopy) {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        name \u003d fishToCopy.getName();","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"TimothyLawSongEn"},"content":"        lastFedDate \u003d fishToCopy.getLastFedDateTime();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"bryanongjx"},"content":"        species \u003d fishToCopy.getSpecies();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        feedingInterval \u003d fishToCopy.getFeedingInterval();","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        tank \u003d fishToCopy.getTank();","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        tags \u003d new HashSet\u003c\u003e(fishToCopy.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Name} of the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withName(String name) {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withTags(String ... tags) {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code FeedingInterval} of the {@code Fish} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withFeedingInterval(String feedingInterval) {","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        this.feedingInterval \u003d new FeedingInterval(feedingInterval);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code LastFedDate} of the {@code Fish} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withLastFedDate(String lastFedDate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"TimothyLawSongEn"},"content":"        this.lastFedDate \u003d new LastFedDateTime(lastFedDate);","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bryanongjx"},"content":"     * Sets the {@code Species} of the {@code Fish} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"     * @param species Species","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bryanongjx"},"content":"    public FishBuilder withSpecies(String species) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"bryanongjx"},"content":"        this.species \u003d new Species(species);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Tank} of the {@code Fish} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"     * @param tank tank","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"     * @return fishbuilder","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withTank(String tank) {","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        this.tank \u003d new Tank(new TankName(tank), new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    public Fish build() {","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        return new Fish(name, lastFedDate, species, feedingInterval, tank, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"TimothyLawSongEn":6,"bryanongjx":7,"bokuanT":102}},{"path":"src/test/java/seedu/address/testutil/FishUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TANK_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FEEDING_INTERVAL;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_FED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"bryanongjx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SPECIES;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TANK;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A utility class for Fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class FishUtil {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Returns an add command string for adding the {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static String getAddCommand(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getFishDetails(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Returns the part of command string for the given {@code fish}\u0027s details.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public static String getFishDetails(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        sb.append(PREFIX_TANK + VALID_TANK_INDEX + \" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_NAME + fish.getName().fullName + \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        sb.append(PREFIX_LAST_FED_DATE + fish.getLastFedDateTime().value + \" \");","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"bryanongjx"},"content":"        sb.append(PREFIX_SPECIES + fish.getSpecies().species + \" \");","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_FEEDING_INTERVAL + fish.getFeedingInterval().value + \" \");","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_TANK + \"1\" + \" \"); // As of implementing this, Tank does not know its index so need hard code","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        fish.getTags().stream().forEach(","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * Returns the part of command string for the given {@code EditFishDescriptor}\u0027s details.","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public static String getEditFishDescriptorDetails(EditFishDescriptor descriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        descriptor.getLastFedDate().ifPresent(lastFedDate -\u003e sb.append(PREFIX_LAST_FED_DATE).append(lastFedDate.value)","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                .append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"bryanongjx"},"content":"        descriptor.getSpecies().ifPresent(species -\u003e sb.append(PREFIX_SPECIES).append(species.species).append(\" \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        descriptor.getFeedingInterval().ifPresent(feedingInterval -\u003e sb.append(PREFIX_FEEDING_INTERVAL)","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"                .append(feedingInterval.value).append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        descriptor.getTank().ifPresent(tank -\u003e sb.append(PREFIX_TANK).append(tank.getTankName().fullTankName)","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"                .append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"TimothyLawSongEn":1,"bryanongjx":3,"bokuanT":23,"ryanchua00":3,"-":40}},{"path":"src/test/java/seedu/address/testutil/TankBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * A utility class to help with building Tank objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public class TankBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final String DEFAULT_NAME \u003d \"Coral Tank 2\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    private TankName tankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"     * Creates a {@code TankBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public TankBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        tankName \u003d new TankName(DEFAULT_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     * Initializes the TankBuilder with the data of {@code tankToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public TankBuilder(Tank tankToCopy) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        tankName \u003d tankToCopy.getTankName();","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     * Sets the {@code Name} of the {@code Tank} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public TankBuilder withTankName(String name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        this.tankName \u003d new TankName(name);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    public Tank build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        return new Tank(tankName, new AddressBook(), new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bokuanT":6,"ryanchua00":36}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * Returns the middle index of the fish in the {@code model}\u0027s fish list.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        return Index.fromOneBased(model.getFilteredFishList().size() / 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Returns the last index of the fish in the {@code model}\u0027s fish list.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        return Index.fromOneBased(model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Returns the fish in the {@code model}\u0027s fish list at {@code index}.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public static Fish getFish(Model model, Index index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredFishList().get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalFishes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_FEEDING_INTERVAL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_FED_DATE_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SPECIES_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TYPICAL_TANK_1_STRING;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TYPICAL_TANK_2_STRING;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":" * A utility class containing a list of {@code Fish} objects to be used in tests.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"public class TypicalFishes {","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public static final Fish ALICE \u003d new FishBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            .withFeedingInterval(\"1d1h\").withSpecies(\"Guppy\")","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"            .withLastFedDate(\"06/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            .withTank(TYPICAL_TANK_1_STRING)","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static final Fish BENSON \u003d new FishBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            .withFeedingInterval(\"1d1h\")","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"            .withSpecies(\"Tetra\").withLastFedDate(\"06/07/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            .withTank(TYPICAL_TANK_1_STRING)","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish CARL \u003d new FishBuilder().withName(\"Carl Kurz\").withLastFedDate(\"08/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Beta\").withFeedingInterval(\"1d1h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish DANIEL \u003d new FishBuilder().withName(\"Daniel Meier\").withLastFedDate(\"09/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Parrot\").withFeedingInterval(\"1d1h\").withTank(TYPICAL_TANK_1_STRING).withTags(\"friends\")","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish ELLE \u003d new FishBuilder().withName(\"Elle Meyer\").withLastFedDate(\"10/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Arowana\").withFeedingInterval(\"1d1h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish FIONA \u003d new FishBuilder().withName(\"Fiona Kunz\").withLastFedDate(\"11/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Fighting\").withFeedingInterval(\"1d1h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish GEORGE \u003d new FishBuilder().withName(\"George Best\").withLastFedDate(\"12/06/2003 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Beta\").withFeedingInterval(\"1d1h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish HOON \u003d new FishBuilder().withName(\"Hoon Meier\").withLastFedDate(\"01/01/2000 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Guppy\").withFeedingInterval(\"0d19h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static final Fish IDA \u003d new FishBuilder().withName(\"Ida Mueller\").withLastFedDate(\"01/01/2000 00:00\")","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(\"Tetra\").withFeedingInterval(\"0d20h\").withTank(TYPICAL_TANK_1_STRING).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    // Manually added - Fish\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public static final Fish AMY \u003d new FishBuilder().withName(VALID_NAME_AMY).withLastFedDate(VALID_LAST_FED_DATE_AMY)","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(VALID_SPECIES_AMY).withFeedingInterval(VALID_FEEDING_INTERVAL_AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            .withTank(TYPICAL_TANK_1_STRING)","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public static final Fish BOB \u003d new FishBuilder().withName(VALID_NAME_BOB).withLastFedDate(VALID_LAST_FED_DATE_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"            .withSpecies(VALID_SPECIES_BOB).withFeedingInterval(VALID_FEEDING_INTERVAL_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"            .withTank(TYPICAL_TANK_2_STRING).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    private TypicalFishes() {} // prevents instantiation","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code AddressBook} with all the typical Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        for (Fish fish : getTypicalFishes()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"            //For testing purposes, ensure the tanks of Typical Fish is not changed by other tests","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"            fish.setTank(new Tank(new TankName(TYPICAL_TANK_1_STRING), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"                    new UniqueIndividualReadingLevels()));","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"            ab.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public static List\u003cFish\u003e getTypicalFishes() {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"TimothyLawSongEn":9,"bokuanT":49,"-":32}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_FIRST_FISH \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_SECOND_FISH \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_THIRD_FISH \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_FIRST_TANK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_SECOND_TANK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_THIRD_TANK \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"bokuanT":3,"ryanchua00":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalReadings.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTanks;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.FullReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * A utility class containing a list of {@code FullReadingLevels} objects to be used in tests.","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class TypicalReadings {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code FullReadingLevels} with all the typical Individual Reading levels","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static FullReadingLevels getTypicalFullReadingLevels() {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        FullReadingLevels readings \u003d new FullReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        for (UniqueIndividualReadingLevels r : getTypicalIndividualReadings()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            readings.addIndividualReadingLevel(r);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        return readings;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public static List\u003cUniqueIndividualReadingLevels\u003e getTypicalIndividualReadings() {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels r1 \u003d new UniqueIndividualReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        r1.setTank(getTypicalTanks().get(0));","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        UniqueIndividualReadingLevels r2 \u003d new UniqueIndividualReadingLevels();","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        r2.setTank(getTypicalTanks().get(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(r1, r2));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"bokuanT":34}},{"path":"src/test/java/seedu/address/testutil/TypicalTanks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":" * A utility class containing a list of {@code Tank} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"public class TypicalTanks {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final Tank TANK_A \u003d new TankBuilder().withTankName(\"Tank A\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public static final Tank TANK_B \u003d new TankBuilder().withTankName(\"Tank B\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static final Tank TANK_C \u003d new TankBuilder().withTankName(\"Tank C\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static final String TYPICAL_TANK_1_STRING \u003d \"Saltwater Tank 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String TYPICAL_TANK_2_STRING \u003d \"Freshwater Tank 3\";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    //To be added later in test class JsonTankListStorageTest","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public static final Tank TANK_D \u003d new TankBuilder().withTankName(\"Tank D\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static final Tank TANK_E \u003d new TankBuilder().withTankName(\"Tank E\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    private TypicalTanks() {} // prevents instantiation","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code TankList} with all the typical tanks.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    public static TankList getTypicalTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        TankList tl \u003d new TankList();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        for (Tank task : getTypicalTanks()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"            tl.addTank(task);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        return tl;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    public static List\u003cTank\u003e getTypicalTanks() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        Tank tankOne \u003d new Tank(new TankName(TYPICAL_TANK_1_STRING), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        Tank tankTwo \u003d new Tank(new TankName(TYPICAL_TANK_2_STRING), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                new UniqueIndividualReadingLevels());","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(tankOne, tankTwo));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code TankList} with all the typical tanks (version 2).","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Used in JsonSerializableTankListTest and JsonTankListStorageTest","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public static TankList getTypicalTankListVersionTwo() {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        TankList tl \u003d new TankList();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        for (Tank task : getTypicalTanksVersionTwo()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            tl.addTank(task);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        return tl;","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public static List\u003cTank\u003e getTypicalTanksVersionTwo() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TANK_A, TANK_B, TANK_C));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bokuanT":29,"ryanchua00":32}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalTanks.TYPICAL_TANK_1_STRING;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.readings.UniqueIndividualReadingLevels;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"bryanongjx"},"content":"import seedu.address.model.task.Priority;","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public static final Task TASK_ONE \u003d new Task(new Description(\"clean tank\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            new Tank(new TankName(TYPICAL_TANK_1_STRING), new AddressBook(),","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"                    new UniqueIndividualReadingLevels()), new Priority(\"medium\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"bryanongjx"},"content":"    public static final Task TASK_TWO \u003d new Task(new Description(\"feed fish\"), null, null);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     * Returns an {@code TaskList} with all the typical tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"            tl.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        return tl;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_ONE, TASK_TWO));","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"bryanongjx":2,"bokuanT":9,"ryanchua00":33}}]
