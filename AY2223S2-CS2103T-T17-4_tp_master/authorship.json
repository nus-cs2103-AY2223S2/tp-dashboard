[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T17-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T17-4/tp/actions)","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"# Fish Ahoy!","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"* Fish Ahoy! is a CLI (Command Line interface)-friendly product with a GUI to easily view your information","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"* The project aims to help fish enthusiasts manage their aquariums, fish and tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"With Fish Ahoy!, users can:","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"* Keep track of individual fishes","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"* Keep track of their fish tanks","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* Keep track of fish maintenance tasks","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  ","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"See our documentation: **[Fish Ahoy! Product Website](https://ay2223s2-cs2103t-t17-4.github.io/tp/)**.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":2,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"You can reach us at the emails `e0725564@u.nus.edu`, `e0725569@u.nus.edu`, `e0860597@u.nus.edu`,` e0908339@u.nus.edu` or `e0701815@u.nus.edu`","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"### Timothy","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/timothylawsongen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"[[github](https://github.com/TimothyLawSongEn)]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/timothylawsongen.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"### Bryan","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/bryanongjx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/bryanongjx)]","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/bryanongjx.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"### Ryan","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/ryanchua00.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/ryanchua00)] [[portfolio](team/ryanchua00.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"### Bo Kuan","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/bokuant.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/bokuanT)]","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/bokuant.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"### Avery","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"\u003cimg src\u003d\"images/diamondroxxx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"[[github](http://github.com/Diamondroxxx)]","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"[[portfolio](team/diamondroxxx.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":19,"-":38,"Diamondroxxx":1}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `FishListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"* depends on some classes in the `Model` component, as it displays `Fish` object residing in the `Model`.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a fish).","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"* stores the address book data i.e., all `Fish` objects (which are contained in a `UniqueFishList` object).","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"* stores the currently \u0027selected\u0027 `Fish` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cFish\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Fish` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Fish` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"Step 2. The user executes `delete 5` command to delete the 5th fish in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"Step 3. The user executes `add n/David …​` to add a new fish. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"Step 4. The user now decides that adding the fish was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the fish being deleted).","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"\u003e This product is for fish enthusiasts who wants to keep track of their numerous fishes\u0027 details, such as their health, tank status, feeding requirements etc.","lastModifiedDate":"2023-02-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"**Value proposition**: ","lastModifiedDate":"2023-02-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"\u003e This product makes it easier for fish keepers to keep track of numerous tasks to maintain the health of the fish and fish tanks. There are many fine details that go into maintaining an environment for live aquatic animals, and this product will help track them.","lastModifiedDate":"2023-02-24"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                          | So that I can…​                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"|---------|---------|---------------------------------------|------------------------------------------------|","lastModifiedDate":"2023-02-24"},{"lineNumber":272,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | be able to create weekly tasks        | have a record of my tasks throughout the week |","lastModifiedDate":"2023-02-28"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | keep track of the individual tanks    | so that I can manage them in the future        |","lastModifiedDate":"2023-02-24"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | access a local fish database          | know more about my fish                        |","lastModifiedDate":"2023-02-24"},{"lineNumber":275,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | delete my fish from the system easily | get rid of dead fish                           |","lastModifiedDate":"2023-02-28"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | delete a task                         | check off completed tasks                      |","lastModifiedDate":"2023-02-24"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"| `* * *` | user    | delete a tank                         | keep my tank status updated if I retire a tank |","lastModifiedDate":"2023-02-24"},{"lineNumber":278,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | view all my fishes at a glance                          |  keep track of their numbers |","lastModifiedDate":"2023-02-28"},{"lineNumber":279,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | view my weekly tasks I need to fulfill for each of my fish tanks | not miss any tasks throughout the week |","lastModifiedDate":"2023-02-28"},{"lineNumber":280,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | user    | transfer my data from one system to another | change my systems |","lastModifiedDate":"2023-02-28"},{"lineNumber":281,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | fish keeper | delete fish from a tank | move them to different tanks |","lastModifiedDate":"2023-02-28"},{"lineNumber":282,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | fish keeper | know which food can be fed to each fish | keep them well fed |","lastModifiedDate":"2023-02-28"},{"lineNumber":283,"author":{"gitId":"ryanchua00"},"content":"| `* * *` | owner of multiple fish tanks | know the number and type of fish in each tank | monitor their condition |","lastModifiedDate":"2023-02-28"},{"lineNumber":284,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | know the number of fish for each species | know if any species requires help |","lastModifiedDate":"2023-02-28"},{"lineNumber":285,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | know the health conditions of my fish | be updated on their conditions |","lastModifiedDate":"2023-02-28"},{"lineNumber":286,"author":{"gitId":"ryanchua00"},"content":"| `* *` | fish keeper | attach a picture to the fish\u0027s entry | identify it and track it\u0027s growth |","lastModifiedDate":"2023-02-28"},{"lineNumber":287,"author":{"gitId":"ryanchua00"},"content":"| `*` | expert user | customize my entries fields | suit the app to my use |","lastModifiedDate":"2023-02-28"},{"lineNumber":288,"author":{"gitId":"ryanchua00"},"content":"| `*` | inexperienced fish keeper | know what are the required equipment for keeping fish | my fish won\u0027t die |","lastModifiedDate":"2023-02-28"},{"lineNumber":289,"author":{"gitId":"ryanchua00"},"content":"| `*` | inexperienced fish keeper | know what equipment is compatible with my tanks | |","lastModifiedDate":"2023-02-28"},{"lineNumber":290,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know the conditions of my equipment | maintain them |","lastModifiedDate":"2023-02-28"},{"lineNumber":291,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know ammonia levels in fish tanks | adjust the amount at the end of every week |","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"ryanchua00"},"content":"| `*` | fish keeper | know nitrate levels in fish tanks | adjust the amount at the end of every week |","lastModifiedDate":"2023-02-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"(For all use cases below, the **System** is `Fish Ahoy!` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-24"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"bokuanT"},"content":"**Use case: Add a fish**","lastModifiedDate":"2023-02-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"bokuanT"},"content":"1. User adds a fish","lastModifiedDate":"2023-02-24"},{"lineNumber":306,"author":{"gitId":"bokuanT"},"content":"2. Fish is added to Fish Ahoy!","lastModifiedDate":"2023-02-24"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"bokuanT"},"content":"* 1a. User specifies a tank.","lastModifiedDate":"2023-02-24"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"    * 1a1. Fish is added to the tank.","lastModifiedDate":"2023-02-24"},{"lineNumber":315,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"ryanchua00"},"content":"**Use case: Add a tank**","lastModifiedDate":"2023-02-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":320,"author":{"gitId":"ryanchua00"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":322,"author":{"gitId":"ryanchua00"},"content":"1. User adds a tank","lastModifiedDate":"2023-02-28"},{"lineNumber":323,"author":{"gitId":"ryanchua00"},"content":"2. Tank is added to Fish Ahoy!","lastModifiedDate":"2023-02-28"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":325,"author":{"gitId":"ryanchua00"},"content":"  Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":326,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":327,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"**Use case: Add a task**","lastModifiedDate":"2023-02-24"},{"lineNumber":329,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":330,"author":{"gitId":"bokuanT"},"content":"**MSS**","lastModifiedDate":"2023-02-24"},{"lineNumber":331,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":332,"author":{"gitId":"bokuanT"},"content":"1. User adds a task","lastModifiedDate":"2023-02-24"},{"lineNumber":333,"author":{"gitId":"bokuanT"},"content":"2. Task is added to Fish Ahoy!","lastModifiedDate":"2023-02-24"},{"lineNumber":334,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":335,"author":{"gitId":"bokuanT"},"content":"   Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":337,"author":{"gitId":"bokuanT"},"content":"**Extensions**","lastModifiedDate":"2023-02-24"},{"lineNumber":338,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":339,"author":{"gitId":"bokuanT"},"content":"* 1a. User specifies if the task is a `todo`.","lastModifiedDate":"2023-02-24"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"bokuanT"},"content":"    * 1a1. `todo` task is created.","lastModifiedDate":"2023-02-24"},{"lineNumber":342,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"    Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":344,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":345,"author":{"gitId":"bokuanT"},"content":"* 1b. User specifies if the task is a `deadline`.","lastModifiedDate":"2023-02-24"},{"lineNumber":346,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":347,"author":{"gitId":"bokuanT"},"content":"  * 1b1. `deadline` task is created. ","lastModifiedDate":"2023-02-24"},{"lineNumber":348,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":349,"author":{"gitId":"bokuanT"},"content":"    Use case ends.","lastModifiedDate":"2023-02-24"},{"lineNumber":350,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":351,"author":{"gitId":"ryanchua00"},"content":"* 1c. User specifies if the task includes a `fish`.","lastModifiedDate":"2023-02-28"},{"lineNumber":352,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":353,"author":{"gitId":"ryanchua00"},"content":"    * 1b1. task is created and `fish` is tagged to it.","lastModifiedDate":"2023-02-28"},{"lineNumber":354,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":355,"author":{"gitId":"ryanchua00"},"content":"      Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    *{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"bokuanT"},"content":"2.  Should be able to hold up to 1000 fish, tanks and tasks without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-24"},{"lineNumber":363,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"ryanchua00"},"content":"4.  A user with average experience of CLI should be able to use the system.","lastModifiedDate":"2023-02-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"bokuanT"},"content":"* **Fish**: A fish owned by the user to be added to Fish Ahoy!","lastModifiedDate":"2023-02-24"},{"lineNumber":373,"author":{"gitId":"ryanchua00"},"content":"* **Tank**: A fish tank owned by the user to house fish to be added to Fish Ahoy!","lastModifiedDate":"2023-02-28"},{"lineNumber":374,"author":{"gitId":"ryanchua00"},"content":"* **Task**: A weekly task of the user regarding fish-keeping to be added to Fish Ahoy!","lastModifiedDate":"2023-02-28"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"bokuanT"},"content":"### Deleting a fish","lastModifiedDate":"2023-02-26"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"bokuanT"},"content":"1. Deleting a fish while all fish are being shown","lastModifiedDate":"2023-02-26"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"bokuanT"},"content":"   1. Prerequisites: List all fish using the `list` command. Multiple fish in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"bokuanT"},"content":"      Expected: No fish is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-02-26"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":52,"ryanchua00":32,"-":343}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003cimg src\u003d\"images/logo.png\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"Fish Ahoy! Is a **desktop app for managing your fish, fish tanks, and relevant tasks, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"* Table of Contents\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"  * [Quickstart](#quick-start)","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * [Features](#features)","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    * [Help](#viewing-help--help)","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    * [Adding a tank `add tank`](#adding-a-tank-add)","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    * [Adding a fish `add fish`](#adding-a-fish-add)","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    * [Adding a task `add task`](#adding-a-task-add)","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    * [Listing tanks `list tank`](#listing-tanks-list-tank)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    * [Listing fishes `list fish`](#listing-fishes-list-fish)","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    * [Listing fishes in a tank `list fish /tank`](#listing-fishes-in-a-tank-list-fish-tank)","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    * [Listing tasks `list task`](#listing-tasks-list-task)","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    * [Deleting a tank `delete tank`](#deleting-a-tank-delete-tank)","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    * [Deleting a fish `delete fish`](#deleting-a-fish-delete-fish)","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    * [Deleting a task `delete task`](#deleting-a-task-delete-task)","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"  * [FAQ](#faq)","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * [Summary](#command-summary)","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"2. Download the latest fishahoy.jar from here.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"3. Copy the file to the folder you want to use as the home folder for Fish Ahoy!.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar fishahoy.jar` command to run the application.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"5. Type a command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"   Some examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"   * `add fish /name guppy /tank Freshwater tank 1`: Add a fish to your fish book.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"6. Refer to the [Features](#Features) below for details of each command.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"### Adding a tank: `add`","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"Adds a tank to the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"Format: `add tank /tank \u003cTANK_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"### Adding a fish: `add`","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"Adds a fish to the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"Format: `add fish /name \u003cFISH_NAME\u003e /tank \u003cTANK_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"A fish can belong to a tank","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"### Adding a task: `add`","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"Adds a task to the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"Format: `add task /name \u003cTASK_NAME\u003e /by \u003cDD/MM/YYYY\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"### Listing tanks: `list tank`","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"Lists all tanks created.","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"Format: `list tank`","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"### Listing fishes: `list fish`","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"Lists all fishes owned.","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"Format: `list fish`","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"### Listing fishes in a tank: `list fish /tank`","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"Lists all fishes in a specific tank.","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"Format: `list fish /tank \u003cTANK_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"### Listing tasks: `list task`","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"Lists all tasks created.","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"Format: `list task`","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"### Deleting a fish: `delete fish`","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"Deletes a fish entry from the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"Format: `delete fish /name \u003cFISH_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"### Deleting a tank: `delete tank`","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"Delete a tank entry from the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"Format: `delete tank /tank \u003cTANK_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"### Deleting a task: `delete task`","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"Delete a task entry from the app.","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"Format: `delete task /name \u003cTASK_NAME\u003e`","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"App data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"App data are saved as a JSON file `[JAR file location]/data/fishahoy.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"If your changes to the data file makes its format invalid, Fish Ahoy! will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Fish Ahoy! home folder.","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"**Add** | `add  fish` etc.","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"**Clear** | `clear` **Coming soon**","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"**Edit** | **Coming soon**","lastModifiedDate":"2023-02-23"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e **Coming soon**","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":74,"-":94}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteFish(p)","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"AddressBook *-right-\u003e \"1\" UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"UniqueTagList -[hidden]down- UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"UniqueTagList -[hidden]down- UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"UniqueFishList -right-\u003e Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Fish -up-\u003e \"*\" Tag","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Name","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Phone","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Email","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Address","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"DeleteCommand -\u003e Model : deleteFish(1)","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Class UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"Class Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"AddressBook *--\u003e \"1\" UniqueFishList","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"UniqueFishList --\u003e \"~* all\" Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Name","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Phone","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Email","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e Address","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"Fish *--\u003e \"*\" Tag","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"ModelManager --\u003e\"~* filtered\" Fish","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":10,"-":40}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"Class JsonAdaptedFish","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedFish","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"JsonAdaptedFish --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":3,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"Class FishListPanel","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"Class FishCard","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"MainWindow *-down-\u003e \"1\" FishListPanel","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"FishListPanel -down-\u003e \"*\" FishCard","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"FishListPanel --|\u003e UiPart","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"FishCard --|\u003e UiPart","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"FishCard ..\u003e Model","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"FishListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"bokuanT":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"ecp -\u003e ec ++: index, editFishDescriptor","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"bokuanT":1,"-":20}},{"path":"docs/team/bokuant.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Bo Kuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/team/bryanongjx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Bryan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/team/diamondroxxx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Avery\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/team/ryanchua00.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Ryan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/team/timothylawsongen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"title: Timothy\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"bokuanT":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":" * Changes the remark of an existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"            + \": Edits the remark of the fish identified \"","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"            + \"by the index number used in the last fish listing. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"     * @param index of the fish in the filtered fish list to edit the remark","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"     * @param remark of the fish to be updated to","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of fish data. We achieve that by working with the `Fish` model. Each field in a Fish is implemented as a separate class (e.g. a `Name` object represents the fish’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"Create a new `Remark` in `seedu.address.model.fish`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"Simply add the following to [`seedu.address.ui.FishCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"Then insert the following into [`main/resources/view/FishListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"**`FishListCard.fxml`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"## Modify `Fish` to support a `Remark` field","lastModifiedDate":"2023-02-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"Since `FishCard` displays data from a `Fish`, we need to update `Fish` to get our `Remark` displayed!","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"### Modify `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"We change the constructor of `Fish` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-02-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"### Update other usages of `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"Unfortunately, a change to `Fish` will cause other commands to break, you will have to modify these commands to use the updated `Fish`!","lastModifiedDate":"2023-02-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Fish` class to find these commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"bokuanT"},"content":"AddressBook stores data by serializing `JsonAdaptedFish` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedFish` to work with our new `Fish`!","lastModifiedDate":"2023-02-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"bokuanT"},"content":"Now that we have finalized the `Fish` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-02-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"bokuanT"},"content":"public FishCard(Fish fish, int displayedIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"bokuanT"},"content":"    remark.setText(fish.getRemark().value);","lastModifiedDate":"2023-02-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"bokuanT"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Fish`. Since all fields in a `Fish` are immutable, we create a new instance of a `Fish` with the values that we want and","lastModifiedDate":"2023-02-26"},{"lineNumber":329,"author":{"gitId":"bokuanT"},"content":"save it with `Model#setFish()`.","lastModifiedDate":"2023-02-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":336,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_Fish_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"bokuanT"},"content":"        Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":347,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new Fish(","lastModifiedDate":"2023-02-26"},{"lineNumber":348,"author":{"gitId":"bokuanT"},"content":"                fishToEdit.getName(), fishToEdit.getPhone(), fishToEdit.getEmail(),","lastModifiedDate":"2023-02-26"},{"lineNumber":349,"author":{"gitId":"bokuanT"},"content":"                fishToEdit.getAddress(), remark, fishToEdit.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"bokuanT"},"content":"        model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":352,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(PREDICATE_SHOW_ALL_Fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(generateSuccessMessage(editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"bokuanT"},"content":"     * {@code fishToEdit}.","lastModifiedDate":"2023-02-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"bokuanT"},"content":"    private String generateSuccessMessage(Fish fishToEdit) {","lastModifiedDate":"2023-02-26"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"bokuanT"},"content":"        return String.format(message, fishToEdit);","lastModifiedDate":"2023-02-26"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"bokuanT":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Fish` class.","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"The `address` field in `Fish` is actually an instance of the `seedu.address.model.fish.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditFishDescriptor` may require more careful inspection.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"Let’s try removing references to `Address` in `EditFishDescriptor`.","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"1. Safe delete the field `address` in `EditFishDescriptor`.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Fish` class will require you to modify its constructor.","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `FishCard` that has not been removed nor identified.","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"A quick look at the `FishCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"**`FishCard.java`**","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"**`FishCard.fxml`**","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"**`invalidFishAddressBook.json`:**","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"  \"fish\": [ {","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    \"name\": \"Fish with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"bokuanT"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditFishDescriptor`. Recall that we can verify the contents of `editFishDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"       Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"       Fish editedFish \u003d createEditedFish(fishToEdit, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"       if (!fishToEdit.isSameFish(editedFish) \u0026\u0026 model.hasFish(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_Fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"       model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"       model.updateFilteredFishList(PREDICATE_SHOW_ALL_Fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_Fish_SUCCESS, editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"   * it uses the `setFish()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the fish data.","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"   * it uses the `updateFilteredFishList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ fish.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"     FYI, The \u0027filtered list\u0027 is the list of fish resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the fish so that the user can see the edited fish along with all other fish. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of fish is being tracked.","lastModifiedDate":"2023-02-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"bokuanT"},"content":"        fish.addAll(","lastModifiedDate":"2023-02-26"},{"lineNumber":235,"author":{"gitId":"bokuanT"},"content":"            source.getFishList()","lastModifiedDate":"2023-02-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"                  .map(JsonAdaptedFish::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"1. It appears that a `JsonAdaptedFish` is created for each `Fish` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-02-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"bokuanT"},"content":"    5.  Add a new field to `Fish`","lastModifiedDate":"2023-02-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bokuanT":17,"-":284}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/*Hi all, let\u0027s have a good team project*/","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ryanchua00":2,"-":25}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleTaskUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.storage.TaskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        TaskListStorage taskListStorage \u003d new JsonTaskListStorage(userPrefs.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyTaskList\u003e taskListOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTaskList initialTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"            taskListOptional \u003d storage.readTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"            if (taskListOptional.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TaskList\");","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d taskListOptional.orElseGet(SampleTaskUtil::getSampleTaskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TaskList\");","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TaskList\");","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"            initialTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        //TODO","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        /*","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cReadOnlyTankList\u003e tankListOptional;","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        ReadOnlyTankList initialTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"         try {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"            tankListOptional \u003d storage.readTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"            if (tankListOptional.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"                logger.info(\"Data file not found. Will be starting with a sample TankList\");","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d tankListOptional.orElseGet(SampleTankUtil::getSampleTankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        }  catch (DataConversionException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty TankList\");","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d new TankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty TankList\");","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            initialTankList \u003d new TankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        } */","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        return new ModelManager(initialData, userPrefs, initialTaskList, new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":43,"-":181}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_INVALID_FISH_DISPLAYED_INDEX \u003d \"The fish index provided is invalid\";","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_FISHES_LISTED_OVERVIEW \u003d \"%1$d Fishes listed!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_INVALID_TANK_DISPLAYED_INDEX \u003d \"The tank index provided is invalid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":3,"ryanchua00":1,"-":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered list of Fishes */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":6,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            storage.saveTaskList(model.getTaskList());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bokuanT":10,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Adds a fish to the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a fish to the address book. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New fish added: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book\";","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    private final Fish toAdd;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Creates an AddCommand to add the specified {@code Fish}","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    public AddCommand(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        toAdd \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        if (model.hasFish(toAdd)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        model.addFish(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":13,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Deletes a fish identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            + \": Deletes the fish identified by the index number used in the displayed fish list.\\n\"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_FISH_SUCCESS \u003d \"Deleted Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        model.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_FISH_SUCCESS, fishToDelete));","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":" * Edits the details of an existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the fish identified \"","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            + \"by the index number used in the displayed fish list. \"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_EDIT_FISH_SUCCESS \u003d \"Edited Fish: %1$s\";","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"This fish already exists in the address book.\";","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    private final EditFishDescriptor editFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"     * @param index of the fish in the filtered fish list to edit","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * @param editFishDescriptor details to edit the fish with","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    public EditCommand(Index index, EditFishDescriptor editFishDescriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        this.editFishDescriptor \u003d new EditFishDescriptor(editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e lastShownList \u003d model.getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        Fish fishToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d createEditedFish(fishToEdit, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        if (!fishToEdit.isSameFish(editedFish) \u0026\u0026 model.hasFish(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        model.setFish(fishToEdit, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_FISH_SUCCESS, editedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     * Creates and returns a {@code Fish} with the details of {@code fishToEdit}","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"     * edited with {@code editFishDescriptor}.","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    private static Fish createEditedFish(Fish fishToEdit, EditFishDescriptor editFishDescriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        assert fishToEdit !\u003d null;","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        Name updatedName \u003d editFishDescriptor.getName().orElse(fishToEdit.getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        Phone updatedPhone \u003d editFishDescriptor.getPhone().orElse(fishToEdit.getPhone());","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        Email updatedEmail \u003d editFishDescriptor.getEmail().orElse(fishToEdit.getEmail());","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        Address updatedAddress \u003d editFishDescriptor.getAddress().orElse(fishToEdit.getAddress());","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        Set\u003cTag\u003e updatedTags \u003d editFishDescriptor.getTags().orElse(fishToEdit.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return new Fish(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 editFishDescriptor.equals(e.editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"     * Stores the details to edit the fish with. Each non-empty field value will replace the","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"     * corresponding field value of the fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    public static class EditFishDescriptor {","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        public EditFishDescriptor() {}","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        public EditFishDescriptor(EditFishDescriptor toCopy) {","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"            if (!(other instanceof EditFishDescriptor)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"            EditFishDescriptor e \u003d (EditFishDescriptor) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"bokuanT":44,"-":182}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * Finds and lists all Fishes in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all Fishes whose names contain any of \"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                String.format(Messages.MESSAGE_FISHES_LISTED_OVERVIEW, model.getFilteredFishList().size()));","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"bokuanT":5,"-":37}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Lists all Fishes in the address book to the user.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all Fishes\";","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" * Parses input arguments and creates a new TankAddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommand extends TankCommand {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"            + \": Adds a Tank to Fish Ahoy!. \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"            + PREFIX_DESCRIPTION + \"Saltwater Tank 1 \";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Tank added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DUPLICATE_TANK \u003d \"This Tank already exists in Fish Ahoy!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    private final Tank toAdd;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"     * Constructs a {@code TankAddCommand} with the {@code Tank} to be added to the {@code TankList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public TankAddCommand(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        toAdd \u003d tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        if (model.hasTank(toAdd)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        model.addTank(toAdd);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 toAdd.equals(((TankAddCommand) other).toAdd));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":55}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Adds Tank to Fish Ahoy!","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public abstract class TankCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final String COMMAND_WORD \u003d \"tank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003ctank command word\u003e\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"            + \"Tank commands: add, \"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"            + \"delete\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":26}},{"path":"src/main/java/seedu/address/logic/commands/tank/TankDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" * Deletes a {@code Tank} identified using it\u0027s displayed index from the {@code TankList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"public class TankDeleteCommand extends TankCommand {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public static final String TANK_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TANK_COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"            + \": Deletes the Tank identified by the index number used in the displayed Tank List.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TANK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    public static final String MESSAGE_DELETE_TANK_SUCCESS \u003d \"Deleted Tank: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     * Constructs an {@code TankDeleteCommand} to delete an existing {@code Tank}.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"     * @param targetIndex The index of the {@code Tank} to delete.","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    public TankDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        List\u003cTank\u003e lastShownList \u003d model.getFilteredTankList();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        model.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TANK_SUCCESS, tankToDelete));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 targetIndex.equals(((TankDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":60}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"public class TaskAddCommand extends TaskCommand {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TASK_COMMAND_WORD","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"            + \": Adds a Task to Fish Ahoy!. \\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TASK_COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            + PREFIX_DESCRIPTION + \"Clean fresh water tank \";","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Task added: %1$s\";","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This Task already exists in Fish Ahoy!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code TaskAddCommand} with the {@code Task} to be added to the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public TaskAddCommand(Task task) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskAddCommand // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 toAdd.equals(((TaskAddCommand) other).toAdd));","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":55}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Adds Task to Fish Ahoy!","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public abstract class TaskCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\u003ctask command word\u003e\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            + \"Task commands: add, \"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            + \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":26}},{"path":"src/main/java/seedu/address/logic/commands/task/TaskDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.commands.task;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * Deletes a {@code Task} identified using it\u0027s displayed index from the {@code TaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class TaskDeleteCommand extends TaskCommand {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static final String TASK_COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" \" + TASK_COMMAND_WORD","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            + \": Deletes the Task identified by the index number used in the displayed Task List.\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + TASK_COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Constructs an {@code TaskDeleteCommand} to delete an existing {@code Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * @param targetIndex The index of the {@code Task} to delete.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TaskDeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 targetIndex.equals(((TaskDeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":60}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new Fish(name, phone, email, address, tagList);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return new AddCommand(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"bokuanT":7,"-":53}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.task.TaskCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.tank.TankParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.task.TaskParser;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        case TaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"            return new TaskParser().parseCommand(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankParser().parseCommand(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"TimothyLawSongEn":7,"bokuanT":3,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /* Task prefixes */","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"bokuanT":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor editFishDescriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            editFishDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editFishDescriptor::setTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        if (!editFishDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        return new EditCommand(index, editFishDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bokuanT":9,"-":73}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"bokuanT":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"     * Parses a {@code String} into an {@code Description}.","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the given {@code description} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses a {@code String} into an {@code TankName}.","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the given {@code fullTankName} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"TimothyLawSongEn"},"content":"    public static TankName parseTankName(String fullTankName) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"TimothyLawSongEn"},"content":"        requireNonNull(fullTankName);","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"TimothyLawSongEn"},"content":"        String trimmedDescription \u003d fullTankName.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!Description.isValidDescription(fullTankName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(TankName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new TankName(trimmedDescription);","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"TimothyLawSongEn":16,"bokuanT":20,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankAddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankAddCommandParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskAddCommand}","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskAddCommand} object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"                    TankAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        TankName tankName \u003d ParserUtil.parseTankName(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        Tank tank \u003d new Tank(tankName);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"        return new TankAddCommand(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":52}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankDeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankDeleteCommandParser implements Parser\u003cTankDeleteCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"    public TankDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankDeleteCommand(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":31}},{"path":"src/main/java/seedu/address/logic/parser/tank/TankParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"TimothyLawSongEn"},"content":"package seedu.address.logic.parser.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"TimothyLawSongEn"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankAddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.commands.tank.TankDeleteCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"TimothyLawSongEn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"TimothyLawSongEn"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"TimothyLawSongEn"},"content":" * Parses user input for {@code Task} commands.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"TimothyLawSongEn"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"TimothyLawSongEn"},"content":"public class TankParser {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Used for separation of task command word and args.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"TimothyLawSongEn"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ctankCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"TimothyLawSongEn"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"TimothyLawSongEn"},"content":"     * Parses user input into {@code Task} command for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"TimothyLawSongEn"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @param userInput User input string excluding the \"Task\" command word.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @return The {@code Task} command based on the user input.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"TimothyLawSongEn"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"TimothyLawSongEn"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"TimothyLawSongEn"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"TimothyLawSongEn"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"TimothyLawSongEn"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TankCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"TimothyLawSongEn"},"content":"        final String tankCommandWord \u003d matcher.group(\"tankCommandWord\");","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"TimothyLawSongEn"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"TimothyLawSongEn"},"content":"        switch (tankCommandWord) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankAddCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankAddCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"TimothyLawSongEn"},"content":"        case TankDeleteCommand.TANK_COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"TimothyLawSongEn"},"content":"            return new TankDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"TimothyLawSongEn"},"content":"        default:","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"TimothyLawSongEn"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"TimothyLawSongEn"},"content":"                    TankCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"TimothyLawSongEn"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"TimothyLawSongEn"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"TimothyLawSongEn"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"TimothyLawSongEn"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"TimothyLawSongEn":50}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskAddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskAddCommand;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new TaskAddCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class TaskAddCommandParser {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskAddCommand}","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * and returns a {@code TaskAddCommand} object for execution.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public TaskAddCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION)","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"                    TaskAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"        return new TaskAddCommand(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":48,"ryanchua00":4}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskDeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskDeleteCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Parses input arguments and creates a new {@code TaskDeleteCommand} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public class TaskDeleteCommandParser implements Parser\u003cTaskDeleteCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TaskDeleteCommand}","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     * and returns a {@code TaskDeleteCommand} object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public TaskDeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            return new TaskDeleteCommand(index);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskDeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":30}},{"path":"src/main/java/seedu/address/logic/parser/task/TaskParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.logic.parser.task;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskAddCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.task.TaskDeleteCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Parses user input for {@code Task} commands.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TaskParser {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * Used for separation of task command word and args.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ctaskCommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Parses user input into {@code Task} command for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * @param userInput User input string excluding the \"Task\" command word.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * @return The {@code Task} command based on the user input.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     * @throws ParseException If the user input does not conform with the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        final String taskCommandWord \u003d matcher.group(\"taskCommandWord\");","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        switch (taskCommandWord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        case TaskAddCommand.TASK_COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            return new TaskAddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        case TaskDeleteCommand.TASK_COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            return new TaskDeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        default:","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":51}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.UniqueFishList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameFish comparison)","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private final UniqueFishList fishes;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        fishes \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Creates an AddressBook using the fishes in the {@code toBeCopied}","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the fish list with {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not contain duplicate fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        this.fishes.setFishes(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        setFishes(newData.getFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    //// fish-level operations","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a fish with the same identity as {@code fish} exists in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        return fishes.contains(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * Adds a fish to the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * The fish must not already exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public void addFish(Fish p) {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        fishes.add(p);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given fish {@code target} in the list with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        fishes.setFish(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    public void removeFish(Fish key) {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        fishes.remove(key);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        return fishes.asUnmodifiableObservableList().size() + \" fishes\";","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        return fishes.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fishes.equals(((AddressBook) other).fishes));","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        return fishes.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":32,"-":88}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    Predicate\u003cFish\u003e PREDICATE_SHOW_ALL_FISHES \u003d unused -\u003e true;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a fish with the same identity as {@code fish} exists in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    boolean hasFish(Fish fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * The fish must exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    void deleteFish(Fish target);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * Adds the given fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not already exist in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    void addFish(Fish fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given fish {@code target} with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    void setFish(Fish target, Fish editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered fish list */","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFilteredFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"     * Updates the filter of the filtered fish list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredFishList(Predicate\u003cFish\u003e predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"    void setTaskList(ReadOnlyTaskList taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    ReadOnlyTaskList getTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"    void setTaskListFilePath(Path taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a Task with the same identity as {@code Task} exists in Fish Ahoy!.","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"     * Adds the given Task.","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"     * {@code Task} must not already exist in Fish Ahoy!.","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    void addTask(Task task);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given Task.","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"     * The Task must exist in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    void deleteTask(Task task);","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    void setTankList(ReadOnlyTankList tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    ReadOnlyTankList getTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    void setTankListFilePath(Path tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a Tank with the same identity as {@code Tank} exists in Fish Ahoy!.","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    boolean hasTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"     * Adds the given Tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"     * {@code Tank} must not already exist in Fish Ahoy!.","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"    void addTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"     * Deletes the given Tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"     * The Tank must exist in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    void deleteTank(Tank tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"    void setTank(Tank target, Tank editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"    /** Returns an unmodifiable view of the filtered tank list */","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTank\u003e getFilteredTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"    void updateFilteredTankList(Predicate\u003cTank\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":80,"ryanchua00":5,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cFish\u003e filteredFish;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private final TankList tankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    private final FilteredList\u003cTank\u003e filteredTanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                        ReadOnlyTaskList taskList, ReadOnlyTankList tankList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(addressBook, userPrefs, taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        filteredFish \u003d new FilteredList\u003c\u003e(this.addressBook.getFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        this.taskList \u003d new TaskList(taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.taskList.getTaskList());","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        this.tankList \u003d new TankList(tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        filteredTanks \u003d new FilteredList\u003c\u003e(this.tankList.getTankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        this(new AddressBook(), new UserPrefs(), new TaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        return userPrefs.getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        userPrefs.setTaskListFilePath(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return userPrefs.getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    public void setTankListFilePath(Path tankListFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        userPrefs.setTaskListFilePath(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        return addressBook.hasFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    public void deleteFish(Fish target) {","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"        addressBook.removeFish(target);","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"        addressBook.setFish(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Fish List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the list of {@code Fish} backed by the internal list of","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        return filteredFish;","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        filteredFish.setPredicate(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredFish.equals(other.filteredFish)","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 taskList.equals(other.taskList)","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks)","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 filteredTanks.equals(other.filteredTanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskList(ReadOnlyTaskList taskList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"        this.taskList.resetData(taskList);","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"    public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"        return taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"        return taskList.hasTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"        taskList.removeTask(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"ryanchua00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":210,"author":{"gitId":"ryanchua00"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":213,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"        taskList.setTask(target, editedTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":220,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TaskList Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":222,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":223,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the {@code TaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":224,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":226,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"        return filteredTasks;","lastModifiedDate":"2023-02-28"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":233,"author":{"gitId":"bokuanT"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList tank \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"    public void setTankList(ReadOnlyTankList tankList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"bokuanT"},"content":"        this.tankList.resetData(tankList);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"    public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"bokuanT"},"content":"        return tankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"bokuanT"},"content":"    public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"        return tankList.hasTank(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"bokuanT"},"content":"    public void deleteTank(Tank target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"        tankList.removeTank(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"bokuanT"},"content":"    public void addTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"bokuanT"},"content":"        tankList.addTank(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"bokuanT"},"content":"        tankList.setTank(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"bokuanT"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered TankList Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":271,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"bokuanT"},"content":"        return filteredTanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"bokuanT"},"content":"    public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"bokuanT"},"content":"        filteredTanks.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":148,"ryanchua00":10,"-":128}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the Fishes list.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     * This list will not contain any duplicate Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cFish\u003e getFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":4,"-":13}},{"path":"src/main/java/seedu/address/model/ReadOnlyTankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Unmodifiable view of a Tank List","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public interface ReadOnlyTankList {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"            * Returns an unmodifiable view of the tanks list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"            * This list will not contain any duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"            */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTank\u003e getTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" * Unmodifiable view of a Task List","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"public interface ReadOnlyTaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"     * Returns an unmodifiable view of the task list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":3}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    Path getTankListFilePath();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bokuanT":4,"-":16}},{"path":"src/main/java/seedu/address/model/TankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.UniqueTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * Wraps all data at the product level","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameTank comparison)","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class TankList implements ReadOnlyTankList {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    private final UniqueTankList tanks;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        tanks \u003d new UniqueTankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public TankList() {}","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * Creates a Tank List using the tanks in the {@code toBeCopied}","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public TankList(ReadOnlyTankList toBeCopied) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        this();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the tank list with {@code tank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * {@code tank} must not contain duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        this.tanks.setTanks(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Resets the existing data of this {@code TankList} with {@code newData}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public void resetData(ReadOnlyTankList newData) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        setTanks(newData.getTankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    //// tank-level operations","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a tank with the same identity as {@code tank} exists in the tank list.","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return tanks.contains(tank);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * Adds a tank to the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     * The tank must not already exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    public void addTank(Tank p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        tanks.add(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given tank {@code target} in the list with {@code editedTank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     * The tank identity of {@code editedTank} must not be the same as another existing tank in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        tanks.setTank(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * Removes {@code key} from this {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * {@code key} must exist in the {@code TankList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    public void removeTank(Tank key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        tanks.remove(key);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"    //// util methods","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        return tanks.asUnmodifiableObservableList().size() + \" tanks\";","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        return tanks.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TankList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 tanks.equals(((TankList) other).tanks));","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        return tanks.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":119}},{"path":"src/main/java/seedu/address/model/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" * Wraps all data at the product level","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Duplicates are not allowed (by .isSameTask comparison)","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TaskList implements ReadOnlyTaskList {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     *   among constructors.","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    {","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public TaskList() {}","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code TaskList} using the {@code Task}s in the {@code toBeCopied}.","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public TaskList(ReadOnlyTaskList toBeCopied) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        this();","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of the {@code TaskList} with {@code Tasks}.","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * {@code Tasks} must not contain duplicate {@code Task}s.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     * Resets the existing data of this {@code TaskList} with {@code newData}.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public void resetData(ReadOnlyTaskList newData) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    //// Task-level operations","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a {@code Task} identical to {@code Task} exists in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"        return tasks.contains(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     * Adds a {@code Task} to the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * The {@code Task} must not already exist in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        tasks.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * Replaces the given {@code Task} in the {@code TaskList} with {@code editedTask}.","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the {@code TaskList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the {@code TaskList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * Removes a {@code Task} from this {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * The {@code Task} must exist in the {@code TaskList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        tasks.remove(key);","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    //// util methods","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return tasks.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TaskList // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 tasks.equals(((TaskList) other).tasks));","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        return tasks.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":103,"ryanchua00":14}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private Path taskListFilePath \u003d Paths.get(\"data\" , \"tasklist.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private Path tankListFilePath \u003d Paths.get(\"data\", \"tanklist.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        setTaskListFilePath(newUserPrefs.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        setTankListFilePath(newUserPrefs.getTankListFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return taskListFilePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"    public void setTaskListFilePath(Path taskListFilePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        requireNonNull(taskListFilePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        this.taskListFilePath \u003d taskListFilePath;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"        return tankListFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public void setTankListFilePath(Path tankListFilePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(tankListFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        this.tankListFilePath \u003d tankListFilePath;","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":20,"ryanchua00":3,"-":87}},{"path":"src/main/java/seedu/address/model/fish/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s address in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":55}},{"path":"src/main/java/seedu/address/model/fish/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s email in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":69}},{"path":"src/main/java/seedu/address/model/fish/Fish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class Fish {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public Fish(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Fishes have the same name.","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * This defines a weaker notion of equality between two Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public boolean isSameFish(Fish otherFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        if (otherFish \u003d\u003d this) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        return otherFish !\u003d null","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getName().equals(getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Fishes have the same identity and data fields.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     * This defines a stronger notion of equality between two Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof Fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        Fish otherFish \u003d (Fish) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        return otherFish.getName().equals(getName())","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getPhone().equals(getPhone())","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getEmail().equals(getEmail())","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getAddress().equals(getAddress())","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherFish.getTags().equals(getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":19,"-":104}},{"path":"src/main/java/seedu/address/model/fish/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s name in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":57}},{"path":"src/main/java/seedu/address/model/fish/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Tests that a {@code Fish}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public boolean test(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(fish.getName().fullName, keyword));","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":5,"-":26}},{"path":"src/main/java/seedu/address/model/fish/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Fish\u0027s phone number in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"bokuanT":2,"-":51}},{"path":"src/main/java/seedu/address/model/fish/UniqueFishList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.FishNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A list of Fishes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A fish is considered unique by comparing using {@code Fish#isSameFish(Fish)}. As such, adding and updating of","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Fishes uses Fish#isSameFish(Fish) for equality so as to ensure that the fish being added or updated is","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * unique in terms of identity in the UniqueFishList. However, the removal of a fish uses Fish#equals(Object) so","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * as to ensure that the fish with exactly the same fields will be removed.","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":" * @see Fish#isSameFish(Fish)","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"public class UniqueFishList implements Iterable\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cFish\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cFish\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent fish as the given argument.","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Fish toCheck) {","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::isSameFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Adds a fish to the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * The fish must not already exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void add(Fish toAdd) {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * Replaces the fish {@code target} in the list with {@code editedFish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     * The fish identity of {@code editedFish} must not be the same as another existing fish in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            throw new FishNotFoundException();","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        if (!target.isSameFish(editedFish) \u0026\u0026 contains(editedFish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent fish from the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     * The fish must exist in the list.","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"    public void remove(Fish toRemove) {","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"            throw new FishNotFoundException();","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(UniqueFishList replacement) {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     * {@code fish} must not contain duplicate fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    public void setFishes(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        if (!fishesAreUnique(fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateFishException();","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cFish\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cFish\u003e iterator() {","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueFishList // instanceof handles nulls","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"                        \u0026\u0026 internalList.equals(((UniqueFishList) other).internalList));","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code fish} contains only unique fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"    private boolean fishesAreUnique(List\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c fish.size() - 1; i++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c fish.size(); j++) {","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"                if (fish.get(i).isSameFish(fish.get(j))) {","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":137}},{"path":"src/main/java/seedu/address/model/fish/exceptions/DuplicateFishException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Fishes (Fishes are considered duplicates if they have the same","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * identity).","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateFishException extends RuntimeException {","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Fishes\");","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":11}},{"path":"src/main/java/seedu/address/model/fish/exceptions/FishNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish.exceptions;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class FishNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/java/seedu/address/model/tank/Tank.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" *  Represents a Tank of the user","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"public class Tank {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    private final TankName name;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public Tank(TankName tankName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"        this.name \u003d tankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public TankName getTankName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        return this.name;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"     * Returns true if both Tanks have the same tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"     * This defines a weaker notion of equality between two Tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    public boolean isSameTank(Tank otherTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        if (otherTank \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        return otherTank !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 otherTank.getTankName().equals(getTankName());","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof seedu.address.model.task.Task)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        seedu.address.model.task.Task otherTask \u003d (seedu.address.model.task.Task) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        return otherTask.getDescription().equals(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return Objects.hash(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        builder.append(getTankName());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":59}},{"path":"src/main/java/seedu/address/model/tank/TankName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":" * Represents a Tank\u0027s name in the {@code Tanklist}.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTankName(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class TankName {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public final String fullTankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code TankName}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * @param name A valid tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public TankName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidTankName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        fullTankName \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a given string is a valid Tank name.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static boolean isValidTankName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        return fullTankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof TankName // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fullTankName.equals(((TankName) other).fullTankName)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        return fullTankName.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":57}},{"path":"src/main/java/seedu/address/model/tank/TankNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Tests that a {@code Tank}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"public class TankNameContainsKeywordsPredicate implements Predicate\u003cTank\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public TankNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    public boolean test(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(tank.getTankName().fullTankName, keyword));","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"                || (other instanceof TankNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"                \u0026\u0026 keywords.equals(((TankNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":31}},{"path":"src/main/java/seedu/address/model/tank/UniqueTankList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.exceptions.DuplicateTankException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.exceptions.TankNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A list of tanks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A tank is considered unique by comparing using {@code Tank#isSameTank(Tank)}. As such, adding and updating of","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * Tankes uses Tank#isSameTank(Tank) for equality so as to ensure that the tank being added or updated is","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" * unique in terms of identity in the UniqueTankList. However, the removal of a tank uses Tank#equals(Object) so","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * as to ensure that the tank with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":" * @see Tank#isSameTank(Tank)","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"public class UniqueTankList implements Iterable\u003cTank\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTank\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTank\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent tank as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Tank toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"     * Adds a tank to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * The tank must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public void add(Tank toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * Replaces the tank {@code target} in the list with {@code editedTank}.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     * The tank identity of {@code editedTank} must not be the same as another existing tank in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    public void setTank(Tank target, Tank editedTank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"            throw new TankNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        if (!target.isSameTank(editedTank) \u0026\u0026 contains(editedTank)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent tank from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * The tank must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    public void remove(Tank toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"            throw new TankNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(UniqueTankList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code tanks}.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"     * {@code tanks} must not contain duplicate tanks.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    public void setTanks(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        if (!tanksAreUnique(tanks)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTankException();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(tanks);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTank\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cTank\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueTankList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 internalList.equals(((UniqueTankList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code tank} contains only unique tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"    private boolean tanksAreUnique(List\u003cTank\u003e tanks) {","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        for (int i \u003d 0; i \u003c tanks.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"            for (int j \u003d i + 1; j \u003c tanks.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                if (tanks.get(i).isSameTank(tanks.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":136}},{"path":"src/main/java/seedu/address/model/tank/exceptions/DuplicateTankException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Tanks (Tanks are considered duplicates if they have the same","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateTankException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateTankException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Tanks\");","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":12}},{"path":"src/main/java/seedu/address/model/tank/exceptions/TankNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.tank.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified tank.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class TankNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":7}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" * Represents a description of a Task.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":" * Guarantees: Non-null description in valid form.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"public class Description {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public final String description;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"     * @param description description of a Task.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public Description(String description) {","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return description;","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        return description.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":39,"ryanchua00":12}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":" *  Represents a Task of the user","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"public class Task {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    private final Description description;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public Task(Description description) {","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        return this.description;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        return otherTask.getDescription().equals(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        return Objects.hash(description);","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        builder.append(getDescription());","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":43,"ryanchua00":3}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":" * A list of Tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Adds a task to the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * The Task must not already exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * Replaces a {@code Todo} in the list with {@code editedTodo}.","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"     * The {@code editedTodo} must not be the same as an existing {@code Todo} in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    public void setTask(Task target, Task editedTodo) {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        requireAllNonNull(target, editedTodo);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        if (!target.equals(editedTodo) \u0026\u0026 contains(editedTodo)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        internalList.set(index, editedTodo);","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"     * Removes the equivalent Task from the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     * The Task must exist in the list.","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"     * Replaces the contents of this list with {@code tasks}.","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"     * Returns true if {@code Tasks} contains only unique Tasks.","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"                if (tasks.get(i).equals(tasks.get(j))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                    return false;","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"                }","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"        return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":112,"ryanchua00":19}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation will result in duplicate Task (Task are considered duplicates if they have the same","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" * description).","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"        super(\"Operation would result in duplicate Tasks\");","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":12}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":" * Signals that the operation is unable to find the specified {@code Task}.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static Fish[] getSampleFishes() {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        return new Fish[] {","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 1\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesA\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 2\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesA\", \"anotherTag\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 3\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesB\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 4\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesA\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 5\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesB\")),","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            new Fish(new Name(\"Fish 6\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                getTagSet(\"tempSpeciesC\"))","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        for (Fish sampleFish : getSampleFishes()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            sampleAb.addFish(sampleFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"bokuanT":21,"-":39}},{"path":"src/main/java/seedu/address/model/util/SampleTankUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" * Contains utility methods for populating {@code Tanklist}! with sample data.","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public class SampleTankUtil {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static Tank[] getSampleTanks() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"        return new Tank[] {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"            new Tank(new TankName(\"freshwater tank\")),","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"            new Tank(new TankName(\"saltwater tank\"))","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        };","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static ReadOnlyTankList getSampleTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        TankList sampleTankList \u003d new TankList();","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        for (Tank sampleTank : getSampleTanks()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            sampleTankList.addTank(sampleTank);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        return sampleTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bokuanT":26}},{"path":"src/main/java/seedu/address/model/util/SampleTaskUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":" * Contains utility methods for populating Fish Ahoy! with sample data.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"public class SampleTaskUtil {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"        return new Task[] {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"            new Task(new Description(\"clean tank\")),","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"            new Task(new Description(\"feed fish\"))","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"        };","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static ReadOnlyTaskList getSampleTaskList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"        TaskList sampleTaskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            sampleTaskList.addTask(sampleTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"        return sampleTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":21,"ryanchua00":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedFish.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@link Fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"class JsonAdaptedFish {","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Fish\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedFish} with the given fish details.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedFish(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Fish} into this class for Jackson use.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedFish(Fish source) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted fish object into the model\u0027s {@code Fish} object.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public Fish toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        final List\u003cTag\u003e fishTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"            fishTags.add(tag.toModelType());","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(fishTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"        return new Fish(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":19,"-":90}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private final String description;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given details.","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTask(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"priority\") String priority,","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"                           @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        description \u003d source.getDescription().description;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"     * Converts this Jackson-friendly adapted Task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Task.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        return new Task(modelDescription);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":55}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_FISH \u003d \"fishes list contains duplicate fish(es).\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedFish\u003e fishes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"fishes\") List\u003cJsonAdaptedFish\u003e fishes) {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.fishes.addAll(fishes);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        fishes.addAll(source.getFishList().stream().map(JsonAdaptedFish::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedFish jsonAdaptedFish : fishes) {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"            Fish fish \u003d jsonAdaptedFish.toModelType();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            if (addressBook.hasFish(fish)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":12,"-":48}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * An Immutable {@code TaskList} that is serializable to JSON format.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"@JsonRootName(value \u003d \"tasklist\")","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"class JsonSerializableTaskList {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"task List contains duplicate task(s).\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"     * Constructs a {@code JsonSerializableTaskList} with the given {@code Tasks}.","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTaskList(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"     * Converts a given {@code ReadOnlyTaskList} into this class for Jackson use.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"     * @param source Future changes to this will not affect the created {@code JsonSerializableTaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    public JsonSerializableTaskList(ReadOnlyTaskList source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Converts this Task list into the model\u0027s {@code TaskList} object.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     * @throws IllegalValueException If there were any data constraints violated.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public TaskList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"            if (taskList.hasTask(task)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"            Task newTask \u003d new Task(task.getDescription());","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"            taskList.addTask(newTask);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        return taskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":64}},{"path":"src/main/java/seedu/address/storage/JsonTaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":" * A class to access {@code TaskList} data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"public class JsonTaskListStorage implements TaskListStorage {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskListStorage.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public JsonTaskListStorage(Path filePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        return filePath;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        return readTaskList(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code TaskList} data as a {@link ReadOnlyTaskList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * @param filePath The path of the {@code TaskList} data file.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * @throws DataConversionException If the data in storage is not in the expected format.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        Optional\u003cJsonSerializableTaskList\u003e jsonTaskList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"                filePath, JsonSerializableTaskList.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        if (jsonTaskList.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"            return Optional.of(jsonTaskList.get().toModelType());","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        saveTaskList(taskList, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"     * Similar to {@link #saveTaskList(ReadOnlyTaskList)}.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"     * @param filePath Location of the data. Cannot be null.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"        requireAllNonNull(taskList, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskList(taskList), filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":79,"ryanchua00":5}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList()","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bokuanT":13,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    private final TaskListStorage taskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                          UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                          TaskListStorage taskListStorage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        this.taskListStorage \u003d taskListStorage;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public Path getTaskListFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        return taskListStorage.getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList()","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"            IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"        return readTaskList(taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"    public Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        return taskListStorage.readTaskList(filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        saveTaskList(taskList, taskListStorage.getTaskListFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"    public void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"        taskListStorage.saveTaskList(taskList, filePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":39,"-":77}},{"path":"src/main/java/seedu/address/storage/TaskListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" * Represents a storage for Task List.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"public interface TaskListStorage {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    Path getTaskListFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList() throws DataConversionException,","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"            IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    Optional\u003cReadOnlyTaskList\u003e readTaskList(Path filePath)","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"            throws DataConversionException, IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    void saveTaskList(ReadOnlyTaskList taskList, Path filePath) throws IOException;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":27}},{"path":"src/main/java/seedu/address/ui/FishCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" * An UI component that displays information of a {@code Fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"public class FishCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"FishListCard.fxml\";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public final Fish fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishCode} with the given {@code Fish} and index to display.","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public FishCard(Fish fish, int displayedIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        this.fish \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        name.setText(fish.getName().fullName);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        phone.setText(fish.getPhone().value);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        address.setText(fish.getAddress().value);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        email.setText(fish.getEmail().value);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        fish.getTags().stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof FishCard)) {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        FishCard card \u003d (FishCard) other;","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 fish.equals(card.fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bokuanT":16,"-":61}},{"path":"src/main/java/seedu/address/ui/FishListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Panel containing the list of Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class FishListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"FishListPanel.fxml\";","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FishListPanel.class);","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private ListView\u003cFish\u003e fishListView;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public FishListPanel(ObservableList\u003cFish\u003e fishList) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        fishListView.setItems(fishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        fishListView.setCellFactory(listView -\u003e new FishListViewCell());","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Fish} using a {@code FishCard}.","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    class FishListViewCell extends ListCell\u003cFish\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        protected void updateItem(Fish fish, boolean empty) {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            super.updateItem(fish, empty);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            if (empty || fish \u003d\u003d null) {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"                setText(null);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            } else {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                setGraphic(new FishCard(fish, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":49}},{"path":"src/main/java/seedu/address/ui/MainContent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":" * The Ui for Contenting both the list of fishes and tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"//@@author AY2223S1-CS2103T-W15-1/tp-reused","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"//Reused from https://github.com/AY2223S1-CS2103T-W15-1/tp","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// with minor modifications","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class MainContent extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainContent.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(MainContent.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private HBox mainContent;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code MainContent} with the given {@code fishListPanel} and {@code taskListPanel}.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public MainContent(FishListPanel fishListPanel, TaskListPanel taskListPanel) {","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        HBox.setHgrow(fishListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        HBox.setHgrow(taskListPanel.getRoot(), Priority.ALWAYS);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        mainContent.getChildren().addAll(fishListPanel.getRoot(), taskListPanel.getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    };","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!(other instanceof MainContent)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        MainContent content \u003d (MainContent) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return mainContent.equals(content.mainContent);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"//@@author","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":13,"-":40}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    private FishListPanel fishListPanel;","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    private MainContent mainContent;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    private StackPane mainContentPlaceholder;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"         * task: the code below can be removed once the bug reported here","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        fishListPanel \u003d new FishListPanel(logic.getFilteredFishList());","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        mainContent \u003d new MainContent(fishListPanel, taskListPanel);","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        mainContentPlaceholder.getChildren().add(mainContent.getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"    public FishListPanel getFishListPanel() {","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"bokuanT"},"content":"        return fishListPanel;","lastModifiedDate":"2023-02-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bokuanT":11,"-":189}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"    public final seedu.address.model.task.Task task;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    private HBox taskCardPane;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private Label id;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    private Label description;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code TaskCard} with the given {@code Task} and index to display.","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        description.setText(task.getDescription().description);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":49,"ryanchua00":3}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code taskListPanel} with the given taskHeader and {@code ObservableList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code task} using {@code taskCard}.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"                setGraphic(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"                setText(null);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"            } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"            }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":46,"ryanchua00":2}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"bokuanT"},"content":"#filterField, #FishListPanel, #FishWebpage {","lastModifiedDate":"2023-02-26"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"bokuanT":1,"-":351}},{"path":"src/main/resources/view/FishListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"  \u003cListView fx:id\u003d\"fishListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":1,"-":7}},{"path":"src/main/resources/view/MainContent.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003cHBox fx:id\u003d\"mainContent\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":6}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        \u003cVBox fx:id\u003d\"mainContent\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"          \u003cStackPane fx:id\u003d\"mainContentPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"bokuanT":2,"-":58}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"\u003cHBox id\u003d\"taskCardPane\" fx:id\u003d\"taskCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"                \u003cVBox alignment\u003d\"CENTER\" maxWidth\u003d\"40\" minWidth\u003d\"40\" prefWidth\u003d\"40\" style\u003d\"-fx-padding: 0 10 0 0;\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"                    \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label_task\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"                        \u003cminWidth\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"                            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"                            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"                        \u003c/minWidth\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"                \u003cHBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"                        \u003cInsets left\u003d\"1\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"                \u003cVBox spacing\u003d\"2\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"                    \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label_task\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":45}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"\u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"bokuanT":8}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        final Index fifthFishIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        assertTrue(fifthFishIndex.equals(fifthFishIndex));","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(5.0f));","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        assertFalse(fifthFishIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bokuanT":7,"-":53}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.storage.JsonTaskListStorage;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(temporaryFolder.resolve(\"taskList.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        expectedModel.addFish(expectedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    public void getFilteredFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"                new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bokuanT":12,"ryanchua00":5,"-":150}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public void execute_newFish_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"                new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        expectedModel.addFish(validFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        assertCommandSuccess(new AddCommand(validFish), model,","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validFish), expectedModel);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        Fish fishInList \u003d model.getAddressBook().getFishList().get(0);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(new AddCommand(fishInList), model, AddCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bokuanT":15,"ryanchua00":1,"-":32}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public void constructor_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public void execute_fishAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        ModelStubAcceptingFishAdded modelStub \u003d new ModelStubAcceptingFishAdded();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        CommandResult commandResult \u003d new AddCommand(validFish).execute(modelStub);","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validFish), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Arrays.asList(validFish), modelStub.fishesAdded);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        Fish validFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        AddCommand addCommand \u003d new AddCommand(validFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        ModelStub modelStub \u003d new ModelStubWithFish(validFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_FISH, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        Fish alice \u003d new FishBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        Fish bob \u003d new FishBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        public void deleteFish(Fish target) {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"        public void addTask(Task task) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTask(Task task) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"        public void setTask(Task target, Task editedTask) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {}","lastModifiedDate":"2023-03-01"},{"lineNumber":193,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"bokuanT"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"        public void setTankList(ReadOnlyTankList tankList) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"bokuanT"},"content":"        public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"bokuanT"},"content":"        public Path getTankListFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"bokuanT"},"content":"        public void setTankListFilePath(Path tankListFilePath) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"bokuanT"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"bokuanT"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"bokuanT"},"content":"        public void addTank(Tank tank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"bokuanT"},"content":"        public void deleteTank(Tank tank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"bokuanT"},"content":"        public void setTank(Tank target, Tank editedTank) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"bokuanT"},"content":"            return null;","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"bokuanT"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"bokuanT"},"content":"        public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {}","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"bokuanT"},"content":"     * A Model stub that contains a single fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"bokuanT"},"content":"    private class ModelStubWithFish extends ModelStub {","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"bokuanT"},"content":"        private final Fish fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"bokuanT"},"content":"        ModelStubWithFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":231,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"bokuanT"},"content":"            this.fish \u003d fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":237,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":238,"author":{"gitId":"bokuanT"},"content":"            return this.fish.isSameFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"bokuanT"},"content":"     * A Model stub that always accept the fish being added.","lastModifiedDate":"2023-02-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"bokuanT"},"content":"    private class ModelStubAcceptingFishAdded extends ModelStub {","lastModifiedDate":"2023-02-26"},{"lineNumber":246,"author":{"gitId":"bokuanT"},"content":"        final ArrayList\u003cFish\u003e fishesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"bokuanT"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":250,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":251,"author":{"gitId":"bokuanT"},"content":"            return fishesAdded.stream().anyMatch(fish::isSameFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"bokuanT"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":256,"author":{"gitId":"bokuanT"},"content":"            requireNonNull(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":257,"author":{"gitId":"bokuanT"},"content":"            fishesAdded.add(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"bokuanT":72,"ryanchua00":41,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"                new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bokuanT":5,"ryanchua00":1,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public static final EditCommand.EditFishDescriptor DESC_AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public static final EditCommand.EditFishDescriptor DESC_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        DESC_AMY \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        DESC_BOB \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"     * - the address book, filtered fish list and selected fish in {@code actualModel} remain unchanged","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"     * Updates {@code model}\u0027s filtered list to show only the fish at the given {@code targetIndex} in the","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    public static void showFishAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d model.getFilteredFishList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        final String[] splitName \u003d fish.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        assertEquals(1, model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"     * Updates {@code model}\u0027s filtered list to show only the fish at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"    public static void showTankAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"        Tank fish \u003d model.getFilteredTankList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"        final String[] splitName \u003d fish.getTankName().fullTankName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"        model.updateFilteredTankList(new TankNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"        assertEquals(1, model.getFilteredTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bokuanT":17,"ryanchua00":14,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FISH_SUCCESS, fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"                new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        expectedModel.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFishList().size() + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        Fish fishToDelete \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_FISH_SUCCESS, fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"                new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        expectedModel.deleteFish(fishToDelete);","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        showNoFish(expectedModel);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"    private void showNoFish(Model model) {","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        model.updateFilteredFishList(p -\u003e false);","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"        assertTrue(model.getFilteredFishList().isEmpty());","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"bokuanT":35,"ryanchua00":1,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"            new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(editedFish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"                                                                    new UserPrefs(),","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"                                                                    getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"                                                                    new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(model.getFilteredFishList().get(0), editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        Index indexLastFish \u003d Index.fromOneBased(model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        Fish lastFish \u003d model.getFilteredFishList().get(indexLastFish.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        FishBuilder fishInList \u003d new FishBuilder(lastFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d fishInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastFish, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"                                                                    new UserPrefs(),","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"                                                                    getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(lastFish, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH, new EditFishDescriptor());","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"                                                                    new UserPrefs(),","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"                                                                    getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        Fish fishInFilteredList \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        Fish editedFish \u003d new FishBuilder(fishInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH,","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_FISH_SUCCESS, editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"                                                                    new UserPrefs(),","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"                                                                    getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        expectedModel.setFish(model.getFilteredFishList().get(0), editedFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFishUnfilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"        Fish firstFish \u003d model.getFilteredFishList().get(INDEX_FIRST_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(firstFish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_FISH, descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    public void execute_duplicateFishFilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        // edit fish in filtered list into a duplicate in address book","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        Fish fishInList \u003d model.getAddressBook().getFishList().get(INDEX_SECOND_FISH.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_FISH,","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder(fishInList).build());","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    public void execute_invalidFishIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredFishList().size() + 1);","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"    public void execute_invalidFishIndexFilteredList_failure() {","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"                new EditFishDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_FISH_DISPLAYED_INDEX);","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_FISH, DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor copyDescriptor \u003d new EditFishDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_FISH, copyDescriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"bokuanT"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_FISH, DESC_AMY)));","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"bokuanT"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_FISH, DESC_BOB)));","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"bokuanT":66,"ryanchua00":9,"-":110}},{"path":"src/test/java/seedu/address/logic/commands/EditFishDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class EditFishDescriptorTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptorWithSameValues \u003d new EditFishDescriptor(DESC_AMY);","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        editedAmy \u003d new EditFishDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"bokuanT":9,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_FISHES_LISTED_OVERVIEW;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.CARL;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ELLE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.FIONA;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"            new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"            new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public void execute_zeroKeywords_noFishFound() {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FISHES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        expectedModel.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    public void execute_multipleKeywords_multipleFishesFound() {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        String expectedMessage \u003d String.format(MESSAGE_FISHES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        expectedModel.updateFilteredFishList(predicate);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":20,"ryanchua00":1,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showFishAtIndex;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        showFishAtIndex(model, INDEX_FIRST_FISH);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":7,"ryanchua00":1,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankAddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.testutil.TankBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":" * Contains integration tests (interaction with the Model) for {@code TankAddCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommandIntegrationTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"    private Model model;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(), getTypicalTankList());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"    public void execute_newTank_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"                model.getTankList());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.addTank(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(new TankAddCommand(validTank), model,","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"                String.format(TankAddCommand.MESSAGE_SUCCESS, validTank), expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    public void execute_duplicateTank_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"        Tank fishInList \u003d model.getTankList().getTankList().get(0);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(new TankAddCommand(fishInList), model, TankAddCommand.MESSAGE_DUPLICATE_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":48}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.testutil.TankBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"public class TankAddCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public void constructor_nullTank_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TankAddCommand(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TankAddCommand(validTank).execute(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    public void execute_duplicateFish_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"        Tank validTank \u003d new TankBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"        ModelStub modelStub \u003d new ModelStubWithTank(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addCommand \u003d new TankAddCommand(validTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        assertThrows(CommandException.class, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"        Tank saltwaterTank \u003d new TankBuilder().withTankName(\"Saltwater Tank 1\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"        Tank freshwaterTank \u003d new TankBuilder().withTankName(\"Freshwater Tank 3\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addSaltwaterCommand \u003d new TankAddCommand(saltwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addFreshwaterCommand \u003d new TankAddCommand(freshwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(addSaltwaterCommand.equals(addSaltwaterCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        TankAddCommand addSaltwaterCommandCopy \u003d new TankAddCommand(saltwaterTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(addSaltwaterCommand.equals(addSaltwaterCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(addSaltwaterCommand.equals(addFreshwaterCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"        public void addFish(Fish fish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"ryanchua00"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasFish(Fish fish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"ryanchua00"},"content":"        public void deleteFish(Fish target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"ryanchua00"},"content":"        public void setFish(Fish target, Fish editedFish) {","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cFish\u003e getFilteredFishList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredFishList(Predicate\u003cFish\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"ryanchua00"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TaskList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskList(ReadOnlyTaskList taskList) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTaskList getTaskList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"ryanchua00"},"content":"        public Path getTaskListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"ryanchua00"},"content":"        public void setTaskListFilePath(Path taskListFilePath) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTask(Task task) {","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"ryanchua00"},"content":"        public void addTask(Task task) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTask(Task task) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"ryanchua00"},"content":"        public void setTask(Task target, Task editedTask) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"ryanchua00"},"content":"        //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TankList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"ryanchua00"},"content":"        public void setTankList(ReadOnlyTankList tankList) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyTankList getTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"ryanchua00"},"content":"        public Path getTankListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"ryanchua00"},"content":"        public void setTankListFilePath(Path tankListFilePath) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"ryanchua00"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"ryanchua00"},"content":"        public void addTank(Tank tank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"ryanchua00"},"content":"        public void deleteTank(Tank tank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"ryanchua00"},"content":"        public void setTank(Tank target, Tank editedTank) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"ryanchua00"},"content":"        public ObservableList\u003cTank\u003e getFilteredTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"ryanchua00"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"ryanchua00"},"content":"        public void updateFilteredTankList(Predicate\u003cTank\u003e predicate) {}","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"ryanchua00"},"content":"     * A Model stub that contains a single tank.","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStubWithTank extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"ryanchua00"},"content":"        private final Tank tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"ryanchua00"},"content":"        ModelStubWithTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"ryanchua00"},"content":"            this.tank \u003d tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"ryanchua00"},"content":"            return this.tank.isSameTank(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"ryanchua00"},"content":"     * A Model stub that always accept the tank being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"ryanchua00"},"content":"    private class ModelStubAcceptingTankAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"ryanchua00"},"content":"        final ArrayList\u003cTank\u003e tanksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"ryanchua00"},"content":"        public boolean hasTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"ryanchua00"},"content":"            return tanksAdded.stream().anyMatch(tank::isSameTank);","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"ryanchua00"},"content":"        public void addTank(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"ryanchua00"},"content":"            requireNonNull(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"ryanchua00"},"content":"            tanksAdded.add(tank);","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"ryanchua00"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"ryanchua00"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"ryanchua00"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":261}},{"path":"src/test/java/seedu/address/logic/commands/tank/TankDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.logic.commands.tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTankAtIndex;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTanks.getTypicalTankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":" * {@code TankDeleteCommand}.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"public class TankDeleteCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"            getTypicalTankList());","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d model.getFilteredTankList().get(INDEX_FIRST_TANK.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(TankDeleteCommand.MESSAGE_DELETE_TANK_SUCCESS, tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"                model.getTankList());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"ryanchua00"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"ryanchua00"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTankList().size() + 1);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"ryanchua00"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"ryanchua00"},"content":"        showTankAtIndex(model, INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"ryanchua00"},"content":"        Tank tankToDelete \u003d model.getFilteredTankList().get(INDEX_FIRST_TANK.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"ryanchua00"},"content":"        String expectedMessage \u003d String.format(TankDeleteCommand.MESSAGE_DELETE_TANK_SUCCESS, tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"ryanchua00"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalTaskList(),","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"ryanchua00"},"content":"                model.getTankList());","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"ryanchua00"},"content":"        expectedModel.deleteTank(tankToDelete);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"ryanchua00"},"content":"        showNoTank(expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"ryanchua00"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"ryanchua00"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"ryanchua00"},"content":"        showTankAtIndex(model, INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"ryanchua00"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_TANK;","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"ryanchua00"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getTankList().getTankList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteCommand \u003d new TankDeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"ryanchua00"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_TANK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"ryanchua00"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"ryanchua00"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteFirstCommand \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteSecondCommand \u003d new TankDeleteCommand(INDEX_SECOND_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"ryanchua00"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"ryanchua00"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"ryanchua00"},"content":"        TankDeleteCommand deleteFirstCommandCopy \u003d new TankDeleteCommand(INDEX_FIRST_TANK);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"ryanchua00"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"ryanchua00"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"ryanchua00"},"content":"        // different tank -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"ryanchua00"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"ryanchua00"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"ryanchua00"},"content":"    private void showNoTank(Model model) {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"ryanchua00"},"content":"        model.updateFilteredTankList(p -\u003e false);","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"ryanchua00"},"content":"        assertTrue(model.getFilteredTankList().isEmpty());","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":114}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.AMY;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFishMultipleTags \u003d new FishBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedFishMultipleTags));","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        Fish expectedFish \u003d new FishBuilder(AMY).withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"                new AddCommand(expectedFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"bokuanT":18,"-":123}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(FishUtil.getAddCommand(fish));","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        assertEquals(new AddCommand(fish), command);","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_FISH.getOneBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_FISH), command);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder(fish).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"                + INDEX_FIRST_FISH.getOneBased() + \" \" + FishUtil.getEditFishDescriptorDetails(descriptor));","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_FISH, descriptor), command);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"bokuanT":16,"-":85}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_FISH));","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"bokuanT":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.EditFishDescriptorBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Fish} being edited,","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_SECOND_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"bokuanT"},"content":"        Index targetIndex \u003d INDEX_THIRD_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"bokuanT"},"content":"        EditFishDescriptor descriptor \u003d new EditFishDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"bokuanT":27,"-":184}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"bokuanT":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_FISH;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertEquals(INDEX_FIRST_FISH, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        assertEquals(INDEX_FIRST_FISH, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"bokuanT":7,"-":189}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"        assertEquals(Collections.emptyList(), addressBook.getFishList());","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"    public void resetData_withDuplicateFishes_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        // Two fish with the same identity fields","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e newFish \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newFish);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertFalse(addressBook.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        assertTrue(addressBook.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        assertTrue(addressBook.hasFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void getFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"     * A stub ReadOnlyAddressBook whose fish list can violate interface constraints.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        private final ObservableList\u003cFish\u003e fish \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        AddressBookStub(Collection\u003cFish\u003e fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"            this.fish.setAll(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"        public ObservableList\u003cFish\u003e getFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"            return fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"bokuanT":31,"-":71}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_FISHES;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BENSON;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public void hasFish_fishInAddressBook_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        modelManager.addFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        assertTrue(modelManager.hasFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"    public void getFilteredFishList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredFishList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withFish(ALICE).withFish(BENSON).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, getTypicalTaskList(), new TankList());","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"                new TankList())));","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"        modelManager.updateFilteredFishList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"                new TankList())));","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"        modelManager.updateFilteredFishList(PREDICATE_SHOW_ALL_FISHES);","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, getTypicalTaskList(),","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"                new TankList())));","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"bokuanT":24,"ryanchua00":1,"-":111}},{"path":"src/test/java/seedu/address/model/fish/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":35}},{"path":"src/test/java/seedu/address/model/fish/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":67}},{"path":"src/test/java/seedu/address/model/fish/FishTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class FishTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"        Fish fish \u003d new FishBuilder().build();","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e fish.getTags().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void isSameFish() {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        assertTrue(ALICE.isSameFish(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"        assertFalse(ALICE.isSameFish(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        assertTrue(ALICE.isSameFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        assertFalse(ALICE.isSameFish(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        Fish editedBob \u003d new FishBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertFalse(BOB.isSameFish(editedBob));","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        editedBob \u003d new FishBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"        assertFalse(BOB.isSameFish(editedBob));","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        Fish aliceCopy \u003d new FishBuilder(ALICE).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        editedAlice \u003d new FishBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"bokuanT":25,"-":66}},{"path":"src/test/java/seedu/address/model/fish/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        // different fish -\u003e returns false","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        assertTrue(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        assertFalse(predicate.test(new FishBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bokuanT":10,"-":65}},{"path":"src/test/java/seedu/address/model/fish/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":39}},{"path":"src/test/java/seedu/address/model/fish/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"bokuanT":1,"-":39}},{"path":"src/test/java/seedu/address/model/fish/UniqueFishListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.model.fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BOB;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.DuplicateFishException;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.exceptions.FishNotFoundException;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.FishBuilder;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"public class UniqueFishListTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private final UniqueFishList uniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    public void contains_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.contains(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishNotInList_returnsFalse() {","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        assertFalse(uniqueFishList.contains(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishInList_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        assertTrue(uniqueFishList.contains(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"    public void contains_fishWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        assertTrue(uniqueFishList.contains(editedAlice));","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    public void add_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.add(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    public void add_duplicateFish_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.add(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"    public void setFish_nullTargetFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFish(null, ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"    public void setFish_nullEditedFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFish(ALICE, null));","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    public void setFish_targetFishNotInList_throwsFishNotFoundException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        assertThrows(FishNotFoundException.class, () -\u003e uniqueFishList.setFish(ALICE, ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishIsSameFish_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasSameIdentity_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        Fish editedAlice \u003d new FishBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"                .build();","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(editedAlice);","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFish(ALICE, BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"    public void setFish_editedFishHasNonUniqueIdentity_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.setFish(ALICE, BOB));","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"bokuanT"},"content":"    public void remove_nullFish_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.remove(null));","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"bokuanT"},"content":"    public void remove_fishDoesNotExist_throwsFishNotFoundException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"bokuanT"},"content":"        assertThrows(FishNotFoundException.class, () -\u003e uniqueFishList.remove(ALICE));","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"bokuanT"},"content":"    public void remove_existingFish_removesFish() {","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.remove(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_nullUniqueFishList_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFishes((UniqueFishList) null));","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_uniqueFishList_replacesOwnListWithProvidedUniqueFishList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFishes(expectedUniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"bokuanT"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueFishList.setFishes((List\u003cFish\u003e) null));","lastModifiedDate":"2023-02-26"},{"lineNumber":147,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":148,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":149,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":150,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-26"},{"lineNumber":151,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.add(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":152,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e fishList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":153,"author":{"gitId":"bokuanT"},"content":"        uniqueFishList.setFishes(fishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":154,"author":{"gitId":"bokuanT"},"content":"        UniqueFishList expectedUniqueFishList \u003d new UniqueFishList();","lastModifiedDate":"2023-02-26"},{"lineNumber":155,"author":{"gitId":"bokuanT"},"content":"        expectedUniqueFishList.add(BOB);","lastModifiedDate":"2023-02-26"},{"lineNumber":156,"author":{"gitId":"bokuanT"},"content":"        assertEquals(expectedUniqueFishList, uniqueFishList);","lastModifiedDate":"2023-02-26"},{"lineNumber":157,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":158,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":159,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":160,"author":{"gitId":"bokuanT"},"content":"    public void setFishes_listWithDuplicateFishes_throwsDuplicateFishException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":161,"author":{"gitId":"bokuanT"},"content":"        List\u003cFish\u003e listWithDuplicateFish \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":162,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DuplicateFishException.class, () -\u003e uniqueFishList.setFishes(listWithDuplicateFish));","lastModifiedDate":"2023-02-26"},{"lineNumber":163,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":164,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":165,"author":{"gitId":"bokuanT"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":166,"author":{"gitId":"bokuanT"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":167,"author":{"gitId":"bokuanT"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-26"},{"lineNumber":168,"author":{"gitId":"bokuanT"},"content":"            -\u003e uniqueFishList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":169,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":170,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":170}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedFishTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.storage.JsonAdaptedFish.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.BENSON;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"public class JsonAdaptedFishTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_validFishDetails_returnsFish() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(BENSON);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        assertEquals(BENSON, fish.toModelType());","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d new JsonAdaptedFish(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"bokuanT"},"content":"        JsonAdaptedFish fish \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"bokuanT"},"content":"                new JsonAdaptedFish(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, fish::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":33,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.ALICE;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.HOON;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.IDA;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public void readAddressBook_invalidFishAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidFishAddressBook.json\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"    public void readAddressBook_invalidAndValidFishAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidFishAddressBook.json\"));","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"        original.addFish(HOON);","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"        original.removeFish(ALICE);","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"        original.addFish(IDA);","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":11,"-":99}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"import seedu.address.testutil.TypicalFishes;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    private static final Path TYPICAL_FISHES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalFishesAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private static final Path INVALID_FISH_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidFishAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    private static final Path DUPLICATE_FISH_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateFishAddressBook.json\");","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_typicalFishesFile_success() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_FISHES_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"        AddressBook typicalFishesAddressBook \u003d TypicalFishes.getTypicalAddressBook();","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"        assertEquals(addressBookFromFile, typicalFishesAddressBook);","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_invalidFishFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_FISH_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public void toModelType_duplicateFishes_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_FISH_FILE,","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_FISH,","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"bokuanT":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import static seedu.address.testutil.TypicalFishes.getTypicalAddressBook;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        JsonTaskListStorage taskListStorage \u003d new JsonTaskListStorage(getTempFilePath(\"tl\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskListStorage);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":1,"ryanchua00":2,"-":66}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withFish(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"     * Adds a new {@code Fish} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public AddressBookBuilder withFish(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        addressBook.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditFishDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" * A utility class to help with building EditFishDescriptor objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"public class EditFishDescriptorBuilder {","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    private EditFishDescriptor descriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder() {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder(EditFishDescriptor descriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"        this.descriptor \u003d new EditFishDescriptor(descriptor);","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code EditFishDescriptor} with fields containing {@code fish}\u0027s details","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        descriptor \u003d new EditFishDescriptor();","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        descriptor.setName(fish.getName());","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        descriptor.setPhone(fish.getPhone());","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        descriptor.setEmail(fish.getEmail());","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        descriptor.setAddress(fish.getAddress());","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTags(fish.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Name} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Phone} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Email} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Address} of the {@code EditFishDescriptor} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditFishDescriptor}","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"     * that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    public EditFishDescriptor build() {","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"        return descriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":87}},{"path":"src/test/java/seedu/address/testutil/FishBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bokuanT"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"bokuanT"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"bokuanT"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"bokuanT"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"bokuanT"},"content":" * A utility class to help with building Fish objects.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"bokuanT"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":"public class FishBuilder {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    private Name name;","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"    private Phone phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    private Email email;","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"bokuanT"},"content":"    private Address address;","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"bokuanT"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"     * Creates a {@code FishBuilder} with the default details.","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder() {","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"     * Initializes the FishBuilder with the data of {@code fishToCopy}.","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder(Fish fishToCopy) {","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"bokuanT"},"content":"        name \u003d fishToCopy.getName();","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        phone \u003d fishToCopy.getPhone();","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"bokuanT"},"content":"        email \u003d fishToCopy.getEmail();","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"        address \u003d fishToCopy.getAddress();","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"bokuanT"},"content":"        tags \u003d new HashSet\u003c\u003e(fishToCopy.getTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Name} of the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withName(String name) {","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"bokuanT"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"bokuanT"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withTags(String ... tags) {","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"bokuanT"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Address} of the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withAddress(String address) {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"bokuanT"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Phone} of the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withPhone(String phone) {","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"bokuanT"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"bokuanT"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"bokuanT"},"content":"     * Sets the {@code Email} of the {@code Fish} that we are building.","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"bokuanT"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"bokuanT"},"content":"    public FishBuilder withEmail(String email) {","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"bokuanT"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"bokuanT"},"content":"        return this;","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"bokuanT"},"content":"    public Fish build() {","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"bokuanT"},"content":"        return new Fish(name, phone, email, address, tags);","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"bokuanT"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"bokuanT"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"bokuanT"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"bokuanT":96}},{"path":"src/test/java/seedu/address/testutil/FishUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"bokuanT"},"content":"import seedu.address.logic.commands.EditCommand.EditFishDescriptor;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"bokuanT"},"content":" * A utility class for Fish.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"public class FishUtil {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":"     * Returns an add command string for adding the {@code fish}.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"    public static String getAddCommand(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"bokuanT"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getFishDetails(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"bokuanT"},"content":"     * Returns the part of command string for the given {@code fish}\u0027s details.","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"bokuanT"},"content":"    public static String getFishDetails(Fish fish) {","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_NAME + fish.getName().fullName + \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_PHONE + fish.getPhone().value + \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_EMAIL + fish.getEmail().value + \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"        sb.append(PREFIX_ADDRESS + fish.getAddress().value + \" \");","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"bokuanT"},"content":"        fish.getTags().stream().forEach(","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"bokuanT"},"content":"     * Returns the part of command string for the given {@code EditFishDescriptor}\u0027s details.","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public static String getEditFishDescriptorDetails(EditFishDescriptor descriptor) {","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"bokuanT":16,"-":46}},{"path":"src/test/java/seedu/address/testutil/TankBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":" * A utility class to help with building Tank objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"public class TankBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"    public static final String DEFAULT_NAME \u003d \"Coral Tank 2\";","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    private TankName tankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"     * Creates a {@code TankBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"    public TankBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"        tankName \u003d new TankName(DEFAULT_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     * Initializes the TankBuilder with the data of {@code tankToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"    public TankBuilder(Tank tank) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        tankName \u003d tank.getTankName();","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"     * Sets the {@code Name} of the {@code Tank} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public TankBuilder withTankName(String tankName) {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        this.tankName \u003d new TankName(tankName);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"ryanchua00"},"content":"    public Tank build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"ryanchua00"},"content":"        return new Tank(tankName);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":41}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"     * Returns the middle index of the fish in the {@code model}\u0027s fish list.","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"bokuanT"},"content":"        return Index.fromOneBased(model.getFilteredFishList().size() / 2);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"bokuanT"},"content":"     * Returns the last index of the fish in the {@code model}\u0027s fish list.","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"        return Index.fromOneBased(model.getFilteredFishList().size());","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"bokuanT"},"content":"     * Returns the fish in the {@code model}\u0027s fish list at {@code index}.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public static Fish getFish(Model model, Index index) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"bokuanT"},"content":"        return model.getFilteredFishList().get(index.getZeroBased());","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bokuanT":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalFishes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"bokuanT"},"content":"import seedu.address.model.fish.Fish;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"bokuanT"},"content":" * A utility class containing a list of {@code Fish} objects to be used in tests.","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"bokuanT"},"content":"public class TypicalFishes {","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"bokuanT"},"content":"    public static final Fish ALICE \u003d new FishBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"bokuanT"},"content":"    public static final Fish BENSON \u003d new FishBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"bokuanT"},"content":"    public static final Fish CARL \u003d new FishBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"bokuanT"},"content":"    public static final Fish DANIEL \u003d new FishBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"bokuanT"},"content":"    public static final Fish ELLE \u003d new FishBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"bokuanT"},"content":"    public static final Fish FIONA \u003d new FishBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"bokuanT"},"content":"    public static final Fish GEORGE \u003d new FishBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"bokuanT"},"content":"    public static final Fish HOON \u003d new FishBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"bokuanT"},"content":"    public static final Fish IDA \u003d new FishBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"bokuanT"},"content":"    // Manually added - Fish\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"bokuanT"},"content":"    public static final Fish AMY \u003d new FishBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"bokuanT"},"content":"    public static final Fish BOB \u003d new FishBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"bokuanT"},"content":"    private TypicalFishes() {} // prevents instantiation","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"bokuanT"},"content":"     * Returns an {@code AddressBook} with all the typical Fishes.","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"bokuanT"},"content":"        for (Fish fish : getTypicalFishes()) {","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"bokuanT"},"content":"            ab.addFish(fish);","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"bokuanT"},"content":"    public static List\u003cFish\u003e getTypicalFishes() {","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"bokuanT":20,"-":56}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_FIRST_FISH \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_SECOND_FISH \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"bokuanT"},"content":"    public static final Index INDEX_THIRD_FISH \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_FIRST_TANK \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_SECOND_TANK \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"    public static final Index INDEX_THIRD_TANK \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"bokuanT":3,"ryanchua00":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalTanks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.TankList;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.Tank;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.tank.TankName;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" * A utility class containing a list of {@code Tank} objects to be used in tests.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"public class TypicalTanks {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    public static final Tank TASK_ONE \u003d new Tank(new TankName(\"Saltwater Tank 1\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public static final Tank TASK_TWO \u003d new Tank(new TankName(\"Freshwater Tank 3\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    private TypicalTanks() {} // prevents instantiation","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * Returns an {@code TankList} with all the typical tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public static TankList getTypicalTankList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        TankList tl \u003d new TankList();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        for (Tank task : getTypicalTanks()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            tl.addTank(task);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        return tl;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public static List\u003cTank\u003e getTypicalTanks() {","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_ONE, TASK_TWO));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ryanchua00":35}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ryanchua00"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"ryanchua00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"ryanchua00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"ryanchua00"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.TaskList;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"ryanchua00"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"ryanchua00"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"ryanchua00"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"ryanchua00"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"ryanchua00"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"ryanchua00"},"content":"    public static final Task TASK_ONE \u003d new Task(new Description(\"clean tank\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"ryanchua00"},"content":"    public static final Task TASK_TWO \u003d new Task(new Description(\"feed fish\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"ryanchua00"},"content":"    private TypicalTasks() {} // prevents instantiation","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"ryanchua00"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"ryanchua00"},"content":"     * Returns an {@code TaskList} with all the typical tasks.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"ryanchua00"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"ryanchua00"},"content":"    public static TaskList getTypicalTaskList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"ryanchua00"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"ryanchua00"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"ryanchua00"},"content":"            tl.addTask(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"ryanchua00"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"ryanchua00"},"content":"        return tl;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"ryanchua00"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"ryanchua00"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"ryanchua00"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(TASK_ONE, TASK_TWO));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"ryanchua00"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"ryanchua00"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"ryanchua00":35}}]
