[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W14-2/tp/actions)","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"# EduMate","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"## About the Project","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"* EduMate is a desktop app designed for NUS students to manage their contacts, optimised for use via a Command Line Interface (CLI) while still reaping the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"* The project simulates an ongoing software project, for the **CS2103T Software Engineering module** offered by the National University of Singapore (NUS).","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"* It is named `EduMate` because it helps the user find friends and teammates for their education.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"* For the detailed documentation of this project, see the **[EduMate Product Website](https://ay2223s2-cs2103t-w14-2.github.io/tp/)**.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"  * For the detailed documentation of the AddressBook-Level3 project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"  * If you would like to contribute code to the AddressBook-Level3 project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5).","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"mynameizzhafeez":16,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    archiveFileName \u003d \u0027edumate.jar\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mynameizzhafeez":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"### Tan Kai Min Russell","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cimg src\u003d\"images/russelltankaimin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"[[github](https://github.com/russelltankaimin)]","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"[[portfolio](team/russelltankaimin.md)]","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"seanfirefox"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"### Izz Hafeez Bin Zek Hazley","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cimg src\u003d\"images/mynameizzhafeez.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"[[github](http://github.com/mynameizzhafeez)]","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"[[portfolio](team/mynameizzhafeez.md)]","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"### Tan Li Thai Sean","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cimg src\u003d\"images/seanfirefox.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"[[github](http://github.com/seanfirefox)]","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"[[portfolio](team/seanfirefox.md)]","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"### Wang Zichen","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cimg src\u003d\"images/zichen-3974.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"[[github](http://github.com/zichen-3974)]","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"[[portfolio](team/zichen-3974.md)]","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"seanfirefox"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"### Chon Jin Yong Kenny","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cimg src\u003d\"images/kennycjy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"[[github](http://github.com/kennycjy)]","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"[[portfolio](team/kennycjy.md)]","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"seanfirefox"},"content":"* Responsibilities: TBD","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"mynameizzhafeez":19,"seanfirefox":6,"-":31,"kennycjy":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"1. When `Logic` is called upon to execute a command, it uses the `EduMateParser` class to parse the user command.","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"* When called upon to parse a user command, the `EduMateParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `EduMateParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `EduMate`, which `Person` references. This allows `EduMate` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"* inherits from both `EduMateStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"Classes used by multiple components are in the `seedu.edumate.commons` package.","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedEduMate`. It extends `EduMate` with an undo/redo history, stored internally as an `eduMateStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"* `VersionedEduMate#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"* `VersionedEduMate#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"* `VersionedEduMate#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"These operations are exposed in the `Model` interface as `Model#commitEduMate()`, `Model#undoEduMate()` and `Model#redoEduMate()` respectively.","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"mynameizzhafeez"},"content":"Step 1. The user launches the application for the first time. The `VersionedEduMate` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"mynameizzhafeez"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitEduMate()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `eduMateStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"mynameizzhafeez"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitEduMate()`, causing another modified address book state to be saved into the `eduMateStateList`.","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitEduMate()`, so the address book state will not be saved into the `eduMateStateList`.","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"mynameizzhafeez"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoEduMate()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial EduMate state, then there are no previous EduMate states to restore. The `undo` command uses `Model#canUndoEduMate()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"mynameizzhafeez"},"content":"The `redo` command does the opposite — it calls `Model#redoEduMate()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"mynameizzhafeez"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `eduMateStateList.size() - 1`, pointing to the latest address book state, then there are no undone EduMate states to restore. The `redo` command uses `Model#canRedoEduMate()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-02-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"mynameizzhafeez"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitEduMate()`, `Model#undoEduMate()` or `Model#redoEduMate()`. Thus, the `eduMateStateList` remains unchanged.","lastModifiedDate":"2023-02-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"mynameizzhafeez"},"content":"Step 6. The user executes `clear`, which calls `Model#commitEduMate()`. Since the `currentStatePointer` is not pointing at the end of the `eduMateStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-02-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"mynameizzhafeez"},"content":"* is an NUS student","lastModifiedDate":"2023-02-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"mynameizzhafeez"},"content":"**Value proposition**: help NUS students maintain both their social and academic life by lowering the barriers to meet up and make new friends within modules.","lastModifiedDate":"2023-02-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​   | I want to …​                                           | So that I can…​                              |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"mynameizzhafeez"},"content":"|------|-----------|--------------------------------------------------------|----------------------------------------------|","lastModifiedDate":"2023-02-21"},{"lineNumber":276,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | student   | view all my modules in one place                       | be more organised in my work                 |","lastModifiedDate":"2023-02-21"},{"lineNumber":277,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | use this app quickly with the command line             | quickly plan my modules                      |","lastModifiedDate":"2023-02-21"},{"lineNumber":278,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | view my personal information                           | share it to whoever needs it                 |","lastModifiedDate":"2023-02-21"},{"lineNumber":279,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | update my profile                                      | personalise my experience                    |","lastModifiedDate":"2023-02-21"},{"lineNumber":280,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | add module tags to new contacts                        | track what modules my friends are taking     |","lastModifiedDate":"2023-02-21"},{"lineNumber":281,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | tag and untag modules from existing contacts           | be flexible in recording my friends\u0027 modules |","lastModifiedDate":"2023-02-21"},{"lineNumber":282,"author":{"gitId":"mynameizzhafeez"},"content":"| `***` | user      | filter my contacts based on module tag                 | find friends taking the same module as me    |","lastModifiedDate":"2023-02-21"},{"lineNumber":283,"author":{"gitId":"mynameizzhafeez"},"content":"| `**` | user      | sort my contacts based on the number of shared modules | find out who are likely my close friends     |","lastModifiedDate":"2023-02-21"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"mynameizzhafeez"},"content":"(For all use cases below, the **System** is the `EduMate` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-21"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC01 - View the list of all contacts**","lastModifiedDate":"2023-02-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-02-21"},{"lineNumber":294,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate shows a list of all contacts.","lastModifiedDate":"2023-02-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC02 - Add a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"mynameizzhafeez"},"content":"**MSS**","lastModifiedDate":"2023-02-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to add a person to the contact list with their details.","lastModifiedDate":"2023-02-21"},{"lineNumber":309,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate shows the list of contacts with the newly added person.","lastModifiedDate":"2023-02-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":311,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":312,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":313,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":314,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":315,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given details are invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":316,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":317,"author":{"gitId":"mynameizzhafeez"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":318,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1","lastModifiedDate":"2023-02-21"},{"lineNumber":319,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The person already exists in the contact list.","lastModifiedDate":"2023-02-21"},{"lineNumber":320,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":321,"author":{"gitId":"mynameizzhafeez"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":322,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1","lastModifiedDate":"2023-02-21"},{"lineNumber":323,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":324,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC03 - Edit a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":325,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":326,"author":{"gitId":"mynameizzhafeez"},"content":"**MSS**","lastModifiedDate":"2023-02-21"},{"lineNumber":327,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":328,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to edit a person\u0027s details with new information.","lastModifiedDate":"2023-02-21"},{"lineNumber":329,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate edits the person\u0027s information.","lastModifiedDate":"2023-02-21"},{"lineNumber":330,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":331,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":332,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":333,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":334,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":335,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":336,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":337,"author":{"gitId":"mynameizzhafeez"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":338,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":339,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The given details are invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":340,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":341,"author":{"gitId":"mynameizzhafeez"},"content":"  ","lastModifiedDate":"2023-02-21"},{"lineNumber":342,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":343,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":344,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC04 - Delete a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":345,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":346,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to delete a person from the contact list.","lastModifiedDate":"2023-02-21"},{"lineNumber":347,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate deletes the person from the contact list.","lastModifiedDate":"2023-02-21"},{"lineNumber":348,"author":{"gitId":"mynameizzhafeez"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":349,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":350,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":351,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":352,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":353,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":354,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":355,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":356,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":357,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":358,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC05 - Tag a module to a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":359,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":360,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to add a module tag to a contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":361,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate tags the module to the contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":362,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":363,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":364,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":365,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":366,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":367,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":368,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":369,"author":{"gitId":"mynameizzhafeez"},"content":"    ","lastModifiedDate":"2023-02-21"},{"lineNumber":370,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":371,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":372,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The given details is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":373,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":374,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":375,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":376,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":377,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC06 - Untag a module from a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":378,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":379,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to remove a module tag from a contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":380,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate untags the module from the contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":381,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":382,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":383,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":384,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":385,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":386,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":387,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":388,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":389,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":390,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":391,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The given details is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":392,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":393,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":394,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":395,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":396,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC07 - Tag a group to a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":397,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":398,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to add a group tag to a contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":399,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate tags the group to the contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":400,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":401,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":402,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":403,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":404,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":405,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":406,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":407,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":408,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":409,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":410,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The given details is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":411,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":412,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":413,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":414,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":415,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC08 - Untag a group from a contact**","lastModifiedDate":"2023-02-21"},{"lineNumber":416,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":417,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to remove a group tag from a contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":418,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate untags the group from the contact.","lastModifiedDate":"2023-02-21"},{"lineNumber":419,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":420,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":421,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":422,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":423,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":424,"author":{"gitId":"mynameizzhafeez"},"content":"* 1a. The given index is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":425,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":426,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":427,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":428,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":429,"author":{"gitId":"mynameizzhafeez"},"content":"* 1b. The given details is invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":430,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":431,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":432,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2023-02-21"},{"lineNumber":433,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":434,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC09 - Find contacts based on search criteria**","lastModifiedDate":"2023-02-21"},{"lineNumber":435,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":436,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to \u003cu\u003eview the list of contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-02-21"},{"lineNumber":437,"author":{"gitId":"mynameizzhafeez"},"content":"2. User requests to find contacts based on search criteria.","lastModifiedDate":"2023-02-21"},{"lineNumber":438,"author":{"gitId":"mynameizzhafeez"},"content":"3. EduMate shows a list of contacts satisfying the search criteria.","lastModifiedDate":"2023-02-21"},{"lineNumber":439,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":440,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":441,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":442,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":443,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":444,"author":{"gitId":"mynameizzhafeez"},"content":"* 2a. The given details are invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":445,"author":{"gitId":"mynameizzhafeez"},"content":"    * 2a1. EduMate shows an error message.","lastModifiedDate":"2023-02-21"},{"lineNumber":446,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":447,"author":{"gitId":"mynameizzhafeez"},"content":"* 3a. The filtered list is empty.","lastModifiedDate":"2023-02-21"},{"lineNumber":448,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":449,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends","lastModifiedDate":"2023-02-21"},{"lineNumber":450,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":451,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC10 - Sort contacts based on matching modules**","lastModifiedDate":"2023-02-21"},{"lineNumber":452,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":453,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to \u003cu\u003eview the list of contacts (UC01)\u003c/u\u003e.","lastModifiedDate":"2023-02-21"},{"lineNumber":454,"author":{"gitId":"mynameizzhafeez"},"content":"2. User requests to sort contacts.","lastModifiedDate":"2023-02-21"},{"lineNumber":455,"author":{"gitId":"mynameizzhafeez"},"content":"3. EduMate shows a list of contacts sorted by their number of shared modules.","lastModifiedDate":"2023-02-21"},{"lineNumber":456,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":457,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":458,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":459,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":460,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":461,"author":{"gitId":"mynameizzhafeez"},"content":"* 3a. The sorted list is empty.","lastModifiedDate":"2023-02-21"},{"lineNumber":462,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":463,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":464,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":465,"author":{"gitId":"mynameizzhafeez"},"content":"**Use case: UC11 - View user profile**","lastModifiedDate":"2023-02-21"},{"lineNumber":466,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":467,"author":{"gitId":"mynameizzhafeez"},"content":"1. User requests to view their user profile.","lastModifiedDate":"2023-02-21"},{"lineNumber":468,"author":{"gitId":"mynameizzhafeez"},"content":"2. EduMate shows the user information.","lastModifiedDate":"2023-02-21"},{"lineNumber":469,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":470,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":471,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":472,"author":{"gitId":"mynameizzhafeez"},"content":"**Extensions**","lastModifiedDate":"2023-02-21"},{"lineNumber":473,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":474,"author":{"gitId":"mynameizzhafeez"},"content":"* 2a. User information is empty.","lastModifiedDate":"2023-02-21"},{"lineNumber":475,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":476,"author":{"gitId":"mynameizzhafeez"},"content":"    Use case ends.","lastModifiedDate":"2023-02-21"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"mynameizzhafeez"},"content":"4.  Should consistently execute commands within 1 second.","lastModifiedDate":"2023-02-21"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-02-21"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-02-21"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"mynameizzhafeez"},"content":"2. Saving window preferences","lastModifiedDate":"2023-02-21"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"mynameizzhafeez"},"content":"    * 2a. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-02-21"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"mynameizzhafeez"},"content":"    * 2b. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":517,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1a. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-02-21"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1b. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":526,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1c. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"mynameizzhafeez"},"content":"    * 1d. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":532,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mynameizzhafeez":215,"-":324}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [EduMate’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"mynameizzhafeez":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"eduMate is a **desktop app designed for NUS students to manage their academic and social lives**. It is optimized for use through a Command Line Interface (CLI) while still providing the benefits of a Graphical User Interface (GUI). If you type quickly, eduMate can complete contact and module management tasks faster than traditional GUI apps.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"2. Download the latest `eduMate.jar` from [here](https://github.com/AY2223S2-CS2103T-W14-2/tp/releases).","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar eduMate.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"   \u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `user` : View personal profile.","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add` : Adds a contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `tag` : Tag a module to a contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"   * `find` : Find contacts by keywords.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `sort` : Sorts contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"   * `view` : View contacts profile on profile window.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"zichen-3974"},"content":"   \u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"zichen-3974"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"zichen-3974"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"zichen-3974"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"zichen-3974"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"### Viewing user profile: `user`","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Allows users to view personal profile.","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"For users using GUI, the user profile will be in the top right corner of the app.","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format (for CLI only): `user`","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Example of usage: `user`","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome for CLI:","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```agsl","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Username: John Doe","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Email: E1234567@u.nus.edu","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Modules: CS2103T | CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Phone Number: 12345678","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Expected outcome for GUI:","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"![result for \u0027user\u0027 GUI](images/userResultGui.png)","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Adding a contact to list : `add`","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Allow users to add a contact to the address book.","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Format: `add n/NAME m/mod1 mod2 mod3`","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"Example of usage: `add n/Penny Lane m/DTK1234 HSH1000 HSS1000 MA1100 GEA1000`","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"Context:","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"There are 3 friends with the following information:","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"Name: Ben Tan","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"3 Common Modules: CS2103T | CS2101 | MA3252","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"Name: Jane Lane","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"2 Common Modules: CS2103T | CS2101","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"Name: John Street","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"1 Common Module: MA3252","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"Expected outcome for CLI:","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"Name: John Doe (User)","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"Name: Ben Tan","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | MA3252 | CS4230 | CS2105","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"Name: Jane Lane","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101, CM1102 | CS2102 | CS2108","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"Name: John Street","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"seanfirefox"},"content":"Modules reading: MA3252 | MA2104 | ST2131 | MA2101S","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"Name: Penny Lane","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"seanfirefox"},"content":"Modules reading: DTK1234 | HSH1000 | HSS1000 | MA1100 | GEA1000","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"```","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Deleting a contact: `delete`","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Allow users to delete a contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `delete n/NAME`","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Example of usage: `delete n/John Doe`","lastModifiedDate":"2023-02-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Context:","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Name: John Doe (User)","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Modules reading: CS2103T | CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Expected outcome for CLI:","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Name: John Doe (User)","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Modules reading: CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Description of outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"This command removes the module stated in the command (“CS2103T”) from the list of modules that the user is reading.","lastModifiedDate":"2023-02-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"### Tagging a module to contact : `tag`","lastModifiedDate":"2023-02-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Adds a module tag to an existing contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: `tag n/NAME m/MODULE_TAG`","lastModifiedDate":"2023-02-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Example of usage: `tag n/John Doe m/CS2103T`","lastModifiedDate":"2023-02-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Name: John Doe (User)","lastModifiedDate":"2023-02-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Modules reading: CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Expected outcome for CLI:","lastModifiedDate":"2023-02-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Name: John Doe","lastModifiedDate":"2023-02-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Modules: CS2100 | CS2101 | CS2102 | CS2103T","lastModifiedDate":"2023-02-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"1 Common Module: CS2101 | CS2103T","lastModifiedDate":"2023-02-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Description of outcome: CS2103T is added to John Doe\u0027s list of modules. Assuming the user also takes CS2101 and CS2103T, which are represented as the modules in common.","lastModifiedDate":"2023-02-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### Untagging a module from an existing contact : `untag`","lastModifiedDate":"2023-02-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Removes a module tag from an existing contact.","lastModifiedDate":"2023-02-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Format: `untag n/NAME m/MODULE_TAG`","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Example of usage: `untag n/John Doe m/CS2103T`","lastModifiedDate":"2023-02-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Context:","lastModifiedDate":"2023-02-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Expected outcome for CLI:","lastModifiedDate":"2023-02-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Name: John Doe","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Modules: CS2100 | CS2101 | CS2102","lastModifiedDate":"2023-02-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1 Common Module: CS2101","lastModifiedDate":"2023-02-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Description of outcome: CS2103T is removed from John Doe\u0027s list of modules. Assuming the user also takes CS2101, which is represented as the modules in common.","lastModifiedDate":"2023-02-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"seanfirefox"},"content":"### Locating persons by keyowrds : `find`","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"seanfirefox"},"content":"Finds persons whose specified fields contain any of the given keywords.","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"seanfirefox"},"content":"Format: `find PREFIX/KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"seanfirefox"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"seanfirefox"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"seanfirefox"},"content":"* Only the field specified by the prefix is searched. e.g. n/ means only the name field is searched","lastModifiedDate":"2023-02-26"},{"lineNumber":199,"author":{"gitId":"seanfirefox"},"content":"* Words matching the first part of the string will be matched e.g. Han will match Hans","lastModifiedDate":"2023-02-26"},{"lineNumber":200,"author":{"gitId":"seanfirefox"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. Hans Bo will return Hans Gruber, Bo Yang","lastModifiedDate":"2023-02-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":202,"author":{"gitId":"seanfirefox"},"content":"Example of usage: ","lastModifiedDate":"2023-02-26"},{"lineNumber":203,"author":{"gitId":"seanfirefox"},"content":"* `find m/CS2103T CS2109S` returns all persons with modules CS2103T or CS2109S","lastModifiedDate":"2023-02-26"},{"lineNumber":204,"author":{"gitId":"seanfirefox"},"content":"* `find n/John Doe` returns all persons with names John or Doe ","lastModifiedDate":"2023-02-26"},{"lineNumber":205,"author":{"gitId":"seanfirefox"},"content":"* `find p/9093` returns all persons with phone numbers starting with 9093","lastModifiedDate":"2023-02-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Name: John Doe | Jane Lane | John Street","lastModifiedDate":"2023-02-13"},{"lineNumber":209,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-26"},{"lineNumber":210,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":211,"author":{"gitId":"seanfirefox"},"content":"Name: Jane Doe","lastModifiedDate":"2023-02-26"},{"lineNumber":212,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | CM1102 | CS2102 | CS2109S","lastModifiedDate":"2023-02-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Description of outcome: Assuming that John Doe, Jane Lane, John Street has CS2103T as a module tag to their profiles, then their contacts will appear as shown.","lastModifiedDate":"2023-02-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### Sorting Contacts : `sort`","lastModifiedDate":"2023-02-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":218,"author":{"gitId":"zichen-3974"},"content":"Sorts all contacts by number of common modules, with contacts with most common modules at the top.","lastModifiedDate":"2023-02-23"},{"lineNumber":219,"author":{"gitId":"russelltankaimin"},"content":"Format: `sort` \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"russelltankaimin"},"content":"Example of usage: `sort` \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Context:","lastModifiedDate":"2023-02-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"There are 4 friends with the following information:","lastModifiedDate":"2023-02-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Name: John Doe (User)","lastModifiedDate":"2023-02-13"},{"lineNumber":225,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | MA2104 | MA3252 | CFG1002","lastModifiedDate":"2023-02-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Name: Ben Tan","lastModifiedDate":"2023-02-13"},{"lineNumber":227,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | MA3252 | CS4230 | CS2105","lastModifiedDate":"2023-02-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Name: Jane Lane","lastModifiedDate":"2023-02-13"},{"lineNumber":229,"author":{"gitId":"seanfirefox"},"content":"Modules reading: CS2103T | CS2101 | CM1102 | CS2102 | CS2108","lastModifiedDate":"2023-02-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"Name: John Street","lastModifiedDate":"2023-02-13"},{"lineNumber":231,"author":{"gitId":"seanfirefox"},"content":"Modules reading: MA3252 | MA2104 | ST2131 | MA2101S","lastModifiedDate":"2023-02-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Name: Penny Lane","lastModifiedDate":"2023-02-13"},{"lineNumber":233,"author":{"gitId":"seanfirefox"},"content":"Modules reading: DTK1234 | HSH1000 | HSS1000 | MA1100 | GEA1000","lastModifiedDate":"2023-02-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Name: Ben Tan","lastModifiedDate":"2023-02-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"3 Common Modules: CS2103T | CS2101 | MA3252","lastModifiedDate":"2023-02-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Name: Jane Lane","lastModifiedDate":"2023-02-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"2 Common Modules: CS2103T | CS2101","lastModifiedDate":"2023-02-13"},{"lineNumber":241,"author":{"gitId":"-"},"content":"Name: John Street","lastModifiedDate":"2023-02-13"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1 Common Module: MA3252","lastModifiedDate":"2023-02-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Description of outcome: Assuming you have 4 friends, then there are 3 of them who are doing common modules as you, they will be sorted by decreasing number of similarity in the modules.","lastModifiedDate":"2023-02-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Hence, Ben Tan will be the first name on top as he has the most number of modules in common with the user, followed by Jane Lane and John Street with 2 and 1 common modules respectively. The 4th friend, Penny Lane, does not have any common modules with the user (John Doe) and hence is omitted.","lastModifiedDate":"2023-02-13"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":248,"author":{"gitId":"russelltankaimin"},"content":"### View Contacts : `view`","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"russelltankaimin"},"content":"Users can use the view command to look up their current information, or their contact\u0027s information on the Panel to the right.","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"russelltankaimin"},"content":"There are 3 types of usage for this command.","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"russelltankaimin"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"russelltankaimin"},"content":"Example of usage: `view` \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"russelltankaimin"},"content":"Expected outcome: User\u0027s own profile displayed on the panel. \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"russelltankaimin"},"content":"![result for \u0027user profile\u0027 GUI](images/userprofile.png)","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"russelltankaimin"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"russelltankaimin"},"content":"Example of usage: `view 5` \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"russelltankaimin"},"content":"Expected outcome: The profile of the 5th person indexed by EduMate will be displayed on the panel.","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"russelltankaimin"},"content":"![result for \u00275th person profile\u0027 GUI](images/fifthPersonProfile.png)","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"russelltankaimin"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"russelltankaimin"},"content":"Example of usage: `view n/Charles Windsor` \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"russelltankaimin"},"content":"Expected outcome: The profile of Charles Windsor will be displayed on the panel.","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"russelltankaimin"},"content":"![result for \u0027Charles Windsor profile\u0027 GUI](images/charlesWindsor.png)","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"russelltankaimin"},"content":"**Q**: Can I add multiple module groupTags to a user","lastModifiedDate":"2023-02-17"},{"lineNumber":267,"author":{"gitId":"russelltankaimin"},"content":"**A**: Yes, you can add multiple groupTags to a single user by using the \"Module Tagging\" feature multiple times.","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"**Q**: Can I edit my own profile?","lastModifiedDate":"2023-02-13"},{"lineNumber":270,"author":{"gitId":"zichen-3974"},"content":"**A**: It will not be in v1.02, but it may be possible for future iterations.","lastModifiedDate":"2023-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"| Action            | Format, Examples                                                                     |","lastModifiedDate":"2023-02-13"},{"lineNumber":276,"author":{"gitId":"russelltankaimin"},"content":"|-------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| **User**          | `user`                                                                               |","lastModifiedDate":"2023-02-13"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| **Add Person**    | `add n/NAME` \u003cbr\u003e e.g., `add n/John Doe`                                             |","lastModifiedDate":"2023-02-13"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| **Delete Person** | `delete n/NAME`\u003cbr\u003e e.g., `delete n/John Doe`                                        |","lastModifiedDate":"2023-02-13"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| **Tag Module**    | `tag n/NAME m/MODULE_TAG`\u003cbr\u003e e.g.,`tag n/John Doe m/CS2103T`                        |","lastModifiedDate":"2023-02-13"},{"lineNumber":281,"author":{"gitId":"-"},"content":"| **Untag Module**  | `untag n/NAME m/MODULE_TAG`\u003cbr\u003e e.g., `untag n/John Doe m/CS2103T`                   |","lastModifiedDate":"2023-02-13"},{"lineNumber":282,"author":{"gitId":"-"},"content":"| **Filter By Mod** | `filter m/MODULE_TAG` \u003cbr\u003e e.g., `filter m/CS2103T`                                  |","lastModifiedDate":"2023-02-13"},{"lineNumber":283,"author":{"gitId":"-"},"content":"| **Sort**          | `sort`                                                                               |","lastModifiedDate":"2023-02-13"},{"lineNumber":284,"author":{"gitId":"russelltankaimin"},"content":"| **View**          | `view`\u003cbr/\u003e `view \u003cindex\u003e`\u003cbr/\u003e`view n/NAME`\u003cbr/\u003ee.g., `view 5` or `view n/Komyo San` |","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"mynameizzhafeez":20,"zichen-3974":12,"seanfirefox":28,"russelltankaimin":24,"-":201}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(eduMate)","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mynameizzhafeez":1,"-":37}},{"path":"docs/diagrams/CommitActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"start","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":":User executes command;","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if () then ([command commits AddressBook])","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    :Purge redundant states;","lastModifiedDate":"2020-12-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    :Save AddressBook to","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    eduMateStateList;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"else ([else])","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"endif","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"stop","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"mynameizzhafeez":1,"-":14}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"seanfirefox"},"content":"title: eduMate","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"seanfirefox"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W14-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W14-2/tp/actions)","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"seanfirefox"},"content":"**eduMate is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"seanfirefox"},"content":"* If you are interested in using eduMate, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"* If you are interested about developing eduMate, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"seanfirefox":6,"-":14}},{"path":"docs/team/kennycjy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kennycjy"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"kennycjy"},"content":"layout: page","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"kennycjy"},"content":"title: Kenny Chon\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"kennycjy"},"content":"---","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"kennycjy"},"content":"### Project: eduMate","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"kennycjy"},"content":"EduMate is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"kennycjy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"kennycjy"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dkennycjy\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"kennycjy"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"kennycjy"},"content":"    * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"kennycjy"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"kennycjy"},"content":"    * User Guide:","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"kennycjy"},"content":"        * Pushed the first version of the User Guide that is drafted by the whole team.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"kennycjy"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"kennycjy"},"content":"        * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"kennycjy"},"content":"* **Community**:","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"kennycjy"},"content":"    * To be added","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"kennycjy"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"kennycjy"},"content":"* **Tools**:","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"kennycjy"},"content":"    * Java 11 and JavaFX","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"kennycjy":27}},{"path":"docs/team/mynameizzhafeez.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"title: Izz Hafeez\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"### Project: eduMate","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"EduMate is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"* **Enhancement**: Added storage methods for handling user information.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"* **Testing**: Automated the generation of test cases using MRT data.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dmynameizzhafeez\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    * Managed issue tracking functions","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        * To be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        * To be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#7](), [\\#32]()","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"mynameizzhafeez":28}},{"path":"docs/team/russelltankaimin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"layout: page","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"title: Tan Kai Min, Russell\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"---","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"### Project: EduMate","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"EduMate is a desktop address book application used to help NUS students maintain both their social and academic life by lowering the barriers to meet up and also make new friends within modules and school. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"* **Basic User Profile**:","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"  * What it does: Personalise settings for the user of the application.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"  * Justification: Gives a personalised touch to the user. Allows users to personalise their application\u0027s settings.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"  * Highlights: Singleton class which inherits from Person","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"* **Overhaul of EduMate**:","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"  * Modified Json data to fit application requirements.","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"  * Split tags to Module and Group Tags","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"  * Allow User and Person to have Module, Group Tags and Telegram Handle.","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"  * Rework parsers to include Module and Group Tags and Telegram Handle.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"  * Tests for User will use a stub instead of the actual User.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"* **View Command**:","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"  * What it does: Allows users to view profile of either him/herself or their contacts.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"  * A single ```view``` command will show the user\u0027s own profile.","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"  * ```user \u003cindex\u003e``` command will retrieve and show the contact\u0027s information by its index.","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"  * ```user \\n \u003cNAME\u003e``` command will retrieve and show the contact\u0027s information by name.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003drusselltankaimin\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"* **Project management**:","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"  * Initiated use of Github Projects to manage progress.","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"  * To be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"  * User Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    * To be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    * To be added.","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"* **Community**:","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#9](), [\\#33]()","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"* **Tools**:","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"  * Java 11 and JavaFX","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"russelltankaimin":47}},{"path":"docs/team/seanfirefox.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seanfirefox"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"seanfirefox"},"content":"layout: page","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"seanfirefox"},"content":"title: Tan Li Thai Sean\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"seanfirefox"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"seanfirefox"},"content":"### Project: EduMate","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"seanfirefox"},"content":"EduMate is a desktop address book application used to help NUS students maintain both their social and academic life by lowering the barriers to meet up and also make new friends within modules and school. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"seanfirefox"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"seanfirefox"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dseanfirefox\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"seanfirefox"},"content":"  * To be added.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"seanfirefox"},"content":"  * User Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"seanfirefox"},"content":"    * Pushed the first version of the User Guide that is drafted by the whole team.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"seanfirefox"},"content":"    * To be added.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"seanfirefox"},"content":"* **Community**:","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"seanfirefox"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#9](), [\\#33]()","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"* **Tools**:","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"seanfirefox"},"content":"  * Java 11 and JavaFX","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"seanfirefox":28}},{"path":"docs/team/zichen-3974.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zichen-3974"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"zichen-3974"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":"title: Zichen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"zichen-3974"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"### Project: eduMate","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"eduMate is a desktop app designed for NUS students to manage their academic and social lives by lowering the barriers to meet up and make new friends within modules and school. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"* **User Profile Window**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"  * What it does: allows the user to view their personal information in a separate window.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"  * Justification: To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"zichen-3974"},"content":"  * Highlights: To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"zichen-3974"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dzichen-3974\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"* **Enhancements to existing issues**:","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":"  * To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":"  * To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"    * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"        * To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"        * To be added.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"zichen-3974"},"content":"    * Java 11 and JavaFX","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"zichen-3974":37}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        Command command \u003d eduMateParser.parseCommand(commandText);","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"mynameizzhafeez":1,"-":300}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.storage.EduMateStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.storage.JsonEduMateStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing EduMate ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMateStorage eduMateStorage \u003d new JsonEduMateStorage(userPrefs.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        storage \u003d new StorageManager(eduMateStorage, userPrefsStorage);","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        Optional\u003cReadOnlyEduMate\u003e eduMateOptional;","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate initialData;","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"            eduMateOptional \u003d storage.readEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"            if (!eduMateOptional.isPresent()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"                logger.info(\"Data file not found. Will be starting with a sample EduMate\");","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"            initialData \u003d eduMateOptional.orElseGet(() -\u003e SampleDataUtil.getSampleEduMate(25));","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty EduMate\");","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"            initialData \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty EduMate\");","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"            initialData \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty EduMate\");","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"mynameizzhafeez"},"content":"        logger.info(\"Starting EduMate \" + MainApp.VERSION);","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":19,"-":164}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String LOG_FILE \u003d \"edumate.log\";","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":1,"-":111}},{"path":"src/main/java/seedu/address/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.StreamSupport;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"     * Zips two streams together with a BiFunction.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * Solution adapted from","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"     * \"\u003ca href\u003d\"https://stackoverflow.com/questions","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * /17640754/zipping-streams-using-jdk8-with-lambda","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * -java-util-stream-streams-zip\"\u003eStack Overflow\u003c/a\u003e\".","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     * Apparently, there\u0027s no raw Java that can zip streams together.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"     * If you can find alternatives, you can just take this out.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    public static \u003cT, U, R\u003e Stream\u003cR\u003e zip(Stream\u003cT\u003e firstStream, Stream\u003cU\u003e secondStream, BiFunction\u003cT, U, R\u003e zipper) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        final Iterator\u003cT\u003e firstIterator \u003d firstStream.iterator();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        final Iterator\u003cU\u003e secondIterator \u003d secondStream.iterator();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        final Iterator\u003cR\u003e outputIterator \u003d new Iterator\u003c\u003e() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"            public boolean hasNext() {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                return firstIterator.hasNext() \u0026\u0026 secondIterator.hasNext();","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"            @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"            public R next() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                return zipper.apply(firstIterator.next(), secondIterator.next());","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        final boolean isParallel \u003d firstStream.isParallel() || secondStream.isParallel();","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        final Iterable\u003cR\u003e iterable \u003d () -\u003e outputIterator;","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        return StreamSupport.stream(iterable.spliterator(), isParallel);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":33,"-":35}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"seanfirefox"},"content":"     *       containsKeyWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"     *       containsKeyWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"seanfirefox"},"content":"     *       containsKeyWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"    public static boolean containsKeyWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"seanfirefox"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"                .anyMatch(existentWord -\u003e existentWord.contains(preppedWord));","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"seanfirefox":7,"-":61}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the EduMate.","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     * @see seedu.address.model.Model#getEduMate()","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    ReadOnlyEduMate getEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    Path getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * Get user information","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"    User getUser();","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"mynameizzhafeez":5,"russelltankaimin":6,"-":45}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.EduMateParser;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    private final EduMateParser eduMateParser;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMateParser \u003d new EduMateParser();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        Command command \u003d eduMateParser.parseCommand(commandText);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            storage.saveEduMate(model.getEduMate());","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    public ReadOnlyEduMate getEduMate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        return model.getEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        return model.getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    public User getUser() {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        return model.getUser();","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"mynameizzhafeez":10,"russelltankaimin":6,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.NAME + \"NAME \"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.PHONE + \"PHONE \"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.GROUP_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.NAME + \"John Doe \"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.PHONE + \"98765432 \"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.GROUP_TAG + \"friends \"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.GROUP_TAG + \"owesMoney\";","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e userModuleTags \u003d model.getUser().getImmutableModuleTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        // caches the common modules in each ModuleTagSet as running set","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        // intersection is expensive if we only use it in the compareTo method","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        toAdd.setCommonModules(userModuleTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":20,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        model.setEduMate(new EduMate());","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    private final Person displayPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    private final boolean toShowNewPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":"    private final boolean isShowHelp;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"    private final boolean isExit;","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit, boolean isShowUserProfile) {","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        this.displayPerson \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        this.toShowNewPerson \u003d false;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * Constructs a {@code CommandResult} with the Person\u0027s information to be displayed on the","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     * profile panel.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"     * @param feedbackToUser","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"     * @param isShowHelp","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"     * @param isExit","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"     * @param person","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"     * @param personToChange","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp, boolean isExit, Person person,","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                         boolean personToChange) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        this.displayPerson \u003d person;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        this.toShowNewPerson \u003d true;","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"zichen-3974"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"zichen-3974"},"content":"        return isShowHelp;","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"zichen-3974"},"content":"        return isExit;","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    public boolean isToShowNewPerson() {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"        return toShowNewPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"    public Person getDisplayPerson() {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        return displayPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"zichen-3974"},"content":"                \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"zichen-3974"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit;","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"zichen-3974"},"content":"        return Objects.hash(feedbackToUser, isShowHelp, isExit);","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"russelltankaimin":33,"zichen-3974":11,"-":62}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.NAME + \"NAME] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"[\" + Prefix.GROUP_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.PHONE + \"91234567 \"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"            + Prefix.EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String MESSAGE_EDIT_USER_SUCCESS \u003d \"Edited User: %1$s\";","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"kennycjy"},"content":"    protected final Index index;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"kennycjy"},"content":"    protected final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        if (index \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"            return editUser(model);","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        return editPerson(model);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"     * Edits person at the given index","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"kennycjy"},"content":"    protected CommandResult editPerson(Model model) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e userModuleTags \u003d model.getUser().getImmutableModuleTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        // caches the common modules in each ModuleTagSet as running set","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        // intersection is expensive if we only use it in the compareTo method","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        editedPerson.setCommonModules(userModuleTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"     * Edits the user information","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"kennycjy"},"content":"    protected CommandResult editUser(Model model) {","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"        User editedUser \u003d createEditedUser(model.getUser(), editPersonDescriptor);","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e userModuleTags \u003d model.getUser().getImmutableModuleTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"        // caches the common modules in each ModuleTagSet as running set","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"        // intersection is expensive if we only use it in the compareTo method","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        model.getFilteredPersonList().forEach(person -\u003e person.setCommonModules(userModuleTags));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        model.setUser(editedUser);","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_USER_SUCCESS, editedUser));","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"kennycjy"},"content":"    protected static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"                .orElse(personToEdit.getTelegramHandle());","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"        Set\u003cGroupTag\u003e updatedGroupTags \u003d editPersonDescriptor.getGroupTags()","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"                .orElse(personToEdit.getImmutableGroupTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"        Set\u003cModuleTag\u003e updatedModuleTags \u003d editPersonDescriptor.getModuleTags()","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"                .orElse(personToEdit.getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"russelltankaimin"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTelegramHandle,","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"russelltankaimin"},"content":"                updatedGroupTags, updatedModuleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates and returns a {@code User} with the details of {@code personToEdit}","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"kennycjy"},"content":"    protected static User createEditedUser(User userToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(userToEdit.getName());","lastModifiedDate":"2023-02-21"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(userToEdit.getPhone());","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"mynameizzhafeez"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(userToEdit.getEmail());","lastModifiedDate":"2023-02-21"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(userToEdit.getAddress());","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"        TelegramHandle updatedTelegramHandle \u003d editPersonDescriptor.getTelegramHandle()","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"                .orElse(userToEdit.getTelegramHandle());","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e updatedGroupTags \u003d editPersonDescriptor.getGroupTags()","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"mynameizzhafeez"},"content":"                .orElse(userToEdit.getImmutableGroupTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e updatedModuleTags \u003d editPersonDescriptor.getModuleTags()","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"mynameizzhafeez"},"content":"                .orElse(userToEdit.getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"russelltankaimin"},"content":"        return new User(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2023-02-24"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"                updatedAddress, updatedTelegramHandle, updatedGroupTags, updatedModuleTags);","lastModifiedDate":"2023-02-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"russelltankaimin"},"content":"        private TelegramHandle telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"russelltankaimin"},"content":"        private Set\u003cGroupTag\u003e groupTags;","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"russelltankaimin"},"content":"        private Set\u003cModuleTag\u003e moduleTags;","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"russelltankaimin"},"content":"         * A defensive copy of {@code groupTags} and {@code moduleTags} is used internally.","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":210,"author":{"gitId":"russelltankaimin"},"content":"            setTelegramHandle(toCopy.telegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"russelltankaimin"},"content":"            setGroupTags(toCopy.groupTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"russelltankaimin"},"content":"            setModuleTags(toCopy.moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"russelltankaimin"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, groupTags, moduleTags, telegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"russelltankaimin"},"content":"        public void setTelegramHandle(TelegramHandle telegramHandle) {","lastModifiedDate":"2023-02-18"},{"lineNumber":255,"author":{"gitId":"russelltankaimin"},"content":"            this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":256,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":257,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":258,"author":{"gitId":"russelltankaimin"},"content":"        public Optional\u003cTelegramHandle\u003e getTelegramHandle() {","lastModifiedDate":"2023-02-18"},{"lineNumber":259,"author":{"gitId":"russelltankaimin"},"content":"            return Optional.ofNullable(telegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":260,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":261,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":263,"author":{"gitId":"russelltankaimin"},"content":"         * Sets {@code groupTags} to this object\u0027s {@code groupTags}.","lastModifiedDate":"2023-02-17"},{"lineNumber":264,"author":{"gitId":"russelltankaimin"},"content":"         * A defensive copy of {@code groupTags} is used internally.","lastModifiedDate":"2023-02-17"},{"lineNumber":265,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":266,"author":{"gitId":"russelltankaimin"},"content":"        public void setGroupTags(Set\u003cGroupTag\u003e groupTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":267,"author":{"gitId":"russelltankaimin"},"content":"            this.groupTags \u003d (groupTags !\u003d null) ? new HashSet\u003c\u003e(groupTags) : null;","lastModifiedDate":"2023-02-17"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"russelltankaimin"},"content":"        /**","lastModifiedDate":"2023-02-18"},{"lineNumber":271,"author":{"gitId":"russelltankaimin"},"content":"         * Sets {@code moduleTags} to this object\u0027s {@code moduleTags}.","lastModifiedDate":"2023-02-18"},{"lineNumber":272,"author":{"gitId":"russelltankaimin"},"content":"         * A defensive copy of {@code moduleTags} is used internally.","lastModifiedDate":"2023-02-18"},{"lineNumber":273,"author":{"gitId":"russelltankaimin"},"content":"         */","lastModifiedDate":"2023-02-18"},{"lineNumber":274,"author":{"gitId":"russelltankaimin"},"content":"        public void setModuleTags(Set\u003cModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":275,"author":{"gitId":"russelltankaimin"},"content":"            this.moduleTags \u003d (moduleTags !\u003d null) ? new HashSet\u003c\u003e(moduleTags) : null;","lastModifiedDate":"2023-02-18"},{"lineNumber":276,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":277,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":281,"author":{"gitId":"russelltankaimin"},"content":"         * Returns {@code Optional#empty()} if {@code groupTags} is null.","lastModifiedDate":"2023-02-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":283,"author":{"gitId":"russelltankaimin"},"content":"        public Optional\u003cSet\u003cGroupTag\u003e\u003e getGroupTags() {","lastModifiedDate":"2023-02-18"},{"lineNumber":284,"author":{"gitId":"russelltankaimin"},"content":"            return (groupTags !\u003d null) ? Optional.of(Collections.unmodifiableSet(groupTags)) : Optional.empty();","lastModifiedDate":"2023-02-17"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-02-18"},{"lineNumber":288,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-18"},{"lineNumber":289,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-02-18"},{"lineNumber":290,"author":{"gitId":"russelltankaimin"},"content":"         * Returns {@code Optional#empty()} if {@code moduleTags} is null.","lastModifiedDate":"2023-02-18"},{"lineNumber":291,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-02-18"},{"lineNumber":292,"author":{"gitId":"russelltankaimin"},"content":"        public Optional\u003cSet\u003cModuleTag\u003e\u003e getModuleTags() {","lastModifiedDate":"2023-02-18"},{"lineNumber":293,"author":{"gitId":"russelltankaimin"},"content":"            return (moduleTags !\u003d null) ? Optional.of(Collections.unmodifiableSet(moduleTags)) : Optional.empty();","lastModifiedDate":"2023-02-18"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":314,"author":{"gitId":"russelltankaimin"},"content":"                    \u0026\u0026 getTelegramHandle().equals(e.getTelegramHandle())","lastModifiedDate":"2023-02-18"},{"lineNumber":315,"author":{"gitId":"russelltankaimin"},"content":"                    \u0026\u0026 getGroupTags().equals(e.getGroupTags())","lastModifiedDate":"2023-02-18"},{"lineNumber":316,"author":{"gitId":"russelltankaimin"},"content":"                    \u0026\u0026 getModuleTags().equals(e.getModuleTags());","lastModifiedDate":"2023-02-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"mynameizzhafeez":66,"russelltankaimin":47,"-":200,"kennycjy":6}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"zichen-3974":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"seanfirefox"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"seanfirefox"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose personal information \"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"seanfirefox"},"content":"            + \"specified by the prefix contains the specified keywords (case-insensitive) and displays them as a list \"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"            + \"with index numbers.\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"seanfirefox"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"seanfirefox"},"content":"            + \"PREFIX/KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"seanfirefox"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"            + COMMAND_WORD + \" \" + Prefix.NAME + \"alice bob charlie\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            + COMMAND_WORD + \" \" + Prefix.GROUP_TAG + \"ta cca study\";","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"mynameizzhafeez":3,"seanfirefox":10,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"zichen-3974":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":" * Sorts the persons by any field.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":" * If it is a tag field, then sort by the number of common tags.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":" * Else, sort by alphanumerical order.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sorts persons by any field. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"If it is a tag field, then sort by the number of common tags. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"Otherwise, sort by alphanumerical order.\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"Add an \u0027a\u0027 behind the prefix to sort the field by ascending order. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"Likewise, add a \u0027d\u0027 behind the prefix to sort the field by descending order.\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"You can chain sorts together to deal with tie breaks.\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"PREFIX/a or PREFIX/d\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"Examples: \\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"            + COMMAND_WORD + \" \" + Prefix.GROUP_TAG + \"a\" + Prefix.NAME + \"d\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            + COMMAND_WORD + \" \" + Prefix.MODULE_TAG + \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Comparator\u003cPerson\u003e comparator;","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String comparatorDesc;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param comparator to compare the persons","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param comparatorDesc that describes what the sort command sorts by","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public SortCommand(Comparator\u003cPerson\u003e comparator, String comparatorDesc) {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        this.comparator \u003d comparator;","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        this.comparatorDesc \u003d comparatorDesc;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        // we copy here as the above personList is immutable","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e sortedPersonList \u003d new ArrayList\u003c\u003e(model.getFilteredPersonList());","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e userModuleTags \u003d model.getUser().getImmutableModuleTags();","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        // caches the common modules in each ModuleTagSet as running set","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        // intersection is expensive if we only use it in the compareTo method","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        sortedPersonList.forEach(person -\u003e person.setCommonModules(userModuleTags));","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        sortedPersonList.sort(comparator);","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        // currently the only way to sort persons in the list","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        model.resetPersons();","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        sortedPersonList.forEach(model::addPerson);","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        return new CommandResult(","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                String.format(\"Sorted by:\\n%s\", comparatorDesc));","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        // we don\u0027t check for comparator equality because it is not possible","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"                || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 comparatorDesc.equals(((SortCommand) other).comparatorDesc));","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":79}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" * Allows users to view full profile of their friends at the right panel.","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public static final String USAGE \u003d \"view \u003cindex\u003e : Allows you to view the profile of the person who\"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            + \"has the index\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            + \"view n/\u003cname\u003e : Allows you to view profile for the specific person\"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            + \"view : Shows your own profile instead\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    private final Optional\u003cString\u003e name;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    private final Optional\u003cIndex\u003e index;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     * Creates a View Command with the person\u0027s name and index.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @param index","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public ViewCommand(String name, Index index) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        this.name \u003d Optional.ofNullable(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        this.index \u003d Optional.ofNullable(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        Optional\u003cPerson\u003e person \u003d retrievePerson(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        if (person.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"            return new CommandResult(\"No such name found!\", false, false,","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"                    model.getUser(), true);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"        Person contact \u003d person.get();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        return new CommandResult(contact.toString(), false, false, contact, true);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * Retrieves either a Person by its index or name or the User itself.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     * @param model","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     * @return","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"    public Optional\u003cPerson\u003e retrievePerson(Model model) {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"        if (index.isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"            return Optional.ofNullable(personList.get(this.index.get().getZeroBased()));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        return name.map(contact -\u003e personList.stream()","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"                .filter(friend -\u003e friend.getName().toString().equals(contact))","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"                .findFirst())","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"                .orElseGet(() -\u003e Optional.ofNullable(model.getUser()));","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    public Optional\u003cIndex\u003e getIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        return index;","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"    public Optional\u003cString\u003e getName() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        return name;","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        if (other instanceof ViewCommand) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"            ViewCommand otherCommand \u003d (ViewCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"            return otherCommand.getIndex().equals(getIndex())","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"                    \u0026\u0026 otherCommand.getName().equals(getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"russelltankaimin":89}},{"path":"src/main/java/seedu/address/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands.exceptions;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"mynameizzhafeez":2,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                ArgumentTokenizer.tokenize(args, Prefix.NAME, Prefix.PHONE, Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.ADDRESS, Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.GROUP_TAG, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!arePrefixesPresent(argMultimap, Prefix.NAME, Prefix.ADDRESS, Prefix.PHONE, Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE)","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(Prefix.NAME).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(Prefix.PHONE).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(Prefix.EMAIL).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(Prefix.ADDRESS).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        TelegramHandle telegramHandle \u003d ParserUtil","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"                .parseTelegramHandle(argMultimap.getValue(Prefix.TELEGRAM_HANDLE).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e groupTagList \u003d ParserUtil.parseGroupTags(argMultimap.getAllValues(Prefix.GROUP_TAG));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e moduleTagList \u003d ParserUtil.parseModuleTags(argMultimap.getAllValues(Prefix.MODULE_TAG));","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        Person person \u003d new Person(name, phone, email, address, telegramHandle, groupTagList, moduleTagList);","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"mynameizzhafeez":12,"russelltankaimin":5,"-":45}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue(Prefix.BLANK).orElse(\"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"mynameizzhafeez":1,"-":59}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(Prefix.BLANK, 0);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(Prefix.BLANK, argsString.length());","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"mynameizzhafeez":3,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                ArgumentTokenizer.tokenize(args, Prefix.NAME, Prefix.PHONE, Prefix.EMAIL, Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.TELEGRAM_HANDLE, Prefix.GROUP_TAG, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        if (argMultimap.getValue(Prefix.NAME).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(Prefix.NAME).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        if (argMultimap.getValue(Prefix.PHONE).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(Prefix.PHONE).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        if (argMultimap.getValue(Prefix.EMAIL).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(Prefix.EMAIL).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        if (argMultimap.getValue(Prefix.ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(Prefix.ADDRESS).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        if (argMultimap.getValue(Prefix.TELEGRAM_HANDLE).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"            editPersonDescriptor.setTelegramHandle(ParserUtil","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"                    .parseTelegramHandle(argMultimap.getValue(Prefix.TELEGRAM_HANDLE).get()));","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        parseGroupTagsForEdit(argMultimap.getAllValues(Prefix.GROUP_TAG))","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"                .ifPresent(editPersonDescriptor::setGroupTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        parseModuleTagsForEdit(argMultimap.getAllValues(Prefix.MODULE_TAG))","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"                .ifPresent(editPersonDescriptor::setModuleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cGroupTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"     * {@code Set\u003cGroupTag\u003e} containing zero tags.","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    private Optional\u003cSet\u003cGroupTag\u003e\u003e parseGroupTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        return Optional.of(ParserUtil.parseGroupTags(tagSet));","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cModuleTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"     * {@code Set\u003cModuleTag\u003e} containing zero tags.","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"    private Optional\u003cSet\u003cModuleTag\u003e\u003e parseModuleTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"        return Optional.of(ParserUtil.parseModuleTags(tagSet));","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"mynameizzhafeez":14,"russelltankaimin":22,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/EduMateParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"public class EduMateParser {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"mynameizzhafeez":5,"russelltankaimin":3,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"seanfirefox"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"seanfirefox"},"content":"        String keyWords \u003d \"\";","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"seanfirefox"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"                ArgumentTokenizer.tokenize(args, Prefix.NAME, Prefix.PHONE, Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.ADDRESS, Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.GROUP_TAG, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!onePrefixPresent(argMultimap, Prefix.NAME, Prefix.ADDRESS, Prefix.PHONE, Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG, Prefix.MODULE_TAG)","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"seanfirefox"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"seanfirefox"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"seanfirefox"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        Prefix prefixPresent \u003d findPrefixPresent(argMultimap, Prefix.NAME, Prefix.ADDRESS, Prefix.PHONE, Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"        if (argMultimap.getValue(prefixPresent).isPresent()) {","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"            keyWords \u003d argMultimap.getValue(prefixPresent).get();","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seanfirefox"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"seanfirefox"},"content":"        String[] keyWordArr \u003d trimArgs(keyWords);","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"seanfirefox"},"content":"        return new FindCommand(new ContainsKeywordsPredicate(Arrays.asList(keyWordArr), prefixPresent));","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"seanfirefox"},"content":"    private String[] trimArgs(String args) throws ParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"seanfirefox"},"content":"        return trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"seanfirefox"},"content":"    private static boolean onePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"seanfirefox"},"content":"        long count \u003d Stream.of(prefixes)","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"seanfirefox"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"seanfirefox"},"content":"                .count();","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"seanfirefox"},"content":"        return count \u003d\u003d 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"seanfirefox"},"content":"    private static Prefix findPrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"seanfirefox"},"content":"        return Stream.of(prefixes)","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"seanfirefox"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"seanfirefox"},"content":"                .findFirst()","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"seanfirefox"},"content":"                .orElse(null);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"mynameizzhafeez":9,"seanfirefox":31,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        if (trimmedIndex.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * Parses an {@code intString} into an {@code Integer} and returns it.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws ParseException if the string cannot be converted into an integer.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public static int parseInt(String intString) throws ParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        String trimmedInt \u003d intString.trim();","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        if (trimmedInt.isEmpty() || !StringUtil.isNonZeroUnsignedInteger(trimmedInt)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        return Integer.parseInt(trimmedInt);","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"     * Parses a {@code String handle} into an {@code TelegramHandle}.","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"     * @throws ParseException if the given {@code handle} is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"    public static TelegramHandle parseTelegramHandle(String handle) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"        requireNonNull(handle);","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"        String trimmedTelegramHandle \u003d handle.trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"        if (!TelegramHandle.isValidTelegramHandle(trimmedTelegramHandle)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"            throw new ParseException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"        return new TelegramHandle(trimmedTelegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"     * Parses a {@code String tag} into a {@code GroupTag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"    public static GroupTag parseGroupTag(String tag) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"        if (!GroupTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"            throw new ParseException(GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"        return new GroupTag(trimmedTag);","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"russelltankaimin"},"content":"     * Parses a {@code String tag} into a {@code GroupTag}.","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"russelltankaimin"},"content":"    public static ModuleTag parseModuleTag(String tag) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"russelltankaimin"},"content":"        if (!ModuleTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"russelltankaimin"},"content":"            throw new ParseException(ModuleTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"russelltankaimin"},"content":"        return new ModuleTag(trimmedTag);","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"russelltankaimin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cGroupTag\u003e}.","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"russelltankaimin"},"content":"    public static Set\u003cGroupTag\u003e parseGroupTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":165,"author":{"gitId":"russelltankaimin"},"content":"        final Set\u003cGroupTag\u003e groupTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"russelltankaimin"},"content":"            groupTagSet.add(parseGroupTag(tagName));","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"russelltankaimin"},"content":"        return groupTagSet;","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"russelltankaimin"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cModuleTag\u003e}.","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"russelltankaimin"},"content":"    public static Set\u003cModuleTag\u003e parseModuleTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"russelltankaimin"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"russelltankaimin"},"content":"        final Set\u003cModuleTag\u003e moduleTagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"russelltankaimin"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"russelltankaimin"},"content":"            moduleTagSet.add(parseModuleTag(tagName));","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"russelltankaimin"},"content":"        return moduleTagSet;","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"mynameizzhafeez":16,"russelltankaimin":44,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"public enum Prefix {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    BLANK(\"\", \"\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"    NAME(\"n/\", \"Name\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    ADDRESS(\"a/\", \"Address\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    PHONE(\"p/\", \"Phone\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    TELEGRAM_HANDLE(\"t/\", \"Telegram Handle\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    EMAIL(\"e/\", \"Email\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    GROUP_TAG(\"g/\", \"Group Tags\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    MODULE_TAG(\"m/\", \"Module Tags\");","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String description;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    Prefix(String prefix, String description) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        return description;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        return getPrefix();","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"mynameizzhafeez":16,"-":19}},{"path":"src/main/java/seedu/address/logic/parser/PrefixPosition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":" * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"public class PrefixPosition implements Comparable\u003cPrefixPosition\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"    private final int startPosition;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        this.startPosition \u003d startPosition;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    int getStartPosition() {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        return startPosition;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    Prefix getPrefix() {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        return prefix;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"%s(%d)\", prefix.toString(), startPosition);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(PrefixPosition otherPp) {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        return Integer.compare(startPosition, otherPp.startPosition);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"                || (other instanceof PrefixPosition // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 prefix.equals(((PrefixPosition) other).prefix)","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 startPosition \u003d\u003d ((PrefixPosition) other).startPosition);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":40}},{"path":"src/main/java/seedu/address/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    // maps the prefixes to their comparators","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final HashMap\u003cPrefix, Comparator\u003cPerson\u003e\u003e COMPARATOR_HASH_MAP \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.ADDRESS, Comparator.comparing(Person::getAddress));","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.EMAIL, Comparator.comparing(Person::getEmail));","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.GROUP_TAG, Comparator.comparing(Person::getGroupTags));","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.MODULE_TAG, Comparator.comparing(Person::getModuleTags));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.NAME, Comparator.comparing(Person::getName));","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.PHONE, Comparator.comparing(Person::getPhone));","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.TELEGRAM_HANDLE, Comparator.comparing(Person::getTelegramHandle));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        }};","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    // use this as the default sorting direction","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final HashMap\u003cPrefix, Boolean\u003e IS_ASCENDING_DEFAULT_HASH_MAP \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.ADDRESS, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.EMAIL, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.GROUP_TAG, false);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.MODULE_TAG, false);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.NAME, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.PHONE, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            put(Prefix.TELEGRAM_HANDLE, true);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        }};","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * and returns an SortCommand object for execution.","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        // the prefix positions are ordered from first to last","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        // the argument multimap gives an unordered list so we cannot use it here","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPrefixPosition\u003e prefixPositions \u003d ArgumentTokenizer","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"                .findAllPrefixPositions(args, Prefix.NAME, Prefix.PHONE, Prefix.EMAIL, Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                        Prefix.TELEGRAM_HANDLE, Prefix.GROUP_TAG, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        // we reverse here because of the nature of the reduce function","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        // we want the name comparator to go last,","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        // so if we have m/ g/ as our comparator, then we will process them as n/ g/ m/","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        prefixPositions.sort(Comparator.comparing(PrefixPosition::getStartPosition).reversed());","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        // stream of comparators based on pp","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cComparator\u003cPerson\u003e\u003e comparatorStream \u003d prefixPositions.stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(pp -\u003e COMPARATOR_HASH_MAP.get(pp.getPrefix()));","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        // stream of whether the prefix sort needs to be ascending","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cBoolean\u003e isAscendingStream \u003d prefixPositions.stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(pp -\u003e isAscending(pp, args));","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        // processes comparators from first to last (first goes first)","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        // creates one chained comparator","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        Comparator\u003cPerson\u003e comparator \u003d CollectionUtil","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"                .zip(comparatorStream, isAscendingStream, this::reverseComparatorIfDescending)","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"                .reduce(Comparator.comparing(Person::getName), this::combineComparators);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        // converts the prefixes into their name descriptors","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        // n/ -\u003e Name for example","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cString\u003e comparatorNameStream \u003d prefixPositions.stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(pp -\u003e pp.getPrefix().getDescription());","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        // we recompute this because streams can only be used once","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        isAscendingStream \u003d prefixPositions.stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(pp -\u003e isAscending(pp, args));","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        // string to show to the user","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        String comparatorDesc \u003d CollectionUtil","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"                .zip(comparatorNameStream, isAscendingStream, this::getComparatorDesc)","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"                .collect(Collectors.joining(\"\\n\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        return new SortCommand(comparator, comparatorDesc);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"     * Checks if a prefix is meant to be sorted in ascending or descending order.","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"    private boolean isAscending(PrefixPosition pp, String args) {","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        // default value when the first character is neither \u0027a\u0027 nor \u0027d\u0027","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        boolean isAscending \u003d IS_ASCENDING_DEFAULT_HASH_MAP.get(pp.getPrefix());","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        // checks the character immediately after the prefix","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        int startPosition \u003d pp.getStartPosition();","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        int prefixLength \u003d pp.getPrefix().getPrefix().length();","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        int firstCharIndex \u003d startPosition + prefixLength;","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        if (firstCharIndex \u003c args.length()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"            char firstChar \u003d Character.toLowerCase(args.charAt(firstCharIndex));","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"            isAscending |\u003d firstChar \u003d\u003d \u0027a\u0027;","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"            isAscending \u0026\u003d firstChar !\u003d \u0027d\u0027;","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"        return isAscending;","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"     * Reverses the comparator when necessary.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"    private Comparator\u003cPerson\u003e reverseComparatorIfDescending(Comparator\u003cPerson\u003e comparator, boolean isAscending) {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!isAscending) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"            comparator \u003d comparator.reversed();","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        return comparator;","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"     * Formats the string to be displayed to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"    private String getComparatorDesc(String comparatorName, boolean isAscending) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"%s: %s\", comparatorName,","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"                isAscending ? \"Ascending\" : \"Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"     * Combines two comparators together.","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"     * Checks {@code primary} comparator first.","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"     * If {@code primary} comparator returns equal, then compare using {@code secondary} comparator.","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param primary the main comparator.","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param secondary the comparator to use in case {@code primary} returns equal.","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"    private Comparator\u003cPerson\u003e combineComparators(Comparator\u003cPerson\u003e secondary, Comparator\u003cPerson\u003e primary) {","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"        return primary.thenComparing(secondary);","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":144}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":" * Parses input commands and creates a View Command.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * @param args","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        // shows user information","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"            return new ViewCommand(null, null);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"                args, Prefix.NAME);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        // show user by querying name","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        if (argumentMultimap.getValue(Prefix.NAME).isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"            String name \u003d argumentMultimap.getValue(Prefix.NAME).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            return new ViewCommand(name, null);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        // show user by querying index","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        if (!argumentMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"                return new ViewCommand(null, index);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"            } catch (ParseException pe) {","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"russelltankaimin":47}},{"path":"src/main/java/seedu/address/model/EduMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"public class EduMate implements ReadOnlyEduMate {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private User user;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        user \u003d SampleDataUtil.getSampleUser();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMate() {}","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates an EduMate using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMate(ReadOnlyEduMate toBeCopied) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"     * Replaces the contents of the person list with an empty list of persons.","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    public void resetPersons() {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        this.persons.setPersons(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the user of the Address Book.","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(user);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"     * Resets the existing data of this {@code EduMate} with {@code newData}.","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    public void resetData(ReadOnlyEduMate newData) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        setUser(newData.getUser());","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"     * Removes {@code key} from this {@code EduMate}.","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        persons.asUnmodifiableObservableList().forEach(person -\u003e {","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"            sb.append(person);","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"        });","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"    public User getUser() {","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"        return user;","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"                || (other instanceof EduMate // instanceof handles nulls","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 persons.equals(((EduMate) other).persons)","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 user.equals(((EduMate) other).user));","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"        return Objects.hash(persons, user);","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":42,"-":110}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    Path getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    void setEduMateFilePath(Path eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     * Replaces address book data with the data in {@code eduMate}.","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    void setEduMate(ReadOnlyEduMate eduMate);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    /** Returns the EduMate */","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    ReadOnlyEduMate getEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     * Clears the person list.","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"     * Used for sorting the list, as the list needs to be cleared before it can be sorted.","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    void resetPersons();","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the user object.","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     * User will not be null.","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    User getUser();","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the user object to the EduMate object.","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param user {@code User} must not be null.","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"    void setUser(User user);","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"mynameizzhafeez":25,"-":81}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private final EduMate eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * Initializes a ModelManager with the given eduMate and userPrefs.","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public ModelManager(ReadOnlyEduMate eduMate, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        requireAllNonNull(eduMate, userPrefs);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        logger.fine(\"Initializing with address book: \" + eduMate + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        this.eduMate \u003d new EduMate(eduMate);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.eduMate.getPersonList());","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        this(new EduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        return userPrefs.getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMateFilePath(Path eduMateFilePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        userPrefs.setEduMateFilePath(eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EduMate \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMate(ReadOnlyEduMate eduMate) {","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        this.eduMate.resetData(eduMate);","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"    public ReadOnlyEduMate getEduMate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate.hasPerson(person);","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.removePerson(target);","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.addPerson(person);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.setPerson(target, editedPerson);","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"    public void resetPersons() {","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.resetPersons();","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"    public User getUser() {","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate.getUser();","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(user);","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.setUser(user);","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"     * {@code versionedEduMate}","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate.equals(other.eduMate)","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":40,"-":128}},{"path":"src/main/java/seedu/address/model/ReadOnlyEduMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public interface ReadOnlyEduMate {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a view of the user object.","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     * This will always be non-null.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    User getUser();","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":8,"-":16}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    Path getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"mynameizzhafeez":1,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private Path eduMateFilePath \u003d Paths.get(\"data\" , \"edumate.json\");","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        setEduMateFilePath(newUserPrefs.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMateFilePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMateFilePath(Path eduMateFilePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        this.eduMateFilePath \u003d eduMateFilePath;","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 eduMateFilePath.equals(o.eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        return Objects.hash(guiSettings, eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(\"\\nLocal data file location : \" + eduMateFilePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":10,"-":77}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class Address implements Comparable\u003cAddress\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the String value stored within the email.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(Address otherAddress) {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.compareTo(otherAddress.value);","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":15,"-":54}},{"path":"src/main/java/seedu/address/model/person/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"seanfirefox"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"seanfirefox"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"seanfirefox"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"seanfirefox"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"seanfirefox"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"seanfirefox"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"seanfirefox"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"seanfirefox"},"content":"    private final Prefix prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"seanfirefox"},"content":"     * Public constructor for predicate.","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"seanfirefox"},"content":"     * @param keywords List of strings of keywords.","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"     * @param prefix Prefix from CliSyntax.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"seanfirefox"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"seanfirefox"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywords, Prefix prefix) {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"seanfirefox"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"seanfirefox"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"seanfirefox"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"seanfirefox"},"content":"        return keywords.stream()","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"seanfirefox"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsKeyWordIgnoreCase(selector(person), keyword));","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"seanfirefox"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"seanfirefox"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"seanfirefox"},"content":"                || (other instanceof ContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"seanfirefox"},"content":"    private String selector(Person person) {","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        switch (prefix) {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        case NAME:","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getName().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        case PHONE:","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getPhone().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        case EMAIL:","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getEmail().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        case ADDRESS:","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getAddress().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        case TELEGRAM_HANDLE:","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getTelegramHandle().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        case MODULE_TAG:","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getImmutableModuleTags().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        case GROUP_TAG:","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"            return person.getImmutableGroupTags().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"seanfirefox"},"content":"        default:","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"seanfirefox"},"content":"            // Will not reach here","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"seanfirefox"},"content":"            return \"\";","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"seanfirefox"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"seanfirefox"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"mynameizzhafeez":15,"seanfirefox":55}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class Email implements Comparable\u003cEmail\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the String value stored within the email.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(Email otherEmail) {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.compareTo(otherEmail.value);","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":15,"-":68}},{"path":"src/main/java/seedu/address/model/person/GroupTagSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":" * This class was added to facilitate the Sort Command.","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":" * We implement the comparator here so that the Sort Command is cleaner.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"public class GroupTagSet implements Comparable\u003cGroupTagSet\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     * How many groups you want to display in the toString() method","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"     * before it comes out as ellipses.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int DISPLAY_LIMIT \u003d 10;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Set\u003cGroupTag\u003e groups;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    public GroupTagSet() {","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        groups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds the group tag to the set of modules.","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public void add(GroupTag groupTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        groups.add(groupTag);","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds all group tags to the set of groups.","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    public void addAll(Collection\u003c? extends GroupTag\u003e groupTags) {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        groups.addAll(groupTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     * Removes the group tag from the set of groups.","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public void remove(GroupTag groupTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        groups.remove(groupTag);","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the number of groups.","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    public int size() {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        return groups.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable group tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cGroupTag\u003e getImmutableGroups() {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        return Collections.unmodifiableSet(groups);","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        String groupsString \u003d groups.stream().sorted().map(GroupTag::toString)","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                .limit(DISPLAY_LIMIT).collect(Collectors.joining(\" | \"));","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        // whether the size exceeds the display limit","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        String ellipsis \u003d groups.size() \u003e DISPLAY_LIMIT ? \"...\" : \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"%s%s\", groupsString, ellipsis);","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"     * Compares the sizes of the sets.","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"     * We do this because we want the size of the set to be the basis of comparison.","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * In other words, if the person shares more relationships with the user,","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     * the person is likely to be closer to the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(GroupTagSet otherGroupTagSet) {","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        return Integer.compare(groups.size(), otherGroupTagSet.groups.size());","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":87}},{"path":"src/main/java/seedu/address/model/person/ModuleTagSet.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":" * This class was added to facilitate the Sort Command.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":" * We implement the comparator here so that the Sort Command is cleaner.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"public class ModuleTagSet implements Comparable\u003cModuleTagSet\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"     * How many modules you want to display in the toString() method","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"     * before it comes out as ellipses.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int DISPLAY_LIMIT \u003d 10;","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Set\u003cModuleTag\u003e modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     * We want to find the modules in common with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * As such, we want to keep track of what modules the user has.","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    private Set\u003cModuleTag\u003e commonModules;","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"     * Initialises a new ModuleTagSet.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    public ModuleTagSet() {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        modules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        commonModules \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds the module tag to the set of modules.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public void add(ModuleTag moduleTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        modules.add(moduleTag);","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds all module tags to the set of modules.","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    public void addAll(Collection\u003c? extends ModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        modules.addAll(moduleTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"     * Removes the module tag from the set of modules.","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gives access from outside classes to this set.","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    public void remove(ModuleTag moduleTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        modules.remove(moduleTag);","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the number of modules.","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public int size() {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        return modules.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"     * Computes and sets the common modules the person shares with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setCommonModules(Set\u003cModuleTag\u003e userModuleTags) {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(userModuleTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        // we make a copy so that retainAll does not destroy this set","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"        commonModules \u003d new HashSet\u003c\u003e(modules);","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        // finds the intersection between user modules and person modules","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        commonModules.retainAll(userModuleTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable module tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cModuleTag\u003e getImmutableModules() {","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        return Collections.unmodifiableSet(modules);","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable module tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"     * Modules are those in common with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cModuleTag\u003e getImmutableCommonModules() {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        return Collections.unmodifiableSet(commonModules);","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable module tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"     * Modules are those not in common with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cModuleTag\u003e getUncommonModuleTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"        // finds modules that are not in common with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e uncommonModuleTags \u003d new HashSet\u003c\u003e(modules);","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        uncommonModuleTags.removeAll(commonModules);","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        return uncommonModuleTags;","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns the number of common modules.","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"    public int getNumberOfCommonModules() {","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"        return commonModules.size();","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"    public String toString() {","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cModuleTag\u003e commonModulesFirst \u003d Stream.concat(commonModules.stream().sorted(),","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"                getUncommonModuleTags().stream().sorted());","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        String modulesString \u003d commonModulesFirst","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(ModuleTag::toString)","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"                .limit(DISPLAY_LIMIT)","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"                .collect(Collectors.joining(\" | \"));","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        // whether the size exceeds the display limit","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"        String ellipsis \u003d modules.size() \u003e DISPLAY_LIMIT ? \"...\" : \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"        return String.format(\"%s%s\", modulesString, ellipsis);","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"     * Compares the sizes of the sets.","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"     * We do this because we want the size of the set intersection to be the basis of comparison.","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"     * In other words, if the person shares more modules with the user,","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"     * the person is likely to be closer to the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(ModuleTagSet otherModuleTagSet) {","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"        return Integer.compare(getNumberOfCommonModules(),","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"                otherModuleTagSet.getNumberOfCommonModules());","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":146}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class Name implements Comparable\u003cName\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        value \u003d name;","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the String value stored within the email.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 value.equals(((Name) other).value)); // state check","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(Name otherName) {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.compareTo(otherName.value);","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":18,"-":53}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    private final TelegramHandle telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    private final GroupTagSet groupTags \u003d new GroupTagSet();","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private final ModuleTagSet moduleTags \u003d new ModuleTagSet();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    public Person(Name name, Phone phone, Email email, Address address, TelegramHandle telegramHandle,","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"                  Set\u003cGroupTag\u003e groupTags, Set\u003cModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        requireAllNonNull(name, phone, email, address, telegramHandle, groupTags, moduleTags);","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        this.groupTags.addAll(groupTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        this.moduleTags.addAll(moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    public TelegramHandle getTelegramHandle() {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        return telegramHandle;","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a copy of the person\u0027s group tags.","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    public GroupTagSet getGroupTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        return groupTags;","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable group tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cGroupTag\u003e getImmutableGroupTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        return groupTags.getImmutableGroups();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a copy of the person\u0027s module tags.","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    public ModuleTagSet getModuleTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        return moduleTags;","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable module tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cModuleTag\u003e getImmutableModuleTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"        return moduleTags.getImmutableModules();","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an immutable module tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"    public Set\u003cModuleTag\u003e getImmutableCommonModuleTags() {","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        return Collections.unmodifiableSet(moduleTags.getImmutableCommonModules());","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"     * Sets the common modules that the person has with the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setCommonModules(Set\u003cModuleTag\u003e userModules) {","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTags.setCommonModules(userModules);","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 otherPerson.getImmutableGroupTags().equals(getImmutableGroupTags())","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 otherPerson.getTelegramHandle().equals(getTelegramHandle())","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 otherPerson.getImmutableModuleTags().equals(getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"russelltankaimin"},"content":"        return Objects.hash(name, phone, email, address, telegramHandle, groupTags, moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"russelltankaimin"},"content":"                .append(getAddress())","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nTelegram: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(getTelegramHandle())","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nGroups: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(getImmutableGroupTags())","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(\"\\nModules: \")","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":51,"russelltankaimin":15,"-":106}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class Phone implements Comparable\u003cPhone\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the String value stored within the email.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(Phone otherPhone) {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.compareTo(otherPhone.value);","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"mynameizzhafeez":16,"-":50}},{"path":"src/main/java/seedu/address/model/person/TelegramHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":" * Represents a User\u0027s telegram handle in the address book.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTelegramHandle(String)}","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class TelegramHandle implements Comparable\u003cTelegramHandle\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"            \"Telegram Handle should not be blank and should start with @ symbol\";","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    /*","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * The first character should be \"@\" followed by alphanumeric characters.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALIDATION_REGEX \u003d \"^@[\\\\p{Alnum}]+\";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"     * Constructs a {@code TelegramHandle}.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"     * @param telegramHandle A valid telegram handle.","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public TelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        requireNonNull(telegramHandle);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        checkArgument(isValidTelegramHandle(telegramHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        value \u003d telegramHandle;","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     * Returns true if the telegram handle is valid.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     * @param test telegram handle","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     * @return true if the telegram handle is valid.","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isValidTelegramHandle(String test) {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets the String value stored within the email.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        return getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"                || (other instanceof TelegramHandle // instanceof handles nulls","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 value.equals(((TelegramHandle) other).value)); // state check","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(TelegramHandle otherTelegramHandle) {","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        return value.compareTo(otherTelegramHandle.value);","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":19,"russelltankaimin":53}},{"path":"src/main/java/seedu/address/model/person/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" * Represents the user of the Address Book.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"public class User extends Person {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    public User(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"                   TelegramHandle telegramHandle, Set\u003cGroupTag\u003e groupTags, Set\u003cModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"        super(name, phone, email, address, telegramHandle, groupTags, moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"russelltankaimin":20}},{"path":"src/main/java/seedu/address/model/tag/GroupTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" * Represents a GroupTag in the address book.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class GroupTag extends Tag implements Comparable\u003cGroupTag\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Group Tags names should be alphanumeric\";","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"     * Constructs a {@code GroupTag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"    public GroupTag(String tagName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        super(tagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"    boolean isValidTagName(String test, String regex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        return Pattern.matches(VALIDATION_REGEX, test);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"                || (other instanceof GroupTag // instanceof handles nulls","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 tagName.equals(((GroupTag) other).tagName)); // state check","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        return tagName.hashCode();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        return tagName;","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(GroupTag otherGroupTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        return tagName.compareTo(otherGroupTag.tagName);","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":7,"russelltankaimin":57}},{"path":"src/main/java/seedu/address/model/tag/ModuleTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":" * Represents a ModuleTag in the address book.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class ModuleTag extends Tag implements Comparable\u003cModuleTag\u003e {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"            \"NUS Modules should have 2 - 3 letter prefix, followed by 4 digits and optional 1 - 3 alphabets\";","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]{2,3}[0-9]{4}[A-Z]{0,3}\";","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"     * Constructs a {@code ModuleTag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    public ModuleTag(String tagName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"        super(tagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    boolean isValidTagName(String test, String regex) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        return Pattern.matches(VALIDATION_REGEX, test);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"                || (other instanceof ModuleTag // instanceof handles nulls","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 tagName.equals(((ModuleTag) other).tagName)); // state check","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        return tagName.hashCode();","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        return tagName;","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    public int compareTo(ModuleTag otherModuleTag) {","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        return tagName.compareTo(otherModuleTag.tagName);","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":8,"russelltankaimin":56}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":" * Represents an abstract version of Tag.","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"public abstract class Tag {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    abstract boolean isValidTagName(String test, String regex);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"russelltankaimin":3,"-":19}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.File;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":" * Contains utility methods for populating {@code EduMate} with sample data.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SampleDataUtil.class);","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     * Gets sample data from the text file \"sampleData.txt\"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param size Size of the sample data to be returned.","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public static ReadOnlyEduMate getSampleEduMate(int size) {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate sampleEm \u003d new EduMate();","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            List\u003cPerson\u003e samplePersons \u003d getSamplePersons();","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            Collections.shuffle(samplePersons);","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"            samplePersons.stream()","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"                    .filter(Objects::nonNull)","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"                    .limit(size).forEach(sampleEm::addPerson);","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"            logger.info(\"Sample Data not found: \" + fnfe.getMessage());","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        sampleEm.setUser(getSampleUser());","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        return sampleEm;","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    public static Set\u003cGroupTag\u003e getGroupTagSet(String... strings) {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                .filter(Predicate.not(String::isEmpty))","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(String::trim)","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"                .map(GroupTag::new)","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a group tag set containing the list of strings given.","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"     * Splits a string by space, and processes the tags as varargs.","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Set\u003cGroupTag\u003e getGroupTagSetFromUnsplitted(String unsplittedString) {","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        return getGroupTagSet(unsplittedString.split(\" \"));","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a module tag set containing the list of strings given.","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    public static Set\u003cModuleTag\u003e getModuleTagSet(String... strings) {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                .filter(Predicate.not(String::isEmpty))","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(String::trim)","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"                .map(ModuleTag::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a module tag set containing the list of strings given.","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"     * Splits a string by space, and processes the tags as varargs.","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"    public static Set\u003cModuleTag\u003e getModuleTagSetFromUnsplitted(String unsplittedString) {","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        return getModuleTagSet(unsplittedString.split(\" \"));","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a sample User singleton object.","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"    public static User getSampleUser() {","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"        return new User(new Name(\"Linus Richards\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"                new Phone(\"90102030\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"                new Email(\"linusrichards@gmail.com\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"                new Address(\"National University of Singapore\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"                new TelegramHandle(\"@linusrichards\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"                getGroupTagSet(),","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"                getModuleTagSetFromUnsplitted(\"CS2100 CS2101 CS2102 CS2103 CS2104 CS2105\")","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"        );","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"     * Formats the data from the text file.","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param personData String representing the person data in the text file.","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"    private static Person getSamplePerson(String personData) {","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cString\u003e personDataList \u003d Stream.of(personData.split(\"\\\\|\"))","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(String::trim)","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"                .limit(7) // Maximum of 7 fields","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        if (personDataList.size() !\u003d 7) {","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"            return null;","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        Name name \u003d new Name(personDataList.get(0));","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        Phone phone \u003d new Phone(personDataList.get(1));","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        Email email \u003d new Email(personDataList.get(2));","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"        Address address \u003d new Address(personDataList.get(3));","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        TelegramHandle telegramHandle \u003d new TelegramHandle(personDataList.get(4));","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e groupTagSet \u003d getGroupTagSetFromUnsplitted(personDataList.get(5));","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e moduleTagSet \u003d getModuleTagSetFromUnsplitted(personDataList.get(6));","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        return new Person(name, phone, email, address,","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"                telegramHandle, groupTagSet, moduleTagSet);","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns a sample array of Persons.","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"    public static List\u003cPerson\u003e getSamplePersons() throws FileNotFoundException {","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"        File sampleDataFile \u003d new File(\"src/main/java/seedu/address/model/util/sampleData.txt\");","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"        Scanner scanner \u003d new Scanner(sampleDataFile);","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e personSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"            String nextLine \u003d scanner.nextLine();","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"            personSet.add(getSamplePerson(nextLine));","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"        return personSet;","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"mynameizzhafeez":109,"russelltankaimin":9,"-":31}},{"path":"src/main/java/seedu/address/storage/EduMateStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" * Represents a storage for {@link seedu.address.model.EduMate}.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"public interface EduMateStorage {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    Path getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns EduMate data as a {@link ReadOnlyEduMate}.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    Optional\u003cReadOnlyEduMate\u003e readEduMate() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"     * @see #getEduMateFilePath()","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    Optional\u003cReadOnlyEduMate\u003e readEduMate(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"     * Saves the given {@link ReadOnlyEduMate} to the storage.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param eduMate cannot be null.","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    void saveEduMate(ReadOnlyEduMate eduMate) throws IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * @see #saveEduMate(ReadOnlyEduMate)","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    void saveEduMate(ReadOnlyEduMate eduMate, Path filePath) throws IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"mynameizzhafeez":13,"-":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroupTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" * Jackson-friendly version of {@link GroupTag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonAdaptedGroupTag extends JsonAdaptedTag {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String groupTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedGroupTag(String groupTagName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        this.groupTagName \u003d groupTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts a given {@code GroupTag} into this class for Jackson use.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedGroupTag(GroupTag source) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagName \u003d source.tagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    @JsonValue","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getTagName() {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        return groupTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code GroupTag} object.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public GroupTag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!GroupTag.isValidTagName(groupTagName)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        return new GroupTag(groupTagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModuleTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" * Jackson-friendly version of {@link ModuleTag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonAdaptedModuleTag extends JsonAdaptedTag {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final String moduleTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedModuleTag(String moduleTagName) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        this.moduleTagName \u003d moduleTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts a given {@code GroupTag} into this class for Jackson use.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedModuleTag(ModuleTag source) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagName \u003d source.tagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    @JsonValue","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public String getTagName() {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        return moduleTagName;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code GroupTag} object.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public ModuleTag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!ModuleTag.isValidTagName(moduleTagName)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(ModuleTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        return new ModuleTag(moduleTagName);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    protected final String name;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    protected final String phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    protected final String email;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    protected final String address;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    protected final String telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"    protected final List\u003cJsonAdaptedGroupTag\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    protected final List\u003cJsonAdaptedModuleTag\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"            @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"            @JsonProperty(\"groups\") List\u003cJsonAdaptedGroupTag\u003e groups,","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"            @JsonProperty(\"modules\") List\u003cJsonAdaptedModuleTag\u003e modules) {","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        this.telegramHandle \u003d telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        if (groups !\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"            this.groups.addAll(groups);","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        name \u003d source.getName().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        phone \u003d source.getPhone().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        email \u003d source.getEmail().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        address \u003d source.getAddress().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        telegramHandle \u003d source.getTelegramHandle().getValue();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        groups.addAll(source.getImmutableGroupTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                .map(JsonAdaptedGroupTag::new)","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        modules.addAll(source.getImmutableModuleTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"                .map(JsonAdaptedModuleTag::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        final List\u003cGroupTag\u003e personGroupTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"        for (JsonAdaptedGroupTag tag : groups) {","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"            personGroupTags.add(tag.toModelType());","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"        final List\u003cModuleTag\u003e personModuleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"        for (JsonAdaptedModuleTag tag : modules) {","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"            personModuleTags.add(tag.toModelType());","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"        if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"        final TelegramHandle modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"        final Set\u003cGroupTag\u003e modelGroupTags \u003d new HashSet\u003c\u003e(personGroupTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"        final Set\u003cModuleTag\u003e modelModuleTags \u003d new HashSet\u003c\u003e(personModuleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"                modelTelegramHandle, modelGroupTags, modelModuleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":12,"russelltankaimin":34,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"abstract class JsonAdaptedTag {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    abstract Tag toModelType() throws IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":2,"-":9}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":" * Jackson-friendly version of {@link User}.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonAdaptedUser extends JsonAdaptedPerson {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedUser(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                             @JsonProperty(\"telegramHandle\") String telegramHandle,","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"                             @JsonProperty(\"groups\") List\u003cJsonAdaptedGroupTag\u003e tagged,","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"                             @JsonProperty(\"modules\") List\u003cJsonAdaptedModuleTag\u003e modules) {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        super(name, phone, email, address, telegramHandle, tagged, modules);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts a given {@code User} into this class for Jackson use.","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonAdaptedUser(User source) {","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        super(source);","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public User toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        final List\u003cGroupTag\u003e userGroupTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"        for (JsonAdaptedGroupTag tag : groups) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            userGroupTags.add(tag.toModelType());","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        final List\u003cModuleTag\u003e userModuleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"        for (JsonAdaptedModuleTag tag : modules) {","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"            userModuleTags.add(tag.toModelType());","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                    Email.class.getSimpleName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        if (telegramHandle \u003d\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"                    TelegramHandle.class.getSimpleName()));","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!TelegramHandle.isValidTelegramHandle(telegramHandle)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new IllegalValueException(TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        final TelegramHandle modelTelegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"        final Set\u003cGroupTag\u003e modelGroupTags \u003d new HashSet\u003c\u003e(userGroupTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        final Set\u003cModuleTag\u003e modelModuleTags \u003d new HashSet\u003c\u003e(userModuleTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"        return new User(modelName, modelPhone, modelEmail,","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"                modelAddress, modelTelegramHandle, modelGroupTags, modelModuleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":101,"russelltankaimin":8}},{"path":"src/main/java/seedu/address/storage/JsonEduMateStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":" * A class to access EduMate data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonEduMateStorage implements EduMateStorage {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEduMateStorage.class);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonEduMateStorage(Path filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    public Optional\u003cReadOnlyEduMate\u003e readEduMate() throws DataConversionException {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        return readEduMate(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"     * Similar to {@link #readEduMate()}.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public Optional\u003cReadOnlyEduMate\u003e readEduMate(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        Optional\u003cJsonSerializableEduMate\u003e jsonEduMate \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"                filePath, JsonSerializableEduMate.class);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!jsonEduMate.isPresent()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"            return Optional.of(jsonEduMate.get().toModelType());","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate(ReadOnlyEduMate eduMate) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        saveEduMate(eduMate, filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"     * Similar to {@link #saveEduMate(ReadOnlyEduMate)}.","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate(ReadOnlyEduMate eduMate, Path filePath) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        requireNonNull(eduMate);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEduMate(eduMate), filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":20,"-":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableEduMate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":" * An Immutable EduMate that is serializable to JSON format.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"@JsonRootName(value \u003d \"edumate\")","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"class JsonSerializableEduMate {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    private final JsonAdaptedUser user;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"     * Constructs a {@code JsonSerializableEduMate} with the given persons.","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonSerializableEduMate(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                                       @JsonProperty(\"user\") JsonAdaptedUser user) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts a given {@code ReadOnlyEduMate} into this class for Jackson use.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEduMate}.","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public JsonSerializableEduMate(ReadOnlyEduMate source) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        user \u003d new JsonAdaptedUser(source.getUser());","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"     * Converts this address book into the model\u0027s {@code EduMate} object.","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMate toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate eduMate \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        User userModel \u003d user.toModelType();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e userModuleTags \u003d userModel.getImmutableModuleTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"            if (eduMate.hasPerson(person)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"            person.setCommonModules(userModuleTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"            eduMate.addPerson(person);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.setUser(userModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":29,"-":44}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"public interface Storage extends EduMateStorage, UserPrefsStorage {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    Path getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    Optional\u003cReadOnlyEduMate\u003e readEduMate() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    void saveEduMate(ReadOnlyEduMate eduMate) throws IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"mynameizzhafeez":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":" * Manages storage of EduMate data in local storage.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    private EduMateStorage eduMateStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"     * Creates a {@code StorageManager} with the given {@code EduMateStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public StorageManager(EduMateStorage eduMateStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        this.eduMateStorage \u003d eduMateStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EduMate methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMateStorage.getEduMateFilePath();","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public Optional\u003cReadOnlyEduMate\u003e readEduMate() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        return readEduMate(eduMateStorage.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public Optional\u003cReadOnlyEduMate\u003e readEduMate(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMateStorage.readEduMate(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate(ReadOnlyEduMate eduMate) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        saveEduMate(eduMate, eduMateStorage.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate(ReadOnlyEduMate eduMate, Path filePath) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMateStorage.saveEduMate(eduMate, filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":17,"-":61}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"    private UserProfilePanel userProfilePanel;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"zichen-3974"},"content":"    private Button helpMenuItem;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"zichen-3974"},"content":"    //@FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"zichen-3974"},"content":"    //private StackPane statusBarPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"zichen-3974"},"content":"    private StackPane userProfilePlaceholder;","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":83,"author":{"gitId":"zichen-3974"},"content":"        //StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getEduMateFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"zichen-3974"},"content":"        //statusBarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":88,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"zichen-3974"},"content":"        userProfilePanel \u003d new UserProfilePanel(logic);","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"zichen-3974"},"content":"        userProfilePlaceholder.getChildren().add(userProfilePanel.getRoot());","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"russelltankaimin"},"content":"            if (commandResult.isToShowNewPerson()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"russelltankaimin"},"content":"                Person newPerson \u003d commandResult.getDisplayPerson();","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"russelltankaimin"},"content":"                userProfilePanel \u003d new UserProfilePanel(newPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"zichen-3974"},"content":"                userProfilePlaceholder.getChildren().clear();","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"zichen-3974"},"content":"                userProfilePlaceholder.getChildren().add(userProfilePanel.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"zichen-3974":15,"russelltankaimin":5,"-":150}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on EduMate level 4\u003c/a\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    private FlowPane groupTags;","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    private FlowPane moduleTags;","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        name.setText(person.getName().getValue());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        phone.setText(person.getPhone().getValue());","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        address.setText(person.getAddress().getValue());","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        email.setText(person.getEmail().getValue());","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        person.getImmutableGroupTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                .sorted(GroupTag::compareTo)","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"zichen-3974"},"content":"                .forEach(groupTag -\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"zichen-3974"},"content":"                    Label temp \u003d new Label(groupTag.tagName);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"zichen-3974"},"content":"                    temp.setStyle(\"-fx-text-fill: #FFFFFF; -fx-background-color: #000000; \"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"zichen-3974"},"content":"                            + \"-fx-padding: 2 5 2 5; -fx-background-radius: 5;\");","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"zichen-3974"},"content":"                    groupTags.getChildren().add(temp);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"zichen-3974"},"content":"                });","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        person.getImmutableCommonModuleTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                .sorted(ModuleTag::compareTo)","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"                .forEach(moduleTag -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"                    Label temp \u003d new Label(moduleTag.tagName);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"                    temp.setStyle(\"-fx-text-fill: #FFFFFF; -fx-background-color: #000000; \"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"                            + \"-fx-padding: 2 5 2 5; -fx-background-radius: 5;\");","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"                    moduleTags.getChildren().add(temp);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"                });","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"mynameizzhafeez":19,"russelltankaimin":1,"zichen-3974":6,"-":69}},{"path":"src/main/java/seedu/address/ui/UserProfilePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zichen-3974"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zichen-3974"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"/**","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zichen-3974"},"content":" * Controller for user profile page","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":" */","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"public class UserProfilePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"    private static final String FXML \u003d \"UserProfilePanel.fxml\";","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"zichen-3974"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UserProfilePanel.class);","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":"    private static final String PHONE_NUMBER \u003d \"Phone number: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"    private static final String EMAIL \u003d \"Email: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"    private static final String ADDRESS \u003d \"Address: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"    private static final String TELEGRAM \u003d \"Telegram\";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":"    private static final String GROUP_TAGS \u003d \"Groups: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zichen-3974"},"content":"    private static final String MODULE_TAGS \u003d \"Modules: \";","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"    private Logic logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"    private User user;","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"    private StackPane userProfilePane;","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"zichen-3974"},"content":"    private Label name;","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"zichen-3974"},"content":"    private Label phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"zichen-3974"},"content":"    private Label email;","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"zichen-3974"},"content":"    private Label address;","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"zichen-3974"},"content":"    @FXML","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"zichen-3974"},"content":"    private Label telegramHandle;","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"zichen-3974"},"content":"    @FXML //TODO: MIGHT CHANGE TO FLOW PANE LATER ON","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"zichen-3974"},"content":"    private Label groupTags;","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"zichen-3974"},"content":"    @FXML //TODO: MIGHT CHANGE TO FLOW PANE LATER ON","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"zichen-3974"},"content":"    private Label moduleTags;","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"zichen-3974"},"content":"    /**","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"zichen-3974"},"content":"     * Creates a new User profile window.","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"zichen-3974"},"content":"     */","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"zichen-3974"},"content":"    public UserProfilePanel(Logic logic) {","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"zichen-3974"},"content":"        super(FXML);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"zichen-3974"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"zichen-3974"},"content":"        this.user \u003d this.logic.getUser();","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"zichen-3974"},"content":"        name.setText(String.valueOf(this.user.getName()));","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"zichen-3974"},"content":"        phone.setText(PHONE_NUMBER + this.user.getPhone());","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"zichen-3974"},"content":"        email.setText(EMAIL + this.user.getEmail());","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"zichen-3974"},"content":"        address.setText(ADDRESS + this.user.getAddress());","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"zichen-3974"},"content":"        telegramHandle.setText(TELEGRAM + this.user.getTelegramHandle());","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"zichen-3974"},"content":"        moduleTags.setText(MODULE_TAGS + this.user.getModuleTags());","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"zichen-3974"},"content":"        groupTags.setText(GROUP_TAGS + this.user.getGroupTags().toString());","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"zichen-3974"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"     * Creates a new Person profile window.","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"    public UserProfilePanel(Person person) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"        name.setText(String.valueOf(person.getName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        phone.setText(PHONE_NUMBER + person.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        email.setText(EMAIL + person.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        address.setText(ADDRESS + person.getAddress());","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"        telegramHandle.setText(TELEGRAM + person.getTelegramHandle());","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        moduleTags.setText(MODULE_TAGS + person.getModuleTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"        groupTags.setText(GROUP_TAGS + person.getGroupTags().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zichen-3974":64,"russelltankaimin":15}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"\u003cStackPane styleClass\u003d\"my-command-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" styleClass\u003d\"command-box\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"zichen-3974":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":321,"author":{"gitId":"zichen-3974"},"content":"/* #commandTextField {","lastModifiedDate":"2023-02-26"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"zichen-3974"},"content":"}*/","lastModifiedDate":"2023-02-26"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":336,"author":{"gitId":"zichen-3974"},"content":"/*#resultDisplay .content {","lastModifiedDate":"2023-02-26"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"zichen-3974"},"content":"}*/","lastModifiedDate":"2023-02-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"mynameizzhafeez"},"content":"#groupTags {","lastModifiedDate":"2023-02-17"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"mynameizzhafeez"},"content":"#groupTags .label {","lastModifiedDate":"2023-02-17"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"mynameizzhafeez"},"content":"#moduleTags {","lastModifiedDate":"2023-02-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-02-27"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-02-27"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-27"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":360,"author":{"gitId":"mynameizzhafeez"},"content":"#moduleTags .label {","lastModifiedDate":"2023-02-27"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-02-27"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-02-27"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-02-27"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-02-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-02-27"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-02-27"},{"lineNumber":367,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"mynameizzhafeez":4,"zichen-3974":5,"-":358}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":".list-view .list-cell:filled:focused:selected {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":".list-view .list-cell:filled:focused:selected \u003e * \u003e * \u003e * \u003e HBox \u003e Label {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #000000;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":".list-view .list-cell:filled:focused:selected \u003e * \u003e * \u003e * \u003e Label {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":".button:hover {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #E63946;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"zichen-3974"},"content":".list-view .scroll-bar:vertical {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"zichen-3974":20,"-":20}},{"path":"src/main/resources/view/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zichen-3974"},"content":"/* ---- Start of side bar css ---- */","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":".side-bar {","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"zichen-3974"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 0 10 0 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":".side-button {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: #edede9;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"/* ---- Start of middle pane css ---- */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":".middle-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":".command-box-placeholder {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: #dbdbdb;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":".command-box {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"zichen-3974"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 0 0 5 5;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":".person-card-box {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: #e63946;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 0 5 0 5;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"zichen-3974"},"content":"    -fx-padding: 3;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"zichen-3974"},"content":".person-card-upper-box-element {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"zichen-3974"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"zichen-3974"},"content":".person-card-lower-box-element {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #5e5e5e;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"zichen-3974"},"content":".person-list-panel {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"zichen-3974"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"zichen-3974"},"content":".person-list-placeholder {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"zichen-3974"},"content":"/* ---- Start of right pane css ---- */","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"zichen-3974"},"content":".result-display-panel {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"zichen-3974"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"zichen-3974"},"content":".result-display-text {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"zichen-3974"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"zichen-3974"},"content":".result-display-placeholder {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"zichen-3974"},"content":"    -fx-opacity: 0.5;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"zichen-3974"},"content":".user-profile-placeholder {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"zichen-3974"},"content":".right-pane {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: #EDEDE9;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"zichen-3974":82}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"\u003cfx:root maxWidth\u003d\"1000.0\" minHeight\u003d\"640.0\" minWidth\u003d\"700.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"eduMate\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"zichen-3974"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"                \u003cURL value\u003d\"@MainWindow.css\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"            \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"                \u003cVBox minWidth\u003d\"-Infinity\" prefWidth\u003d\"80.0\" styleClass\u003d\"side-bar\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":"                    \u003cButton fx:id\u003d\"exitButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" prefHeight\u003d\"40.0\" prefWidth\u003d\"50.0\" styleClass\u003d\"side-button\" text\u003d\"Exit\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"50.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"zichen-3974"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"                    \u003cButton fx:id\u003d\"helpButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" prefHeight\u003d\"40.0\" prefWidth\u003d\"50.0\" styleClass\u003d\"side-button\" text\u003d\"Help\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"                            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets bottom\u003d\"100.0\" left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"zichen-3974"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"zichen-3974"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"zichen-3974"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"zichen-3974"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"zichen-3974"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"zichen-3974"},"content":"                \u003cVBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"400.0\" minWidth\u003d\"200.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"middle-pane\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"zichen-3974"},"content":"                    \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"40.0\" minWidth\u003d\"100.0\" prefHeight\u003d\"40.0\" styleClass\u003d\"command-box-placeholder\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"zichen-3974"},"content":"                    \u003cVBox fx:id\u003d\"personList\" minHeight\u003d\"100.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"zichen-3974"},"content":"                        \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minHeight\u003d\"500.0\" styleClass\u003d\"person-list-placeholder\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"zichen-3974"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"zichen-3974"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"zichen-3974"},"content":"                     \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"zichen-3974"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"zichen-3974"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"zichen-3974"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"2.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"zichen-3974"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"zichen-3974"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"zichen-3974"},"content":"                \u003cVBox maxWidth\u003d\"600.0\" minWidth\u003d\"400.0\" prefWidth\u003d\"300.0\" styleClass\u003d\"right-pane\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"zichen-3974"},"content":"                    \u003cStackPane fx:id\u003d\"userProfilePlaceholder\" styleClass\u003d\"user-profile-placeholder\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"zichen-3974"},"content":"                    \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" alignment\u003d\"BOTTOM_RIGHT\" maxHeight\u003d\"100.0\" minHeight\u003d\"20.0\" prefHeight\u003d\"100.0\" styleClass\u003d\"result-display-placeholder\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"zichen-3974"},"content":"                  \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"zichen-3974"},"content":"                     \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"zichen-3974"},"content":"                  \u003c/VBox.margin\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"zichen-3974"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"zichen-3974"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"4.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"zichen-3974"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"zichen-3974"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"zichen-3974":55,"-":32}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"  styleClass\u003d\"person-card-box\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"person-card-upper-box-element\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"person-card-upper-box-element\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"zichen-3974"},"content":"                  \u003cFont name\u003d\"System Bold\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"zichen-3974"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"      \u003cFlowPane fx:id\u003d\"groupTags\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"zichen-3974"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"zichen-3974"},"content":"               \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"      \u003cFlowPane fx:id\u003d\"moduleTags\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"                \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"zichen-3974"},"content":"      \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" styleClass\u003d\"person-card-lower-box-element\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"zichen-3974"},"content":"      \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" styleClass\u003d\"person-card-lower-box-element\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"zichen-3974"},"content":"      \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" styleClass\u003d\"person-card-lower-box-element\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"zichen-3974"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"zichen-3974"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"zichen-3974"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":7,"zichen-3974":19,"-":26}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"\u003cVBox minHeight\u003d\"500.0\" style\u003d\"-fx-background-color: transparent; -fx-background-radius: 10;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"  \u003cListView fx:id\u003d\"personListView\" styleClass\u003d\"person-list-panel\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"zichen-3974":2,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"result-display-panel\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display-text\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"      \u003c/padding\u003e\u003c/TextArea\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"zichen-3974":6,"-":6}},{"path":"src/main/resources/view/UserProfilePanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zichen-3974"},"content":"#name {","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zichen-3974"},"content":"    -fx-font-family: \u0027SansSerif Bold Italic\u0027, sans-serif;","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zichen-3974"},"content":"    -fx-font-size: 23px;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"#phone, #email, #address, #telegramHandle, #groupTags, #moduleTags {","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":"    -fx-font-family: \"SansSerif\";","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"    -fx-text-fill: #C7C7C7;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"    -fx-padding: 2;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":"#userProfilePane {","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"zichen-3974"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zichen-3974":19}},{"path":"src/main/resources/view/UserProfilePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zichen-3974"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"zichen-3974"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"zichen-3974"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"zichen-3974"},"content":"\u003cStackPane id\u003d\"userProfilePane\" fx:id\u003d\"userProfilePane\" VBox.vgrow\u003d\"ALWAYS\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"zichen-3974"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"zichen-3974"},"content":"        \u003cURL value\u003d\"@UserProfilePanel.css\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"zichen-3974"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"zichen-3974"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"zichen-3974"},"content":"    \u003cVBox alignment\u003d\"TOP_LEFT\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"phone\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"email\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"address\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"telegramHandle\" text\u003d\"\\$telegramHandle\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"moduleTags\" text\u003d\"\\$moduleTags\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"zichen-3974"},"content":"        \u003cLabel fx:id\u003d\"groupTags\" text\u003d\"\\$groupTags\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"zichen-3974"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"zichen-3974"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"zichen-3974"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"zichen-3974"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"zichen-3974"},"content":"    \u003cStackPane.margin\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"zichen-3974"},"content":"        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"zichen-3974"},"content":"    \u003c/StackPane.margin\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"zichen-3974"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"zichen-3974":30}},{"path":"src/test/java/seedu/address/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Config DEFAULT_CONFIG \u003d new Config();","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setLogLevel_validLevel_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setLogLevel(Level.INFO);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(defaultConfig.getLogLevel(), Level.INFO);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setUserPrefsFilePath_validPath_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        Path defaultPath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setUserPrefsFilePath(defaultPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(defaultConfig.getUserPrefsFilePath(), defaultPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(DEFAULT_CONFIG, DEFAULT_CONFIG);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_notConfig_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(ConfigTest.DEFAULT_CONFIG, null);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validConfig_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        Path defaultPath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setUserPrefsFilePath(defaultPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setLogLevel(Level.INFO);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(defaultConfig.hashCode(), Objects.hash(Level.INFO, defaultPath));","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameLogLevelAndPath_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        Path defaultPath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setUserPrefsFilePath(defaultPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        defaultConfig.setLogLevel(Level.INFO);","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        Config otherConfig \u003d new Config();","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        otherConfig.setUserPrefsFilePath(defaultPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        otherConfig.setLogLevel(Level.INFO);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(defaultConfig, otherConfig);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"mynameizzhafeez":50,"-":23}},{"path":"src/test/java/seedu/address/commons/core/GuiSettingsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import java.awt.Point;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class GuiSettingsTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final double WINDOW_WIDTH \u003d 3.4;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final double WINDOW_HEIGHT \u003d 4.5;","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int X_POSITION \u003d 6;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int Y_POSITION \u003d 8;","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final GuiSettings GUI_SETTINGS \u003d new GuiSettings(WINDOW_WIDTH, WINDOW_HEIGHT,","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"            X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public void constructor_validInputs_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GUI_SETTINGS.getWindowWidth(), WINDOW_WIDTH);","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GUI_SETTINGS.getWindowHeight(), WINDOW_HEIGHT);","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GUI_SETTINGS, GUI_SETTINGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_notGuiSettings_false() {","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, null);","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, 6);","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameFields_true() {","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(WINDOW_WIDTH,","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"                WINDOW_HEIGHT, X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GUI_SETTINGS, otherSettings);","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_differentWindowWidth_false() {","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(0,","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                WINDOW_HEIGHT, X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, otherSettings);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_differentWindowHeight_false() {","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(WINDOW_WIDTH,","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"                0, X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, otherSettings);","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_differentXPosition_false() {","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(WINDOW_WIDTH,","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                WINDOW_HEIGHT, 0, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, otherSettings);","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_differentYPosition_false() {","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(WINDOW_WIDTH,","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"                WINDOW_HEIGHT, X_POSITION, 0);","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(GUI_SETTINGS, otherSettings);","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getWindowCoordinates_samePoint_success() {","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        Point windowCoordinates \u003d new Point(X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(windowCoordinates,","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"                GUI_SETTINGS.getWindowCoordinates());","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_sameFields_true() {","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherSettings \u003d new GuiSettings(WINDOW_WIDTH,","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"                WINDOW_HEIGHT, X_POSITION, Y_POSITION);","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GUI_SETTINGS.hashCode(), otherSettings.hashCode());","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"mynameizzhafeez":83}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int MAJOR \u003d 5;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int MINOR \u003d 3;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final int PATCH \u003d 10;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final boolean IS_EARLY_ACCESS \u003d true;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Version VERSION \u003d new Version(MAJOR, MINOR, PATCH, IS_EARLY_ACCESS);","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getMajor_validMajor_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(MAJOR, VERSION.getMajor());","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getMinor_validMinor_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(MINOR, VERSION.getMinor());","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getPatch_validPatch_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(PATCH, VERSION.getPatch());","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getIsEarlyAccess_validIsEarlyAccess_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(IS_EARLY_ACCESS, VERSION.isEarlyAccess());","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_null_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(VERSION, null);","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_notVersion_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(VERSION, 2);","lastModifiedDate":"2023-02-23"},{"lineNumber":166,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":37,"-":135}},{"path":"src/test/java/seedu/address/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-12-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    public void zip_validStreams_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cInteger\u003e firstStream \u003d Stream.of(1, 2, 3);","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cInteger\u003e secondStream \u003d Stream.of(2, 3, 4);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        Stream\u003cInteger\u003e outputStream \u003d CollectionUtil.zip(firstStream, secondStream, Integer::sum);","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cInteger\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedList.add(3);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedList.add(5);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedList.add(7);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(outputStream.collect(Collectors.toList()), expectedList);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"mynameizzhafeez":18,"-":108}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"seanfirefox"},"content":"    //---------------- Tests for containsKeyWordIgnoreCase --------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"seanfirefox"},"content":"    public void containsKeyWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"seanfirefox"},"content":"        assertThrows(","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"                NullPointerException.class, () -\u003e StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"seanfirefox"},"content":"                        \"typical sentence\", null));","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"seanfirefox"},"content":"    public void containsKeyWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"seanfirefox"},"content":"            -\u003e StringUtil.containsKeyWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"seanfirefox"},"content":"    public void containsKeyWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"seanfirefox"},"content":"            -\u003e StringUtil.containsKeyWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"seanfirefox"},"content":"    public void containsKeyWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"seanfirefox"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsKeyWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"seanfirefox"},"content":"    public void containsKeyWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(StringUtil.containsKeyWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(StringUtil.containsKeyWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"seanfirefox"},"content":"                \"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"seanfirefox"},"content":"        // Word does not exist","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"seanfirefox"},"content":"                \"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"seanfirefox"},"content":"                \"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"seanfirefox"},"content":"                \"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"seanfirefox"},"content":"                \"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"seanfirefox"},"content":"                \"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"seanfirefox"},"content":"                \"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(StringUtil.containsKeyWordIgnoreCase(","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"seanfirefox"},"content":"                \"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"seanfirefox":32,"-":123}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.storage.JsonEduMateStorage;","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonEduMateStorage eduMateStorage \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonEduMateStorage(temporaryFolder.resolve(\"eduMate.json\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        StorageManager storage \u003d new StorageManager(eduMateStorage, userPrefsStorage);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        // Setup LogicManager with JsonEduMateIoExceptionThrowingStub","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonEduMateStorage eduMateStorage \u003d","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonEduMateIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionEduMate.json\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        StorageManager storage \u003d new StorageManager(eduMateStorage, userPrefsStorage);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_ALEX + PHONE_DESC_ALEX + EMAIL_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"                + ADDRESS_DESC_ALEX + TELEGRAM_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"        Person expectedPerson \u003d new PersonBuilder(ALEX).withGroupTags().build();","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getEduMate_validEduMate_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate eduMate \u003d logic.getEduMate();","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate otherEduMate \u003d logic.getEduMate();","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(eduMate, otherEduMate);","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getEduMateFilePath_validEduMate_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"        Path eduMateFilePath \u003d logic.getEduMateFilePath();","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        Path otherEduMateFilePath \u003d logic.getEduMateFilePath();","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(eduMateFilePath, otherEduMateFilePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getGuiSettings_validGuiSettings_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings guiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        GuiSettings otherGuiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(guiSettings, otherGuiSettings);","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getUser_validUser_success() {","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        User user \u003d logic.getUser();","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"        User otherUser \u003d logic.getUser();","lastModifiedDate":"2023-02-25"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(user, otherUser);","lastModifiedDate":"2023-02-25"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"    private static class JsonEduMateIoExceptionThrowingStub extends JsonEduMateStorage {","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"        private JsonEduMateIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"mynameizzhafeez"},"content":"        public void saveEduMate(ReadOnlyEduMate eduMate, Path filePath) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"mynameizzhafeez":53,"-":141}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        Person personInList \u003d model.getEduMate().getPersonList().get(0);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"mynameizzhafeez":4,"-":41}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.testutil.TypicalUser;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        Person albert \u003d new PersonBuilder().withName(\"Albert\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        Person bart \u003d new PersonBuilder().withName(\"Bart\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        AddCommand addAlbertCommand \u003d new AddCommand(albert);","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        AddCommand addBartCommand \u003d new AddCommand(bart);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(addAlbertCommand.equals(addAlbertCommand));","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        AddCommand addAlbertCommandCopy \u003d new AddCommand(albert);","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(addAlbertCommand.equals(addAlbertCommandCopy));","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(addAlbertCommand.equals(1));","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(addAlbertCommand.equals(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(addAlbertCommand.equals(addBartCommand));","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        public Path getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        public void setEduMateFilePath(Path eduMateFilePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"        public void setEduMate(ReadOnlyEduMate newData) {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        public ReadOnlyEduMate getEduMate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"        public void resetPersons() {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"        public User getUser() {","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"            return TypicalUser.LINUS;","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"mynameizzhafeez"},"content":"        public void setUser(User user) {","lastModifiedDate":"2023-02-21"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"mynameizzhafeez"},"content":"        public ReadOnlyEduMate getEduMate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"mynameizzhafeez"},"content":"            return new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"mynameizzhafeez":36,"-":176}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute_emptyEduMate_success() {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute_nonEmptyEduMate_success() {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedModel.setEduMate(new EduMate());","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"mynameizzhafeez":7,"-":25}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final CommandResult COMMAND_RESULT \u003d new CommandResult(\"feedback\", true, true, true);","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"zichen-3974"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"zichen-3974"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"zichen-3974"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"zichen-3974"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"zichen-3974"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getFeedbackToUser_validCommandResult_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        String feedbackToUser \u003d \"feedback\";","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        CommandResult commandResult \u003d new CommandResult(feedbackToUser);","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(feedbackToUser, commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isShowHelp_true_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(COMMAND_RESULT.isShowHelp());","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isExit_true_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(COMMAND_RESULT.isExit());","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"mynameizzhafeez":18,"zichen-3974":5,"-":50}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final HashMap\u003cString, String\u003e LINUS \u003d new HashMap\u003c\u003e() {{","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"            put(\"name\", \"Linus Richards\");","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"            put(\"phone\", \"11111111\");","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"            put(\"email\", \"linusrichards@gmail.com\");","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            put(\"address\", \"National University of Singapore\");","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            put(\"telegramHandle\", \"@linusrichards\");","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        }};","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String NAME_ALEX \u003d \"Alex Quentin\";","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String NAME_BEN \u003d \"Benjamin DeMeer\";","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String PHONE_ALEX \u003d \"81121128\";","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String PHONE_BEN \u003d \"87965051\";","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String EMAIL_ALEX \u003d \"alexquentin@gmail.com\";","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String EMAIL_BEN \u003d \"benjamindemeer@gmail.com\";","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String ADDRESS_ALEX \u003d \"301 Commonwealth Avenue\";","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String ADDRESS_BEN \u003d \"11 Kallang Bahru\";","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String TELEGRAM_HANDLE_ALEX \u003d \"@alexquentin\";","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String TELEGRAM_HANDLE_BEN \u003d \"@benjamindemeer\";","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_GROUP_1 \u003d \"Groupmate\";","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_GROUP_2 \u003d \"TA\";","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_MODULE_1 \u003d \"CS2100\";","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_MODULE_2 \u003d \"GEA1000\";","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String NAME_DESC_ALEX \u003d \" \" + Prefix.NAME + NAME_ALEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String NAME_DESC_BEN \u003d \" \" + Prefix.NAME + NAME_BEN;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String PHONE_DESC_ALEX \u003d \" \" + Prefix.PHONE + PHONE_ALEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String PHONE_DESC_BEN \u003d \" \" + Prefix.PHONE + PHONE_BEN;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String EMAIL_DESC_ALEX \u003d \" \" + Prefix.EMAIL + EMAIL_ALEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String EMAIL_DESC_BEN \u003d \" \" + Prefix.EMAIL + EMAIL_BEN;","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String TELEGRAM_DESC_ALEX \u003d \" \" + Prefix.TELEGRAM_HANDLE + TELEGRAM_HANDLE_ALEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String TELEGRAM_DESC_BEN \u003d \" \" + Prefix.TELEGRAM_HANDLE + TELEGRAM_HANDLE_BEN;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String ADDRESS_DESC_ALEX \u003d \" \" + Prefix.ADDRESS + ADDRESS_ALEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String ADDRESS_DESC_BEN \u003d \" \" + Prefix.ADDRESS + ADDRESS_BEN;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_GROUP_2_DESC \u003d \" \" + Prefix.GROUP_TAG + VALID_GROUP_2;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_GROUP_1_DESC \u003d \" \" + Prefix.GROUP_TAG + VALID_GROUP_1;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_MODULE_1_DESC \u003d \" \" + Prefix.MODULE_TAG + VALID_MODULE_1;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String VALID_MODULE_2_DESC \u003d \" \" + Prefix.MODULE_TAG + VALID_MODULE_2;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + Prefix.NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + Prefix.PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + Prefix.EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + Prefix.ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_TELEGRAM_DESC \u003d \" \" + Prefix.TELEGRAM_HANDLE","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"            + \"hellothere\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_GROUP_DESC \u003d \" \" + Prefix.GROUP_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_MODULE_1_DESC \u003d \" \" + Prefix.MODULE_TAG + \"c1101\"; // first 2 or 3 not alphabets","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final String INVALID_MODULE_2_DESC \u003d \" \" + Prefix.MODULE_TAG + \"cfg111\"; // not 4 digit module code","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        DESC_ALEX \u003d new EditPersonDescriptorBuilder().withName(NAME_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"                .withPhone(PHONE_ALEX).withEmail(EMAIL_ALEX).withAddress(ADDRESS_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"                .withTelegramHandle(TELEGRAM_HANDLE_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(VALID_GROUP_2)","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"                .withModuleTags(VALID_MODULE_1, VALID_MODULE_2).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        DESC_BEN \u003d new EditPersonDescriptorBuilder().withName(NAME_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"                .withPhone(PHONE_BEN).withEmail(EMAIL_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"                .withAddress(ADDRESS_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"                .withTelegramHandle(TELEGRAM_HANDLE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(VALID_GROUP_1, VALID_GROUP_2)","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"                .withModuleTags(VALID_MODULE_2).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate expectedEduMate \u003d new EduMate(actualModel.getEduMate());","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedEduMate, actualModel.getEduMate());","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"        final String[] splitName \u003d person.getName().getValue().split(\"\\\\s+\");","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"seanfirefox"},"content":"        model.updateFilteredPersonList(","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"                new ContainsKeywordsPredicate(Arrays.asList(splitName[0]), Prefix.NAME));","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"mynameizzhafeez":66,"seanfirefox":2,"-":83}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(model.getEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEduMate().getPersonList().size());","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"mynameizzhafeez":5,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final EditPersonDescriptor EDIT_PERSON_DESCRIPTOR \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    private Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(new EduMate(model.getEduMate()), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedPerson \u003d personInList.withName(NAME_BEN).withPhone(PHONE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(VALID_GROUP_1).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(NAME_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"                .withPhone(PHONE_BEN).withGroupTags(VALID_GROUP_1).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(new EduMate(model.getEduMate()), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(new EduMate(model.getEduMate()), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute_nullIndex_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        EditCommand editCommand \u003d new EditCommand(null, new EditPersonDescriptor());","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"        User originalUser \u003d model.getUser();","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_USER_SUCCESS, originalUser);","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(new EduMate(model.getEduMate()), new UserPrefs());","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        model.setUser(originalUser);","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(NAME_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"                new EditPersonDescriptorBuilder().withName(NAME_BEN).build());","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"        Model expectedModel \u003d new ModelManager(new EduMate(model.getEduMate()), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"        Person personInList \u003d model.getEduMate().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(NAME_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEduMate().getPersonList().size());","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"                new EditPersonDescriptorBuilder().withName(NAME_BEN).build());","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"mynameizzhafeez"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_ALEX);","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_ALEX);","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_ALEX)));","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BEN)));","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":192,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":193,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(EDIT_PERSON_DESCRIPTOR, EDIT_PERSON_DESCRIPTOR);","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":195,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":196,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_notEditCommand_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":198,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(EDIT_PERSON_DESCRIPTOR, 34);","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":202,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isAnyFieldEdited_noneEdited_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":203,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(EDIT_PERSON_DESCRIPTOR.isAnyFieldEdited());","lastModifiedDate":"2023-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"mynameizzhafeez":57,"-":149}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_ALEX);","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(DESC_ALEX.equals(descriptorWithSameValues));","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(DESC_ALEX.equals(DESC_ALEX));","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(5));","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(DESC_BEN));","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withName(NAME_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withPhone(PHONE_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withEmail(EMAIL_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withAddress(ADDRESS_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_ALEX).withGroupTags(VALID_GROUP_1).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(DESC_ALEX.equals(editedAmy));","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"mynameizzhafeez":23,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"zichen-3974":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.ANG;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.CLARK;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.EDWARD;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.FORD;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.ISAAC;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.JOOKOON;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.KEVIN;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.LAVENDER;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"seanfirefox"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"seanfirefox"},"content":"    private final Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"seanfirefox"},"content":"        List\u003cString\u003e firstKeyword \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"seanfirefox"},"content":"        List\u003cString\u003e secondKeyword \u003d Collections.singletonList(\"second\");","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.NAME);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.PHONE);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.EMAIL);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.TELEGRAM_HANDLE);","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.ADDRESS);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        createEquals(firstKeyword, secondKeyword, Prefix.GROUP_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"seanfirefox"},"content":"    public void createEquals(List\u003cString\u003e firstKeyword, List\u003cString\u003e secondKeyword, Prefix prefix) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"seanfirefox"},"content":"                new ContainsKeywordsPredicate(firstKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"seanfirefox"},"content":"                new ContainsKeywordsPredicate(secondKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(findFirstCommand, findFirstCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(findFirstCommand, findFirstCommandCopy);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(1, findFirstCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(null, findFirstCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(findFirstCommand, findSecondCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.NAME);","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.ADDRESS);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.EMAIL);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.PHONE);","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.GROUP_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        createZeroKeywordsNoPersonFound(Prefix.TELEGRAM_HANDLE);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"seanfirefox"},"content":"    public void createZeroKeywordsNoPersonFound(Prefix prefix) {","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" \", prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"seanfirefox"},"content":"        createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"seanfirefox"},"content":"                \"Kee Edward Canning\",","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(CLARK, EDWARD, FORD),","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"seanfirefox"},"content":"                3","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"seanfirefox"},"content":"        createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"seanfirefox"},"content":"                \"albertpark bartlee clarkkee\",","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(ALBERT, BART, CLARK),","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"seanfirefox"},"content":"                3","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"seanfirefox"},"content":"        createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"seanfirefox"},"content":"                \"91 Joo Koon Circle\",","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(ANG, JOOKOON),","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"seanfirefox"},"content":"                2","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"seanfirefox"},"content":"        createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"seanfirefox"},"content":"                \"92463693 88032666 83340546\",","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(EDWARD, FORD, LAVENDER),","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"seanfirefox"},"content":"                3","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"seanfirefox"},"content":"        createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"seanfirefox"},"content":"                \"@kevinho @jookoon @isaacnewton\",","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(ISAAC, JOOKOON, KEVIN),","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"seanfirefox"},"content":"                3","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"seanfirefox"},"content":"    public void createMultipleKeywordsMultiplePersonsFound(","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix, String userInput, List\u003cPerson\u003e expectedOutput, int numOfPerson) {","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"seanfirefox"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, numOfPerson);","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(userInput, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(expectedOutput, model.getFilteredPersonList());","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":143,"author":{"gitId":"seanfirefox"},"content":"     * Parses {@code userInput} into a {@code ContainsKeywordsPredicate}.","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":145,"author":{"gitId":"seanfirefox"},"content":"    private ContainsKeywordsPredicate preparePredicate(String userInput, Prefix prefix) {","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"seanfirefox"},"content":"        return new ContainsKeywordsPredicate(","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")), prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"mynameizzhafeez":19,"seanfirefox":72,"-":58}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"zichen-3974"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"zichen-3974":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedModel \u003d new ModelManager(model.getEduMate(), new UserPrefs());","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"mynameizzhafeez":3,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":" * Contains integration tests (interaction with the Model) for {@code SortCommand}.","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"public class SortCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e NAME_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getName);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e ADDRESS_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getAddress);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e TELEGRAM_HANDLE_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getTelegramHandle);","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e PHONE_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getPhone);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e EMAIL_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getEmail);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e GROUP_TAGS_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getGroupTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Comparator\u003cPerson\u003e MODULE_TAGS_COMPARATOR \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"            Comparator.comparing(Person::getModuleTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final SortCommand SORT_COMMAND \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"            new SortCommand(NAME_COMPARATOR, \"Name: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(SORT_COMMAND, SORT_COMMAND);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameFields_true() {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        final SortCommand otherSortCommand \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"                new SortCommand(NAME_COMPARATOR, \"Name: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(SORT_COMMAND, otherSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    public void execute_sortField_correctOrder() {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cComparator\u003cPerson\u003e\u003e comparators \u003d Arrays.asList(","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"                NAME_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"                ADDRESS_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                TELEGRAM_HANDLE_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                PHONE_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                EMAIL_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                GROUP_TAGS_COMPARATOR,","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"                MODULE_TAGS_COMPARATOR","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        comparators.forEach(this::testComparator);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    private void testComparator(Comparator\u003cPerson\u003e comparator) {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        SortCommand sortCommand \u003d new SortCommand(comparator, \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        sortCommand.execute(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        for (int i \u003d 0; i \u003c personList.size() - 1; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"            assertTrue(comparator.compare(personList.get(i), personList.get(i + 1)) \u003c\u003d 0);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"mynameizzhafeez":77}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.ANG;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.CLARK;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.DAWSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.EDWARD;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.FORD;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.testutil.TypicalUser.LINUS;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"    private final Model model \u003d new ModelManager(getTypicalEduMate(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"    public void execute_byIndex_correctPersonQueried() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(null, Index.fromZeroBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult commandResult1 \u003d command1.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(ANG, commandResult1.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(null, Index.fromZeroBased(2));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult commandResult2 \u003d command2.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(BART, commandResult2.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command3 \u003d new ViewCommand(null, Index.fromZeroBased(3));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult commandResult3 \u003d command3.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(CLARK, commandResult3.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"    public void execute_byName_correctPersonQueried() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(\"Dawson Quentin\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(\"Edward Richards\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command3 \u003d new ViewCommand(\"Ford Canning\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result1 \u003d command1.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result2 \u003d command2.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result3 \u003d command3.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(DAWSON, result1.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(EDWARD, result2.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(FORD, result3.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(\"No such name found!\", result1.getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    public void execute_noArguments_userQueried() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command \u003d new ViewCommand(null, null);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(LINUS, result.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"    public void execute_noSuchName_userProfileDisplayed() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(\"Lagrange\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(\"Alan Turing\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command3 \u003d new ViewCommand(\"Pierre de Fermat\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result1 \u003d command1.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result2 \u003d command2.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result3 \u003d command3.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(LINUS, result1.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(LINUS, result2.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(LINUS, result3.getDisplayPerson());","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"    public void execute_noSuchName_invalidMessageDisplayed() throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(\"Bolzano Weierstrass\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(\"Tony Hoare\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command3 \u003d new ViewCommand(\"John Nash\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result1 \u003d command1.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result2 \u003d command2.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"russelltankaimin"},"content":"        CommandResult result3 \u003d command3.execute(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"No such name found!\", result1.getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"No such name found!\", result2.getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(\"No such name found!\", result3.getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"    public void compare_commandEquality_true() {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(\"Lisa Meitner\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(\"Lisa Meitner\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(command1, command2);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(command1, command1);","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(command2, command2);","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"russelltankaimin"},"content":"    public void compare_viewCommandInequality_false() {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command1 \u003d new ViewCommand(\"Lisa Meitner\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command2 \u003d new ViewCommand(\"Lisa Meitner\", Index.fromZeroBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command1, command2);","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command3 \u003d new ViewCommand(null, Index.fromZeroBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command4 \u003d new ViewCommand(null, null);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command3, command1);","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command3, command2);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command3, command4);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command5 \u003d new ViewCommand(\"Marie Curie\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand command6 \u003d new ViewCommand(null, Index.fromZeroBased(2));","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command5, command1);","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command5, command1);","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command6, command2);","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(command6, command1);","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"russelltankaimin"},"content":"    public void compare_otherCommandInequality_false() {","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"Lisa Meitner\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"russelltankaimin"},"content":"        AddCommand addCommand \u003d new AddCommand(ALBERT);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"russelltankaimin"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(Index.fromZeroBased(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(addCommand, viewCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(deleteCommand, viewCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"russelltankaimin"},"content":"    public void compare_foreignObjectInequality_false() {","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"russelltankaimin"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(\"Lisa Meitner\", null);","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"russelltankaimin"},"content":"        assertNotEquals(\"Hello\", viewCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"russelltankaimin":141}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        Person expectedPerson \u003d new PersonBuilder(BEN).withGroupTags(CommandTestUtil.VALID_GROUP_2).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE + CommandTestUtil.NAME_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.PHONE_DESC_BEN + CommandTestUtil.EMAIL_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_ALEX + CommandTestUtil.NAME_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.PHONE_DESC_BEN + CommandTestUtil.EMAIL_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.PHONE_DESC_BEN + CommandTestUtil.EMAIL_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_ALEX + CommandTestUtil.EMAIL_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPerson));","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(CommandTestUtil.VALID_GROUP_2, CommandTestUtil.VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_2_DESC, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        Person expectedPerson \u003d new PersonBuilder(ALEX).withGroupTags().build();","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, CommandTestUtil.NAME_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.PHONE_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_ALEX + CommandTestUtil.ADDRESS_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_ALEX,","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"                expectedMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        // missing telegram prefix","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_HANDLE_BEN,","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_BEN + CommandTestUtil.PHONE_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_BEN + CommandTestUtil.ADDRESS_BEN,","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.INVALID_PHONE_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.INVALID_EMAIL_DESC + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.INVALID_ADDRESS_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":149,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":150,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC,","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"        // invalid telegram handle","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.INVALID_TELEGRAM_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC,","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"mynameizzhafeez"},"content":"                TelegramHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":161,"author":{"gitId":"mynameizzhafeez"},"content":"        // invalid group","lastModifiedDate":"2023-02-19"},{"lineNumber":162,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.INVALID_GROUP_DESC + CommandTestUtil.VALID_GROUP_2","lastModifiedDate":"2023-02-19"},{"lineNumber":166,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.VALID_MODULE_2_DESC,","lastModifiedDate":"2023-02-19"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"                GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"mynameizzhafeez"},"content":"        // invalid module","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.NAME_DESC_BEN + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":171,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_GROUP_1_DESC + CommandTestUtil.VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"mynameizzhafeez"},"content":"                + CommandTestUtil.VALID_MODULE_1_DESC + CommandTestUtil.INVALID_MODULE_1_DESC,","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"mynameizzhafeez"},"content":"                ModuleTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC + CommandTestUtil.PHONE_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.EMAIL_DESC_BEN + CommandTestUtil.INVALID_ADDRESS_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY + CommandTestUtil.NAME_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.PHONE_DESC_BEN + CommandTestUtil.EMAIL_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.ADDRESS_DESC_BEN + CommandTestUtil.VALID_GROUP_1_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"mynameizzhafeez"},"content":"                        + CommandTestUtil.VALID_GROUP_2_DESC,","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"mynameizzhafeez":110,"russelltankaimin":2,"-":79}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Prefix unknownPrefix \u003d Prefix.EMAIL;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Prefix pSlash \u003d Prefix.PHONE;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Prefix tSlash \u003d Prefix.TELEGRAM_HANDLE;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private final Prefix mSlash \u003d Prefix.MODULE_TAG;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        String argsString \u003d \"SomePreambleString t/tSlash-Value p/pSlash value\";","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, tSlash, \"tSlash-Value\");","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentAbsent(argMultimap, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        argsString \u003d \"Different Preamble String m/111 t/tSlash-Value p/pSlash value\";","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, tSlash, \"tSlash-Value\");","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, mSlash, \"111\");","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        String argsString \u003d \"SomePreambleString t/tSlash-Value m/ m/ t/another tSlash value p/ pSlash value t/\";","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, tSlash, \"tSlash-Value\", \"another tSlash value\", \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, mSlash, \"\", \"\");","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joinedt/joined t/ not joinedm/joined\";","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, tSlash, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joinedt/joined\");","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentPresent(argMultimap, tSlash, \"not joinedm/joined\");","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"        assertArgumentAbsent(argMultimap, mSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(pSlash, pSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(pSlash, \"p/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(pSlash, tSlash);","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"mynameizzhafeez":26,"-":121}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_2;","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_2_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String TAG_EMPTY \u003d \" \" + Prefix.GROUP_TAG;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    private final EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_ALEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_ALEX, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + INVALID_GROUP_DESC, GroupTag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_ALEX, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BEN + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"                + VALID_GROUP_1_DESC + TAG_EMPTY, GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"                + TAG_EMPTY + VALID_GROUP_1_DESC, GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"                + VALID_GROUP_1_DESC, GroupTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + ADDRESS_ALEX + PHONE_ALEX,","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BEN + VALID_GROUP_1_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"                + EMAIL_DESC_ALEX + ADDRESS_DESC_ALEX + NAME_DESC_ALEX + VALID_GROUP_2_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(NAME_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"                .withPhone(PHONE_BEN).withEmail(EMAIL_ALEX).withAddress(ADDRESS_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(VALID_GROUP_1, VALID_GROUP_2).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BEN + EMAIL_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(PHONE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"                .withEmail(EMAIL_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(NAME_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(PHONE_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(EMAIL_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(ADDRESS_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput \u003d targetIndex.getOneBased() + VALID_GROUP_2_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":159,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withGroupTags(VALID_GROUP_2).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"mynameizzhafeez"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_ALEX + ADDRESS_DESC_ALEX + EMAIL_DESC_ALEX","lastModifiedDate":"2023-02-19"},{"lineNumber":168,"author":{"gitId":"mynameizzhafeez"},"content":"                + VALID_GROUP_2_DESC + PHONE_DESC_ALEX + ADDRESS_DESC_ALEX + EMAIL_DESC_ALEX + VALID_GROUP_2_DESC","lastModifiedDate":"2023-02-19"},{"lineNumber":169,"author":{"gitId":"mynameizzhafeez"},"content":"                + PHONE_DESC_BEN + ADDRESS_DESC_BEN + EMAIL_DESC_BEN + VALID_GROUP_1_DESC;","lastModifiedDate":"2023-02-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(PHONE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":172,"author":{"gitId":"mynameizzhafeez"},"content":"                .withEmail(EMAIL_BEN).withAddress(ADDRESS_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":173,"author":{"gitId":"mynameizzhafeez"},"content":"                .withGroupTags(VALID_GROUP_2, VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(PHONE_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"mynameizzhafeez"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BEN + INVALID_PHONE_DESC + ADDRESS_DESC_BEN","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"mynameizzhafeez"},"content":"                + PHONE_DESC_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(PHONE_BEN).withEmail(EMAIL_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"mynameizzhafeez"},"content":"                .withAddress(ADDRESS_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"russelltankaimin"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withGroupTags().build();","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"mynameizzhafeez":63,"russelltankaimin":2,"-":143}},{"path":"src/test/java/seedu/address/logic/parser/EduMateParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"public class EduMateParserTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    private final EduMateParser parser \u003d new EduMateParser();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        String commandString \u003d EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"seanfirefox"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor);","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(commandString);","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"n/Richard\", \"Komyo\", \"Eusoff\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Richard\", \"Komyo\", \"Eusoff\")","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"p/89760441\", \"92752656\", \"82630347\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"89760441\", \"92752656\", \"82630347\")","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"a/91\", \"Ang\", \"Mo\", \"Kio\", \"Avenue\", \"4\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"91\", \"Ang\", \"Mo\", \"Kio\", \"Avenue\", \"4\")","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"e/angmeihua@gmail.com\", \"albertpark@gmail.com\", \"bartlee@gmail.com\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"angmeihua@gmail.com\", \"albertpark@gmail.com\", \"bartlee@gmail.com\")","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"t/@albertpark\", \"@angmeihua\", \"@bartlee\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"@albertpark\", \"@angmeihua\", \"@bartlee\")","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"g/CCA\", \"TA\", \"Study\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CCA\", \"TA\", \"Study\")","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"seanfirefox"},"content":"        createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"m/CS3233\", \"CS3245\", \"CS3211\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CS3233\", \"CS3245\", \"CS3211\")","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"seanfirefox"},"content":"    public void createParseCommandFind(","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix, List\u003cString\u003e keywords, List\u003cString\u003e keywordsWithoutPrefix) throws Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"seanfirefox"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"seanfirefox"},"content":"                new FindCommand(","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"seanfirefox"},"content":"                        new ContainsKeywordsPredicate(keywordsWithoutPrefix, prefix)), command);","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"seanfirefox"},"content":"        assertThrows(","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"seanfirefox"},"content":"                ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"mynameizzhafeez":11,"seanfirefox":41,"-":90}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"seanfirefox"},"content":"import java.util.List;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"    private final FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"Bart\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"seanfirefox"},"content":"                \" n/Albert Bart\",","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"seanfirefox"},"content":"                \" n/Albert \\n \\t Bart  \\t\");","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"92752656\", \"82630347\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"seanfirefox"},"content":"                \" p/92752656 82630347\",","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"seanfirefox"},"content":"                \" p/92752656 \\n \\t 82630347  \\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"2\", \"Blackmore\", \"Drive\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"seanfirefox"},"content":"                \" a/2 Blackmore Drive\",","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"seanfirefox"},"content":"                \" a/2 \\n \\t Blackmore \\t \\n \\t Drive\\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"albertpark@gmail.com\", \"angmeihua@gmail.com\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"seanfirefox"},"content":"                \" e/albertpark@gmail.com angmeihua@gmail.com\",","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"seanfirefox"},"content":"                \" e/albertpark@gmail.com \\n \\t angmeihua@gmail.com \\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"@angmeihua\", \"@bartlee\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"seanfirefox"},"content":"                \" t/@angmeihua @bartlee\",","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"seanfirefox"},"content":"                \" t/@angmeihua \\n \\t@bartlee \\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CCA\", \"TA\", \"Study\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"seanfirefox"},"content":"                \" g/CCA TA Study\",","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"seanfirefox"},"content":"                \" g/CCA \\n \\t TA \\t \\n \\t Study \\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"seanfirefox"},"content":"        createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CE3121\", \"CS3219\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"seanfirefox"},"content":"                \" m/CE3121 CS3219\",","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"seanfirefox"},"content":"                \" m/CE3121 \\n \\t CS3219 \\t\"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"seanfirefox"},"content":"    public void createValidArgsReturnsFindCommand(","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix, List\u003cString\u003e personList, String normalUserInput, String wUserInput) {","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"seanfirefox"},"content":"        FindCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"seanfirefox"},"content":"                new FindCommand(new ContainsKeywordsPredicate(personList, prefix));","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"seanfirefox"},"content":"        assertParseSuccess(parser, normalUserInput, expectedFindPersonCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"seanfirefox"},"content":"        assertParseSuccess(parser, wUserInput, expectedFindPersonCommand);","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"mynameizzhafeez":7,"seanfirefox":51,"-":28}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_TELEGRAM \u003d \"hellothere\";","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_GROUP \u003d \"#friend\";","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_MODULE \u003d \"CS50\";","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_TELEGRAM \u003d \"@rachelwalker\";","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_GROUP_1 \u003d \"friend\";","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_GROUP_2 \u003d \"neighbour\";","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_MODULE_1 \u003d \"CS2103T\";","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_MODULE_2 \u003d \"CFG2002\";","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseIndex_empty_success() throws Exception {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNull(ParserUtil.parseIndex(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseInt_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInt(\"10 a\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseInt_empty_throwsParseException() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInt(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseTelegramHandle_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":177,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTelegramHandle((String) null));","lastModifiedDate":"2023-02-19"},{"lineNumber":178,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":179,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":180,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":181,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseTelegramHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":182,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTelegramHandle(INVALID_TELEGRAM));","lastModifiedDate":"2023-02-19"},{"lineNumber":183,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":186,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseTelegramHandle_validValueWithoutWhitespace_returnsTelegramHandle() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":187,"author":{"gitId":"mynameizzhafeez"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM);","lastModifiedDate":"2023-02-19"},{"lineNumber":188,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(VALID_TELEGRAM));","lastModifiedDate":"2023-02-19"},{"lineNumber":189,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":190,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":191,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":192,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseTelegramHandle_validValueWithWhitespace_returnsTrimmedTelegramHandle() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":193,"author":{"gitId":"mynameizzhafeez"},"content":"        String telegramHandleWithWhitespace \u003d WHITESPACE + VALID_TELEGRAM + WHITESPACE;","lastModifiedDate":"2023-02-19"},{"lineNumber":194,"author":{"gitId":"mynameizzhafeez"},"content":"        TelegramHandle expectedTelegramHandle \u003d new TelegramHandle(VALID_TELEGRAM);","lastModifiedDate":"2023-02-19"},{"lineNumber":195,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedTelegramHandle, ParserUtil.parseTelegramHandle(telegramHandleWithWhitespace));","lastModifiedDate":"2023-02-19"},{"lineNumber":196,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":197,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":198,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":199,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":200,"author":{"gitId":"russelltankaimin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupTag(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":205,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroupTag(INVALID_GROUP));","lastModifiedDate":"2023-02-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":210,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTag expectedGroupTag \u003d new GroupTag(VALID_GROUP_1);","lastModifiedDate":"2023-02-19"},{"lineNumber":211,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedGroupTag, ParserUtil.parseGroupTag(VALID_GROUP_1));","lastModifiedDate":"2023-02-19"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":216,"author":{"gitId":"mynameizzhafeez"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_GROUP_1 + WHITESPACE;","lastModifiedDate":"2023-02-19"},{"lineNumber":217,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTag expectedGroupTag \u003d new GroupTag(VALID_GROUP_1);","lastModifiedDate":"2023-02-19"},{"lineNumber":218,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(expectedGroupTag, ParserUtil.parseGroupTag(tagWithWhitespace));","lastModifiedDate":"2023-02-18"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":223,"author":{"gitId":"russelltankaimin"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupTags(null));","lastModifiedDate":"2023-02-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":227,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":228,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroupTags(","lastModifiedDate":"2023-02-19"},{"lineNumber":229,"author":{"gitId":"mynameizzhafeez"},"content":"                Arrays.asList(VALID_GROUP_1, INVALID_GROUP)));","lastModifiedDate":"2023-02-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":234,"author":{"gitId":"russelltankaimin"},"content":"        assertTrue(ParserUtil.parseGroupTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-02-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseGroupTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":239,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e actualGroupTagSet \u003d ParserUtil.parseGroupTags(Arrays.asList(VALID_GROUP_1, VALID_GROUP_2));","lastModifiedDate":"2023-02-19"},{"lineNumber":240,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e expectedGroupTagSet \u003d new HashSet\u003cGroupTag\u003e(Arrays.asList(new GroupTag(VALID_GROUP_1),","lastModifiedDate":"2023-02-19"},{"lineNumber":241,"author":{"gitId":"mynameizzhafeez"},"content":"                new GroupTag(VALID_GROUP_2)));","lastModifiedDate":"2023-02-19"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(expectedGroupTagSet, actualGroupTagSet);","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":246,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":247,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTag_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":248,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModuleTag(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":252,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTag_invalidValue_throwsParseException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":253,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModuleTag(INVALID_GROUP));","lastModifiedDate":"2023-02-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":257,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":258,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTag expectedModuleTag \u003d new ModuleTag(VALID_MODULE_1);","lastModifiedDate":"2023-02-19"},{"lineNumber":259,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedModuleTag, ParserUtil.parseModuleTag(VALID_MODULE_1));","lastModifiedDate":"2023-02-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":263,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":264,"author":{"gitId":"mynameizzhafeez"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_MODULE_1 + WHITESPACE;","lastModifiedDate":"2023-02-19"},{"lineNumber":265,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTag expectedModuleTag \u003d new ModuleTag(VALID_MODULE_1);","lastModifiedDate":"2023-02-19"},{"lineNumber":266,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedModuleTag, ParserUtil.parseModuleTag(tagWithWhitespace));","lastModifiedDate":"2023-02-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":270,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTags_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":271,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModuleTags(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":275,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":276,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModuleTags(","lastModifiedDate":"2023-02-19"},{"lineNumber":277,"author":{"gitId":"mynameizzhafeez"},"content":"                Arrays.asList(VALID_MODULE_1, INVALID_MODULE)));","lastModifiedDate":"2023-02-19"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":281,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":282,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ParserUtil.parseModuleTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-02-19"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":286,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parseModuleTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2023-02-19"},{"lineNumber":287,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e actualModuleTagSet \u003d ParserUtil.parseModuleTags(Arrays.asList(VALID_MODULE_1, VALID_MODULE_2));","lastModifiedDate":"2023-02-19"},{"lineNumber":288,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e expectedModuleTagSet \u003d new HashSet\u003cModuleTag\u003e(Arrays.asList(new ModuleTag(VALID_MODULE_1),","lastModifiedDate":"2023-02-19"},{"lineNumber":289,"author":{"gitId":"mynameizzhafeez"},"content":"                new ModuleTag(VALID_MODULE_2)));","lastModifiedDate":"2023-02-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":291,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(expectedModuleTagSet, actualModuleTagSet);","lastModifiedDate":"2023-02-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"mynameizzhafeez":93,"russelltankaimin":6,"-":194}},{"path":"src/test/java/seedu/address/logic/parser/PrefixPositionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"public class PrefixPositionTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final PrefixPosition PREFIX_POSITION \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"            new PrefixPosition(Prefix.NAME, 5);","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toString_sameString_equals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition otherPrefixPosition \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"                new PrefixPosition(Prefix.NAME, 5);","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(PREFIX_POSITION.toString(), otherPrefixPosition.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public void compareTo() {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition lowerPrefixPosition \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"                new PrefixPosition(Prefix.NAME, 4);","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition samePrefixPosition \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"                new PrefixPosition(Prefix.NAME, 5);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, PREFIX_POSITION.compareTo(lowerPrefixPosition));","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(-1, lowerPrefixPosition.compareTo(PREFIX_POSITION));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, samePrefixPosition.compareTo(PREFIX_POSITION));","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(PREFIX_POSITION, PREFIX_POSITION);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameFields_true() {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        PrefixPosition samePrefixPosition \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"                new PrefixPosition(Prefix.NAME, 5);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(PREFIX_POSITION, samePrefixPosition);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"mynameizzhafeez":40}},{"path":"src/test/java/seedu/address/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.commands.SortCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"public class SortCommandParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private final SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    public void parse_singlePrefix_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        // name","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.NAME.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getName), \"Name: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.NAME.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getName), \"Name: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.NAME.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getName), \"Name: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        // phone","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.PHONE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getPhone), \"Phone: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.PHONE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getPhone), \"Phone: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.PHONE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getPhone), \"Phone: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        // email","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.EMAIL.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getEmail), \"Email: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.EMAIL.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getEmail), \"Email: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.EMAIL.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getEmail), \"Email: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        // telegram handle","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.TELEGRAM_HANDLE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getTelegramHandle), \"Telegram Handle: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.TELEGRAM_HANDLE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getTelegramHandle), \"Telegram Handle: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.TELEGRAM_HANDLE.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getTelegramHandle), \"Telegram Handle: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        // address","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.ADDRESS.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getAddress), \"Address: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.ADDRESS.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getAddress), \"Address: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.ADDRESS.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getAddress), \"Address: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        // group tags","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.GROUP_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getGroupTags), \"Group Tags: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.GROUP_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getGroupTags), \"Group Tags: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.GROUP_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getGroupTags), \"Group Tags: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        // module tags","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %s\", Prefix.MODULE_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getModuleTags), \"Module Tags: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sa\", Prefix.MODULE_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getModuleTags), \"Module Tags: Ascending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        testSinglePrefix(String.format(\" %sd\", Prefix.MODULE_TAG.getPrefix()),","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"                Comparator.comparing(Person::getModuleTags), \"Module Tags: Descending\");","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"     * Tests whether the single prefix parses as expected.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    private void testSinglePrefix(String prefixWithIsAscending, Comparator\u003cPerson\u003e comparator, String description) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        assertParseSuccess(parser, prefixWithIsAscending,","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                new SortCommand(comparator, description));","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"mynameizzhafeez":81}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.CommandTestUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"    private static final String FAILURE_MESSAGE \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.USAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":"    private ViewCommandParser viewCommandParser \u003d new ViewCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"    public void parse_emptyFields_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"        assertParseSuccess(viewCommandParser, \"\", new ViewCommand(null, null));","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"    public void parse_nameFieldOnly_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"        assertParseSuccess(viewCommandParser, CommandTestUtil.NAME_DESC_ALEX,","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"                new ViewCommand(\"Alex Quentin\", null));","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"        assertParseSuccess(viewCommandParser, CommandTestUtil.NAME_DESC_BEN,","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"                new ViewCommand(\"Benjamin DeMeer\", null));","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    public void parse_invalidFieldOnly_failure() {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.PHONE_DESC_ALEX,","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.PHONE_DESC_BEN,","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.TELEGRAM_DESC_ALEX,","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.TELEGRAM_DESC_BEN,","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.VALID_GROUP_1_DESC,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.VALID_GROUP_2_DESC,","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.VALID_MODULE_1_DESC,","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        assertParseFailure(viewCommandParser, CommandTestUtil.VALID_MODULE_2_DESC,","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"                FAILURE_MESSAGE);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"russelltankaimin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"    public void parse_indexOnly_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        for (int i \u003d 1; i \u003c 100; i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"russelltankaimin"},"content":"            Index index \u003d Index.fromOneBased(i);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"            assertParseSuccess(viewCommandParser,","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"                    String.valueOf(i),","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"                    new ViewCommand(null, index));","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"russelltankaimin":70}},{"path":"src/test/java/seedu/address/model/EduMateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.testutil.TypicalUser;","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"public class EduMateTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    private final EduMate eduMate \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(Collections.emptyList(), eduMate.getPersonList());","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e eduMate.resetData(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    public void resetData_withValidReadOnlyEduMate_replacesData() {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate newData \u003d getTypicalEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.resetData(newData);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(newData, eduMate);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALBERT, editedAlbert);","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"        User validUser \u003d TypicalUser.getTypicalUser();","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMateStub newData \u003d new EduMateStub(newPersons, validUser);","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e eduMate.resetData(newData));","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e eduMate.hasPerson(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hasPerson_personNotInEduMate_returnsFalse() {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(eduMate.hasPerson(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hasPerson_personInEduMate_returnsTrue() {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.addPerson(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(eduMate.hasPerson(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hasPerson_personWithSameIdentityFieldsInEduMate_returnsTrue() {","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.addPerson(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(eduMate.hasPerson(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e eduMate.getPersonList().remove(0));","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validEduMate_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(eduMate.hashCode(), Objects.hash(eduMate.getPersonList(), eduMate.getUser()));","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"    public void removePerson_validIndex_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!eduMate.hasPerson(BART)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"            eduMate.addPerson(BART);","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.removePerson(BART);","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(eduMate.hasPerson(BART));","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"     * A stub ReadOnlyEduMate whose persons list or user can violate interface constraints.","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"    private static class EduMateStub implements ReadOnlyEduMate {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        private User user;","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMateStub(Collection\u003cPerson\u003e persons, User user) {","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"            this.user \u003d user;","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        public User getUser() {","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"            return user;","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"mynameizzhafeez":54,"russelltankaimin":2,"-":72}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.testutil.EduMateBuilder;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(new EduMate(), new EduMate(modelManager.getEduMate()));","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        userPrefs.setEduMateFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        userPrefs.setEduMateFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMateFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEduMateFilePath(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMateFilePath_validPath_setsEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        modelManager.setEduMateFilePath(path);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(path, modelManager.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hasPerson_personNotInEduMate_returnsFalse() {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(modelManager.hasPerson(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hasPerson_personInEduMate_returnsTrue() {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        modelManager.addPerson(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(modelManager.hasPerson(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    public void deletePerson_personInEduMate_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        if (!modelManager.hasPerson(ALBERT)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"            modelManager.addPerson(ALBERT);","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        modelManager.deletePerson(ALBERT);","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(modelManager.hasPerson(ALBERT));","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"    public void setEduMate() {","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate newEduMate \u003d new EduMate(modelManager.getEduMate());","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        modelManager.setEduMate(newEduMate);","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(newEduMate, modelManager.getEduMate());","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate eduMate \u003d new EduMateBuilder().withPerson(ALBERT).withPerson(BART).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate differentEduMate \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        modelManager \u003d new ModelManager(eduMate, userPrefs);","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(eduMate, userPrefs);","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"        // different eduMate -\u003e returns false","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(modelManager, new ModelManager(differentEduMate, userPrefs));","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME, ALBERT.getName().getValue().split(\"\\\\s+\"), eduMate, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL, ALBERT.getEmail().getValue().split(\"\\\\s+\"), eduMate, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE, ALBERT.getPhone().getValue().split(\"\\\\s+\"), eduMate, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS, ALBERT.getAddress().getValue().split(\"\\\\s+\"), eduMate, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE, ALBERT.getTelegramHandle().getValue().split(\"\\\\s+\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"seanfirefox"},"content":"                eduMate, userPrefs);","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"mynameizzhafeez"},"content":"                ALBERT.getImmutableModuleTags().toString().replaceAll(\"[\\\\[\\\\], ]\", \"\").split(\" \"),","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"seanfirefox"},"content":"                eduMate, userPrefs);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"seanfirefox"},"content":"        createEqualsFilteredList(","lastModifiedDate":"2023-02-23"},{"lineNumber":156,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"                ALBERT.getImmutableGroupTags().toString().replaceAll(\"[\\\\[\\\\], ]\", \"\").split(\" \"),","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"seanfirefox"},"content":"                eduMate, userPrefs);","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"mynameizzhafeez"},"content":"        differentUserPrefs.setEduMateFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(modelManager, new ModelManager(eduMate, differentUserPrefs));","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"seanfirefox"},"content":"    public void createEqualsFilteredList(Prefix prefix, String[] keywords, EduMate eduMate, UserPrefs userPrefs) {","lastModifiedDate":"2023-02-23"},{"lineNumber":170,"author":{"gitId":"seanfirefox"},"content":"        modelManager.updateFilteredPersonList(","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"seanfirefox"},"content":"                new ContainsKeywordsPredicate(Arrays.asList(keywords), prefix));","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(modelManager, new ModelManager(eduMate, userPrefs));","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"mynameizzhafeez":45,"seanfirefox":26,"-":103}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final UserPrefs USER_PREFS \u003d new UserPrefs();","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e USER_PREFS.setGuiSettings(null));","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e USER_PREFS.setEduMateFilePath(null));","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validUserPrefs_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(USER_PREFS.hashCode(), Objects.hash(USER_PREFS.getGuiSettings(),","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"                USER_PREFS.getEduMateFilePath()));","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(USER_PREFS, USER_PREFS);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_notUserPrefs_false() {","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotEquals(USER_PREFS, 3);","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"mynameizzhafeez":22,"-":19}},{"path":"src/test/java/seedu/address/model/person/ContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"seanfirefox"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"seanfirefox"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"seanfirefox"},"content":"public class ContainsKeywordsPredicateTest {","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"seanfirefox"},"content":"        createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"seanfirefox"},"content":"    public void createEquals(","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix,","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"seanfirefox"},"content":"            List\u003cString\u003e firstPredicateKeywordList,","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"seanfirefox"},"content":"            List\u003cString\u003e secondPredicateKeywordList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d new ContainsKeywordsPredicate(","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d new ContainsKeywordsPredicate(","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"seanfirefox"},"content":"                secondPredicateKeywordList, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate firstPredicateCopy \u003d new ContainsKeywordsPredicate(","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"seanfirefox"},"content":"                firstPredicateKeywordList, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"seanfirefox"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(1, firstPredicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(null, firstPredicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"seanfirefox"},"content":"        assertNotEquals(firstPredicate, secondPredicate);","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"seanfirefox"},"content":"    public void test_containsKeywords_returnsTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withName(\"Albert Bart\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"Albert\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"Bart\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Bart\", \"Carol\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"alBert\", \"bArT\")","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withPhone(\"89760441\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"89760441\"), // Full number","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"8976\", \"0441\"), // Number split into 2 parts by user","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"8976\", \"2028\"), // Number split into 2 parts by user, only first part matching","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"8976\", \"0441\") // Mixed case keywords does not apply for numbers","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withEmail(\"albertpark@gmail.com\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"albertpark@gmail.com\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"albertpark\", \"@gmail.com\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"albertpark\", \"@yahoo.com\"), // Email split into 2 parts by user, only first part matching","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"aLberTPark@GmaIL.com\")","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withAddress(\"2 Blackmore Drive\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"Blackmore\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"2\", \"Blackmore\", \"Drive\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"2\", \"Blackmore\", \"Street\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"2\", \"bLackMore\", \"drIve\")","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withTelegramHandle(\"@albertpark\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"@albertpark\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"@albert\", \"park\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"@albert\", \"bart\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"@albErtParK\")","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withGroupTags(\"TA\", \"CCA\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"TA\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"TA\", \"CCA\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"TA\", \"Study\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"tA\", \"cCa\")","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"seanfirefox"},"content":"        createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"seanfirefox"},"content":"                new PersonBuilder().withModuleTags(\"CE2183\", \"CS1010R\").build(),","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"seanfirefox"},"content":"                Collections.singletonList(\"CE2183\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CE2183\", \"CS1010R\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"CE2183\", \"CS1231S\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"cE2183\", \"cS1010r\")","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"seanfirefox"},"content":"    public void createContainsKeywordsReturnsTrue(","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix, Person person, List\u003cString\u003e oneKeyword, List\u003cString\u003e multiKeyword,","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"seanfirefox"},"content":"            List\u003cString\u003e oneMatchKeyword, List\u003cString\u003e mixedCaseKeyword) {","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"seanfirefox"},"content":"                oneKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":163,"author":{"gitId":"seanfirefox"},"content":"        predicate \u003d new ContainsKeywordsPredicate(multiKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"seanfirefox"},"content":"        predicate \u003d new ContainsKeywordsPredicate(oneMatchKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"seanfirefox"},"content":"        predicate \u003d new ContainsKeywordsPredicate(mixedCaseKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"seanfirefox"},"content":"        assertTrue(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"seanfirefox"},"content":"        List\u003cString\u003e emptyList \u003d Collections.emptyList();","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"seanfirefox"},"content":"        Person person \u003d new PersonBuilder().withName(\"Albert\").withPhone(\"12345\").withEmail(\"alice@email.com\")","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"seanfirefox"},"content":"                .withAddress(\"Main Street\").withTelegramHandle(\"@albertpark\")","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"seanfirefox"},"content":"                .withModuleTags(\"CS2030S\", \"CS2103T\", \"CS2101\").withGroupTags(\"TA\", \"CCA\").build();","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":183,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.NAME,","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"Carol\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\")","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.TELEGRAM_HANDLE,","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"@alice\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\")","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"albertpark@gmail.com\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"12345\", \"Main\", \"Street\")","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":207,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":210,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"Side\", \"Drive\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"12345\", \"@albertpark\", \"TA\")","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":215,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.PHONE,","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"67890\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"alice@email.com\", \"@albertpark\", \"CS2030S\")","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":223,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.MODULE_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"CS3230\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"alice@email.com\", \"@albertpark\", \"TA\")","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"seanfirefox"},"content":"        createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":231,"author":{"gitId":"mynameizzhafeez"},"content":"                Prefix.GROUP_TAG,","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"seanfirefox"},"content":"                person,","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"seanfirefox"},"content":"                emptyList,","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"seanfirefox"},"content":"                List.of(\"Study\"),","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"seanfirefox"},"content":"                Arrays.asList(\"Albert\", \"alice@email.com\", \"@albertpark\", \"CS2030S\")","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"seanfirefox"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"seanfirefox"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"seanfirefox"},"content":"    public void createDoesNotContainKeywordsReturnsFalse(","lastModifiedDate":"2023-02-23"},{"lineNumber":240,"author":{"gitId":"seanfirefox"},"content":"            Prefix prefix, Person person, List\u003cString\u003e emptyList, List\u003cString\u003e wrongKeyword, List\u003cString\u003e wrongFields) {","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":242,"author":{"gitId":"seanfirefox"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(emptyList, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":246,"author":{"gitId":"seanfirefox"},"content":"        predicate \u003d new ContainsKeywordsPredicate(wrongKeyword, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"seanfirefox"},"content":"        // Keywords match other fields, but does not match prefix","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"seanfirefox"},"content":"        predicate \u003d new ContainsKeywordsPredicate(wrongFields, prefix);","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"seanfirefox"},"content":"        assertFalse(predicate.test(person));","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"mynameizzhafeez":21,"seanfirefox":187,"-":45}},{"path":"src/test/java/seedu/address/model/person/GroupTagSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_2;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"public class GroupTagSetTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final GroupTag GROUP_TAG_1 \u003d new GroupTag(VALID_GROUP_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final GroupTag GROUP_TAG_2 \u003d new GroupTag(VALID_GROUP_2);","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public void add() {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet groupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, groupTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.add(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, groupTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public void remove() {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet groupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.add(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, groupTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.remove(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, groupTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toString_validGroupTagSet_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet groupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.add(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.add(GROUP_TAG_2);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(groupTagSet.toString(),","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"                String.format(\"%s | %s\", VALID_GROUP_1, VALID_GROUP_2));","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getImmutableGroups_tryEdit_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet groupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cGroupTag\u003e immutableSet \u003d groupTagSet.getImmutableGroups();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e immutableSet.add(GROUP_TAG_1));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    public void compareTo() {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet groupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTagSet.add(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTagSet biggerGroupTagSet \u003d new GroupTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        biggerGroupTagSet.add(GROUP_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        biggerGroupTagSet.add(GROUP_TAG_2);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(-1, groupTagSet.compareTo(biggerGroupTagSet));","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, biggerGroupTagSet.compareTo(groupTagSet));","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"mynameizzhafeez":67}},{"path":"src/test/java/seedu/address/model/person/ModuleTagSetTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_1;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MODULE_2;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.testutil.TypicalUser;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"public class ModuleTagSetTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final ModuleTag MODULE_TAG_1 \u003d new ModuleTag(VALID_MODULE_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final ModuleTag MODULE_TAG_2 \u003d new ModuleTag(VALID_MODULE_2);","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public void add() {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, moduleTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.add(MODULE_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, moduleTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    public void remove() {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.add(MODULE_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, moduleTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.remove(MODULE_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, moduleTagSet.size());","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toString_validModuleTagSet_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.add(MODULE_TAG_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.add(MODULE_TAG_2);","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(moduleTagSet.toString(),","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                String.format(\"%s | %s\", VALID_MODULE_1, VALID_MODULE_2));","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getImmutableModules_tryEdit_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e immutableSet \u003d moduleTagSet.getImmutableModules();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e immutableSet.add(MODULE_TAG_1));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getImmutableCommonModules_tryEdit_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        Set\u003cModuleTag\u003e immutableSet \u003d moduleTagSet.getImmutableCommonModules();","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e immutableSet.add(MODULE_TAG_1));","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    public void compareTo() {","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet moduleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.add(MODULE_TAG_2); // GEA1000 not in LINUS","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTagSet.setCommonModules(TypicalUser.LINUS.getImmutableModuleTags());","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTagSet commonModuleTagSet \u003d new ModuleTagSet();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        commonModuleTagSet.add(MODULE_TAG_1); // CS2100 is in LINUS","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        commonModuleTagSet.setCommonModules(TypicalUser.LINUS.getImmutableModuleTags());","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(-1, moduleTagSet.compareTo(commonModuleTagSet));","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, commonModuleTagSet.compareTo(moduleTagSet));","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, moduleTagSet.getNumberOfCommonModules());","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, commonModuleTagSet.getNumberOfCommonModules());","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(0, moduleTagSet.getImmutableCommonModules().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(1, moduleTagSet.getUncommonModuleTags().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"mynameizzhafeez":83}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getImmutableGroupTags().remove(0));","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getImmutableModuleTags().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getImmutableCommonModuleTags().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ALBERT.isSamePerson(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.isSamePerson(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withPhone(PHONE_BEN).withEmail(EMAIL_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"                .withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ALBERT.isSamePerson(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAlbert \u003d new PersonBuilder(ALBERT).withName(NAME_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.isSamePerson(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedBart \u003d new PersonBuilder(BEN).withName(NAME_BEN.toLowerCase()).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(BEN.isSamePerson(editedBart));","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        String nameWithTrailingSpaces \u003d NAME_BEN + \" \";","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        editedBart \u003d new PersonBuilder(BEN).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(BEN.isSamePerson(editedBart));","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALBERT).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ALBERT.equals(aliceCopy));","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ALBERT.equals(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(5));","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(BEN));","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withName(NAME_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAlbert \u003d new PersonBuilder(ALBERT).withPhone(PHONE_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAlbert \u003d new PersonBuilder(ALBERT).withEmail(EMAIL_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAlbert \u003d new PersonBuilder(ALBERT).withAddress(ADDRESS_BEN).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"        editedAlbert \u003d new PersonBuilder(ALBERT).withGroupTags(VALID_GROUP_1).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ALBERT.equals(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validPerson_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        Person albert \u003d ALBERT;","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(albert.hashCode(), Objects.hash(ALBERT.getName(),","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"                ALBERT.getPhone(), ALBERT.getEmail(), ALBERT.getAddress(),","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"                ALBERT.getTelegramHandle(), ALBERT.getGroupTags(),","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"                ALBERT.getModuleTags()));","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"mynameizzhafeez":48,"-":57}},{"path":"src/test/java/seedu/address/model/person/TelegramHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class TelegramHandleTest {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TelegramHandle(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    public void constructor_invalidTelegram_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"        String invalidTelegramHandle \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TelegramHandle(invalidTelegramHandle));","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTelegramHandle() {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"        // null email","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e TelegramHandle.isValidTelegramHandle(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        // blank email","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"\")); // empty string","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\" \")); // spaces only","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        // missing parts","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"linusrichards\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(\"@\")); // missing domain name","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        // invalid argument","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linusrichards \")); // padded with space at the back","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                \" @linusrichards\")); // padded with space at the front","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linus richards\")); // space found in the middle","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linus @richards\")); // parse two telegram handles","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linus@richards\")); // parse two telegram handles without space","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@@linusrichards\")); // double @ symbol","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linus!richards \")); // non alnum character found","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        // valid argument","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linusrichards\")); // standard lower case","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@LinusRichards\")); // with upper case","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@linus2richards3\")); // with numeric","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(TelegramHandle.isValidTelegramHandle(","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"                \"@Linus2Richards3\")); // with upper case and numeric","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validTelegramHandle_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        String handle \u003d \"@linus\";","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        TelegramHandle telegramHandle \u003d new TelegramHandle(handle);","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(telegramHandle.hashCode(), handle.hashCode());","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"mynameizzhafeez":68}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ISAAC;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(uniquePersonList.contains(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(uniquePersonList.contains(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(uniquePersonList.contains(editedAlbert));","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALBERT, null));","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALBERT, ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.setPerson(ALBERT, ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedUniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        Person editedAlbert \u003d new PersonBuilder(ALBERT).withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1)","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.setPerson(ALBERT, editedAlbert);","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedUniquePersonList.add(editedAlbert);","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.setPerson(ALBERT, BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedUniquePersonList.add(BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALBERT, BEN));","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALBERT));","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.remove(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedUniquePersonList.add(BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"mynameizzhafeez"},"content":"        expectedUniquePersonList.add(BEN);","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALBERT, ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":173,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":174,"author":{"gitId":"mynameizzhafeez"},"content":"    public void iterator_validLength_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":175,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":176,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.iterator().forEachRemaining(personList::add);","lastModifiedDate":"2023-02-24"},{"lineNumber":177,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"mynameizzhafeez"},"content":"        int size \u003d personList.size();","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.add(ISAAC);","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cPerson\u003e newPersonList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"mynameizzhafeez"},"content":"        uniquePersonList.iterator().forEachRemaining(newPersonList::add);","lastModifiedDate":"2023-02-24"},{"lineNumber":184,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"mynameizzhafeez"},"content":"        int newSize \u003d newPersonList.size();","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(size + 1, newSize);","lastModifiedDate":"2023-02-24"},{"lineNumber":188,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"mynameizzhafeez":56,"-":133}},{"path":"src/test/java/seedu/address/model/person/UserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.testutil.TypicalUser;","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"public class UserTest {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(TypicalUser.LINUS, TypicalUser.LINUS);","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"mynameizzhafeez":14}},{"path":"src/test/java/seedu/address/model/tag/GroupTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"public class GroupTagTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String GROUP_TAG_STRING \u003d \"Friend\";","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final GroupTag GROUP_TAG \u003d new GroupTag(GROUP_TAG_STRING);","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupTag(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GroupTag(invalidTagName));","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"        assertThrows(NullPointerException.class, () -\u003e GroupTag.isValidTagName(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_validTagName_true() {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                \"friend\")); // standard format","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"                \"Friend\")); // capitalized format","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                \"FRIEND\")); // all caps format","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"                \"Fr1end\")); // contains numeric","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"                \"12345\")); // full numeric","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_invalidTagName_false() {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"                \"NUS Friend\")); // multiple tags at once","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"                \"\")); // empty string","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(GroupTag.isValidTagName(","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                \"!Friend\")); // contains non-alphanumeric","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_validTagValidTarget_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(GROUP_TAG.isValidTagName(\"Friend\", \"Friend\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals() {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        GroupTag otherGroupTag \u003d new GroupTag(\"Friend\");","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GROUP_TAG, GROUP_TAG);","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GROUP_TAG, otherGroupTag);","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validTag_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(GROUP_TAG_STRING.hashCode(), GROUP_TAG.hashCode());","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toString_validTag_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(String.format(\"%s\", GROUP_TAG_STRING), GROUP_TAG.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"mynameizzhafeez":54,"russelltankaimin":4,"-":21}},{"path":"src/test/java/seedu/address/model/tag/ModuleTagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"public class ModuleTagTest {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String MODULE_TAG_STRING \u003d \"CS2103T\";","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final ModuleTag MODULE_TAG \u003d new ModuleTag(MODULE_TAG_STRING);","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModuleTag(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModuleTag(invalidTagName));","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        // null tag name","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModuleTag.isValidTagName(null));","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_validTagName_true() {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ModuleTag.isValidTagName(\"CS2101\")); // standard module code","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ModuleTag.isValidTagName(\"CS2103T\")); // module code with suffix","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ModuleTag.isValidTagName(\"DSA1101\")); // long module code","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(ModuleTag.isValidTagName(\"ACC2101GTX\")); // module code with long prefix and suffix","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_invalidTagName_false() {","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"CS50\")); // short module number","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"C2100\")); // short module prefix","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"DSAI2100\")); // long module prefix","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"DSA2100GTFO\")); // long module suffix","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"CS 2100\")); // space in between","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"CS2103/T\")); // non-alphanumeric character","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"23CSIT\")); // numbers and letters are swapped","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(ModuleTag.isValidTagName(\"2100CS\")); // wrong order of module details","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    public void isValidTagName_validTagValidTarget_true() {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        assertTrue(MODULE_TAG.isValidTagName(\"CS2103T\", \"CS2100\"));","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    public void equals() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"        ModuleTag otherModuleTag \u003d new ModuleTag(\"CS2103T\");","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(MODULE_TAG, MODULE_TAG);","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(MODULE_TAG, otherModuleTag);","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    public void hashCode_validTag_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(MODULE_TAG_STRING.hashCode(), MODULE_TAG.hashCode());","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toString_validTag_success() {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(String.format(\"%s\", MODULE_TAG_STRING), MODULE_TAG.toString());","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"mynameizzhafeez":73}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getSampleEduMate() {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"        int size \u003d 5;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate sampleEm \u003d SampleDataUtil.getSampleEduMate(size);","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(sampleEm.getPersonList().size(), size);","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"mynameizzhafeez":16}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"rachel\";","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_GROUP_TAG \u003d \"#friend\";","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"    private static final String INVALID_MODULE_TAG \u003d \"M11\";","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_NAME \u003d BART.getName().toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_PHONE \u003d BART.getPhone().toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_EMAIL \u003d BART.getEmail().toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_ADDRESS \u003d BART.getAddress().toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BART.getTelegramHandle().toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final List\u003cJsonAdaptedGroupTag\u003e VALID_TAGS \u003d BART.getImmutableGroupTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            .map(JsonAdaptedGroupTag::new)","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"    private static final List\u003cJsonAdaptedModuleTag\u003e VALID_MODULE_TAGS \u003d","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"            BART.getImmutableModuleTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"            .map(JsonAdaptedModuleTag::new)","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(BART);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(BART, user.toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"russelltankaimin"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"russelltankaimin"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"russelltankaimin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"russelltankaimin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"russelltankaimin"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"                        INVALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"                null, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cJsonAdaptedGroupTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"        invalidTags.add(new JsonAdaptedGroupTag(INVALID_GROUP_TAG));","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedPerson user \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"russelltankaimin"},"content":"                        VALID_TELEGRAM_HANDLE, invalidTags, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, user::toModelType);","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":48,"russelltankaimin":17,"-":78}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedUserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.storage.JsonAdaptedUser.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.BART;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalUser.LINUS;","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.List;","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonAdaptedUserTest {","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_TELEGRAM_HANDLE \u003d \"rachel\";","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_GROUP_TAG \u003d \"#friend\";","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String INVALID_MODULE_TAG \u003d \"M11\";","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_NAME \u003d BART.getName().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_PHONE \u003d BART.getPhone().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_EMAIL \u003d BART.getEmail().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_ADDRESS \u003d BART.getAddress().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String VALID_TELEGRAM_HANDLE \u003d BART.getTelegramHandle().toString();","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final List\u003cJsonAdaptedGroupTag\u003e VALID_TAGS \u003d BART.getImmutableGroupTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"            .map(JsonAdaptedGroupTag::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final List\u003cJsonAdaptedModuleTag\u003e VALID_MODULE_TAGS \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"            BART.getImmutableModuleTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"                    .map(JsonAdaptedModuleTag::new)","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(LINUS);","lastModifiedDate":"2023-02-26"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(LINUS, user.toModelType());","lastModifiedDate":"2023-02-26"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"                        VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"                VALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":118,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"                        INVALID_TELEGRAM_HANDLE, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d TelegramHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-26"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_nullTelegramHandle_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d new JsonAdaptedUser(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"                null, VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TelegramHandle.class.getSimpleName());","lastModifiedDate":"2023-02-26"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-26"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-02-26"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"        List\u003cJsonAdaptedGroupTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"        invalidTags.add(new JsonAdaptedGroupTag(INVALID_GROUP_TAG));","lastModifiedDate":"2023-02-26"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonAdaptedUser user \u003d","lastModifiedDate":"2023-02-26"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"                new JsonAdaptedUser(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-02-26"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"                        VALID_TELEGRAM_HANDLE, invalidTags, VALID_MODULE_TAGS);","lastModifiedDate":"2023-02-26"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, user::toModelType);","lastModifiedDate":"2023-02-26"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-26"},{"lineNumber":144,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"mynameizzhafeez":145}},{"path":"src/test/java/seedu/address/storage/JsonEduMateStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.ALBERT;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.CLARK;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonEduMateStorageTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonEduMateStorageTest\");","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"    @TempDir","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"    public Path testFolder;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEduMate(null));","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"    private java.util.Optional\u003cReadOnlyEduMate\u003e readEduMate(String filePath) throws Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        return new JsonEduMateStorage(Paths.get(filePath)).readEduMate(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"mynameizzhafeez"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                : null;","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"        assertFalse(readEduMate(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(\"notJsonFormatEduMate.json\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_shortPhoneFieldEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(\"shortPhoneFieldEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_nonNumericFieldEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(\"nonNumericPhoneFieldEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_invalidNameEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(\"invalidNameEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_longModuleTagEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(\"longModuleTagEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_shortPhoneFieldValidInvalidEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"                \"shortPhoneFieldValidInvalidEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_nonNumericFieldValidInvalidEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"                \"nonNumericPhoneFieldValidInvalidEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_invalidNameValidInvalidEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"                \"invalidNameValidInvalidEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readEduMate_longModuleTagValidInvalidEduMate_throwDataConversionException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEduMate(","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"                \"longModuleTagValidInvalidEduMate.json\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"    public void readAndSaveEduMate_allInOrder_success() throws Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEduMate.json\");","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate original \u003d getTypicalEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonEduMateStorage jsonEduMateStorage \u003d new JsonEduMateStorage(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"        jsonEduMateStorage.saveEduMate(original, filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate readBack \u003d jsonEduMateStorage.readEduMate(filePath).get();","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(original.getPersonList(), new EduMate(readBack).getPersonList());","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"        original.removePerson(ALBERT);","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"        original.removePerson(CLARK);","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"        jsonEduMateStorage.saveEduMate(original, filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"        readBack \u003d jsonEduMateStorage.readEduMate(filePath).get();","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(original.getPersonList(), new EduMate(readBack).getPersonList());","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"        original.addPerson(CLARK);","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"        jsonEduMateStorage.saveEduMate(original); // file path not specified","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"mynameizzhafeez"},"content":"        readBack \u003d jsonEduMateStorage.readEduMate().get(); // file path not specified","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(original.getPersonList(), new EduMate(readBack).getPersonList());","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate_nullEduMate_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEduMate(null, \"SomeFile.json\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"mynameizzhafeez"},"content":"     * Saves {@code eduMate} at the specified {@code filePath}.","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"mynameizzhafeez"},"content":"    private void saveEduMate(ReadOnlyEduMate eduMate, String filePath) {","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"mynameizzhafeez"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"            new JsonEduMateStorage(Paths.get(filePath))","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"mynameizzhafeez"},"content":"                    .saveEduMate(eduMate, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"mynameizzhafeez"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"mynameizzhafeez"},"content":"    public void saveEduMate_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEduMate(new EduMate(), null));","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":140,"russelltankaimin":3}},{"path":"src/test/java/seedu/address/storage/JsonSerializableEduMateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"public class JsonSerializableEduMateTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEduMateTest\");","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsEduMate.json\");","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonEduMate.json\");","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonEduMate.json\");","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonSerializableEduMate dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"                JsonSerializableEduMate.class).get();","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate eduMateFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate typicalPersonsEduMate \u003d TypicalPersons.getTypicalEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"        assertTrue(PersonUtil.isSameUserAndUserStub(eduMateFromFile.getUser(),","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                typicalPersonsEduMate.getUser()));","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(eduMateFromFile.getPersonList(), typicalPersonsEduMate.getPersonList());","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonSerializableEduMate dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                JsonSerializableEduMate.class).get();","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonSerializableEduMate dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"                JsonSerializableEduMate.class).get();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEduMate.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"mynameizzhafeez":15,"russelltankaimin":5,"-":31}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getUserPrefsFilePath_validPath_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(TEST_DATA_FOLDER);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(jsonUserPrefsStorage.getUserPrefsFilePath(), TEST_DATA_FOLDER);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"        userPrefs.setEduMateFilePath(Paths.get(\"edumate.json\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"mynameizzhafeez":7,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.ReadOnlyEduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String STORAGE_FILE_PATH \u003d \"ab\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    private static final String USER_PREFS_FILE_PATH \u003d \"prefs\";","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonEduMateStorage eduMateStorage \u003d new JsonEduMateStorage(getTempFilePath(","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"                STORAGE_FILE_PATH));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"                USER_PREFS_FILE_PATH));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"        storageManager \u003d new StorageManager(eduMateStorage, userPrefsStorage);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public void eduMateReadSave() throws Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"         * {@link JsonEduMateStorage} class.","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonEduMateStorageTest} class.","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate original \u003d getTypicalEduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"        storageManager.saveEduMate(original);","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"        ReadOnlyEduMate retrieved \u003d storageManager.readEduMate().get();","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"russelltankaimin"},"content":"        ReadOnlyEduMate pushed \u003d new EduMate(retrieved);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"russelltankaimin"},"content":"        assertEquals(original.getPersonList(), pushed.getPersonList());","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"russelltankaimin"},"content":"        assertTrue(PersonUtil.isSameUserAndUserStub(pushed.getUser(), original.getUser()));","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getEduMateFilePath() {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"        assertNotNull(storageManager.getEduMateFilePath());","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"    public void getUserPrefsFilePath_validFilePath_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"        assertEquals(storageManager.getUserPrefsFilePath(),","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"                getTempFilePath(USER_PREFS_FILE_PATH));","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"mynameizzhafeez":22,"russelltankaimin":5,"-":56}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.setGroupTags(person.getImmutableGroupTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"        descriptor.setTelegramHandle(person.getTelegramHandle());","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.setModuleTags(person.getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * Sets the {@code TelegramHandle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    public EditPersonDescriptorBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        descriptor.setTelegramHandle(new TelegramHandle(telegramHandle));","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"     * Parses the {@code groupTags} into a {@code Set\u003cGroupTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"russelltankaimin"},"content":"    public EditPersonDescriptorBuilder withGroupTags(String... groupTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"russelltankaimin"},"content":"        Set\u003cGroupTag\u003e groupTagSet \u003d Stream.of(groupTags).map(GroupTag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"russelltankaimin"},"content":"        descriptor.setGroupTags(groupTagSet);","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"russelltankaimin"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"russelltankaimin"},"content":"     * Parses the {@code groupTags} into a {@code Set\u003cModuleTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"russelltankaimin"},"content":"    public EditPersonDescriptorBuilder withModuleTags(String... moduleTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"russelltankaimin"},"content":"        Set\u003cModuleTag\u003e moduleTagSet \u003d Stream.of(moduleTags).map(ModuleTag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"russelltankaimin"},"content":"        descriptor.setModuleTags(moduleTagSet);","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"mynameizzhafeez":2,"russelltankaimin":23,"-":84}},{"path":"src/test/java/seedu/address/testutil/EduMateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mynameizzhafeez"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":" *     {@code EduMate ab \u003d new EduMateBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"public class EduMateBuilder {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"    private EduMate eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMateBuilder() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMateBuilder(EduMate eduMate) {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"        this.eduMate \u003d eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"mynameizzhafeez"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"mynameizzhafeez"},"content":"     * Adds a new {@code Person} to the {@code EduMate} that we are building.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"mynameizzhafeez"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMateBuilder withPerson(Person person) {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"        eduMate.addPerson(person);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"        return this;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"    public EduMate build() {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        return eduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mynameizzhafeez":34}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"    public static final String DEFAULT_TELEGRAM_HANDLE \u003d \"@amyFarrahFowler\";","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"russelltankaimin"},"content":"    private TelegramHandle telegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"    private Set\u003cGroupTag\u003e groupTags;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"    private Set\u003cModuleTag\u003e moduleTags;","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"russelltankaimin"},"content":"        telegramHandle \u003d new TelegramHandle(DEFAULT_TELEGRAM_HANDLE);","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"russelltankaimin"},"content":"        groupTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"russelltankaimin"},"content":"        moduleTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"        groupTags \u003d new HashSet\u003c\u003e(personToCopy.getImmutableGroupTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"        moduleTags \u003d new HashSet\u003c\u003e(personToCopy.getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"russelltankaimin"},"content":"        telegramHandle \u003d personToCopy.getTelegramHandle();","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"russelltankaimin"},"content":"     * Parses the {@code groupTags} into a {@code Set\u003cGroupTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"russelltankaimin"},"content":"    public PersonBuilder withGroupTags(String ... groupTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"russelltankaimin"},"content":"        this.groupTags \u003d SampleDataUtil.getGroupTagSet(groupTags);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     * Parses the {@code moduleTags} into a {@code Set\u003cModuleTag\u003e}","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    public PersonBuilder withModuleTags(String ... moduleTags) {","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        this.moduleTags \u003d SampleDataUtil.getModuleTagSet(moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"russelltankaimin"},"content":"     * Sets the {@code TelegramHandle} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"russelltankaimin"},"content":"    public PersonBuilder withTelegramHandle(String telegramHandle) {","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"russelltankaimin"},"content":"        this.telegramHandle \u003d new TelegramHandle(telegramHandle);","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"russelltankaimin"},"content":"        return this;","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"russelltankaimin"},"content":"     * Returns a {@code Person} with input features called so far.","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":122,"author":{"gitId":"russelltankaimin"},"content":"        return new Person(name, phone, email, address, telegramHandle,","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"russelltankaimin"},"content":"                groupTags, moduleTags);","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"mynameizzhafeez":2,"russelltankaimin":33,"-":91}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(Prefix.NAME + person.getName().getValue() + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(Prefix.PHONE + person.getPhone().getValue() + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(Prefix.EMAIL + person.getEmail().getValue() + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(Prefix.ADDRESS + person.getAddress().getValue() + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(Prefix.TELEGRAM_HANDLE + person.getTelegramHandle().getValue() + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"mynameizzhafeez"},"content":"        person.getImmutableGroupTags().stream().forEach(","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"mynameizzhafeez"},"content":"            s -\u003e sb.append(Prefix.GROUP_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"        );","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"mynameizzhafeez"},"content":"        person.getImmutableModuleTags().stream().forEach(","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"mynameizzhafeez"},"content":"                s -\u003e sb.append(Prefix.MODULE_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(Prefix.NAME).append(name.getValue()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(Prefix.PHONE).append(phone.getValue()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(Prefix.EMAIL).append(email.getValue()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(Prefix.ADDRESS).append(address.getValue()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"        descriptor.getTelegramHandle().ifPresent(telegramHandle -\u003e sb.append(Prefix.TELEGRAM_HANDLE)","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"                .append(telegramHandle.getValue()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"russelltankaimin"},"content":"        if (descriptor.getGroupTags().isPresent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"russelltankaimin"},"content":"            Set\u003cGroupTag\u003e groupTags \u003d descriptor.getGroupTags().get();","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"russelltankaimin"},"content":"            if (groupTags.isEmpty()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"                sb.append(Prefix.GROUP_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"russelltankaimin"},"content":"            } else {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"                groupTags.forEach(s -\u003e sb.append(Prefix.GROUP_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"russelltankaimin"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"russelltankaimin"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"        sb.append(\" \");","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"russelltankaimin"},"content":"        if (descriptor.getModuleTags().isPresent()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"russelltankaimin"},"content":"            Set\u003cModuleTag\u003e moduleTags \u003d descriptor.getModuleTags().get();","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"russelltankaimin"},"content":"            if (moduleTags.isEmpty()) {","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"                sb.append(Prefix.MODULE_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"                moduleTags.forEach(s -\u003e sb.append(Prefix.MODULE_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"russelltankaimin"},"content":"     * Checks whether the users\u0027 information are the same.","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"russelltankaimin"},"content":"     * @param firstUser","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"russelltankaimin"},"content":"     * @param secondUser","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"russelltankaimin"},"content":"     * @return boolean.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"russelltankaimin"},"content":"    public static boolean isSameUserAndUserStub(User firstUser, User secondUser) {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"russelltankaimin"},"content":"        return firstUser.getName().equals(secondUser.getName())","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 firstUser.getEmail().equals(secondUser.getEmail())","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 firstUser.getPhone().equals(secondUser.getPhone())","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"russelltankaimin"},"content":"                \u0026\u0026 firstUser.getTelegramHandle().equals(secondUser.getTelegramHandle())","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"                \u0026\u0026 firstUser.getImmutableModuleTags().equals(secondUser.getImmutableModuleTags());","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"mynameizzhafeez":22,"russelltankaimin":26,"-":40}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_ALEX;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TELEGRAM_HANDLE_BEN;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_1;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"mynameizzhafeez"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_2;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"mynameizzhafeez"},"content":"import seedu.address.model.EduMate;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person ALBERT \u003d new PersonBuilder().withName(\"Albert Park\")","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"2 Blackmore Drive\").withEmail(\"albertpark@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"89760441\").withTelegramHandle(\"@albertpark\")","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"TA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2113T\", \"CE3115\", \"IS3221\", \"CS3241\", \"BT2102\", \"CE3116\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"seanfirefox"},"content":"    public static final Person ANG \u003d new PersonBuilder().withName(\"Ang Mei Hua\")","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"seanfirefox"},"content":"            .withAddress(\"91 Ang Mo Kio Avenue 4\").withEmail(\"angmeihua@gmail.com\")","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"seanfirefox"},"content":"            .withPhone(\"92752656\").withTelegramHandle(\"@angmeihua\")","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seanfirefox"},"content":"            .withGroupTags(\"Study\", \"Mayflower\")","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seanfirefox"},"content":"            .withModuleTags(\"CE3121\", \"CS3219\", \"CS3216\", \"CE3115\", \"CS3234\", \"IS3261\").build();","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seanfirefox"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person BART \u003d new PersonBuilder().withName(\"Bart Lee\")","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"90 Bartley Road\").withEmail(\"bartlee@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"82630347\").withTelegramHandle(\"@bartlee\")","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"CCA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CE2183\", \"CS1010XCP\", \"CS1010R\", \"CS3223\", \"CS3245\", \"CS3211\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person CLARK \u003d new PersonBuilder().withName(\"Clark Kee\")","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"10 Eu Tong Sen Street\").withEmail(\"clarkkee@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"81342028\").withTelegramHandle(\"@clarkkee\")","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"NUS\")","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2107\", \"CS3282\", \"CE3102\", \"BT2101\", \"CS3244R\", \"CS3236\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person DAWSON \u003d new PersonBuilder().withName(\"Dawson Quentin\")","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"301 Commonwealth Avenue\").withEmail(\"dawsonquentin@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"87190565\").withTelegramHandle(\"@dawsonquentin\")","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"Groupmate\")","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"IS3261\", \"BT2010\", \"CS2030\", \"CS2040\", \"CS3245\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person EDWARD \u003d new PersonBuilder().withName(\"Edward Richards\")","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"301 South Buona Vista Road\").withEmail(\"edwardrichards@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"92463693\").withTelegramHandle(\"@edwardrichards\")","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"CCA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2010\", \"CE1101\", \"IS3103\", \"CS2103\", \"CS2040\", \"CS3245\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person FORD \u003d new PersonBuilder().withName(\"Ford Canning\")","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"170 River Valley Road\").withEmail(\"fordcanning@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"88032666\").withTelegramHandle(\"@fordcanning\")","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"TA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CE3115\", \"CS1010R\", \"CS3281\", \"CS2030\", \"CS3219\", \"CS3245R\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Richards\")","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"301 South Buona Vista Road\").withEmail(\"georgerichards@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"98796811\").withTelegramHandle(\"@georgerichards\")","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"CCA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CE3165\", \"IS3261\", \"IS1103\", \"IS3103\", \"CS2309\", \"CS1010\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person HONG \u003d new PersonBuilder().withName(\"Hong Shan\")","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"920 Tiong Bahru Road\").withEmail(\"hongshan@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"91345682\").withTelegramHandle(\"@hongshan\")","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"Groupmate\")","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2107\", \"BT2010\", \"CS3235\", \"CE3121\", \"CS2220\", \"BT2101\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person ISAAC \u003d new PersonBuilder().withName(\"Isaac Newton\")","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"49 Scotts Road\").withEmail(\"isaacnewton@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"93175044\").withTelegramHandle(\"@isaacnewton\")","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"TA\", \"NS\")","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"IS2103\", \"IS3106\", \"CS1010X\", \"CS3233\", \"CS3245\", \"CS2104\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person JOOKOON \u003d new PersonBuilder().withName(\"Joo Koon\")","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"91 Joo Koon Circle\").withEmail(\"jookoon@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"84709651\").withTelegramHandle(\"@jookoon\")","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"Groupmate\")","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CE3101\", \"IS1103\", \"CE2112\", \"CS2108\", \"CS3103\", \"CS2113T\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person KEVIN \u003d new PersonBuilder().withName(\"Kevin Ho\")","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"900 Upper Serangoon Road\").withEmail(\"kevinho@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"99997496\").withTelegramHandle(\"@kevinho\")","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"NUS\")","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2220\", \"CS3223\", \"CS3242\", \"CS3203\", \"CE3165\", \"CS3281\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person LAVENDER \u003d new PersonBuilder().withName(\"Lavender Crawford\")","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"50 Kallang Road\").withEmail(\"lavendercrawford@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"83340546\").withTelegramHandle(\"@lavendercrawford\")","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"Groupmate\")","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"IS3106\", \"CS1010X\", \"CS2102\", \"CS1010J\", \"CS2103T\", \"CS2113T\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person MARY \u003d new PersonBuilder().withName(\"Mary Meng\")","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"60 Marymount Road\").withEmail(\"marymeng@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"93816073\").withTelegramHandle(\"@marymeng\")","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"CCA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2106\", \"CS3282\", \"CS2108\", \"CS3203\", \"CS2103T\", \"CS2104\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person NICOLE \u003d new PersonBuilder().withName(\"Nicole Hai Wei Ting\")","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(\"20 Republic Avenue\").withEmail(\"nicolehaiweiting@gmail.com\")","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"mynameizzhafeez"},"content":"            .withPhone(\"92574283\").withTelegramHandle(\"@nicolehaiweiting\")","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"mynameizzhafeez"},"content":"            .withGroupTags(\"CCA\")","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"mynameizzhafeez"},"content":"            .withModuleTags(\"CS2101\", \"IS1103\", \"CS1010E\", \"CS3211\", \"IS3240\", \"CS1010J\").build();","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":119,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person ALEX \u003d new PersonBuilder().withName(NAME_ALEX).withPhone(PHONE_ALEX)","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"mynameizzhafeez"},"content":"            .withEmail(EMAIL_ALEX).withAddress(ADDRESS_ALEX).withGroupTags(VALID_GROUP_2)","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"mynameizzhafeez"},"content":"            .withTelegramHandle(TELEGRAM_HANDLE_ALEX).build();","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"mynameizzhafeez"},"content":"    public static final Person BEN \u003d new PersonBuilder().withName(NAME_BEN).withPhone(PHONE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":123,"author":{"gitId":"mynameizzhafeez"},"content":"            .withEmail(EMAIL_BEN).withTelegramHandle(TELEGRAM_HANDLE_BEN)","lastModifiedDate":"2023-02-19"},{"lineNumber":124,"author":{"gitId":"mynameizzhafeez"},"content":"            .withAddress(ADDRESS_BEN).withGroupTags(VALID_GROUP_1, VALID_GROUP_2)","lastModifiedDate":"2023-02-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":132,"author":{"gitId":"mynameizzhafeez"},"content":"     * Returns an {@code EduMate} with all the typical persons.","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":134,"author":{"gitId":"mynameizzhafeez"},"content":"    public static EduMate getTypicalEduMate() {","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"mynameizzhafeez"},"content":"        EduMate ab \u003d new EduMate();","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":139,"author":{"gitId":"russelltankaimin"},"content":"        ab.setUser(TypicalUser.getTypicalUser());","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"seanfirefox"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALBERT, ANG, BART, CLARK,","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"mynameizzhafeez"},"content":"                DAWSON, EDWARD, FORD, GEORGE, HONG, ISAAC, JOOKOON, KEVIN, LAVENDER, MARY, NICOLE));","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":147,"author":{"gitId":"mynameizzhafeez"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"mynameizzhafeez":107,"seanfirefox":7,"russelltankaimin":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/TypicalUser.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"russelltankaimin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"russelltankaimin"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.TelegramHandle;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.person.User;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.GroupTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"russelltankaimin"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"russelltankaimin"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"russelltankaimin"},"content":" * A utility class containing a list of {@code User} singleton object to be used in tests.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"russelltankaimin"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"russelltankaimin"},"content":"public class TypicalUser {","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"russelltankaimin"},"content":"    public static final User LINUS \u003d new User(new Name(\"Linus Richards\"),","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"russelltankaimin"},"content":"            new Phone(\"90102030\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"russelltankaimin"},"content":"            new Email(\"linusrichards@gmail.com\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"russelltankaimin"},"content":"            new Address(\"National University of Singapore\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"russelltankaimin"},"content":"            new TelegramHandle(\"@linusrichards\"),","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"russelltankaimin"},"content":"            new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"russelltankaimin"},"content":"                add(new GroupTag(\"User\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"russelltankaimin"},"content":"            }},","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"russelltankaimin"},"content":"            new HashSet\u003c\u003e() {{","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"mynameizzhafeez"},"content":"                add(new ModuleTag(\"CS2100\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"russelltankaimin"},"content":"                add(new ModuleTag(\"CS2101\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"russelltankaimin"},"content":"                add(new ModuleTag(\"CS2102\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"mynameizzhafeez"},"content":"                add(new ModuleTag(\"CS2103\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"mynameizzhafeez"},"content":"                add(new ModuleTag(\"CS2104\"));","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"russelltankaimin"},"content":"                add(new ModuleTag(\"CS2105\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"russelltankaimin"},"content":"            }});","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"russelltankaimin"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"russelltankaimin"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"russelltankaimin"},"content":"     * Gets a typical user as a Person object.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"russelltankaimin"},"content":"     * @return A typical user.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"russelltankaimin"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"russelltankaimin"},"content":"    public static User getTypicalUser() {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"russelltankaimin"},"content":"        return LINUS;","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"russelltankaimin"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"russelltankaimin"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"mynameizzhafeez":3,"russelltankaimin":39}}]
