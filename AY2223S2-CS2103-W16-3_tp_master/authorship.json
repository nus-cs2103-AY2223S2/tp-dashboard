[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"# PlanEase","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"- Are you an event planner? PlanEase is designed for you!","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"- PlanEase provides a centralised platform for you to manage your work, contacts, and events information, making the process of searching for stakeholders and keeping track of details easier and more efficient.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-W16-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-W16-3/tp/actions) [![codecov](https://codecov.io/gh/AY2223S2-CS2103-W16-3/tp/branch/master/graph/badge.svg?token\u003diFjc7JuvIC)](https://codecov.io/gh/AY2223S2-CS2103-W16-3/tp)","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"Note: This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"venuslimm":2,"inas0ng":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"Irminrics"},"content":"run {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Irminrics"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":72,"Irminrics":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"### Ang Jun Kang","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":"\u003cimg src\u003d\"images/irminrics.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"[[github](https://github.com/Irminrics)]","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"[[portfolio](team/irminrics.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"- Role: Team Lead","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"- Responsibilites: Pull request approver","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"### Jerome Neo","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"\u003cimg src\u003d\"images/jerome-neo.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"[[github](http://github.com/jerome-neo)]","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"[[portfolio](team/jerome-neo.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"- Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"- Responsibilities: Documentation, Testing","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"### Lim Jia Yi Venus","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"\u003cimg src\u003d\"images/venuslimm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"[[github](http://github.com/venuslimm)]","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"[[portfolio](team/venuslimm.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"- Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"- Responsibilities: Documentation Quality, Integration","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"### Lin Weilin","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"\u003cimg src\u003d\"images/weilin1202.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"[[github](http://github.com/weilin1202)]","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"[[portfolio](team/weilin1202.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"- Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"- Responsibilities: Testing, Code Quality","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"### Song Yi, Ina","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"\u003cimg src\u003d\"images/inas0ng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"[[github](http://github.com/inas0ng)]","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"[[portfolio](team/inas0ng.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"- Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"- Responsibilities: Testing, Deliverables and Deadline","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jerome-neo":28,"-":28,"Irminrics":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"- Table of Contents","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  {:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"- {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"- At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"- At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Irminrics"},"content":"The user interface (UI) of the system is composed of a `MainWindow` that is made up of various parts such as `CommandBox`, `ResultDisplay`, `PersonListPanel`, `EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities among classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Irminrics"},"content":"- executes user commands by interacting with the `Logic` component.","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"Irminrics"},"content":"- listens for changes to `Model` data and updates the UI with the modified data accordingly.","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"Irminrics"},"content":"- holds a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"Irminrics"},"content":"- relies on some classes in the `Model` component, as it displays `Person` and `Event` object residing in the `Model`.","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"- stores the address book data i.e., all `Person` (which are contained in a `UniquePersonList` object) and `Event` (which are contained in a `UniqueEventList` object) objects .","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"- stores the currently \u0027selected\u0027 `Event` objects, similar to how the currently \u0027selected\u0027 `Person` objects are stored and updated. It is stored as an unmodifiable `ObservableList\u003cEvent\u003e`.","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"- can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"jerome-neo"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"jerome-neo"},"content":"### \\[Implemented] Find event feature","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":159,"author":{"gitId":"jerome-neo"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":161,"author":{"gitId":"jerome-neo"},"content":"Finding an event is a feature that uses the command `findevent [EVENT_NAME]`. The implementation of `findevent` is similar to the `find` implementation but specific to events.","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"jerome-neo"},"content":"Below is the sequence diagram detailing how the `findevent` operation works.","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"jerome-neo"},"content":"![FindEventSequenceDiagram](images/FindEventSequenceDiagram.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":166,"author":{"gitId":"jerome-neo"},"content":"Following the same initial steps of parsing commands, searching for an event involves further parsing the keywords into a `EventNameContainsKeywordsPredicate` object.","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"jerome-neo"},"content":"This `EventNameContainsKeywordsPredicate` object is used to instantiate a `FindEventCommand` object.","lastModifiedDate":"2023-03-21"},{"lineNumber":168,"author":{"gitId":"jerome-neo"},"content":"The `FindEventCommand` object is then executed in `LogicManager#execute` through `FindEventCommand#execute` which returns the output of the command.","lastModifiedDate":"2023-03-21"},{"lineNumber":169,"author":{"gitId":"jerome-neo"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"inas0ng"},"content":"### \\[Implemented] Delete event feature","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"Deleting an event is a feature that uses the command `delevent [EVENT_INDEX]`. The following sequence diagram shows how the delete event operation works.","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"![DelEventSequenceDiagram](images/DelEventSequenceDiagram.png)","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"This operation is similar to that of deleting a person. Deleting an event involves calling `Model#deleteEvent(1)`, which in turn calls `AddressBook#deleteEvent(1)` to delete the event at index `1` in the `AddressBook`.","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"Additionally, this operation involves searching through all `Person` objects in the `AddressBook` and deleting the event at index `1`. This is done by calling `Model#deleteEventFromPersonList(1)`, which in turn calls `AddressBook#deleteEventFromPersonList(1)`.","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"The `deleteEventFromPersonList` method will check through the full list of `Person` objects (i.e., not just the filtered list on display) in order to completely remove the specified event from the `AddressBook`.","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"weilin1202"},"content":"### \\[Implemented] List persons from an event feature","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"weilin1202"},"content":"#### Current Implementation","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"weilin1202"},"content":"Listing persons from an event is a feature that uses the command `listevcontact [EVENT_INDEX]`. The following sequence diagram shows how the listing of persons from an event works.","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"weilin1202"},"content":"![ListEvContactSequenceDiagram](images/ListEvContactSequenceDiagram.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":192,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"weilin1202"},"content":"The `listevcontact` constructs an `EventSetContainsEventPredicate` object first, then executes `Model#updateFilteredPersonList(EventSetContainsEventPredicate)` to update the list according to the predicate to list of persons whose event set contain the specified event.","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":195,"author":{"gitId":"weilin1202"},"content":"The `EventSetContainsEventPredicate` object is created in `ListEvContactCommand` instead of `ListEvContactCommandParser` because the `EventSetContainsEventPredicate` object needs to take in the specified `Event` which can only be referenced by the `EVENT_INDEX` in `ListEvContactCommand` class. ","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"jerome-neo"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"jerome-neo"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"jerome-neo"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"jerome-neo"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-02-22"},{"lineNumber":267,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":268,"author":{"gitId":"jerome-neo"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2023-02-22"},{"lineNumber":269,"author":{"gitId":"jerome-neo"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-02-22"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"jerome-neo"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-02-22"},{"lineNumber":272,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"jerome-neo"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-02-22"},{"lineNumber":274,"author":{"gitId":"jerome-neo"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-02-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"jerome-neo"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":287,"author":{"gitId":"jerome-neo"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":288,"author":{"gitId":"jerome-neo"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":289,"author":{"gitId":"jerome-neo"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":290,"author":{"gitId":"jerome-neo"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"Irminrics"},"content":"- has a need to manage a significant number of contacts and events","lastModifiedDate":"2023-02-26"},{"lineNumber":301,"author":{"gitId":"jerome-neo"},"content":"- prefer desktop apps over other types","lastModifiedDate":"2023-02-22"},{"lineNumber":302,"author":{"gitId":"jerome-neo"},"content":"- can type fast","lastModifiedDate":"2023-02-22"},{"lineNumber":303,"author":{"gitId":"jerome-neo"},"content":"- prefers typing to mouse interactions","lastModifiedDate":"2023-02-22"},{"lineNumber":304,"author":{"gitId":"jerome-neo"},"content":"- is reasonably comfortable using CLI apps","lastModifiedDate":"2023-02-22"},{"lineNumber":305,"author":{"gitId":"Irminrics"},"content":"- does not have much storage space for multiple apps to support their work","lastModifiedDate":"2023-02-26"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"Irminrics"},"content":"**Value proposition**: efficient centralised platform for users to manage their event planning work through typing","lastModifiedDate":"2023-02-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                               | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jerome-neo"},"content":"| -------- | ----------------------- | ---------------------------------------------------------- | ------------------------------------------------------ |","lastModifiedDate":"2023-03-22"},{"lineNumber":315,"author":{"gitId":"Irminrics"},"content":"| `* * *`  | event planner           | add my own event                                           | refer to instructions when I forget how to use the App |","lastModifiedDate":"2023-02-26"},{"lineNumber":316,"author":{"gitId":"Irminrics"},"content":"| `* * *`  | event planner           | view all my events                                         | track all the upcoming events I have                   |","lastModifiedDate":"2023-02-26"},{"lineNumber":317,"author":{"gitId":"Irminrics"},"content":"| `* * *`  | event planner           | delete an existing event                                   | delete event that have ended                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":318,"author":{"gitId":"Irminrics"},"content":"| `* * *`  | event planner           | add an existing event to a new contact                     | -                                                      |","lastModifiedDate":"2023-02-26"},{"lineNumber":319,"author":{"gitId":"Irminrics"},"content":"| `* *`    | event planner           | search for events via names                                | locate events easily                                   |","lastModifiedDate":"2023-02-26"},{"lineNumber":320,"author":{"gitId":"Irminrics"},"content":"| `* *`    | forgetful event planner | be reminded that I have entered the event of the same name | avoid adding the same event name                       |","lastModifiedDate":"2023-02-26"},{"lineNumber":321,"author":{"gitId":"Irminrics"},"content":"| `* *`    | new event planner       | sort upcoming events according to dates                    | prioritize events when I am planning                   |","lastModifiedDate":"2023-02-26"},{"lineNumber":322,"author":{"gitId":"Irminrics"},"content":"| `* *`    | event planner           | list all contacts from a particular event                  | know the people associated to this event               |","lastModifiedDate":"2023-02-26"},{"lineNumber":323,"author":{"gitId":"inas0ng"},"content":"| `* *`    | event planner           | edit events                                                | change details                                         |","lastModifiedDate":"2023-03-17"},{"lineNumber":324,"author":{"gitId":"inas0ng"},"content":"| `* *`    | event planner           | list all events and contacts                               | conveniently view everything                           |","lastModifiedDate":"2023-03-17"},{"lineNumber":325,"author":{"gitId":"inas0ng"},"content":"| `*`      | event planner           | add overall-in-charge for every event                      | know who to approach for issues related to the event   |","lastModifiedDate":"2023-03-17"},{"lineNumber":326,"author":{"gitId":"Irminrics"},"content":"| `*`      | event planner           | set up a checklist of customer’s requirements              | account for every need                                 |","lastModifiedDate":"2023-02-26"},{"lineNumber":327,"author":{"gitId":"Irminrics"},"content":"| `*`      | forgetful event planner | set reminders conveniently                                 | be on track with things                                |","lastModifiedDate":"2023-02-26"},{"lineNumber":328,"author":{"gitId":"Irminrics"},"content":"| `*`      | forgetful event planner | receive reminders for upcoming events                      | avoid forgetting about the event                       |","lastModifiedDate":"2023-02-26"},{"lineNumber":329,"author":{"gitId":"Irminrics"},"content":"| `*`      | event planner           | archive old events                                         | view and take reference from old events                |","lastModifiedDate":"2023-02-26"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"inas0ng"},"content":"(For all use cases below, the **System** is the `PlanEase` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"inas0ng"},"content":"**Use case: Add a new event**","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"inas0ng"},"content":"1.  User requests to add a new event.","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"inas0ng"},"content":"2.  PlanEase shows a prompt to indicate that the event has been added successfully.","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"inas0ng"},"content":"- 1a. PlanEase detects the event description is missing.","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":348,"author":{"gitId":"inas0ng"},"content":"  - 1a1. PlanEase prompts User of invalid inputs.","lastModifiedDate":"2023-03-06"},{"lineNumber":349,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":350,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"inas0ng"},"content":"- 1b. PlanEase detects that the datetime range or format is not valid.","lastModifiedDate":"2023-03-06"},{"lineNumber":353,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":354,"author":{"gitId":"inas0ng"},"content":"  - 1b1. PlanEase prompts User of invalid inputs.","lastModifiedDate":"2023-03-06"},{"lineNumber":355,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":356,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":357,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":358,"author":{"gitId":"inas0ng"},"content":"- 1c. PlanEase detects that the User of entered less than or more than 2 datetime inputs.","lastModifiedDate":"2023-03-06"},{"lineNumber":359,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":360,"author":{"gitId":"inas0ng"},"content":"  - 1c1. PlanEase prompts User of invalid number of datetime inputs.","lastModifiedDate":"2023-03-06"},{"lineNumber":361,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":362,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":363,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":364,"author":{"gitId":"inas0ng"},"content":"- 1d. PlanEase detects that the User has used invalid prefix(es).","lastModifiedDate":"2023-03-06"},{"lineNumber":365,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":366,"author":{"gitId":"inas0ng"},"content":"  - 1d1. PlanEase prompts User of invalid prefix(es) used.","lastModifiedDate":"2023-03-06"},{"lineNumber":367,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":368,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":370,"author":{"gitId":"inas0ng"},"content":"- 1e. PlanEase detects that event already exists.","lastModifiedDate":"2023-03-06"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":372,"author":{"gitId":"inas0ng"},"content":"  - 1e1. PlanEase prompts User of duplicate event used.","lastModifiedDate":"2023-03-06"},{"lineNumber":373,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":374,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":375,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":376,"author":{"gitId":"inas0ng"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":377,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":378,"author":{"gitId":"inas0ng"},"content":"**Use case: List all events**","lastModifiedDate":"2023-03-06"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":380,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":382,"author":{"gitId":"inas0ng"},"content":"1.  User requests to list all events.","lastModifiedDate":"2023-03-06"},{"lineNumber":383,"author":{"gitId":"inas0ng"},"content":"2.  PlanEase shows a list of events.","lastModifiedDate":"2023-03-06"},{"lineNumber":384,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":385,"author":{"gitId":"inas0ng"},"content":"Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":386,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":387,"author":{"gitId":"inas0ng"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":389,"author":{"gitId":"inas0ng"},"content":"**Use case: Delete an event**","lastModifiedDate":"2023-03-06"},{"lineNumber":390,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":391,"author":{"gitId":"inas0ng"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":392,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":393,"author":{"gitId":"inas0ng"},"content":"1.  User requests to delete a specific event in the list","lastModifiedDate":"2023-03-06"},{"lineNumber":394,"author":{"gitId":"inas0ng"},"content":"2.  PlanEase deletes the event in the list and deletes all occurrences of the event tied to person in the address book, if any.","lastModifiedDate":"2023-03-06"},{"lineNumber":395,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":396,"author":{"gitId":"inas0ng"},"content":"Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":398,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":400,"author":{"gitId":"inas0ng"},"content":"- 1a. The given event index is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":401,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":402,"author":{"gitId":"inas0ng"},"content":"  - 1a1. PlanEase shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":404,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":406,"author":{"gitId":"inas0ng"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":407,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":408,"author":{"gitId":"inas0ng"},"content":"**Use case: Add an existing event to a new contact**","lastModifiedDate":"2023-03-06"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":410,"author":{"gitId":"inas0ng"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":411,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":412,"author":{"gitId":"inas0ng"},"content":"1.  User requests to add a new contact.","lastModifiedDate":"2023-03-06"},{"lineNumber":413,"author":{"gitId":"inas0ng"},"content":"2.  PlanEase shows a prompt to indicate that the contact has been added successfully.","lastModifiedDate":"2023-03-06"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"inas0ng"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":418,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":419,"author":{"gitId":"inas0ng"},"content":"- 1a. The given event index is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":421,"author":{"gitId":"inas0ng"},"content":"  - 1a1. PlanEase shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":422,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":423,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":424,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":425,"author":{"gitId":"inas0ng"},"content":"- 1b. The given contact name exists in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"inas0ng"},"content":"  - 1b1. PlanEase shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":430,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":431,"author":{"gitId":"inas0ng"},"content":"- 1c. The prefix(es) used are invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":432,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":433,"author":{"gitId":"inas0ng"},"content":"  - 1c1. PlanEase shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":434,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":435,"author":{"gitId":"inas0ng"},"content":"  Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"jerome-neo"},"content":"4.  Support for a standard Gregorian calendar.","lastModifiedDate":"2023-02-22"},{"lineNumber":443,"author":{"gitId":"Irminrics"},"content":"5.  Should be usable by a novice.","lastModifiedDate":"2023-02-26"},{"lineNumber":444,"author":{"gitId":"Irminrics"},"content":"6.  Should minimally support ASCII characters.","lastModifiedDate":"2023-02-26"},{"lineNumber":445,"author":{"gitId":"Irminrics"},"content":"7.  Must perform without failure in 95 percent of use cases during a month.","lastModifiedDate":"2023-02-26"},{"lineNumber":446,"author":{"gitId":"Irminrics"},"content":"8.  GUI color scheme should have high contrast and font size must not be too small, to aid those with vision impairments.","lastModifiedDate":"2023-02-26"},{"lineNumber":447,"author":{"gitId":"Irminrics"},"content":"9.  Application file size should not exceed (.jar/.zip) 100MB.","lastModifiedDate":"2023-02-26"},{"lineNumber":448,"author":{"gitId":"Irminrics"},"content":"10. Should only allow for 1 instance of the application running each time to ensure that data saved is consistent.","lastModifiedDate":"2023-02-26"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"jerome-neo"},"content":"- **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-02-22"},{"lineNumber":453,"author":{"gitId":"Irminrics"},"content":"- **Gregorian Calendar**: Solar calendar with 12 months of 28-31 days each, used in most parts of the world","lastModifiedDate":"2023-02-26"},{"lineNumber":454,"author":{"gitId":"Irminrics"},"content":"- **ASCII Characters**: A 7-bit character set containing 128 characters. It contains the numbers from 0-9, the upper and lower case English letters from A to Z, and some special characters","lastModifiedDate":"2023-02-26"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"venuslimm":2,"weilin1202":12,"jerome-neo":70,"-":303,"inas0ng":92,"Irminrics":28}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"PlanEase is a **desktop app tailored for event planners to organise and manage their contacts**. It is optimised for use via a Command Line Interface (CLI), while still retaining the familiar GUI from the address book. If you are a fast typist, PlanEase will accelerate your current workflow compared to your traditional address books.","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"1. Download the latest `planease.jar`(Coming soon!)","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your PlanEase application.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar planease.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"* `DATEIME` must be in this format: `DD-MM-YYYY HH:mm`.","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"Adds a person to the address book and adds existing event to this person if event index is specified.","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [evt/EVENT_INDEX]…​`","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"* Person name cannot exceed 50 characters.","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"* The event index refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"* The event index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"A person can have any number of events (including 0)","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` Adds person to the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"* `add n/Alex Yeoh p/89028392 e/alex@email.com a/Blk 142 Apple Street 23 evt/1` Adds 1st event to the new person `Alex Yeoh` in the address book.","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [evt/EVENT INDEX]…​`","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"* When editing tags, the tags will be added to the existing tags of the person i.e adding of tags is cumulative.","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"* You can remove all the person’s event tags by typing `evt/` without","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"    specifying any event index after it.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"*  `edit 2 n/Betsy Crower evt/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing event tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"weilin1202"},"content":"### Listing persons from an event: `listevcontact`","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"weilin1202"},"content":"Shows a list of persons in the address book whose event set contains the specified event.","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"weilin1202"},"content":"Format: `listevcontact EVENT_INDEX`","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"weilin1202"},"content":"* Lists all persons from the event at the specified `EVENT_INDEX` in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"weilin1202"},"content":"* The event index refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"weilin1202"},"content":"* The event index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"weilin1202"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"weilin1202"},"content":"* `listevent` followed by `listevcontact 2` lists all the persons whose event set contains the 2nd event in the event list.","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"venuslimm"},"content":"### Adding a new event : `addevent`","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"venuslimm"},"content":"Adds a new event with the given event name, start date time, and end date time.","lastModifiedDate":"2023-02-27"},{"lineNumber":167,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"Format: `addevent ev/EVENT_NAME from/DATETIME to/DATETIME`","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":170,"author":{"gitId":"venuslimm"},"content":"* Event name can be a combination of alphanumeric and punctuations with spaces.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"* Event name must begin with alphanumeric.","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"* Event name cannot exceed 50 characters.","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"venuslimm"},"content":"* Start date time cannot be after the end date time.","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"venuslimm"},"content":"Examples:","lastModifiedDate":"2023-02-27"},{"lineNumber":176,"author":{"gitId":"venuslimm"},"content":"* `addevent ev/Wedding Dinner from/01-05-2023 17:00 to/01-05-2023 21:00`","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"venuslimm"},"content":"* `addevent ev/Dinner from/01-05-2023 17:30 to/01-05-2023 19:30`","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":179,"author":{"gitId":"jerome-neo"},"content":"### Listing all events : `listevent`","lastModifiedDate":"2023-02-26"},{"lineNumber":180,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":181,"author":{"gitId":"jerome-neo"},"content":"Prints all the existing events in the address book.","lastModifiedDate":"2023-02-26"},{"lineNumber":182,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":183,"author":{"gitId":"jerome-neo"},"content":"Format: `listevent`","lastModifiedDate":"2023-02-26"},{"lineNumber":184,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":185,"author":{"gitId":"jerome-neo"},"content":"* Does not require any additional user arguments.","lastModifiedDate":"2023-02-26"},{"lineNumber":186,"author":{"gitId":"jerome-neo"},"content":"* Follow strictly to the command `listevent`.","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"jerome-neo"},"content":"Examples:","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"jerome-neo"},"content":"* `listevent` prints a list of events.","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"inas0ng"},"content":"### Deleting an event : `delevent`","lastModifiedDate":"2023-02-23"},{"lineNumber":192,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":193,"author":{"gitId":"inas0ng"},"content":"Deletes the specified event from the event list and deletes all occurrences of the event tied to persons in the address book, if any.","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":195,"author":{"gitId":"inas0ng"},"content":"Format: `delevent EVENT_INDEX`","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":197,"author":{"gitId":"inas0ng"},"content":"* Deletes the event at the specified `EVENT_INDEX` and all occurrences of the event tied to persons in the address book, if any.","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"inas0ng"},"content":"* The event index refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-02-23"},{"lineNumber":199,"author":{"gitId":"inas0ng"},"content":"* The event index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-02-23"},{"lineNumber":200,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"inas0ng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":202,"author":{"gitId":"inas0ng"},"content":"* `listevent` followed by `delevent 2` deletes the 2nd event in the event list and all occurrences of the 2nd event tied to persons in the address book, if any.","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":204,"author":{"gitId":"inas0ng"},"content":"### Editing an event : `editevent`","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"inas0ng"},"content":"Edits an existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"inas0ng"},"content":"Format: `editevent EVENT_INDEX [ev/EVENT_NAME] [from/DATETIME] [to/DATETIME]`","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"inas0ng"},"content":"* Edits the event at the specified `EVENT_INDEX` and edits the relevant event tag tied to all persons in the address book.","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"inas0ng"},"content":"* The event index refers to the index number shown in the displayed event list. The event index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"inas0ng"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"inas0ng"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"inas0ng"},"content":"* Edits will not allow start date time to be after the end date time.","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":216,"author":{"gitId":"inas0ng"},"content":"Examples:","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"inas0ng"},"content":"*  `editevent 1 ev/Birthday Party from/17-07-2023 12:00` Edits the event name and start datetime of the 1st event to be `Birthday Party` and `17-07-2023 12:00` respectively.","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"weilin1202"},"content":"**Add Contact** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [ev/EVENT_INDEX] …​` \u003cbr\u003e e.g., `add n/Alex Yeoh p/89028392 e/alex@email.com a/Blk 142 Apple Street 23 evt/1`","lastModifiedDate":"2023-03-19"},{"lineNumber":261,"author":{"gitId":"weilin1202"},"content":"**Add Event** | `addevent ev/EVENT_NAME from/DATETIME to/DATETIME` \u003cbr\u003e e.g., `addevent ev/Wedding Dinner from/01-05-2023 17:00 to/01-05-2023 21:00`","lastModifiedDate":"2023-03-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"Irminrics"},"content":"**Delete Contact** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-02-26"},{"lineNumber":264,"author":{"gitId":"weilin1202"},"content":"**Delete Event** | `delevent EVENT_INDEX` \u003cbr\u003e e.g., `delevent 2`","lastModifiedDate":"2023-03-19"},{"lineNumber":265,"author":{"gitId":"weilin1202"},"content":"**Edit Contact** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [evt/EVENT_INDEX]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2023-03-18"},{"lineNumber":266,"author":{"gitId":"weilin1202"},"content":"**Edit Event** | `editevent EVENT_INDEX [ev/EVENT_NAME] [from/DATETIME] [to/DATETIME]​`\u003cbr\u003e e.g.,`editevent 1 ev/Birthday Party from/17-07-2023 12:00`","lastModifiedDate":"2023-03-19"},{"lineNumber":267,"author":{"gitId":"Irminrics"},"content":"**List Contact** | `list`","lastModifiedDate":"2023-02-26"},{"lineNumber":268,"author":{"gitId":"Irminrics"},"content":"**List Event** | `listevent`","lastModifiedDate":"2023-02-26"},{"lineNumber":269,"author":{"gitId":"weilin1202"},"content":"**List Contact From event** | `listevcontact`","lastModifiedDate":"2023-03-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":272,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":273,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":275,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"venuslimm":14,"weilin1202":32,"jerome-neo":13,"-":174,"inas0ng":31,"Irminrics":11}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"AddressBook *-right-\u003e \"1\" UniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"UniqueEventList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"UniqueEventList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"UniqueEventList -right-\u003e \"*\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"Person -up-\u003e \"*\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"Event *--\u003e EventName","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"Event *--\u003e \"2\" DateTime","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jerome-neo":8,"-":16}},{"path":"docs/diagrams/DelEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"@startuml","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"!include style.puml","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"participant \":DelEventCommandParser\" as DelEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"participant \"d:DelEventCommand\" as DelEventCommand LOGIC_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"end box","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"end box","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"[-\u003e LogicManager : execute(\"delevent 1\")","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"activate LogicManager","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delevent 1\")","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"create DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"AddressBookParser -\u003e DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"activate DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"DelEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"deactivate DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"AddressBookParser -\u003e DelEventCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"activate DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"create DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"DelEventCommandParser -\u003e DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"activate DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"DelEventCommand --\u003e DelEventCommandParser : d","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"deactivate DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"DelEventCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"deactivate DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"DelEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"destroy DelEventCommandParser","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"LogicManager -\u003e DelEventCommand : execute()","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"activate DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"DelEventCommand -\u003e Model : deleteEvent(1)","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"activate Model","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"Model -\u003e AddressBook : deleteEvent(1)","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"activate AddressBook","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"deactivate AddressBook","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"Model --\u003e DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"deactivate Model","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"DelEventCommand -\u003e Model : deleteEventFromPersonList(1)","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"activate Model","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"Model -\u003e AddressBook : deleteEventFromPersonList(1)","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"activate AddressBook","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"deactivate AddressBook","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"Model --\u003e DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"deactivate Model","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"create CommandResult","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"DelEventCommand -\u003e CommandResult","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"activate CommandResult","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"CommandResult --\u003e DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"DelEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"deactivate DelEventCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"@enduml","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"inas0ng":88}},{"path":"docs/diagrams/FindEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"participant \":FindEventCommandParser\" as FindEventCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"participant \"d:FindEventCommand\" as FindEventCommand LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"participant \":EventNameContainsKeywordsPredicate\" as EventNameContainsKeywordsPredicate MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"[-\u003e LogicManager : execute(\"findevent concert\")","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"activate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"findevent concert\")","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"create FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"AddressBookParser -\u003e FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"activate FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"FindEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"deactivate FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"AddressBookParser -\u003e FindEventCommandParser : parse([\"concert\"])","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"activate FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"create EventNameContainsKeywordsPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"FindEventCommandParser -\u003e EventNameContainsKeywordsPredicate : EventNameContainsKeywordsPredicate([\"concert\"])","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"activate EventNameContainsKeywordsPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"EventNameContainsKeywordsPredicate--\u003e FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"deactivate EventNameContainsKeywordsPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"create FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"FindEventCommandParser -\u003e FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"activate FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"FindEventCommand --\u003e FindEventCommandParser","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"deactivate FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"FindEventCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"deactivate FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"FindEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"destroy FindEventCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"LogicManager -\u003e FindEventCommand : execute(model)","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"activate FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"create CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"FindEventCommand -\u003e CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"activate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"CommandResult --\u003e FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"FindEventCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"deactivate FindEventCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"jerome-neo":68}},{"path":"docs/diagrams/ListEvContactSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"@startuml","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"!include style.puml","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"participant \":ListEvContactCommandParser\" as ListEvContactCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"participant \"ec:ListEvContactCommand\" as ListEvContactCommand LOGIC_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"participant \"pr:EventSetContainsEventPredicate\" as EventSetContainsEventPredicate MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"end box","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"[-\u003e LogicManager : execute(\"listevcontact 1\")","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"activate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"listevcontact 1\")","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"create ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"AddressBookParser -\u003e ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"activate ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"deactivate ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"AddressBookParser -\u003e ListEvContactCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"activate ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"create ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommandParser -\u003e ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"activate ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand --\u003e ListEvContactCommandParser","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"deactivate ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommandParser --\u003e AddressBookParser : ec","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"deactivate ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"destroy ListEvContactCommandParser","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"AddressBookParser --\u003e LogicManager : ec","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"LogicManager -\u003e ListEvContactCommand : execute(model)","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"activate ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"create EventSetContainsEventPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand -\u003e EventSetContainsEventPredicate : EventSetContainsEventPredicate(1)","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"activate EventSetContainsEventPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"EventSetContainsEventPredicate --\u003e ListEvContactCommand :pr","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"deactivate EventSetContainsEventPredicate","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand -\u003e Model : updateFilteredPersonList(pr)","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"activate Model","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"Model --\u003e ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"deactivate Model","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"create CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand -\u003e CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"activate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"CommandResult --\u003e ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"deactivate ListEvContactCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"ListEvContactCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"destroy ListEvContactCommand","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"@enduml","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"weilin1202":80}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"Class Person {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    - eventSet: Set\u003cEvent\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"Class UniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"Class Event","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"Class EventName","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"Class DateTime","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"AddressBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"Event *--\u003e EventName","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"Event *--\u003e \"2\" DateTime","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"EventName -[hidden]right-\u003e DateTime","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"ModelManager -----\u003e\"~* filtered\" Event","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"venuslimm":15,"-":47}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jerome-neo":3,"-":41}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"Class EventListPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"Class EventCard","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"Irminrics"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"Irminrics"},"content":"PersonCard ...\u003e Model","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"Irminrics"},"content":"EventCard ...\u003e Model","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"Irminrics"},"content":"EventListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":59,"Irminrics":9}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"hide empty members","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"venuslimm":1,"-":74}},{"path":"docs/team/inas0ng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"title: Song Yi, Ina\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"### Project: PlanEase","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"PlanEase is designed for users who work as event planners.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"It provides a centralised platform for them to manage their work, contacts, and events information, making the process of searching for stakeholders and keeping track of details easier and more efficient.","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"* **New Feature**: Added the ability to... `to be added soon`.","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"  * What it does: allows the user to... `to be added soon`.","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"  * Justification: This feature improves the product significantly because a user can... `to be added soon`.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"  * Highlights: This enhancement affects `to be added soon`.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"* **New Feature**: Added a... `to be added soon`.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dinas0ng\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"  * Managed releases `to be added soon` on GitHub","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"    * Added documentation for the feature `delevent`","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    * Added implementation details of... `to be added soon`","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"jerome-neo":23,"inas0ng":18}},{"path":"docs/team/irminrics.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"title: Ang Jun Kang\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"### Project: PlanEase","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"PlanEase is designed for users who work as event planners.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"It provides a centralised platform for them to manage their work, contacts, and events information, making the process of searching for stakeholders and keeping track of details easier and more efficient.","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dirminrics\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"* **Contributions to the Developer Guide**","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Irminrics"},"content":"* **Contributions to the User Guide**","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"Irminrics"},"content":"  * to be added soon","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"-":16,"Irminrics":27}},{"path":"docs/team/jerome-neo.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"title: Jerome Neo\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"### Project: PlanEase","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"PlanEase is designed for event planners who prefer typing on their keyboards to retrieve information quickly.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"It provides a centralised platform for them to manage their work, contacts, and event information.","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"This application helps to streamline the process of searching for stakeholders\u0027 contact information and keeping track of important events.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003djerome-neo\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"* **Contributions to the Developer Guide**","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"* **Contributions to the User Guide**","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"  * [Update team information and images](https://github.com/AY2223S2-CS2103-W16-3/tp/pull/10)","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"  * to be added soon","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"  * to be added soon","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"jerome-neo":44}},{"path":"docs/team/venuslimm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"title: Lim Jia Yi Venus\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"### Project: PlanEase","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"PlanEase is designed for users who work as event planners.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"It provides a centralised platform for them to manage their work, contacts, and events information, making the process of searching for stakeholders and keeping track of details easier and more efficient.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"  * Credits: to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dvenuslimm\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"  * to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"* **Contributions to the Developer Guide**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"  * to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"* **Contributions to the User Guide**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"  * to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"  * to be added soon","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"  * [Add about us and edit DG](https://github.com/AY2223S2-CS2103-W16-3/tp/pull/4)","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"  * [Update team information and images](https://github.com/AY2223S2-CS2103-W16-3/tp/pull/10)","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"  * to be added soon","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"venuslimm":28,"jerome-neo":16}},{"path":"docs/team/weilin1202.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"title: Lin Weilin\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"### Project: PlanEase","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"PlanEase is designed for users who work as event planners.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"It provides a centralised platform for them to manage their work, contacts, and events information, making the process of searching for stakeholders and keeping track of details easier and more efficient.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"  * Credits: *{to be added soon}*","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"  * What it does: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"  * Justification: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"  * Highlights: to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"  * Credits: *{to be added soon}*","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dweilin1202\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"* **Enhancements implemented**:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"* **Contributions to the Developer Guide**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"* **Contributions to the User Guide**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"* **Contributions to team-based tasks**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"* **Review/mentoring contributions**","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"* **Contributions beyond the project team**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"  * to be added soon","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"weilin1202":29,"jerome-neo":16}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jerome-neo":1,"-":13,"inas0ng":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"Irminrics":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Irminrics"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Irminrics"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":81,"Irminrics":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"            + \"[\" + PREFIX_EVENT_SET + \"EVENT INDEX]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"            + PREFIX_EVENT_SET + \"1 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"            + PREFIX_EVENT_SET + \"2 \";","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    private final Set\u003cIndex\u003e eventIndexList;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"    public AddCommand(Person person, Set\u003cIndex\u003e eventIndexList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        this.toAdd \u003d person;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        this.eventIndexList \u003d eventIndexList;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"        if (!eventIndexList.isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"            Set\u003cEvent\u003e eventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"            List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"            for (Index eventIndex: eventIndexList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"                if (eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"                Event eventToAdd \u003d lastShownList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"                if (!eventSet.contains(eventToAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"                    eventSet.add(eventToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"            Person personWithEvent \u003d new Person(toAdd.getName(), toAdd.getPhone(), toAdd.getEmail(),","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"                    toAdd.getAddress(), eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"            model.addPerson(personWithEvent);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, personWithEvent));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weilin1202":31,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" * Adds an event to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public static final String COMMAND_WORD \u003d \"addevent\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_EVENT_NAME + \"NAME \"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_START_DATE_TIME + \"START DATETIME \"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_END_DATE_TIME + \"END DATETIME \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_EVENT_NAME + \"CEO\u0027s 50th Birthday Carnival \"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_START_DATE_TIME + \"17-07-2023 12:00 \"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"            + PREFIX_END_DATE_TIME + \"23-07-2023 22:00 \";","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"     * Creates an AddECommand to add the specified {@code Event}","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Irminrics"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd));","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":55,"Irminrics":5}},{"path":"src/main/java/seedu/address/logic/commands/DelEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":" * Deletes an event using its index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"public class DelEventCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    public static final String COMMAND_WORD \u003d \"delevent\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"            + \": Deletes an event using it\u0027s index from the address book \"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"            + \"and all occurrences of the event tied to persons in the address book, if any\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"            + \"Parameters: EVENTINDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    public DelEventCommand(Index targetIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        model.deleteEventFromPersonList(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"                || (other instanceof DelEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"                \u0026\u0026 targetIndex.equals(((DelEventCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":56}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"            + \"Event tags are cumulative.\"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"            + \"[\" + PREFIX_EVENT_SET + \"EVENT INDEX]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    private final Optional\u003cSet\u003cIndex\u003e\u003e eventIndexSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor, Optional\u003cSet\u003cIndex\u003e\u003e eventIndexSet) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"        this.eventIndexSet \u003d eventIndexSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        Person personToEdit \u003d lastShownPersonList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"        //eventIndexSet not present means \"evt/\" is not called","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"        if (eventIndexSet.isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"            Set\u003cIndex\u003e updatedEventIndex \u003d eventIndexSet.orElse(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"            // updatedEventIndex is empty if \"evt/\" is called","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"            // updatedEventIndex contains Set of Index if \"evt/Index\" is called","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"            Set\u003cEvent\u003e originalEventSet \u003d editedPerson.getEventSet();","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"            editedPerson \u003d handleIndexChange(updatedEventIndex, originalEventSet, editedPerson, lastShownEventList);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"     * Creates and returns a {@code Person} with the updated Event Set changes","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"     * Adds additional events to the person to be edited if event set is edited","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"     * Clear all events of the person to be edited if only prefix_event_set is present without the event index","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"    public Person handleIndexChange(Set\u003cIndex\u003e updatedEventIndex, Set\u003cEvent\u003e originalEventSet, Person editedPerson,","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"                                List\u003cEvent\u003e lastShownEventList) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"        if (!updatedEventIndex.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"            for (Index eventIndex: updatedEventIndex) {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"                if (eventIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"                Event eventToAdd \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"                if (!originalEventSet.contains(eventToAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"                    originalEventSet.add(eventToAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"            Person personWithEvent \u003d editedPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"            editedPerson \u003d new Person(personWithEvent.getName(), personWithEvent.getPhone(), personWithEvent.getEmail(),","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"                    personWithEvent.getAddress(), originalEventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"            Person personToClearTags \u003d editedPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"weilin1202"},"content":"            editedPerson \u003d new Person(personToClearTags.getName(), personToClearTags.getPhone(),","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"weilin1202"},"content":"                    personToClearTags.getEmail(), personToClearTags.getAddress(), new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"weilin1202"},"content":"        return editedPerson;","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"weilin1202"},"content":"        Set\u003cEvent\u003e updatedTags \u003d personToEdit.getEventSet();","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"weilin1202"},"content":"        private Set\u003cEvent\u003e eventSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":187,"author":{"gitId":"weilin1202"},"content":"            setEventSet(toCopy.eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"weilin1202"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"weilin1202"},"content":"         * Sets {@code events} to this object\u0027s {@code eventSet}.","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"weilin1202"},"content":"         * A defensive copy of {@code eventSet} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"weilin1202"},"content":"        public void setEventSet(Set\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"weilin1202"},"content":"            this.eventSet \u003d (events !\u003d null) ? new HashSet\u003c\u003e(events) : null;","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"weilin1202"},"content":"         * Returns an event set","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"weilin1202"},"content":"         * Returns {@code Optional#empty()} if {@code eventSet} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"weilin1202"},"content":"        public Optional\u003cSet\u003cEvent\u003e\u003e getEventSet() {","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"weilin1202"},"content":"            return (eventSet !\u003d null) ? Optional.of(eventSet) : Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":265,"author":{"gitId":"weilin1202"},"content":"                    \u0026\u0026 getEventSet().equals(e.getEventSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"weilin1202":62,"-":205,"inas0ng":1}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":" * Edits the details of an existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    public static final String COMMAND_WORD \u003d \"editevent\";","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"            + \"[\" + PREFIX_EVENT_NAME + \"NAME] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"            + \"[\" + PREFIX_START_DATE_TIME + \"START DATETIME] \"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"            + \"[\" + PREFIX_END_DATE_TIME + \"END DATETIME]...\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"            + PREFIX_EVENT_NAME + \"Birthday Party \"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"            + PREFIX_START_DATE_TIME + \"16-07-2023 12:00 \";","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"    private final Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"        Event eventToEdit \u003d lastShownEventList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"        model.setEventFromPersonList(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor)","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"            throws CommandException {","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"        EventName updatedEventName \u003d editEventDescriptor.getEventName().orElse(eventToEdit.getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"        DateTime updatedStartDateTime \u003d editEventDescriptor.getStartDateTime().orElse(eventToEdit.getStartDateTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        DateTime updatedEndDateTime \u003d editEventDescriptor.getEndDateTime().orElse(eventToEdit.getEndDateTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"        if (!DateTime.isValidDateRange(updatedStartDateTime.toString(), updatedEndDateTime.toString())) {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"            throw new CommandException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"        return new Event(updatedEventName, updatedStartDateTime, updatedEndDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"        // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"        private EventName eventName;","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"        private DateTime startDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        private DateTime endDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"        /**","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"         */","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"            setStartDateTime(toCopy.startDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"            setEndDateTime(toCopy.endDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"        /**","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"         */","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"            return CollectionUtil.isAnyNonNull(eventName, startDateTime, endDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        public void setEventName(EventName eventName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"            this.eventName \u003d eventName;","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"        public Optional\u003cEventName\u003e getEventName() {","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"        public void setStartDateTime(DateTime startDateTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"            this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"        public Optional\u003cDateTime\u003e getStartDateTime() {","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"            return Optional.ofNullable(startDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"        public void setEndDateTime(DateTime endDateTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"            this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"        public Optional\u003cDateTime\u003e getEndDateTime() {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"            return Optional.ofNullable(endDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"inas0ng"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"                return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"                return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"            // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"            return getEventName().equals(e.getEventName())","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"                    \u0026\u0026 getStartDateTime().equals(e.getStartDateTime())","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"                    \u0026\u0026 getEndDateTime().equals(e.getEndDateTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":189}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":" * Finds and lists all events in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    public static final String COMMAND_WORD \u003d \"findevent\";","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"            + \"Example: \" + COMMAND_WORD + \"Black Pink World Tour [Born Pink] Singapore\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    private final EventNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    public FindEventCommand(EventNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"                || (other instanceof FindEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"                \u0026\u0026 predicate.equals(((FindEventCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jerome-neo":43}},{"path":"src/main/java/seedu/address/logic/commands/ListAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":" * Lists all persons and events in the address book to the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"    public static final String COMMAND_WORD \u003d \"listall\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and events\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Irminrics"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Irminrics":27}},{"path":"src/main/java/seedu/address/logic/commands/ListEvContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.person.EventSetContainsEventPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":" * Lists all persons with the target event in their event sets.","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"public class ListEvContactCommand extends Command {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public static final String COMMAND_WORD \u003d \"listevcontact\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"            + \": List all the contacts from an event identified by it\u0027s index number\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"            + \"Parameters: EVENT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"    public static final String MESSAGE_LIST_EVENT_CONTACT_SUCCESS \u003d \"Listed all contacts from the event : %1$s\";","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    private EventSetContainsEventPredicate predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"    public ListEvContactCommand(Index targetIndex) {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        Event targetEvent \u003d lastShownEventList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        predicate \u003d new EventSetContainsEventPredicate(targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        return new CommandResult(String.format(MESSAGE_LIST_EVENT_CONTACT_SUCCESS, targetEvent));","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"                || (other instanceof ListEvContactCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"                \u0026\u0026 targetIndex.equals(((ListEvContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":57}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"public class ListEventCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    public static final String COMMAND_WORD \u003d \"listevent\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":24}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"                        PREFIX_ADDRESS, PREFIX_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e eventIndexList \u003d ParserUtil.parseEventIndex(argMultimap.getAllValues(PREFIX_EVENT_SET));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        Set\u003cEvent\u003e eventList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"        Person person \u003d new Person(name, phone, email, address, eventList);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        return new AddCommand(person, eventIndexList);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"weilin1202":10,"-":54}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":" * Parser for AddEventCommand. Parses the command based on the prefixes and values specified by user.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_START_DATE_TIME, PREFIX_END_DATE_TIME);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_NAME, PREFIX_START_DATE_TIME, PREFIX_END_DATE_TIME)","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultimap.getValue(PREFIX_EVENT_NAME).get());","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        DateTime startDatetime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATE_TIME).get());","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        DateTime endDatetime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATE_TIME).get());","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        if (!DateTime.isValidDateRange(startDatetime.toString(), endDatetime.toString())) {","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        Event event \u003d new Event(eventName, startDatetime, endDatetime);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":50,"jerome-neo":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.DelEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"import seedu.address.logic.commands.ListAllCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.commands.ListEvContactCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"            return new ListEventCommand();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        case DelEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"            return new DelEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"        case ListEvContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"            return new ListEvContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"Irminrics"},"content":"        case ListAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"Irminrics"},"content":"            return new ListAllCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"venuslimm":3,"weilin1202":4,"jerome-neo":4,"-":76,"inas0ng":13,"Irminrics":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public static final Prefix PREFIX_EVENT_SET \u003d new Prefix(\"evt/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    /* Prefix definitions for events */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public static final Prefix PREFIX_EVENT_NAME \u003d new Prefix(\"ev/\");","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public static final Prefix PREFIX_START_DATE_TIME \u003d new Prefix(\"from/\");","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public static final Prefix PREFIX_END_DATE_TIME \u003d new Prefix(\"to/\");","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"venuslimm":4,"weilin1202":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DelEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.DelEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"public class DelEventCommandParser implements Parser\u003cDelEventCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"     * Parses the given {@code String} of arguments in the context of the DelEventCommand","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"     * and returns a DelEventCommand object for execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    public DelEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"            return new DelEventCommand(index);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DelEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"                        PREFIX_ADDRESS, PREFIX_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"        Optional\u003cSet\u003cIndex\u003e\u003e eventIndexSet \u003d parseIndexForEdit(argMultimap.getAllValues(PREFIX_EVENT_SET));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"        parseEventForEdit(argMultimap.getAllValues(PREFIX_EVENT_SET)).ifPresent(editPersonDescriptor::setEventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        return new EditCommand(index, editPersonDescriptor, eventIndexSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"     * Parses {@code Collection\u003cString\u003e index} into a {@code Set\u003cIndex\u003e} if {@code index} is non-empty.","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"     * If {@code index} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"     * {@code Set\u003cIndex\u003e} containing zero index.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"    private Optional\u003cSet\u003cIndex\u003e\u003e parseIndexForEdit(Collection\u003cString\u003e index) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"        assert index !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"        if (index.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        Collection\u003cString\u003eindexSet \u003d index.size() \u003d\u003d 1 \u0026\u0026 index.contains(\"\") ? Collections.emptySet() : index;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"        return Optional.of(ParserUtil.parseEventIndex(indexSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"     * Serves as a function to check whether prefix_event_tag is called","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"    private Optional\u003cSet\u003cEvent\u003e\u003e parseEventForEdit(Collection\u003cString\u003e event) {","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"        assert event !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"        if (event.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"        return Optional.of(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"weilin1202":28,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     * and returns an EditEventCommand object for execution.","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EVENT_NAME, PREFIX_START_DATE_TIME, PREFIX_END_DATE_TIME);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        Index index;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_NAME).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"            editEventDescriptor.setEventName(ParserUtil.parseEventName(argMultimap","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"                    .getValue(PREFIX_EVENT_NAME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        if (argMultimap.getValue(PREFIX_START_DATE_TIME).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"            editEventDescriptor.setStartDateTime(ParserUtil.parseDateTime(argMultimap","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"                    .getValue(PREFIX_START_DATE_TIME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        if (argMultimap.getValue(PREFIX_END_DATE_TIME).isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"            editEventDescriptor.setEndDateTime(ParserUtil.parseDateTime(argMultimap","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"                    .getValue(PREFIX_END_DATE_TIME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":57}},{"path":"src/main/java/seedu/address/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":" * Parses input arguments and creates a new FindEventCommand object","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"public class FindEventCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"     * and returns a FindEventCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        return new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jerome-neo":33}},{"path":"src/main/java/seedu/address/logic/parser/ListEvContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.commands.ListEvContactCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":" * Parses input arguments and creates a new ListEvContactCommand object","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"public class ListEvContactCommandParser implements Parser\u003cListEvContactCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"     * Parses the given {@code String} of arguments in the context of the ListEvContactCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"     * and returns a ListEvContactCommand object for execution.","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public ListEvContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        try {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"            return new ListEvContactCommand(index);","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEvContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":27}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"     * Parses {@code Collection\u003cString\u003e eventIndexTags} into a {@code Set\u003cIndex\u003e}.","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"    public static Set\u003cIndex\u003e parseEventIndex(Collection\u003cString\u003e eventIndexTags) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"        requireNonNull(eventIndexTags);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"        final Set\u003cIndex\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"        for (String indexTag : eventIndexTags) {","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"            tagSet.add(parseIndex(indexTag));","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"        return tagSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"    public static EventName parseEventName(String name) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"        if (!EventName.isValidName(trimmedName)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"        return new EventName(trimmedName);","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"venuslimm"},"content":"     * Parses a {@code String dateTime} into a {@code DateTime}.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"     * @throws ParseException if the given {@code dateTime} is invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"venuslimm"},"content":"    public static DateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"venuslimm"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"venuslimm"},"content":"        if (!DateTime.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"venuslimm"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"venuslimm"},"content":"        return new DateTime(trimmedDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"venuslimm":21,"weilin1202":11,"-":108}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Irminrics"},"content":"    //// event-level operations","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Irminrics"},"content":"     * Returns true if an event with the same date time information as {@code event} exists in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Irminrics"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Irminrics"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Irminrics"},"content":"        return events.contains(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Irminrics"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Irminrics"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Irminrics"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Irminrics"},"content":"        events.add(e);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"        events.remove(key);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"     * Removes {@code eventToDelete} from this {@code AddressBook}.","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"     * {@code eventToDelete} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"    public void deleteEventFromPersonList(Event eventToDelete) {","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        for (Person personToCheck: getPersonList()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"            if (personToCheck.getEventSet().contains(eventToDelete)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"                // Person needs to have the event tag deleted","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"                Set\u003cEvent\u003e editedEventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"                for (Event eventToCheck : personToCheck.getEventSet()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"                    if (!eventToCheck.equals(eventToDelete)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"                        // Event tags that are not deleted will not be removed","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"                        editedEventSet.add(eventToCheck);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"                Person editedPerson \u003d new Person(personToCheck.getName(), personToCheck.getPhone(),","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"                        personToCheck.getEmail(), personToCheck.getAddress(), editedEventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"                persons.setPerson(personToCheck, editedPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"     * Replaces the given event {@code target} in the event set of all persons in address book with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"    public void setEventFromPersonList(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"        for (Person personToCheck: getPersonList()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"            if (personToCheck.getEventSet().contains(target)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"inas0ng"},"content":"                // Person needs to have the event tag replaced","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"                Set\u003cEvent\u003e editedEventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"                for (Event eventToCheck : personToCheck.getEventSet()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"                    if (!eventToCheck.equals(target)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"                        // Event tags that are not edited will not be removed","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"                        editedEventSet.add(eventToCheck);","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"                    } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"                        // Event tag that is being edited will be replaced","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"                        editedEventSet.add(editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"                    }","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"                }","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"                Person editedPerson \u003d new Person(personToCheck.getName(), personToCheck.getPhone(),","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"                        personToCheck.getEmail(), personToCheck.getAddress(), editedEventSet);","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"                persons.setPerson(personToCheck, editedPerson);","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"inas0ng"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"inas0ng"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"inas0ng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"inas0ng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"inas0ng"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"inas0ng"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons \"","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"inas0ng"},"content":"                + events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":213,"author":{"gitId":"jerome-neo"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":214,"author":{"gitId":"jerome-neo"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":215,"author":{"gitId":"jerome-neo"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-04"},{"lineNumber":216,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":217,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":223,"author":{"gitId":"Irminrics"},"content":"        //TODO: compare events here","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"venuslimm":4,"jerome-neo":13,"-":118,"inas0ng":75,"Irminrics":20}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"     * Deletes the given event {@code eventToDelete} from all persons in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"     * {@code eventToDelete} must exist in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"    void deleteEventFromPersonList(Event eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"     * Replaces the given event {@code target} with {@code editedEvent} for all persons in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"     * The person identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"    void setEventFromPersonList(Event target, Event editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"     * Returns true if an event with the same date time information as {@code event} exists in the address book.","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"     * Adds the given event.","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"     * {@code event} must not already exist in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"venuslimm":12,"-":87,"inas0ng":38}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"    public void deleteEventFromPersonList(Event eventToDelete) {","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"        addressBook.deleteEventFromPersonList(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"    public void setEventFromPersonList(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"        addressBook.setEventFromPersonList(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Irminrics"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Irminrics"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Irminrics"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Irminrics"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Irminrics"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"        addressBook.removeEvent(target);","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":171,"author":{"gitId":"Irminrics"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"Irminrics"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"Irminrics"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"Irminrics"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"Irminrics"},"content":"        return filteredEvents;","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"Irminrics"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Utils \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":206,"author":{"gitId":"jerome-neo"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"jerome-neo"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"venuslimm":1,"jerome-neo":2,"-":148,"inas0ng":34,"Irminrics":24}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"jerome-neo":2,"-":16}},{"path":"src/main/java/seedu/address/model/event/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" * Represents an Event\u0027s start or end date time in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"public class DateTime {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"            \"Date times should follow this format: DD-MM-YYYY HH:mm and only values within valid range are allowed.\";","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public final String dateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * Constructs a {@code DateTime}.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"     * @param dateTime A valid date-time.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"        checkArgument(isValidDateTime(dateTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * Returns true if a given string is a valid date time.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"            LocalDateTime validDateTime \u003d LocalDateTime.parse(test, formatter);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"     * Returns true if a valid startDate is earlier than or equal to a valid endDate.","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    public static boolean isValidDateRange(String startDate, String endDate) {","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        if (!isValidDateTime(startDate) || !isValidDateTime(endDate)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"            return false;","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"        LocalDateTime startDateTime \u003d LocalDateTime.parse(startDate, formatter);","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        LocalDateTime endDateTime \u003d LocalDateTime.parse(endDate, formatter);","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        return startDateTime.equals(endDateTime) || startDateTime.isBefore(endDateTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        return dateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"                || (other instanceof DateTime // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 dateTime.equals(((DateTime) other).dateTime)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"        return dateTime.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":57,"jerome-neo":13,"inas0ng":1}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"public class Event {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    private final EventName name;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    private final DateTime startDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    private final DateTime endDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    public Event(EventName name, DateTime startDateTime, DateTime endDateTime) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        requireAllNonNull(name, startDateTime, endDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public EventName getName() {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        return name;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public DateTime getStartDateTime() {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        return startDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    public DateTime getEndDateTime() {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        return endDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"                \u0026\u0026 otherEvent.getStartDateTime().equals(getStartDateTime())","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"                \u0026\u0026 otherEvent.getEndDateTime().equals(getEndDateTime());","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"     * Returns true if both events have the same name and start and end date times.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"            return true;","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"            return false;","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 otherEvent.getStartDateTime().equals(getStartDateTime())","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 otherEvent.getEndDateTime().equals(getEndDateTime());","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"        return Objects.hash(name, startDateTime, endDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"        builder.append(getName())","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"                .append(\"; Start Date Time: \")","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"                .append(getStartDateTime())","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"                .append(\"; End Date Time: \")","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"                .append(getEndDateTime());","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":87,"Irminrics":3}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"public class EventName {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"    public static final int CHAR_LIMIT \u003d 50;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"            \"Event names should only contain alphanumeric and punctuations. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"            + \"It should not be blank and contain punctuations only. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"            + \"It should only begin with alphanumeric characters. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"            + \"It should not exceed \" + CHAR_LIMIT + \" characters. \";","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    /*","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"     * The first character of the event name must not be a whitespace or any other non-alphanumeric characters","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\p{Punct} ]*\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public final String name;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"     *","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public EventName(String name) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d CHAR_LIMIT;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"        return name;","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"                || (other instanceof EventName // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 name.equals(((EventName) other).name)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"        return name.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":57,"inas0ng":4}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" * Tests that an {@code Event}\u0027s {@code EventName} matches any of the keywords given.","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().toString(), keyword));","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"                || (other instanceof EventNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"                \u0026\u0026 keywords.equals(((EventNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":31}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of an event uses Event#equals(Object) so","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":" *","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":" *","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"     * Adds an event to the list.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"        // To check if there is duplicate event here","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Irminrics"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"    public boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"jerome-neo"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"jerome-neo"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"jerome-neo"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"jerome-neo"},"content":"                    return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"jerome-neo"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"jerome-neo"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"jerome-neo"},"content":"        return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":67,"jerome-neo":31,"inas0ng":33,"Irminrics":2}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":" * identity).","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"jerome-neo":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":6}},{"path":"src/main/java/seedu/address/model/person/EventSetContainsEventPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":" * Tests if a {@code Person}\u0027s {@code EventSet} contains target event.","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"public class EventSetContainsEventPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"    private final Event targetEvent;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"    public EventSetContainsEventPredicate(Event targetEvent) {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"        this.targetEvent \u003d targetEvent;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"        return person.getEventSet().contains(targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"                || (other instanceof EventSetContainsEventPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"                \u0026\u0026 targetEvent.equals(((EventSetContainsEventPredicate) other).targetEvent)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":27}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"    public static final int CHAR_LIMIT \u003d 50;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank. \"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"            + \"It should not exceed \" + CHAR_LIMIT + \" characters. \";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d CHAR_LIMIT;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":57,"inas0ng":4}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    private final Set\u003cEvent\u003e eventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cEvent\u003e eventSets) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        requireAllNonNull(name, phone, email, address, eventSets);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"        this.eventSet.addAll(eventSets);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"     * Returns a mutable event set","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"    public Set\u003cEvent\u003e getEventSet() {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        return eventSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"                \u0026\u0026 otherPerson.getEventSet().equals(getEventSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"        return Objects.hash(name, phone, email, address, eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"        Set\u003cEvent\u003e eventSet \u003d getEventSet();","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"        if (!eventSet.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"            builder.append(\"; Event Set: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"            eventSet.forEach(builder::append);","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"weilin1202":15,"-":107}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"                getEventSet(new Event(new EventName(\"Concert A\"), new DateTime(\"01-05-2023 17:00\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"                        new DateTime(\"01-05-2023 18:00\")))),","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"                getEventSet(new Event(new EventName(\"Concert B\"), new DateTime(\"02-05-2023 17:00\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"                        new DateTime(\"02-05-2023 18:00\")))),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"                getEventSet()),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"                getEventSet()),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"                getEventSet()),","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"                getEventSet())","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        return new Event[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"            new Event(new EventName(\"BLACKPINK World Tour - Born Pink\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"13-05-2023 19:30\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"13-05-2023 21:30\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"            new Event(new EventName(\"Disney On Ice presents Mickey and Friends\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"11-03-2023 17:00\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"11-03-2023 19:00\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"            new Event(new EventName(\"Louis Tomlinson: Faith In The Future World Tour\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"27-04-2023 19:30\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"                    new DateTime(\"27-04-2023 21:30\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"            new Event(new EventName(\"Concert A\"), new DateTime(\"01-05-2023 17:00\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"                new DateTime(\"01-05-2023 18:00\")),","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"            new Event(new EventName(\"Concert B\"), new DateTime(\"02-05-2023 17:00\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"                 new DateTime(\"02-05-2023 18:00\"))","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"    public static Set\u003cEvent\u003e getEventSet(Event... events) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        return Arrays.stream(events).collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"weilin1202":10,"jerome-neo":21,"-":52}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    private final String eventName;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    private final String startDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"    private final String endDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code eventName}, {@code startDateTime}","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"     * and {@code endDateTime}.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"eventName\") String eventName,","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"                            @JsonProperty(\"startDateTime\") String startDateTime,","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"                            @JsonProperty(\"endDateTime\") String endDateTime) {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        eventName \u003d source.getName().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        startDateTime \u003d source.getStartDateTime().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        endDateTime \u003d source.getEndDateTime().toString();","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        if (!EventName.isValidName(eventName)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        if (!DateTime.isValidDateTime(startDateTime) || !DateTime.isValidDateTime(endDateTime)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"        if (!DateTime.isValidDateRange(startDateTime, endDateTime)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        EventName nameOfEvent \u003d new EventName(eventName);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        DateTime dateOfStart \u003d new DateTime(startDateTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        DateTime dateOfEnd \u003d new DateTime(endDateTime);","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        return new Event(nameOfEvent, dateOfStart, dateOfEnd);","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jerome-neo":66}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    private final List\u003cJsonAdaptedEvent\u003e eventSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"            this.eventSet.addAll(events);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        eventSet.addAll(source.getEventSet().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"                .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        final List\u003cEvent\u003e personEventSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"        for (JsonAdaptedEvent event : eventSet) {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"            personEventSet.add(event.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"        final Set\u003cEvent\u003e modelEventSet \u003d new HashSet\u003c\u003e(personEventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelEventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weilin1202":12,"-":97}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"Irminrics"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Irminrics"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Irminrics"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weilin1202":2,"jerome-neo":11,"-":59,"Irminrics":3}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"    private static final String STARTDATE_LABEL \u003d \"Start Date: \";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"    private static final String ENDDATE_LABEL \u003d \"End Date: \";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Irminrics"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"    public final Event event;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Irminrics"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Irminrics"},"content":"    private Label name;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Irminrics"},"content":"    private Label id;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"    private Label startDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"    private Label endDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Irminrics"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Irminrics"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Irminrics"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"        name.setText(event.getName().name);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"        startDateTime.setText(STARTDATE_LABEL + event.getStartDateTime().dateTime);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"        endDateTime.setText(ENDDATE_LABEL + event.getEndDateTime().dateTime);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Irminrics"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Irminrics"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Irminrics"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Irminrics"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Irminrics"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Irminrics"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Irminrics"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Irminrics"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Irminrics"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Irminrics"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Irminrics"},"content":"        // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Irminrics"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Irminrics"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Irminrics"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Irminrics":70}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Irminrics"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Irminrics"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Irminrics"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Irminrics"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Irminrics"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Irminrics"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Irminrics"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Irminrics"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"                setText(null);","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Irminrics"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Irminrics"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Irminrics":46}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"Irminrics"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"Irminrics"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"Irminrics"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"Irminrics"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"Irminrics"},"content":"        return eventListPanel;","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":196,"Irminrics":11}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        person.getEventSet().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"                .sorted(Comparator.comparing(event -\u003e event.getName().toString()))","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"                .forEach(event -\u003e tags.getChildren().add(new Label(event.getName().toString())));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weilin1202":3,"-":74}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"      \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":7,"Irminrics":5}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"Irminrics"},"content":".pane-without-border {","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: #b7b7b7;","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"Irminrics"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Irminrics"},"content":"    -fx-border-radius: 10px;","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"Irminrics"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"Irminrics"},"content":".text-area .scroll-pane {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"Irminrics"},"content":".text-area .scroll-pane .viewport{","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"Irminrics"},"content":".text-area .scroll-pane .content{","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":300,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-20"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"Irminrics"},"content":"    -fx-background-color: #d9d9d9;","lastModifiedDate":"2023-03-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"Irminrics"},"content":"    -fx-background-radius: 10px;","lastModifiedDate":"2023-03-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"Irminrics"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"-":338,"Irminrics":22}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"85.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Irminrics"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Irminrics"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"               \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Irminrics"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Irminrics"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Irminrics"},"content":"      \u003cLabel fx:id\u003d\"startDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$startDateTime\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Irminrics"},"content":"      \u003cLabel fx:id\u003d\"endDateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$endDateTime\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Irminrics"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Irminrics"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Irminrics"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Irminrics":42}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Irminrics":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"PlanEase\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"            \u003cHBox VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"              \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"                  \u003cLabel text\u003d\"Contacts\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"Irminrics"},"content":"                           \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Irminrics"},"content":"                        \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"                  \u003cVBox fx:id\u003d\"eventList\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"                        \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Irminrics"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Irminrics"},"content":"                        \u003cLabel text\u003d\"Events\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Irminrics"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Irminrics"},"content":"                              \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Irminrics"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Irminrics"},"content":"                        \u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Irminrics"},"content":"                        \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Irminrics"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Irminrics"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Irminrics"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Irminrics"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Irminrics"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Irminrics"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-without-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Irminrics"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                    \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"jerome-neo":2,"-":50,"Irminrics":28}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":35,"Irminrics":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"      \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"Irminrics":6}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"    public void execute_deleteCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"    public void execute_delEventCommandExecutionError_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"        String delEventCommand \u003d \"delevent 9\";","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        assertCommandException(delEventCommand, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"    public void execute_validListCommand_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"    public void execute_validListEventCommand_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"        String listEventCommand \u003d ListEventCommand.COMMAND_WORD;","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(listEventCommand, ListEventCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withoutEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Irminrics"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Irminrics"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"weilin1202":1,"-":160,"inas0ng":15,"Irminrics":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_FIRST_EVENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_SECOND_EVENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, INDEX_SET_NO_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        String expectedString \u003d String.format(AddCommand.MESSAGE_SUCCESS, validPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        assertCommandSuccess(addCommand, model, expectedString, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"    public void execute_newPersonWithEvent_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        Person validPerson \u003d new PersonBuilder().withEventSet(CARNIVAL).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, INDEX_SET_SECOND_EVENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"        String expectedString \u003d String.format(AddCommand.MESSAGE_SUCCESS, validPerson);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        assertCommandSuccess(addCommand, model, expectedString, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"        assertCommandFailure(new AddCommand(personInList, INDEX_SET_FIRST_EVENT), model,","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"weilin1202":24,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_FIRST_EVENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null, INDEX_SET_NO_EVENT));","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson, INDEX_SET_NO_EVENT).execute(modelStub);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"    public void execute_personWithEventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"        Person validPerson \u003d new PersonBuilder().withEventSet(WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson, INDEX_SET_FIRST_EVENT).execute(modelStub);","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson),","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, INDEX_SET_NO_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"    public void execute_duplicatePersonWithEvent_throwsCommandException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"        Person validPerson \u003d new PersonBuilder().withEventSet(WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, INDEX_SET_FIRST_EVENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"    public void execute_invalidEventIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e outOfBoundIndexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"        outOfBoundIndexSet.add(outOfBoundIndex);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"        Person validPerson \u003d new PersonBuilder().withEventSet(WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson, outOfBoundIndexSet);;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"        assertCommandFailure(addCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice, INDEX_SET_NO_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob, INDEX_SET_NO_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice, INDEX_SET_NO_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"inas0ng"},"content":"        public void deleteEventFromPersonList(Event eventToDelete) {","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"inas0ng"},"content":"        public void setEventFromPersonList(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":220,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"venuslimm"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-02"},{"lineNumber":222,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-02"},{"lineNumber":223,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":225,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":226,"author":{"gitId":"venuslimm"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-02-28"},{"lineNumber":227,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":228,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"inas0ng"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":233,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":234,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":235,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":236,"author":{"gitId":"inas0ng"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":237,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":239,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":240,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"inas0ng"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":242,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":243,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":244,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":245,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"inas0ng"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"weilin1202"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d (ArrayList\u003cEvent\u003e) TypicalEvents.getTypicalEvents();","lastModifiedDate":"2023-03-10"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"weilin1202"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":289,"author":{"gitId":"weilin1202"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-10"},{"lineNumber":290,"author":{"gitId":"weilin1202"},"content":"            return FXCollections.observableList(eventsAdded);","lastModifiedDate":"2023-03-10"},{"lineNumber":291,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":292,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"venuslimm":11,"weilin1202":65,"-":192,"inas0ng":30}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        AddEventCommandTest.ModelStubAcceptingEventAdded modelStub \u003d new AddEventCommandTest","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"                .ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Irminrics"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"        AddEventCommandTest.ModelStub modelStub \u003d new AddEventCommandTest.ModelStubWithEvent(validEvent);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"        assertThrows(CommandException.class, AddEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Irminrics"},"content":"                addEventCommand.execute(modelStub));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    public void equals() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"        Event carnival \u003d new EventBuilder().withName(\"Carnival\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        Event sportsDay \u003d new EventBuilder().withName(\"20th Sports Day @ Sports Hub\").build();","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"        AddEventCommand addCarnivalCommand \u003d new AddEventCommand(carnival);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"        AddEventCommand addSportsDayCommand \u003d new AddEventCommand(sportsDay);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"        assertTrue(addCarnivalCommand.equals(addCarnivalCommand));","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"        AddEventCommand addCarnivalCommandCopy \u003d new AddEventCommand(carnival);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"        assertTrue(addCarnivalCommand.equals(addCarnivalCommandCopy));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"        assertFalse(addCarnivalCommand.equals(22));","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"        assertFalse(addCarnivalCommand.equals(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        assertFalse(addCarnivalCommand.equals(addSportsDayCommand));","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"venuslimm"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"venuslimm"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"venuslimm"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"venuslimm"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        public void deleteEventFromPersonList(Event eventToDelete) {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"        public void setEventFromPersonList(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"venuslimm"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"venuslimm"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"venuslimm"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"venuslimm"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"Irminrics"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"Irminrics"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"Irminrics"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"Irminrics"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"inas0ng"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"inas0ng"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"inas0ng"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"venuslimm"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"venuslimm"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"venuslimm"},"content":"        private final Event event;","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"venuslimm"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"venuslimm"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"venuslimm"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"venuslimm"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"venuslimm"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"venuslimm"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"venuslimm"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"venuslimm"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"venuslimm"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"venuslimm"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"venuslimm"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"venuslimm"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"venuslimm"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"venuslimm"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"venuslimm"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"venuslimm"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"venuslimm"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"venuslimm"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":195,"inas0ng":25,"Irminrics":16}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    //public static final String VALID_EVENT_TAG_SPORTS_DAY \u003d \"20th Sports Day @ Sports Hub\";","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"    public static final String VALID_EVENT_INDEX_CARNIVAL \u003d \"2\";","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    public static final String VALID_EVENT_INDEX_SPORTS_DAY \u003d \"3\";","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    public static final String VALID_EVENT_INDEX_WEDDING_DINNER \u003d \"1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_EVENT_NAME_CARNIVAL \u003d \"Carnival\";","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_EVENT_NAME_SPORTS_DAY \u003d \"20th Sports Day @ Sports Hub\";","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_START_DATE_TIME_CARNIVAL \u003d \"02-02-2024 09:00\";","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_START_DATE_TIME_SPORTS_DAY \u003d \"02-03-2024 08:30\";","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_END_DATE_TIME_CARNIVAL \u003d \"10-02-2024 22:00\";","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public static final String VALID_END_DATE_TIME_SPORTS_DAY \u003d \"02-03-2024 18:30\";","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"    public static final String EVENT_SET_DESC_CARNIVAL \u003d \" \" + PREFIX_EVENT_SET + VALID_EVENT_INDEX_CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"    public static final String EVENT_SET_DESC_SPORTS_DAY \u003d \" \" + PREFIX_EVENT_SET + VALID_EVENT_INDEX_SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"    public static final String EVENT_SET_DESC_WEDDING_DINNER \u003d \" \" + PREFIX_EVENT_SET","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"            + VALID_EVENT_INDEX_WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"    public static final String EVENT_NAME_DESC_CARNIVAL \u003d \" \" + PREFIX_EVENT_NAME + VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"    public static final String EVENT_NAME_DESC_SPORTS_DAY \u003d \" \" + PREFIX_EVENT_NAME + VALID_EVENT_NAME_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"    public static final String START_DATE_TIME_DESC_CARNIVAL \u003d \" \" + PREFIX_START_DATE_TIME","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"            + VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"    public static final String START_DATE_TIME_DESC_SPORTS_DAY \u003d \" \" + PREFIX_START_DATE_TIME","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"            + VALID_START_DATE_TIME_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"    public static final String END_DATE_TIME_DESC_CARNIVAL \u003d \" \" + PREFIX_END_DATE_TIME + VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"    public static final String END_DATE_TIME_DESC_SPORTS_DAY \u003d \" \" + PREFIX_END_DATE_TIME","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"            + VALID_END_DATE_TIME_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"    public static final String INVALID_EVENT_SET_DESC \u003d \" \" + PREFIX_EVENT_SET + \"hubby*\"; // tags should be numeric","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"    // Event names not allowed to start with punctuations","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"    public static final String INVALID_EVENT_NAME_DESC \u003d \" \" + PREFIX_EVENT_NAME + \"\u002720TH\u0027 Company anniversary\";","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"    // Invalid date time format","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"    public static final String INVALID_START_DATE_TIME_DESC \u003d \" \" + PREFIX_START_DATE_TIME + \"02-02-202 12:00\";","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"    // Value used is out of range","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"    public static final String INVALID_END_DATE_TIME_DESC \u003d \" \" + PREFIX_END_DATE_TIME + \"40-40-2024 12:99\";","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(CARNIVAL).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(SPORTS_DAY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"        DESC_CARNIVAL \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"        DESC_SPORTS_DAY \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_SPORTS_DAY)","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_SPORTS_DAY)","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_SPORTS_DAY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"        final String[] splitEventName \u003d event.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"        model.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(splitEventName[0])));","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"venuslimm":21,"weilin1202":15,"-":123,"inas0ng":28}},{"path":"src/test/java/seedu/address/logic/commands/DelEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":" * {@code DelEventCommand}.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"public class DelEventCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventCommand \u003d new DelEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(DelEventCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        expectedModel.deleteEventFromPersonList(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(delEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventCommand \u003d new DelEventCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(delEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventCommand \u003d new DelEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(DelEventCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"        expectedModel.deleteEventFromPersonList(eventToDelete);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(delEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventCommand \u003d new DelEventCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(delEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventFirstCommand \u003d new DelEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventSecondCommand \u003d new DelEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"        assertTrue(delEventFirstCommand.equals(delEventFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand delEventFirstCommandCopy \u003d new DelEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"        assertTrue(delEventFirstCommand.equals(delEventFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"        assertFalse(delEventFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"        assertFalse(delEventFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"        assertFalse(delEventFirstCommand.equals(delEventSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"     * Updates {@code model}\u0027s filtered list to show no event.","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":111}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_FIRST_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_SECOND_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_THIRD_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor, Optional.of(INDEX_SET_NO_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(CARNIVAL).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor, Optional.of(INDEX_SET_SECOND_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(), Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor, Optional.of(INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), Optional.of(INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"weilin1202"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"weilin1202"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"weilin1202"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"weilin1202"},"content":"                new EditCommand(INDEX_FIRST_PERSON, DESC_AMY, Optional.of(INDEX_SET_SECOND_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"weilin1202"},"content":"        EditCommand commandWithSameValues \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"weilin1202"},"content":"                new EditCommand(INDEX_FIRST_PERSON, copyDescriptor, Optional.of(INDEX_SET_SECOND_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"weilin1202"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY,","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"weilin1202"},"content":"                Optional.of(INDEX_SET_SECOND_EVENT))));","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"weilin1202"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB,","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"weilin1202"},"content":"                Optional.of(INDEX_SET_THIRD_EVENT))));","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"weilin1202":25,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEventCommand.","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEventFromPersonList(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, new EditEventDescriptor());","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_EVENT_NAME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"                new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEventFromPersonList(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"        // edit event in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"        Event eventInList \u003d model.getAddressBook().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"     * Edit filtered list where the index is larger than the size of filtered list,","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"                new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"    public void execute_startDateTimeAfterEndDateTime_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"                new EditEventDescriptorBuilder().withStartDateTime(\"30-12-2099 12:00\").build());","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"        expectedModel.setEventFromPersonList(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"        assertCommandFailure(editEventCommand, model, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"        final EditEventCommand standardCommand \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"inas0ng"},"content":"                new EditEventCommand(INDEX_FIRST_EVENT, DESC_CARNIVAL);","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"inas0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_CARNIVAL);","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand commandWithSameValues \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"inas0ng"},"content":"                new EditEventCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"inas0ng"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"inas0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"inas0ng"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_SECOND_EVENT, DESC_CARNIVAL)));","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"inas0ng"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"inas0ng"},"content":"        assertFalse(standardCommand.equals(new EditEventCommand(INDEX_FIRST_EVENT, DESC_SPORTS_DAY)));","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":195}},{"path":"src/test/java/seedu/address/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_CARNIVAL);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"        assertTrue(DESC_CARNIVAL.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        assertTrue(DESC_CARNIVAL.equals(DESC_CARNIVAL));","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(5));","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(DESC_SPORTS_DAY));","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        // different event name -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor editedCarnival \u003d new EditEventDescriptorBuilder(DESC_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_SPORTS_DAY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(editedCarnival));","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        // different start datetime -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        editedCarnival \u003d new EditEventDescriptorBuilder(DESC_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_SPORTS_DAY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(editedCarnival));","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        // different end datetime -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        editedCarnival \u003d new EditEventDescriptorBuilder(DESC_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_SPORTS_DAY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"        assertFalse(DESC_CARNIVAL.equals(editedCarnival));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":51}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEventSet(SPORTS_DAY, WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"weilin1202":3,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/FindEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":" * Contains integration tests (interaction with the Model) for {@code FindEventCommand}.","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"public class FindEventTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"    public void equals() {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand findFirstCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand findSecondCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand findFirstCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"wedding carnival sports\");","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(Arrays.asList(WEDDING_DINNER, CARNIVAL, SPORTS_DAY), model.getFilteredEventList());","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"     * Parses {@code userInput} into a {@code EventNameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"    private EventNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        return new EventNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jerome-neo":84}},{"path":"src/test/java/seedu/address/logic/commands/ListAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Irminrics"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"Irminrics"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Irminrics"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Irminrics"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Irminrics"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Irminrics"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Irminrics"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Irminrics"},"content":"public class ListAllCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"    private Model model;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Irminrics"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Irminrics"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Irminrics"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"Irminrics"},"content":"        assertCommandSuccess(new ListAllCommand(), model, ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Irminrics"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Irminrics"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"        assertCommandSuccess(new ListAllCommand(), model, ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"Irminrics":42}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListEventCommand.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"    private Model model;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":39}},{"path":"src/test/java/seedu/address/logic/commands/ListEventContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalAddressBook.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.person.EventSetContainsEventPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"public class ListEventContactCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"    public void execute_validIndexUnfilteredListAndMultiplePersonListed_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        Event targetEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactCommand \u003d new ListEvContactCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        String expectedMessage \u003d String.format(ListEvContactCommand.MESSAGE_LIST_EVENT_CONTACT_SUCCESS, targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate predicate \u003d new EventSetContainsEventPredicate(targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        assertCommandSuccess(listEvContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    public void execute_validIndexUnfilteredListAndNoPersonListed_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        Event targetEvent \u003d model.getFilteredEventList().get(INDEX_THIRD_EVENT.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactCommand \u003d new ListEvContactCommand(INDEX_THIRD_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        String expectedMessage \u003d String.format(ListEvContactCommand.MESSAGE_LIST_EVENT_CONTACT_SUCCESS, targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate predicate \u003d new EventSetContainsEventPredicate(targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"weilin1202"},"content":"        assertCommandSuccess(listEvContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactCommand \u003d new ListEvContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"weilin1202"},"content":"        assertCommandFailure(listEvContactCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"    public void execute_validIndexFilteredListAndMultiplePersonListed_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"weilin1202"},"content":"        showEventAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"        Event targetEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactCommand \u003d new ListEvContactCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"        String expectedMessage \u003d String.format(ListEvContactCommand.MESSAGE_LIST_EVENT_CONTACT_SUCCESS, targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate predicate \u003d new EventSetContainsEventPredicate(targetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        assertCommandSuccess(listEvContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"weilin1202"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"weilin1202"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"weilin1202"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactCommand \u003d new ListEvContactCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"        assertCommandFailure(listEvContactCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactFirstCommand \u003d new ListEvContactCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactSecondCommand \u003d new ListEvContactCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"weilin1202"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"weilin1202"},"content":"        assertTrue(listEvContactFirstCommand.equals(listEvContactFirstCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand listEvContactFirstCommandCopy \u003d new ListEvContactCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"        assertTrue(listEvContactFirstCommand.equals(listEvContactFirstCommandCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"weilin1202"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"        assertFalse(listEvContactFirstCommand.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"weilin1202"},"content":"        assertFalse(listEvContactFirstCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"weilin1202"},"content":"        // different event and person -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"        assertFalse(listEvContactFirstCommand.equals(listEvContactSecondCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"     * Updates {@code model}\u0027s filtered list to show no event.","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"weilin1202"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"weilin1202"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"weilin1202"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":129}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_SET_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_INDEX_WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_FIRST_EVENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_FIRST_TWO_EVENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withoutEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_WEDDING_DINNER,","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_WEDDING_DINNER,","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_WEDDING_DINNER,","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_WEDDING_DINNER,","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_WEDDING_DINNER,","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_FIRST_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withoutEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_WEDDING_DINNER + EVENT_SET_DESC_CARNIVAL,","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPersonMultipleTags, INDEX_SET_FIRST_TWO_EVENT));","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"weilin1202"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withoutEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"                new AddCommand(expectedPerson, INDEX_SET_NO_EVENT));","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_SPORTS_DAY + EVENT_SET_DESC_CARNIVAL, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_SPORTS_DAY + EVENT_SET_DESC_CARNIVAL, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_SPORTS_DAY + EVENT_SET_DESC_CARNIVAL, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":133,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_SPORTS_DAY + EVENT_SET_DESC_CARNIVAL, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"weilin1202"},"content":"        // invalid event index tag","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"weilin1202"},"content":"                + INVALID_EVENT_SET_DESC + VALID_EVENT_INDEX_WEDDING_DINNER, ParserUtil.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":145,"author":{"gitId":"weilin1202"},"content":"                + ADDRESS_DESC_BOB + EVENT_SET_DESC_SPORTS_DAY + EVENT_SET_DESC_CARNIVAL,","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"weilin1202":31,"-":117}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DATE_TIME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_DATE_TIME_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_NAME_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DATE_TIME_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DATE_TIME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    private final AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        Event expectedEvent \u003d new EventBuilder(CARNIVAL).withName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        // whitespace only preamble","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + EVENT_NAME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"                + START_DATE_TIME_DESC_CARNIVAL + END_DATE_TIME_DESC_CARNIVAL, new AddEventCommand(expectedEvent));","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        // multiple event names - last event name accepted","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        assertParseSuccess(parser, EVENT_NAME_DESC_SPORTS_DAY + EVENT_NAME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"                + START_DATE_TIME_DESC_CARNIVAL + END_DATE_TIME_DESC_CARNIVAL, new AddEventCommand(expectedEvent));","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"        // multiple start date times - last start date time accepted","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        assertParseSuccess(parser, EVENT_NAME_DESC_CARNIVAL + START_DATE_TIME_DESC_SPORTS_DAY","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"                + START_DATE_TIME_DESC_CARNIVAL + END_DATE_TIME_DESC_CARNIVAL, new AddEventCommand(expectedEvent));","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        // multiple end date times - last end date time accepted","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        assertParseSuccess(parser, EVENT_NAME_DESC_CARNIVAL + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"                + END_DATE_TIME_DESC_SPORTS_DAY + END_DATE_TIME_DESC_CARNIVAL, new AddEventCommand(expectedEvent));","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        // missing event name prefix","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_CARNIVAL + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"                        + END_DATE_TIME_DESC_CARNIVAL,","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"        // missing start date time prefix","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, EVENT_NAME_DESC_CARNIVAL + VALID_START_DATE_TIME_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"venuslimm"},"content":"                        + END_DATE_TIME_DESC_CARNIVAL,","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"venuslimm"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"venuslimm"},"content":"        // missing end date time prefix","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, EVENT_NAME_DESC_CARNIVAL + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"venuslimm"},"content":"                        + VALID_END_DATE_TIME_CARNIVAL,","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"venuslimm"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"venuslimm"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"venuslimm"},"content":"        // invalid event name","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, INVALID_EVENT_NAME_DESC + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"venuslimm"},"content":"                + END_DATE_TIME_DESC_CARNIVAL, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"venuslimm"},"content":"        // invalid start date time","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, EVENT_NAME_DESC_CARNIVAL + INVALID_START_DATE_TIME_DESC","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"venuslimm"},"content":"                + END_DATE_TIME_DESC_CARNIVAL, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"venuslimm"},"content":"        // invalid end date time","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, EVENT_NAME_DESC_CARNIVAL + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"venuslimm"},"content":"                + INVALID_END_DATE_TIME_DESC, DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"venuslimm"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"venuslimm"},"content":"        assertParseFailure(parser, INVALID_EVENT_NAME_DESC + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"venuslimm"},"content":"                + INVALID_END_DATE_TIME_DESC, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"venuslimm":93}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.DelEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.commands.ListEvContactCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventUtil;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        assertEquals(new AddCommand(person, INDEX_SET_NO_EVENT), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"weilin1202"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor, Optional.of(INDEX_SET_NO_EVENT)), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"    public void parseCommand_editEvent() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand command \u003d (EditEventCommand) parser.parseCommand(EditEventCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"                + INDEX_FIRST_EVENT.getOneBased() + \" \" + EventUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"        assertEquals(new EditEventCommand(INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"    public void parseCommand_addEvent() throws Exception {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"venuslimm"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"venuslimm"},"content":"        AddEventCommand command \u003d (AddEventCommand) parser.parseCommand(EventUtil.getAddEventCommand(event));","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"venuslimm"},"content":"        assertEquals(new AddEventCommand(event), command);","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"    public void parseCommand_listEvent() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        assertTrue(parser.parseCommand(ListEventCommand.COMMAND_WORD) instanceof ListEventCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"        assertTrue(parser.parseCommand(ListEventCommand.COMMAND_WORD + \" 3\") instanceof ListEventCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"    public void parseCommand_delEvent() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"        DelEventCommand command \u003d (DelEventCommand) parser.parseCommand(","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"                DelEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"        assertEquals(new DelEventCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"weilin1202"},"content":"    public void parseCommand_listEvContact() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"weilin1202"},"content":"        ListEvContactCommand command \u003d (ListEvContactCommand) parser.parseCommand(","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"weilin1202"},"content":"                ListEvContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"weilin1202"},"content":"        assertEquals(new ListEvContactCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"venuslimm":11,"weilin1202":13,"-":100,"inas0ng":28}},{"path":"src/test/java/seedu/address/logic/parser/DelEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.DelEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"public class DelEventCommandParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    private DelEventCommandParser parser \u003d new DelEventCommandParser();","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"    public void parse_validArgs_returnsDelEventCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, \"1\", new DelEventCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DelEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DelEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_SET_DESC_WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_SET_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_NO_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexSets.INDEX_SET_SECOND_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    private static final String EVENT_SET_EMPTY \u003d \" \" + PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"weilin1202"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_SET_DESC, ParserUtil.MESSAGE_INVALID_INDEX); // invalid tag","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"weilin1202"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EVENT_SET_DESC_SPORTS_DAY","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"weilin1202"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + EVENT_SET_DESC_CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"weilin1202"},"content":"                .withEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_THIRD_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.of(indexSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"weilin1202"},"content":"        // event set","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"weilin1202"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_SET_DESC_CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"weilin1202"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.of(INDEX_SET_SECOND_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"weilin1202"},"content":"        // multiple events in event set","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"weilin1202"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_SET_DESC_CARNIVAL + EVENT_SET_DESC_WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"weilin1202"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.of(indexSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"weilin1202"},"content":"                + EVENT_SET_DESC_CARNIVAL + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + EVENT_SET_DESC_CARNIVAL","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"weilin1202"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + EVENT_SET_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"weilin1202"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"weilin1202"},"content":"                .withEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e indexSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"weilin1202"},"content":"        indexSet.add(INDEX_THIRD_EVENT);","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.of(indexSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"weilin1202"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.empty());","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"weilin1202"},"content":"    public void parse_resetEventSet_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"weilin1202"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_SET_EMPTY;","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"weilin1202"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withEventSet().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"weilin1202"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor, Optional.of(INDEX_SET_NO_EVENT));","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"weilin1202":54,"-":174}},{"path":"src/test/java/seedu/address/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_DATE_TIME_DESC;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_NAME_DESC;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_DATE_TIME_DESC;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_DATE_TIME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        // no index specified","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_CARNIVAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        // no field specified","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        // negative index","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"-5\" + EVENT_NAME_DESC_CARNIVAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        // zero index","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"0\" + EVENT_NAME_DESC_CARNIVAL, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"                + INVALID_EVENT_NAME_DESC, EventName.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"                + INVALID_START_DATE_TIME_DESC, DateTime.MESSAGE_CONSTRAINTS); // invalid start datetime","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"                + INVALID_END_DATE_TIME_DESC, DateTime.MESSAGE_CONSTRAINTS); // invalid end datetime","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"        // invalid event name followed by valid start datetime","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"inas0ng"},"content":"                + INVALID_EVENT_NAME_DESC + START_DATE_TIME_DESC_CARNIVAL, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"inas0ng"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_NAME_DESC + INVALID_START_DATE_TIME_DESC,","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"inas0ng"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"inas0ng"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"inas0ng"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"inas0ng"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_CARNIVAL + START_DATE_TIME_DESC_CARNIVAL","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"inas0ng"},"content":"                + END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"inas0ng"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"inas0ng"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"inas0ng"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_SPORTS_DAY","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"inas0ng"},"content":"                + START_DATE_TIME_DESC_SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_SPORTS_DAY)","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_SPORTS_DAY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"        // event name","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"        // start datetime","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        userInput \u003d targetIndex.getOneBased() + START_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withStartDateTime(VALID_START_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"        // end datetime","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"        userInput \u003d targetIndex.getOneBased() + END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_SPORTS_DAY","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"                + EVENT_NAME_DESC_CARNIVAL","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"                + START_DATE_TIME_DESC_CARNIVAL + END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EVENT_NAME_DESC + EVENT_NAME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"                .withEventName(VALID_EVENT_NAME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"        userInput \u003d targetIndex.getOneBased() + START_DATE_TIME_DESC_CARNIVAL + INVALID_EVENT_NAME_DESC","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"                + EVENT_NAME_DESC_CARNIVAL + END_DATE_TIME_DESC_CARNIVAL;","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":170}},{"path":"src/test/java/seedu/address/logic/parser/FindEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"public class FindEventCommandParserTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"    private FindEventCommandParser parser \u003d new FindEventCommandParser();","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"                FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    public void parse_validArgs_returnsFindEventCommand() {","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"        FindEventCommand expectedFindEventCommand \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"                new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(\"Alpaca\", \"Bacon\")));","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"        System.out.println(expectedFindEventCommand.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"        assertParseSuccess(parser, \"Alpaca Bacon\", expectedFindEventCommand);","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        assertParseSuccess(parser, \" \\n Alpaca \\n \\t Bacon  \\t\", expectedFindEventCommand);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"jerome-neo":35}},{"path":"src/test/java/seedu/address/logic/parser/ListEventContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import seedu.address.logic.commands.ListEvContactCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"public class ListEventContactCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    private ListEvContactCommandParser parser \u003d new ListEvContactCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    public void parse_validArgs_returnsListEvContactCommand() {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        assertParseSuccess(parser, \"1\", new ListEvContactCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEvContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ListEvContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":27}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"    private static final String INVALID_EVENT_SET \u003d \"#friend\";","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"    private static final String VALID_EVENT_INDEX_1 \u003d \"1\";","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    private static final String INVALID_EVENT_NAME \u003d \"!Company\u0027s 20th Anniversary\";","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    private static final String INVALID_DATE_TIME_FORMAT \u003d \"02-02-202 12:70\";","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    private static final String VALID_EVENT_NAME \u003d \"Company\u0027s 20th Anniversary\";","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    private static final String VALID_DATE_TIME_FORMAT \u003d \"02-02-2025 00:00\";","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"weilin1202"},"content":"    public void parseEventIndex_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"weilin1202"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIndex(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"weilin1202"},"content":"    public void parseEventIndex_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"weilin1202"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(INVALID_EVENT_SET));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"weilin1202"},"content":"    public void parseEventIndexSet_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"weilin1202"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventIndex(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"weilin1202"},"content":"    public void parseEventIndexSet_collectionWithInvalidIndex_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"weilin1202"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"weilin1202"},"content":"                .parseEventIndex(Arrays.asList(VALID_EVENT_INDEX_1, INVALID_EVENT_SET)));","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"weilin1202"},"content":"    public void parseEventIndexSets_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"weilin1202"},"content":"        assertTrue(ParserUtil.parseEventIndex(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"venuslimm"},"content":"    public void parseEventName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventName((String) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"venuslimm"},"content":"    public void parseEventName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"venuslimm"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventName(INVALID_EVENT_NAME));","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":193,"author":{"gitId":"venuslimm"},"content":"    public void parseEventName_validValueWithoutWhitespace_returnsEventName() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"venuslimm"},"content":"        EventName expectedEventName \u003d new EventName(VALID_EVENT_NAME);","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"venuslimm"},"content":"        assertEquals(expectedEventName, ParserUtil.parseEventName(VALID_EVENT_NAME));","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":198,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":199,"author":{"gitId":"venuslimm"},"content":"    public void parseEventName_validValueWithWhitespace_returnsTrimmedEventName() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":200,"author":{"gitId":"venuslimm"},"content":"        String eventNameWithWhitespace \u003d WHITESPACE + VALID_EVENT_NAME + WHITESPACE;","lastModifiedDate":"2023-03-02"},{"lineNumber":201,"author":{"gitId":"venuslimm"},"content":"        EventName expectedEventName \u003d new EventName(VALID_EVENT_NAME);","lastModifiedDate":"2023-03-02"},{"lineNumber":202,"author":{"gitId":"venuslimm"},"content":"        assertEquals(expectedEventName, ParserUtil.parseEventName(eventNameWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":204,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":205,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":206,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":207,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateTime((String) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":208,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":209,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":210,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":211,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_invalidFormat_throwsParseException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"venuslimm"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateTime(INVALID_DATE_TIME_FORMAT));","lastModifiedDate":"2023-03-02"},{"lineNumber":213,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":214,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":215,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":216,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_validValueWithoutWhitespace_returnsDateTime() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":217,"author":{"gitId":"venuslimm"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATE_TIME_FORMAT);","lastModifiedDate":"2023-03-02"},{"lineNumber":218,"author":{"gitId":"venuslimm"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(VALID_DATE_TIME_FORMAT));","lastModifiedDate":"2023-03-02"},{"lineNumber":219,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":220,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":221,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":222,"author":{"gitId":"venuslimm"},"content":"    public void parseDateTime_validDateTimeWithWhitespace_returnsTrimmedDateTime() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":223,"author":{"gitId":"venuslimm"},"content":"        String dateTimeWithWhitespace \u003d WHITESPACE + VALID_DATE_TIME_FORMAT + WHITESPACE;","lastModifiedDate":"2023-03-02"},{"lineNumber":224,"author":{"gitId":"venuslimm"},"content":"        DateTime expectedDateTime \u003d new DateTime(VALID_DATE_TIME_FORMAT);","lastModifiedDate":"2023-03-02"},{"lineNumber":225,"author":{"gitId":"venuslimm"},"content":"        assertEquals(expectedDateTime, ParserUtil.parseDateTime(dateTimeWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"venuslimm":44,"weilin1202":13,"-":170}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(SPORTS_DAY)","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"        List\u003cEvent\u003e newEvent \u003d Arrays.asList(CARNIVAL);","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newEvent);","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(SPORTS_DAY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEvent(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_eventNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"        assertFalse(addressBook.hasEvent(CARNIVAL));","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"        addressBook.addEvent(CARNIVAL);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"        assertTrue(addressBook.hasEvent(CARNIVAL));","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"inas0ng"},"content":"    public void removeEvent_soleEventInAddressBook_removesEvent() {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"inas0ng"},"content":"        addressBook.addEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"inas0ng"},"content":"        addressBook.removeEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"inas0ng"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"inas0ng"},"content":"    public void removeEvent_multipleEventsInAddressBook_removesEvent() {","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"inas0ng"},"content":"        addressBook.addEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"inas0ng"},"content":"        addressBook.addEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"inas0ng"},"content":"        addressBook.removeEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"inas0ng"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"        expectedAddressBook.addEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedAddressBook, addressBook);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    public void removeEvent_eventNotInAddressBook_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e addressBook.removeEvent(CARNIVAL));","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"    public void removeEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.removeEvent(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"jerome-neo"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"jerome-neo"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"jerome-neo"},"content":"            this.events.setAll(events);","lastModifiedDate":"2023-03-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"jerome-neo"},"content":"        @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"jerome-neo"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"jerome-neo"},"content":"            return events;","lastModifiedDate":"2023-03-04"},{"lineNumber":156,"author":{"gitId":"jerome-neo"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"venuslimm":17,"weilin1202":5,"jerome-neo":10,"-":96,"inas0ng":30}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_eventNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"venuslimm"},"content":"        assertFalse(modelManager.hasEvent(WEDDING_DINNER));","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"venuslimm"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"venuslimm"},"content":"        modelManager.addEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"venuslimm"},"content":"        assertTrue(modelManager.hasEvent(WEDDING_DINNER));","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Irminrics"},"content":"    public void getEventPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Irminrics"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"    public void deleteEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteEvent(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"    public void deleteEvent_eventNotInAddressBook_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e modelManager.deleteEvent(WEDDING_DINNER));","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"    public void deleteEvent_soleEventInAddressBook_deletesEvent() {","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"        modelManager.addEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"        modelManager.deleteEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"    public void deleteEvent_multipleEventsInAddressBook_deletesEvent() {","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"        modelManager.addEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"        modelManager.addEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"        modelManager.deleteEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        ModelManager expectedModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"        expectedModelManager.addEvent(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedModelManager, modelManager);","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"venuslimm"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"venuslimm"},"content":"                .withEvent(WEDDING_DINNER).withEvent(CARNIVAL).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"inas0ng"},"content":"        // different filteredEventList -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"inas0ng"},"content":"        keywords \u003d WEDDING_DINNER.getName().toString().split(\"\\\\s+\");","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"inas0ng"},"content":"        modelManager.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"inas0ng"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"inas0ng"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"inas0ng"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"venuslimm":20,"-":131,"inas0ng":39,"Irminrics":5}},{"path":"src/test/java/seedu/address/model/event/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"public class DateTimeTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void constructor_invalidDateTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        String invalidDateTime \u003d \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateTime(invalidDateTime));","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public void isValidDateTime() {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        // null date time","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateTime.isValidDateTime(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        // invalid date time","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\"\")); // empty string","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\" \")); // spaces only","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\"2020-02-02 22:20\")); // wrong sequence","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\"02-21-2020 22:20\")); // wrong sequence","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\"02-02-2020 59:20\")); // wrong sequence","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"        assertFalse(DateTime.isValidDateTime(\"02-50-2020 59:70\")); // values out of range","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        // valid date time","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        assertTrue(DateTime.isValidDateTime(\"03-02-2020 20:40\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    public void isValidDateRange() {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"        // invalid date time range","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(DateTime.isValidDateRange(\"\", \"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(DateTime.isValidDateRange(\" \", \" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(DateTime.isValidDateRange(\"02-02-2023 22:20\", \"01-02-2023 22:20\")); // one-day difference","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(DateTime.isValidDateRange(\"02-02-2023 22:20\", \"02-02-2023 22:19\")); // one-minute difference","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        // valid date time range","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(DateTime.isValidDateRange(\"02-02-2023 22:20\", \"02-02-2023 22:20\")); // accept same date","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(DateTime.isValidDateRange(\"01-02-2023 22:20\", \"02-02-2023 22:20\")); // one-day difference","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(DateTime.isValidDateRange(\"02-02-2023 22:19\", \"02-02-2023 22:20\")); // one-minute difference","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":37,"jerome-neo":14}},{"path":"src/test/java/seedu/address/model/event/EventNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"public class EventNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"                new EventNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        EventNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        // One keyword","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"Party\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Birthday Party\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Wedding\", \"Dinner\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Wedding Dinner\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Wedding\", \"Dinner\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Fundraiser Dinner\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"bIrThdaY\", \"pARty\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Birthday Party\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"inas0ng"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"inas0ng"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"inas0ng"},"content":"                new EventNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"inas0ng"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Party\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"inas0ng"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"inas0ng"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Party\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"inas0ng"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Wedding Dinner\").build()));","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"inas0ng":75}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"public class EventNameTest {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"    public void isValidName() {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"        // null name","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidName(null));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        // invalid name","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        assertFalse(EventName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        assertFalse(EventName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        assertFalse(EventName.isValidName(\"!!\")); // only non-alphanumeric characters","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        assertFalse(EventName.isValidName(\"!EFG Concert!\")); // starts with non-alphanumeric character","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(EventName.isValidName(\"小明\u0027s Birthday\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        assertFalse(EventName.isValidName(\"Graduation Ceremony for シャオ・ミン\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"        assertFalse(EventName.isValidName(","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"                \"The Hunchback of Notre Dame Musical Rehearsal in Stadium\")); // over character limit of 50","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        // valid name","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"sports day\")); // alphabets only","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"54\")); // numbers only","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"20-24th carnival\")); // alphanumeric characters","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"Wedding Dinner\")); // with capital letters","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"Company XYZ 20th Anniversary Dinner\")); // long names","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        assertTrue(EventName.isValidName(\"22nd Marathon @ Marina\")); // contains punctuations and alphanumeric","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":40,"jerome-neo":2,"inas0ng":2}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"public class EventTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    public void equals() {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        Event carnivalCopy \u003d new EventBuilder(CARNIVAL).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"        assertTrue(CARNIVAL.equals(carnivalCopy));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"        assertTrue(CARNIVAL.hashCode() \u003d\u003d carnivalCopy.hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Irminrics"},"content":"        assertTrue(CARNIVAL.isSameEvent(carnivalCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        assertTrue(CARNIVAL.equals(CARNIVAL));","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Irminrics"},"content":"        assertTrue(CARNIVAL.hashCode() \u003d\u003d CARNIVAL.hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Irminrics"},"content":"        assertTrue(CARNIVAL.isSameEvent(CARNIVAL));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        assertFalse(CARNIVAL.equals(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.isSameEvent(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        assertFalse(CARNIVAL.equals(511));","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"        assertFalse(CARNIVAL.equals(SPORTS_DAY));","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.hashCode() \u003d\u003d SPORTS_DAY.hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.isSameEvent(SPORTS_DAY));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Irminrics"},"content":"        Event editedCarnival \u003d new EventBuilder(CARNIVAL).withName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Irminrics"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Irminrics"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Irminrics"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"        // different event with same name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.equals(editedCarnival));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.hashCode() \u003d\u003d editedCarnival.hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"        assertFalse(CARNIVAL.isSameEvent(editedCarnival));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"venuslimm":32,"Irminrics":19}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Irminrics"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_DATE_TIME_CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"Irminrics"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        assertFalse(uniqueEventList.contains(CARNIVAL));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        assertTrue(uniqueEventList.contains(CARNIVAL));","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Irminrics"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"        Event editedCarnival \u003d new EventBuilder(CARNIVAL).withName(VALID_EVENT_NAME_CARNIVAL)","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"                .withStartDateTime(VALID_START_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"                .withEndDateTime(VALID_END_DATE_TIME_CARNIVAL)","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"                .build();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"        assertFalse(uniqueEventList.contains(editedCarnival));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"inas0ng"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Irminrics"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"inas0ng"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Irminrics"},"content":"        uniqueEventList.add(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Irminrics"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Irminrics"},"content":"        expectedUniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Irminrics"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Irminrics"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"inas0ng"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Irminrics"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"inas0ng"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Irminrics"},"content":"        uniqueEventList.add(WEDDING_DINNER);","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Irminrics"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Irminrics"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Irminrics"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Irminrics"},"content":"        expectedUniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Irminrics"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Irminrics"},"content":"    public void setEventWithAnotherEventList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Irminrics"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Irminrics"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e(Arrays.asList(CARNIVAL));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Irminrics"},"content":"        UniqueEventList other \u003d new UniqueEventList();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Irminrics"},"content":"        other.setEvents(events);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Irminrics"},"content":"        assertTrue(uniqueEventList.equals(other));","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"venuslimm"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"venuslimm"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"venuslimm"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"venuslimm"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"jerome-neo"},"content":"    public void setNullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"jerome-neo"},"content":"    public void setEventWithAnotherUniqueEventList_returnsTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"jerome-neo"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"jerome-neo"},"content":"        UniqueEventList other \u003d new UniqueEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"jerome-neo"},"content":"        other.setEvents(uniqueEventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"jerome-neo"},"content":"        assertTrue(uniqueEventList.equals(other));","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"jerome-neo"},"content":"    public void setDuplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"jerome-neo"},"content":"        List\u003cEvent\u003e invalidEvents \u003d new ArrayList\u003c\u003e(Arrays.asList(CARNIVAL, CARNIVAL));","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e new UniqueEventList().setEvents(invalidEvents));","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"inas0ng"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"inas0ng"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"inas0ng"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"inas0ng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(CARNIVAL));","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"inas0ng"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"inas0ng"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"inas0ng"},"content":"        uniqueEventList.remove(CARNIVAL);","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"inas0ng"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"inas0ng"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"inas0ng"},"content":"    public void eventsAreUnique_noEvents_returnsTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"inas0ng"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"inas0ng"},"content":"        assertTrue(uniqueEventList.eventsAreUnique(events));","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"inas0ng"},"content":"    public void eventsAreUnique_sameEventExist_returnsFalse() {","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"inas0ng"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e(Arrays.asList(CARNIVAL, CARNIVAL));","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"inas0ng"},"content":"        assertFalse(uniqueEventList.eventsAreUnique(events));","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"inas0ng"},"content":"    public void eventsAreUnique_uniqueEvents_returnsTrue() {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"inas0ng"},"content":"        List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e(Arrays.asList(CARNIVAL, WEDDING_DINNER));","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"inas0ng"},"content":"        assertTrue(uniqueEventList.eventsAreUnique(events));","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"inas0ng"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"inas0ng"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(CARNIVAL, CARNIVAL));","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"inas0ng"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"inas0ng"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"inas0ng"},"content":"        uniqueEventList.add(CARNIVAL);","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"inas0ng"},"content":"        uniqueEventList.add(SPORTS_DAY);","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"inas0ng"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(CARNIVAL, SPORTS_DAY));","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"venuslimm":52,"jerome-neo":26,"inas0ng":54,"Irminrics":39}},{"path":"src/test/java/seedu/address/model/person/EventSetContainsEventPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class EventSetContainsEventPredicateTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public void equals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"        Event firstPredicateTargetEvent \u003d WEDDING_DINNER;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"        Event secondPredicateTargetEvent \u003d CARNIVAL;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate firstPredicate \u003d new EventSetContainsEventPredicate(firstPredicateTargetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate secondPredicate \u003d new EventSetContainsEventPredicate(secondPredicateTargetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"                new EventSetContainsEventPredicate(firstPredicateTargetEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"weilin1202"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"weilin1202"},"content":"    public void test_personEventSetContainsEvent_returnsTrue() {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate predicate \u003d new EventSetContainsEventPredicate(WEDDING_DINNER);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"weilin1202"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEventSet(WEDDING_DINNER).build()));","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"weilin1202"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"weilin1202"},"content":"    public void test_eventSetDoesNotContainEvent_returnsFalse() {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        // Zero event","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"weilin1202"},"content":"        EventSetContainsEventPredicate predicate \u003d new EventSetContainsEventPredicate(null);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"weilin1202"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEventSet(WEDDING_DINNER).build()));","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"        // Non-matching event set","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"        predicate \u003d new EventSetContainsEventPredicate(CARNIVAL);","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEventSet(WEDDING_DINNER).build()));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"weilin1202":57}},{"path":"src/test/java/seedu/address/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"        assertFalse(Name.isValidName(","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"                \"Adolph Blaine Charles David Earl Frederick Gerald Hubert Irvin\")); // over character limit of 50","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":40,"inas0ng":2}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"                .withAddress(VALID_ADDRESS_BOB).withEventSet(SPORTS_DAY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"weilin1202"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEventSet(SPORTS_DAY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"weilin1202":3,"-":82}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(SPORTS_DAY)","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"weilin1202"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"weilin1202"},"content":"                .withEventSet(SPORTS_DAY)","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"weilin1202":5,"-":167}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jerome-neo"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"jerome-neo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.BIRTHDAY_PARTY;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"jerome-neo"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"jerome-neo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"jerome-neo"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"jerome-neo"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"jerome-neo"},"content":"    private static final Event INVALID_EVENT_DATETIME \u003d new Event(","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"jerome-neo"},"content":"            new EventName(\"Dinner\"), new DateTime(\"02-02-2023 17:00\"), new DateTime(\"01-02-2023 17:00\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"jerome-neo"},"content":"    private static final Event VALID_EVENT_WITH_SAME_DATETIME \u003d new Event(","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"jerome-neo"},"content":"            new EventName(\"Same date range\"), new DateTime(\"02-02-2023 17:00\"), new DateTime(\"02-02-2023 17:00\"));","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"jerome-neo"},"content":"    private static final String INVALID_EVENT_NAME \u003d \"小明 21\u0027st Birthday\";","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"jerome-neo"},"content":"    private static final String VALID_EVENT_NAME \u003d \"Xiao Ming 21\u0027st Birthday\";","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"jerome-neo"},"content":"    private static final String INVALID_START_DATETIME \u003d \"50-02-2023 17:00\";","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"jerome-neo"},"content":"    private static final String INVALID_END_DATETIME \u003d \"90-13-1023 17:00\";","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_validEventObject_returnsEvent() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event1 \u003d new JsonAdaptedEvent(WEDDING_DINNER);","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(WEDDING_DINNER, event1.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event2 \u003d new JsonAdaptedEvent(CARNIVAL);","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(CARNIVAL, event2.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event3 \u003d new JsonAdaptedEvent(SPORTS_DAY);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(SPORTS_DAY, event3.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event4 \u003d new JsonAdaptedEvent(BIRTHDAY_PARTY);","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(BIRTHDAY_PARTY, event4.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event1 \u003d new JsonAdaptedEvent(WEDDING_DINNER.getName().toString(),","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"jerome-neo"},"content":"                WEDDING_DINNER.getStartDateTime().toString(), WEDDING_DINNER.getEndDateTime().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(WEDDING_DINNER, event1.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event2 \u003d new JsonAdaptedEvent(CARNIVAL.getName().toString(),","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"jerome-neo"},"content":"                CARNIVAL.getStartDateTime().toString(), CARNIVAL.getEndDateTime().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(CARNIVAL, event2.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event3 \u003d new JsonAdaptedEvent(SPORTS_DAY.getName().toString(),","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"jerome-neo"},"content":"                SPORTS_DAY.getStartDateTime().toString(), SPORTS_DAY.getEndDateTime().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(SPORTS_DAY, event3.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event4 \u003d new JsonAdaptedEvent(BIRTHDAY_PARTY.getName().toString(),","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"jerome-neo"},"content":"                BIRTHDAY_PARTY.getStartDateTime().toString(), BIRTHDAY_PARTY.getEndDateTime().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(BIRTHDAY_PARTY, event4.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_validEventWithIdenticalDates_returnsEvent() throws Exception {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_EVENT_WITH_SAME_DATETIME);","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"jerome-neo"},"content":"        assertEquals(VALID_EVENT_WITH_SAME_DATETIME, event.toModelType());","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_invalidEventDateRange_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(INVALID_EVENT_DATETIME);","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"jerome-neo"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_invalidEventName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(INVALID_EVENT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"jerome-neo"},"content":"                WEDDING_DINNER.getStartDateTime().toString(), WEDDING_DINNER.getEndDateTime().toString());","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"jerome-neo"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":77,"author":{"gitId":"jerome-neo"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"jerome-neo"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"jerome-neo"},"content":"    public void toModelType_invalidDateFormat_throwsIllegalValueException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"jerome-neo"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(VALID_EVENT_NAME,","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"jerome-neo"},"content":"                INVALID_START_DATETIME, INVALID_END_DATETIME);","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"jerome-neo"},"content":"        String expectedMessage \u003d DateTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"jerome-neo"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"jerome-neo"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"jerome-neo"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"jerome-neo":85}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    private static final String INVALID_EVENT_NAME \u003d \"小明 21\u0027st Birthday\";","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENT_SET \u003d BENSON.getEventSet().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"weilin1202"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"weilin1202"},"content":"    public void toModelType_invalidEventSet_throwsIllegalValueException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"weilin1202"},"content":"        List\u003cJsonAdaptedEvent\u003e invalidEventSets \u003d new ArrayList\u003c\u003e(VALID_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"weilin1202"},"content":"        invalidEventSets.add(new JsonAdaptedEvent(INVALID_EVENT_NAME,","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"weilin1202"},"content":"                WEDDING_DINNER.getStartDateTime().toString(), WEDDING_DINNER.getEndDateTime().toString()));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"weilin1202"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidEventSets);","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"weilin1202":21,"-":95}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Irminrics"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventAddressBook.json\");","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Irminrics"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Irminrics"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Irminrics"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Irminrics"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Irminrics"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Irminrics"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Irminrics"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Irminrics"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":47,"Irminrics":9}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"     * Adds a new {@code Event} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"    public AddressBookBuilder withEvent(Event event) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"venuslimm":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"inas0ng"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"inas0ng"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"inas0ng"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"inas0ng"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"inas0ng"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"inas0ng"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"inas0ng"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"inas0ng"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"inas0ng"},"content":"        descriptor.setEventName(event.getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"inas0ng"},"content":"        descriptor.setStartDateTime(event.getStartDateTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"inas0ng"},"content":"        descriptor.setEndDateTime(event.getEndDateTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"     * Sets the {@code eventName} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder withEventName(String eventName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"        descriptor.setEventName(new EventName(eventName));","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"     * Sets the {@code startDateTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder withStartDateTime(String startDateTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"        descriptor.setStartDateTime(new DateTime(startDateTime));","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"inas0ng"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"inas0ng"},"content":"     * Sets the {@code endDateTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptorBuilder withEndDateTime(String endDateTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"inas0ng"},"content":"        descriptor.setEndDateTime(new DateTime(endDateTime));","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"inas0ng"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"inas0ng"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"inas0ng"},"content":"        return descriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"inas0ng"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"inas0ng":60}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"weilin1202"},"content":"        descriptor.setEventSet(person.getEventSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"weilin1202"},"content":"    public EditPersonDescriptorBuilder withEventSet(Event... events) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"weilin1202"},"content":"        Set\u003cEvent\u003e eventSet \u003d Stream.of(events).collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"weilin1202"},"content":"        descriptor.setEventSet(eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"weilin1202":6,"-":82}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.DateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"public class EventBuilder {","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":"    public static final String DEFAULT_NAME \u003d \"Sports Week\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"    public static final String DEFAULT_START_DATE_TIME \u003d \"11-09-2023 09:00\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public static final String DEFAULT_END_DATE_TIME \u003d \"15-09-2023 19:00\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    private EventName name;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    private DateTime startDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"    private DateTime endDateTime;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public EventBuilder() {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"        name \u003d new EventName(DEFAULT_NAME);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"        startDateTime \u003d new DateTime(DEFAULT_START_DATE_TIME);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"        endDateTime \u003d new DateTime(DEFAULT_END_DATE_TIME);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        startDateTime \u003d eventToCopy.getStartDateTime();","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"        endDateTime \u003d eventToCopy.getEndDateTime();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"        this.name \u003d new EventName(name);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"venuslimm"},"content":"     * Sets the {@code startDateTime} of the {@code Event} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"venuslimm"},"content":"    public EventBuilder withStartDateTime(String startDateTime) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"venuslimm"},"content":"        this.startDateTime \u003d new DateTime(startDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"venuslimm"},"content":"     * Sets the {@code endDateTime} of the {@code Event} that we are building.","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"venuslimm"},"content":"    public EventBuilder withEndDateTime(String endDateTime) {","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"venuslimm"},"content":"        this.endDateTime \u003d new DateTime(endDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"venuslimm"},"content":"        return this;","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"venuslimm"},"content":"    public Event build() {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"venuslimm"},"content":"        return new Event(name, startDateTime, endDateTime);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":65}},{"path":"src/test/java/seedu/address/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_NAME;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"inas0ng"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" * A utility class for Event.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"public class EventUtil {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"     * Returns an add event command string for adding the {@code event}.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"    public static String getAddEventCommand(Event event) {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"        return AddEventCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"        sb.append(PREFIX_EVENT_NAME + event.getName().name + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"        sb.append(PREFIX_START_DATE_TIME + event.getStartDateTime().dateTime + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"        sb.append(PREFIX_END_DATE_TIME + event.getEndDateTime().dateTime + \" \");","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"inas0ng"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"inas0ng"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"inas0ng"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"inas0ng"},"content":"    public static String getEditEventDescriptorDetails(EditEventCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"inas0ng"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"inas0ng"},"content":"        descriptor.getEventName().ifPresent(eventName -\u003e sb.append(PREFIX_EVENT_NAME).append(eventName).append(\" \"));","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"inas0ng"},"content":"        descriptor.getStartDateTime().ifPresent(startDateTime -\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"inas0ng"},"content":"                sb.append(PREFIX_START_DATE_TIME).append(startDateTime).append(\" \"));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"inas0ng"},"content":"        descriptor.getEndDateTime().ifPresent(endDateTime -\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"inas0ng"},"content":"                sb.append(PREFIX_END_DATE_TIME).append(endDateTime).append(\" \"));","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"inas0ng"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"inas0ng"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":32,"inas0ng":14}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"    private Set\u003cEvent\u003e eventSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"        eventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"weilin1202"},"content":"        eventSet \u003d new HashSet\u003c\u003e(personToCopy.getEventSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"weilin1202"},"content":"     * Parses the {@code tags} into a {@code Set\u003cEventTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"weilin1202"},"content":"    public PersonBuilder withEventSet(Event ... events) {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"weilin1202"},"content":"        this.eventSet \u003d SampleDataUtil.getEventSet(events);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"weilin1202"},"content":"     * Remove all tags from the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"weilin1202"},"content":"    public PersonBuilder withoutEventSet() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"weilin1202"},"content":"        this.eventSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":101,"author":{"gitId":"weilin1202"},"content":"        return new Person(name, phone, email, address, eventSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"weilin1202":13,"-":91}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_SET;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"weilin1202"},"content":"        person.getEventSet().stream().forEach(","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"            s -\u003e sb.append(PREFIX_EVENT_SET + s.getName().toString() + \" \")","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"weilin1202"},"content":"        if (descriptor.getEventSet().isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"weilin1202"},"content":"            Set\u003cEvent\u003e eventSet \u003d descriptor.getEventSet().get();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"            if (eventSet.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"weilin1202"},"content":"                sb.append(PREFIX_EVENT_SET);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"                eventSet.forEach(s -\u003e sb.append(PREFIX_EVENT_SET).append(s.getName().toString()).append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"weilin1202":9,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalAddressBook.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalEvents;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":" * A utility class containing a list of {@code Person} and {@code Event} objects to be used in tests.","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"public class TypicalAddressBook {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    private TypicalAddressBook() {};","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"            ab.addPerson(person);","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"            ab.addEvent(event);","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        return ab;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"weilin1202":31}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"venuslimm"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"venuslimm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"venuslimm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"venuslimm"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"venuslimm"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"venuslimm"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"venuslimm"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"venuslimm"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"venuslimm"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"venuslimm"},"content":"    public static final Event WEDDING_DINNER \u003d new EventBuilder().withName(\"Wedding Dinner\")","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"venuslimm"},"content":"            .withStartDateTime(\"01-01-2024 19:00\")","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"venuslimm"},"content":"            .withEndDateTime(\"01-01-2024 22:00\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"venuslimm"},"content":"    public static final Event CARNIVAL \u003d new EventBuilder().withName(\"Carnival\")","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"venuslimm"},"content":"            .withStartDateTime(\"17-07-2023 12:00\")","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"venuslimm"},"content":"            .withEndDateTime(\"21-07-2023 22:00\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"venuslimm"},"content":"    public static final Event SPORTS_DAY \u003d new EventBuilder().withName(\"Company ABC Sports Day\")","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"venuslimm"},"content":"            .withStartDateTime(\"03-03-2024 09:00\")","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"venuslimm"},"content":"            .withEndDateTime(\"03-03-2024 18:00\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"venuslimm"},"content":"    public static final Event BIRTHDAY_PARTY \u003d new EventBuilder().withName(\"CEO\u0027s 50th birthday party\")","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"venuslimm"},"content":"            .withStartDateTime(\"03-08-2023 15:00\")","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"venuslimm"},"content":"            .withEndDateTime(\"03-08-2023 21:00\").build();","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"venuslimm"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"venuslimm"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"venuslimm"},"content":"     * Returns an {@code AddressBook} with all the typical events.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"venuslimm"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"venuslimm"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"venuslimm"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"venuslimm"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"venuslimm"},"content":"            ab.addEvent(event);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"venuslimm"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"venuslimm"},"content":"        return ab;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"venuslimm"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"venuslimm"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"venuslimm"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(WEDDING_DINNER, CARNIVAL, SPORTS_DAY, BIRTHDAY_PARTY));","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"venuslimm"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"venuslimm"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"venuslimm":43}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexSets.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"weilin1202"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"weilin1202"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"weilin1202"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"weilin1202"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"weilin1202"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"weilin1202"},"content":" * A utility class containing a list of {@code Set\u003cIndex\u003e} objects to be used in tests.","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"weilin1202"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"public class TypicalIndexSets {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"    public static final Set\u003cIndex\u003e INDEX_SET_NO_EVENT \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"weilin1202"},"content":"    public static final Set\u003cIndex\u003e INDEX_SET_FIRST_EVENT \u003d set(Index.fromOneBased(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"weilin1202"},"content":"    public static final Set\u003cIndex\u003e INDEX_SET_SECOND_EVENT \u003d set(Index.fromOneBased(2));","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"weilin1202"},"content":"    public static final Set\u003cIndex\u003e INDEX_SET_THIRD_EVENT \u003d set(Index.fromOneBased(3));","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"weilin1202"},"content":"    public static final Set\u003cIndex\u003e INDEX_SET_FIRST_TWO_EVENT \u003d set2(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"weilin1202"},"content":"    public static Set\u003cIndex\u003e set(Index index) {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"weilin1202"},"content":"        set.add(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"weilin1202"},"content":"        return set;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"weilin1202"},"content":"    public static Set\u003cIndex\u003e set2(Index index1, Index index2) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"weilin1202"},"content":"        Set\u003cIndex\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"weilin1202"},"content":"        set.add(index1);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"weilin1202"},"content":"        set.add(index2);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"        return set;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"weilin1202"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"weilin1202":34}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"inas0ng"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"inas0ng"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"inas0ng"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"inas0ng"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"weilin1202"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"weilin1202":2,"-":12,"inas0ng":4}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.CARNIVAL;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.SPORTS_DAY;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"weilin1202"},"content":"import static seedu.address.testutil.TypicalEvents.WEDDING_DINNER;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"weilin1202"},"content":"            .withEventSet(WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"weilin1202"},"content":"            .withEventSet(WEDDING_DINNER, CARNIVAL).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"weilin1202"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withEventSet(WEDDING_DINNER).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"weilin1202"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withEventSet(CARNIVAL).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"weilin1202"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"weilin1202"},"content":"            .withEventSet(SPORTS_DAY, CARNIVAL)","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"weilin1202":9,"-":69}}]
