[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2223S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"# Introduction","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"Mycelium is a desktop application aimed at helping freelance web developers","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"manage clients and projects from multiple online sources. All interactions","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"with Mycelium are through text commands, allowing for efficient manipulation","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"of data while benefiting from the ease of viewing offered by the Graphical","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"User Interface.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"# Main Layout","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"As shown in the mockup above, Mycelium has two main tabs. One tab lists all","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"existing projects, and the other lists existing clients.","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"immanuelhume":13,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"mainClassName \u003d \u0027mycelium.mycelium.Main\u0027","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"//    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.5.1\u0027","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: \u00274.0.16-alpha\u0027","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    testImplementation group: \u0027org.assertj\u0027, name: \u0027assertj-core\u0027, version: \u00273.13.2\u0027","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"    archiveFileName \u003d \u0027mycelium.jar\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":1,"-":70,"immanuelhume":5,"RubyNguyen07":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"### Nguyen Hong Ngoc","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"\u003cimg src\u003d\"images/rubynguyen07.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"[[github](http://github.com/RubyNguyen07)]","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"[[portfolio](team/rubynguyen07.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"* Role: Developer","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"* Responsibilities: UI for Clients view","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"### Douglas Chow","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"\u003cimg src\u003d\"images/douglch.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"[[github](http://github.com/douglch)]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"[[portfolio](team/douglch.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"* Role: In charge of `Client`","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"* Responsibilities: Writing and testing the class for Client Panel - Create, Delete.","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"### Li Junyi","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"\u003cimg src\u003d\"images/immanuelhume.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"[[github](http://github.com/immanuelhume)]","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"[[portfolio](team/immanuelhume.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"* Responsibilities: Project entity and CRUD","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"### Stanley Neoh","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"\u003cimg src\u003d\"images/stanleyneoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"[[github](https://github.com/StanleyNeoh)]","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"[[portfolio](team/stanleyneoh.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"* Responsibilities: Writing and testing the GUI for the Project Panel","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"### Sachin Kalinga","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"\u003cimg src\u003d\"images/sachindavid96.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"[[github](http://github.com/sachindavid96)]","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"[[portfolio](team/sachindavid96.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"* Responsibilities: Implementing the Parser","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"sachindavid96":5,"StanleyNeoh":12,"-":33,"RubyNguyen07":6,"Douglch":4}},{"path":"docs/Configuration.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Configuration guide","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Configuration","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"**Relevant classes:**","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"[`Config.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/commons/core/Config.java),","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"[`UserPrefs.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/UserPrefs.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"Certain properties of the application can be controlled (e.g. user preferences","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"file location, logging level) through the configuration file (default:","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"`config.json`). A default configuration file is generated the first time the","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"application is run. It is in JSON format and contains name-value pairs. As of","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"now, there are only two configuration options:","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"1. Log level, defaulting to `INFO`","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"1. Path to preferences settings, defaulting to `preferences.json`","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"The `preferences.json` file saves user preferences, such as the last recorded","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"window size and position, as well as the path to the data file. You may inspect","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"these files directly for more information.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":5,"immanuelhume":20}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"title: Devops guide","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## DevOps","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"### Build automation","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"This project uses Gradle for **build automation and dependency management**.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"**You are recommended to read [this Gradle Tutorial from the","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"  files in the `build` folder).\u003cbr\u003ee.g. `./gradlew clean`","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to create a fat JAR file in the","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"  `build/lib` folder, *if the current file is outdated*.\u003cbr\u003ee.g. `./gradlew shadowJar`.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"### Continuous integration (CI)","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"GitHub Actions configurations files (in the `.github/workflows` folder). No","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"further setting up required.","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"#### Code coverage","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"runs, it will generate code coverage data (based on the tests run by CI) and","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"upload that data to the CodeCov website, which in turn can provide you more","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"info about the coverage of your tests.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"However, because Codecov is known to run into intermittent problems (e.g.,","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"report upload fails) due to issues on the Codecov service side, the CI is","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"configured to pass even if the Codecov task failed. Therefore, developers are","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"advised to check the code coverage levels periodically and take corrective","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"To enable Codecov for forks of this project, follow the steps given in [this","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"#### Repository-wide checks","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks.","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"Unlike the Gradle checks which only cover files used in the build process,","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"these repository-wide checks cover all files in the repository. They check for","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"repository rules which are hard to enforce on development machines such as line","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"ending requirements.","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"on POSIX-compliant operating systems such as macOS and Linux. To run all checks","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"locally on these operating systems, execute the following in the repository","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"root directory:","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"`./.github/run-checks.sh`","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github`","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"  directory. The `run-checks.sh` script will automatically pick up and run","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"  files named as such. That is, you can add more such files if you need and the","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"  CI will do the rest.","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE:","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"  MESSAGE`","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"    message explaining the error.","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"### Making a release","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"1. Update the version number in","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"   [`MainApp.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/MainApp.java).","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"1. Generate a fat JAR file using Gradle (i.e., `./gradlew shadowJar`).","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"1. [Create a new release using","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"   GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"   file you created.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":49,"immanuelhume":53}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"* Libraries used: [JavaFX](https://openjfx.io/),","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"  [Jackson](https://github.com/FasterXML/jackson),","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"  [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"* With inspiration from: [fzf](https://github.com/junegunn/fzf) (for fuzzy","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"  finding), [Vim](https://www.vim.org/) (for hotkeys)","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"* With GUI testing structure based on: [Address book-level4](https://github.com/se-edu/addressbook-level4)","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"* Originally forked from: [AddressBook","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"  3](https://github.com/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"## Using this Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"This guide is written for anyone who wishes to hack on the Mycelium codebase.","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"It assumes basic knowledge of Java as well as the ability to read UML diagrams.","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"### Icons and conventions","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"The following typographical conventions are used in this guide.","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"* (KEYCAP) - Indicates a literal set of keys, e.g. (CTRL+F) refers to the","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"  combination of the \u0027Control\u0027 and \u0027F\u0027 keys.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"Throughout this guide, you might encounter certain boxes which like the ones","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"below. Here is what each of them means.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":":bulb: This box signifies a tip or suggestion.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":":information_source: This box signifies a general note.","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":":warning: This box indicates a warning or caution.","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"### Content overview","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"This guide has been divided into five main parts.","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"* [Design](#design) discusses the high level architecture of Mycelium","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"* [User Interface](#user-interface) discusses GUI concerns","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"* [Command Handling](#command-handling) discusses the parsing and executing of commands","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"* [Storage](#storage) briefly explains Mycelium\u0027s approach to persisting data","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"* [Keyboard Interaction](#keyboard-interaction) discusses hotkeys and fuzzy search","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"We strive to write each section in a relatively self-contained manner, but some","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"cross-referencing might be necessary.","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"### Setting up locally","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"This guide assumes that you have already set up Mycelium on your computer. For","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"information on how to do this, see the [setting up guide](/tp/SettingUp.html).","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"## Design","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"![Architecture Class Diagram](images/archi/ArchitectureClassDiagram.png \"Architecture Class Diagram\")","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/MainApp.java).","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"It is responsible for,","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"![Components Class Diagram](images/archi/ComponentsClassDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/ui/Ui.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"{TODO update diagram}","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"{TODO update link}","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/logic/Logic.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"StanleyNeoh"},"content":"\u003cimg src\u003d\"images/logic/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"sachindavid96"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddProjectCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"sachindavid96"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a project).","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"sachindavid96"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"dp -pn Mycelium\")` API call.","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"StanleyNeoh"},"content":"![Interactions Inside the Logic Component for the `dp -pn Mycelium` Command](images/logic/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"sachindavid96"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteProjectCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"\u003cimg src\u003d\"images/logic/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"sachindavid96"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddProjectCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddProjectCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"sachindavid96"},"content":"* All `XYZCommandParser` classes (e.g., `AddProjectCommandParser`, `DeleteProjectCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"### Smaller components used by Model component","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"***Classes:*** [`Client.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/client/Client.java), [`Project.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/project/Project.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"![ClientAndProjectClassDiagram](images/model/ModelClassDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"The `Model` box is the central component of the Mycelium\u0027s data. It contains","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"the entities `Client` and `Project` which are used to store the data of each","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"entity.","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"The `Client` class contains the attributes for a client\u0027s `Name`, `Email`,","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"`YearOfBirth`, source and `Phone` number, where the name and email are","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"compulsory fields. The rest of the attributes are optional, and hence stored in","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"`Optional` objects. The source attribute is a `String`.","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"The `Project` class contains the attributes for a project\u0027s `Name`,","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"`ProjectStatus`, `Email`, source, description, acceptedOn and deadline, where","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"the project name and email are compulsory fields. The rest of the attributes","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"are optional, where source, description and deadline are wrapped in `Optional`","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"objects. These optional attributes are typed:","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"- source: String","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"- projectStatus: `ProjectStatus`","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"- description: String","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"- acceptedOn: `LocalDate`","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"Douglch"},"content":"- deadline: `LocalDate`","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"Each entity uses different methods, which they inherit from `ClientModel` and","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"`ProjectModel` interface via the `Model` interface respectively.","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"Moreover, each entity is also stored in a `UniqueList`, which ensures that the","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"list do not contain duplicates. `UniqueList` from each entity is then stored in","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"`AddressBook`, which contains the overarching methods for handling each type of","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"list.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Douglch"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/storage/Storage.java)","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"Douglch"},"content":"![Structure of the Storage Component](images/storage/StorageClassDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Douglch"},"content":"Classes used by multiple components are in the `mycelium.mycelium.commons` package.","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"immanuelhume"},"content":":information_source: The following three sections discuss implementation","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"immanuelhume"},"content":"details. We have divided them into three overarching themes: [User","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"Interface](#user-interface), [Command Handling](#command-handling), and","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":"[Keyboard Interactions](#keyboard-interactions).","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"immanuelhume"},"content":"## User Interface","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"immanuelhume"},"content":"### Statistics Dashboard","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"immanuelhume"},"content":"Statistics Dashboard displays statistics regarding Projects. There are three","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"RubyNguyen07"},"content":"main statistics: projects that are due soon, projects that are overdue","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"immanuelhume"},"content":"and a pie chart showing progress overview. The goal of this feature is to provide users","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"immanuelhume"},"content":"with useful information related to productivity to make adjustments accordingly.","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"RubyNguyen07"},"content":"For projects that are due soon, all projects that have deadlines within the current week","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"RubyNguyen07"},"content":"and next week will be displayed (Week starts from Sunday). For example, if the current","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"RubyNguyen07"},"content":"date is 11/04/2023, all projects with deadlines from 09/04/2023 to 22/04/2023 will be","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"RubyNguyen07"},"content":"shown on the **Due soon project list**.","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"immanuelhume"},"content":"For overdue list, all overdue projects will be displayed to make sure that users can","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"RubyNguyen07"},"content":"keep track of all the deadlines they have missed. Any deadlines before the current date will be","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"RubyNguyen07"},"content":"counted as overdue. For example, if the current date is 11/04/2023, projects with deadlines on 11/04/2023","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"RubyNguyen07"},"content":"will not be shown in **Overdue project list**, but projects with deadlines on 10/04/2023 will be shown in the **Overdue","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"RubyNguyen07"},"content":"project list**.","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"RubyNguyen07"},"content":"Both of **Due and Overdue project lists** utilize LocalDate library in Java to perform various operations on dates.","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"RubyNguyen07"},"content":"For Progress Overview Pie chart, there will be at most three segments. The three segments","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"immanuelhume"},"content":"will correspond to three project statuses, which are `not_started`, `done` and `in_progress`.","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"immanuelhume"},"content":"The size of each segment is proportional to the number of projects with its corresponding segment","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"immanuelhume"},"content":"label.","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"RubyNguyen07"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"RubyNguyen07"},"content":":warning: The color of each segment is not related to the status.","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"immanuelhume"},"content":"#### Updating the UI","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"RubyNguyen07"},"content":"For **Due soon project lists**, **Overdue project lists** and **Pie chart**, `FilteredList` retrieved by","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"immanuelhume"},"content":"using `Logic#getFilteredProjectList` cannot be used because it will affect the UI. Besides,","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"immanuelhume"},"content":"all the statistics need filtering out, making it not possible to use `FilteredList#setPredicate`.","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"immanuelhume"},"content":"Thus, for the dashboard to update accordingly as changes are made to project list, a `ListChangeListener`","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"immanuelhume"},"content":"will be attached to the original list of projects. Whenever there is a change in the project list (e.g.","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"RubyNguyen07"},"content":"a new project is added), all the statistics will be updated as well. These changes could be due to","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"RubyNguyen07"},"content":"increased number of projects (e.g. a new project is created), or an existing project is modified.","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"RubyNguyen07"},"content":"Moreover, when there are no projects available matching the requirements of Due soon and Overdue project lists,","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"RubyNguyen07"},"content":"there will be messages displayed under the tab heading.","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"RubyNguyen07"},"content":"![NoOverdueProjectsMessage](images/NoOverdueProjectsMessage.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"RubyNguyen07"},"content":"The diagram following shows us that the MainWindow is responsible for instantiating the StatisticsBox.","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"immanuelhume"},"content":"The fillInnerParts() method is part of the UI\u0027s initialization routine. The `ObservableList\u003cProject\u003e#addListener()`","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"RubyNguyen07"},"content":"will be called to listen for changes in project list. During the initialization of the StatisticsBox instance, data","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"RubyNguyen07"},"content":"for the **Due soon**, **Overdue** project list and **Pie chart** is also loaded.","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":260,"author":{"gitId":"immanuelhume"},"content":"![StatisticsBoxActivityDiagram](images/StatisticsBoxActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"immanuelhume"},"content":"### Tabs panel","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"RubyNguyen07"},"content":"In Mycelium, there are four main tabs: **Projects**, **Clients**, **Due soon** and **Overdue**.","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"RubyNguyen07"},"content":"The **Projects** tab will be responsible for displaying all projects created while the **Clients** tab","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"RubyNguyen07"},"content":"will display all clients created. Each of these two tabs is a `EntityTab` object, and contains a `EntityList` of","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"RubyNguyen07"},"content":"`Project` for **Projects** tab and `Client` for **Clients** tab. Both will be in the same","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"RubyNguyen07"},"content":"panel `EntityPanel` on the left side of the application view.","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"RubyNguyen07"},"content":"The **Due soon** tab will be responsible for displaying all projects that are due soon while the **Overdue** tab","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"RubyNguyen07"},"content":"will display all projects that are overdue as mentioned in the [Statistics Dashboard](#statistics-dashboard) section.","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"RubyNguyen07"},"content":"Each of these two tabs is a `StatisticsTab` object, and contains a `EntityList` of `Project`. Both of these two","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"RubyNguyen07"},"content":"tabs will be in the same panel `StatisticsPanel` on the right side of the application view.","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"RubyNguyen07"},"content":"![Tabs](images/Tabs.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"RubyNguyen07"},"content":"For demonstration purposes, the following is the Activity Diagram when a `EntityPanel` is initialized:","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"RubyNguyen07"},"content":"![EntityTabPanelActivityDiagram](images/TabActivityDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"RubyNguyen07"},"content":"For more information about interacting with the tabs using hotkeys, please refer to the","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"RubyNguyen07"},"content":"[Hotkeys with UiEvents](#hotkeys-with-uievents) section.","lastModifiedDate":"2023-03-30"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"immanuelhume"},"content":"## Keyboard Interaction","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"StanleyNeoh"},"content":"### Hotkeys with UiEvents","lastModifiedDate":"2023-03-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"StanleyNeoh"},"content":"UiEvents is an abstraction of keyboard events that can trigger changes in","lastModifiedDate":"2023-03-29"},{"lineNumber":291,"author":{"gitId":"StanleyNeoh"},"content":"user interface or perform some action. These keyboard events are handled by","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"StanleyNeoh"},"content":"UiEvent handlers that are bundled together within the `UiEventManager` class.","lastModifiedDate":"2023-03-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"StanleyNeoh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":295,"author":{"gitId":"StanleyNeoh"},"content":":information_source: We will occasionally refer to each of these event handlers as a `Key`","lastModifiedDate":"2023-03-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"StanleyNeoh"},"content":"The following is the class diagram of the","lastModifiedDate":"2023-03-29"},{"lineNumber":299,"author":{"gitId":"immanuelhume"},"content":"`UiEventManager` class.","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"immanuelhume"},"content":"![UiEventManager class diagram](images/uievent/UiEventManager.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"StanleyNeoh"},"content":"There are currently 10 registered event handlers, namely:","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"StanleyNeoh"},"content":"* `HelpKey` Help (F1)","lastModifiedDate":"2023-03-29"},{"lineNumber":305,"author":{"gitId":"StanleyNeoh"},"content":"* `QuitKey` Quit (CTRL+Q)","lastModifiedDate":"2023-03-29"},{"lineNumber":306,"author":{"gitId":"StanleyNeoh"},"content":"* `StartOfLineKey` Start of Line (CTRL+W)","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"StanleyNeoh"},"content":"* `EndOfLineKey` End of Line (CTRL+E)","lastModifiedDate":"2023-03-29"},{"lineNumber":308,"author":{"gitId":"StanleyNeoh"},"content":"* `ClearKey` Clear line (CTRL+D)","lastModifiedDate":"2023-03-29"},{"lineNumber":309,"author":{"gitId":"StanleyNeoh"},"content":"* `SwitchPanelKey` Switch Panels (CTRL+S)","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"StanleyNeoh"},"content":"* `SwitchTabKey` Switch Tabs (CTRL+L)","lastModifiedDate":"2023-03-29"},{"lineNumber":311,"author":{"gitId":"StanleyNeoh"},"content":"* `NextItemKey` Select next (CTRL+J)","lastModifiedDate":"2023-03-29"},{"lineNumber":312,"author":{"gitId":"StanleyNeoh"},"content":"* `PrevItemKey` Select previous (CTRL+K)","lastModifiedDate":"2023-03-29"},{"lineNumber":313,"author":{"gitId":"StanleyNeoh"},"content":"* `FindKey` Search (CTRL+F)","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":315,"author":{"gitId":"StanleyNeoh"},"content":"Each of these event handler perform an action associated with a keyboard event.","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"StanleyNeoh"},"content":"The action performed by each event handler can be found and modified in their respectively","lastModifiedDate":"2023-03-29"},{"lineNumber":317,"author":{"gitId":"StanleyNeoh"},"content":"named files found in the `java/mycelium/mycelium/logic/uievent` folder.","lastModifiedDate":"2023-03-29"},{"lineNumber":318,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"StanleyNeoh"},"content":"To find out more about the supported keyboard events and its associated actions","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"StanleyNeoh"},"content":"in Mycelium, please refer to the [User Guide](UserGuide.md#hotkeys).","lastModifiedDate":"2023-03-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"immanuelhume"},"content":"#### UiEvent Handling","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"StanleyNeoh"},"content":"The `UiEventManager` is responsible for calling the appropriate event handler to handle","lastModifiedDate":"2023-03-29"},{"lineNumber":324,"author":{"gitId":"StanleyNeoh"},"content":"the incoming event. When a keyboard input is registered, the `UiEventManager#catchAndExecute(KeyEvent)`","lastModifiedDate":"2023-03-29"},{"lineNumber":325,"author":{"gitId":"StanleyNeoh"},"content":"method will be called with the incoming event as the argument.","lastModifiedDate":"2023-03-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"immanuelhume"},"content":"![EventHandling sequence diagram](images/uievent/EventHandling.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"StanleyNeoh"},"content":"The above seqeuence diagram shows what happens when a keyboard event is","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"StanleyNeoh"},"content":"registered. To keep the diagram simple, we only explicitly show two","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"StanleyNeoh"},"content":"out of the 10 registered event handlers as the other event handlers","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"StanleyNeoh"},"content":"work in a similar manner.","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"Douglch"},"content":"The key combination that triggered the event will be checked against","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"StanleyNeoh"},"content":"each of the registered event handlers to decide which event handler to invoke.","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":336,"author":{"gitId":"immanuelhume"},"content":"![GenericKey sequence diagram](images/uievent/GenericKey/GenericKey.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":338,"author":{"gitId":"StanleyNeoh"},"content":"The above sequence diagram shows what happens once there is a match with a","lastModifiedDate":"2023-03-29"},{"lineNumber":339,"author":{"gitId":"StanleyNeoh"},"content":"generic event handler. An instance of the respective `Key` will be created,","lastModifiedDate":"2023-03-29"},{"lineNumber":340,"author":{"gitId":"StanleyNeoh"},"content":"and executed. The event is then consumed to prevent the event from propagating","lastModifiedDate":"2023-03-29"},{"lineNumber":341,"author":{"gitId":"StanleyNeoh"},"content":"any further to the inner UI elements.","lastModifiedDate":"2023-03-29"},{"lineNumber":342,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":343,"author":{"gitId":"immanuelhume"},"content":"![GenericKeyExecute sequence diagram](images/uievent/GenericKey/GenericKeyExecute.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":345,"author":{"gitId":"StanleyNeoh"},"content":"The above sequence diagram shows how the user interface can be modified during","lastModifiedDate":"2023-03-29"},{"lineNumber":346,"author":{"gitId":"StanleyNeoh"},"content":"the execution of the `Key` instance. The `Key` calls the respective method of","lastModifiedDate":"2023-03-29"},{"lineNumber":347,"author":{"gitId":"StanleyNeoh"},"content":"the `MainWindow` which in turns calls the respective UI component to perform","lastModifiedDate":"2023-03-29"},{"lineNumber":348,"author":{"gitId":"StanleyNeoh"},"content":"the action associated with the event.","lastModifiedDate":"2023-03-29"},{"lineNumber":349,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":350,"author":{"gitId":"StanleyNeoh"},"content":"We will use the `SwitchTabKey` event handler as a concrete example. The following","lastModifiedDate":"2023-03-29"},{"lineNumber":351,"author":{"gitId":"StanleyNeoh"},"content":"sequence diagrams show what happens when the `SwitchTabKey` event handler is invoked.","lastModifiedDate":"2023-03-29"},{"lineNumber":352,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":353,"author":{"gitId":"immanuelhume"},"content":"![SwitchTabKey sequence diagram](images/uievent/SwitchTabKey/SwitchTabKey.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":354,"author":{"gitId":"immanuelhume"},"content":"![SwitchTabKeyExecute sequence diagram](images/uievent/SwitchTabKey/SwitchTabKeyExecute.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":355,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"StanleyNeoh"},"content":"Note that not all event handlers are built the same. An example of a more","lastModifiedDate":"2023-03-29"},{"lineNumber":357,"author":{"gitId":"StanleyNeoh"},"content":"complicated event handler will be `FindKey` which we will elaborate more","lastModifiedDate":"2023-03-29"},{"lineNumber":358,"author":{"gitId":"StanleyNeoh"},"content":"in the next section.","lastModifiedDate":"2023-03-29"},{"lineNumber":359,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":360,"author":{"gitId":"StanleyNeoh"},"content":"### Command Box","lastModifiedDate":"2023-03-29"},{"lineNumber":361,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":362,"author":{"gitId":"StanleyNeoh"},"content":"The command box in Mycelium can be in one of 2 `Mode` of operation, namely, `CommandMode` and `SearchMode`,","lastModifiedDate":"2023-03-29"},{"lineNumber":363,"author":{"gitId":"StanleyNeoh"},"content":"and supports switching between these 2 modes.","lastModifiedDate":"2023-03-29"},{"lineNumber":364,"author":{"gitId":"StanleyNeoh"},"content":"A `Mode` is modular component that is attached to the command box which","lastModifiedDate":"2023-03-29"},{"lineNumber":365,"author":{"gitId":"StanleyNeoh"},"content":"dictates the behaviour of the command box on input change and on submit.","lastModifiedDate":"2023-03-29"},{"lineNumber":366,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":367,"author":{"gitId":"StanleyNeoh"},"content":"The following is class diagram of the command box.","lastModifiedDate":"2023-03-29"},{"lineNumber":368,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":369,"author":{"gitId":"StanleyNeoh"},"content":"![CommandBox class diagram](images/CommandBoxClassDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":371,"author":{"gitId":"StanleyNeoh"},"content":"#### Changing Modes","lastModifiedDate":"2023-03-29"},{"lineNumber":372,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":373,"author":{"gitId":"StanleyNeoh"},"content":"The user can toggle between `SearchMode` and `CommandMode` with a keyboard event","lastModifiedDate":"2023-03-29"},{"lineNumber":374,"author":{"gitId":"StanleyNeoh"},"content":"invoking the `FindKey` event handler. Please refer to the","lastModifiedDate":"2023-03-29"},{"lineNumber":375,"author":{"gitId":"StanleyNeoh"},"content":"[UiEvent Handling](#uievent-handling) section for more information of how Mycelium","lastModifiedDate":"2023-03-29"},{"lineNumber":376,"author":{"gitId":"StanleyNeoh"},"content":"handles keyboard event.","lastModifiedDate":"2023-03-29"},{"lineNumber":377,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":378,"author":{"gitId":"StanleyNeoh"},"content":"The following sequence diagrams show what happens when `FindKey` event handler","lastModifiedDate":"2023-03-29"},{"lineNumber":379,"author":{"gitId":"StanleyNeoh"},"content":"is invoked.","lastModifiedDate":"2023-03-29"},{"lineNumber":380,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":381,"author":{"gitId":"immanuelhume"},"content":"![FindKey sequence diagram](images/uievent/FindKey/ToggleMode.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":382,"author":{"gitId":"immanuelhume"},"content":"![FindKeyExecute sequence diagram](images/uievent/FindKey/ToggleModeExecute.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"StanleyNeoh"},"content":"Depending on the current `Mode` of the command box, triggering the `FindKey` event handler","lastModifiedDate":"2023-03-29"},{"lineNumber":385,"author":{"gitId":"StanleyNeoh"},"content":"creates the other `Mode` and calls `MainWindow#setCommandBoxMode(Mode)` which sets `Mode`","lastModifiedDate":"2023-03-29"},{"lineNumber":386,"author":{"gitId":"StanleyNeoh"},"content":"of the command box by calling `CommandBox#setMode(Mode)`.","lastModifiedDate":"2023-03-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":388,"author":{"gitId":"immanuelhume"},"content":"![CommandBoxSetMode sequence diagram](images/commandbox/CommandBoxSetMode.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":389,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"StanleyNeoh"},"content":"When `Mode#setMode(Mode)` is called, the command box will call `Mode#teardownMode()`","lastModifiedDate":"2023-03-29"},{"lineNumber":391,"author":{"gitId":"StanleyNeoh"},"content":"on its outgoing `Mode` to perform the necessary clean up which includes","lastModifiedDate":"2023-03-29"},{"lineNumber":392,"author":{"gitId":"StanleyNeoh"},"content":"reverting the input to its prior state. The command box then calls `Mode#setupMode(String)`","lastModifiedDate":"2023-03-29"},{"lineNumber":393,"author":{"gitId":"StanleyNeoh"},"content":"on the incoming `Mode` which will perform the necessary setup for the incoming `Mode`.","lastModifiedDate":"2023-03-29"},{"lineNumber":394,"author":{"gitId":"StanleyNeoh"},"content":"This includes caching the current input of the command box so that it can return the input","lastModifiedDate":"2023-03-29"},{"lineNumber":395,"author":{"gitId":"StanleyNeoh"},"content":"to its original state when incoming `Mode` is torn down in the future.","lastModifiedDate":"2023-03-29"},{"lineNumber":396,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":397,"author":{"gitId":"StanleyNeoh"},"content":"#### On submit","lastModifiedDate":"2023-03-29"},{"lineNumber":398,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":399,"author":{"gitId":"StanleyNeoh"},"content":"The following sequence diagram shows what happens when the user submits in the","lastModifiedDate":"2023-03-29"},{"lineNumber":400,"author":{"gitId":"StanleyNeoh"},"content":"command box.","lastModifiedDate":"2023-03-29"},{"lineNumber":401,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":402,"author":{"gitId":"immanuelhume"},"content":"![CommandBoxSubmit sequence diagram](images/commandbox/CommandBoxSubmit.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":404,"author":{"gitId":"StanleyNeoh"},"content":"When the user submits, the command box will call `Mode#onInputSubmit(String)`","lastModifiedDate":"2023-03-29"},{"lineNumber":405,"author":{"gitId":"StanleyNeoh"},"content":"on its current `Mode` with the text input. An `Optional\u003cMode\u003e` instance will be","lastModifiedDate":"2023-03-29"},{"lineNumber":406,"author":{"gitId":"StanleyNeoh"},"content":"returned which indicate the next `Mode` to change to if there is a `Mode`. Otherwise,","lastModifiedDate":"2023-03-29"},{"lineNumber":407,"author":{"gitId":"StanleyNeoh"},"content":"it will remain in keep its current `Mode`. This is utilised to switch back the command","lastModifiedDate":"2023-03-29"},{"lineNumber":408,"author":{"gitId":"StanleyNeoh"},"content":"box to `CommandMode` when submitting in `SearchMode`.","lastModifiedDate":"2023-03-29"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"StanleyNeoh"},"content":"#### On input change","lastModifiedDate":"2023-03-29"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"StanleyNeoh"},"content":"The following sequence diagram shows what happens when the user edits the input","lastModifiedDate":"2023-03-29"},{"lineNumber":413,"author":{"gitId":"StanleyNeoh"},"content":"of the command box.","lastModifiedDate":"2023-03-29"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"immanuelhume"},"content":"![CommandBoxInputChange sequence diagram](images/commandbox/CommandBoxInputChange.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"StanleyNeoh"},"content":"When the user edits the input, the command box will call `Mode#onInputChange(String)`","lastModifiedDate":"2023-03-29"},{"lineNumber":418,"author":{"gitId":"StanleyNeoh"},"content":"on its current `Mode` with the text input. This is utilised in `SearchMode` to allow","lastModifiedDate":"2023-03-29"},{"lineNumber":419,"author":{"gitId":"StanleyNeoh"},"content":"for interactive changes to the displayed projects and clients as the user types.","lastModifiedDate":"2023-03-29"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"immanuelhume"},"content":"### Fuzzy searching","lastModifiedDate":"2023-03-23"},{"lineNumber":422,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":423,"author":{"gitId":"immanuelhume"},"content":"A fuzzy search searches for text that matches a term closely instead of exactly.","lastModifiedDate":"2023-03-29"},{"lineNumber":424,"author":{"gitId":"immanuelhume"},"content":"In Mycelium, this is implemented using a modified version of [Levenshtein","lastModifiedDate":"2023-03-29"},{"lineNumber":425,"author":{"gitId":"immanuelhume"},"content":"distance](https://en.wikipedia.org/wiki/Levenshtein_distance), which measures","lastModifiedDate":"2023-03-29"},{"lineNumber":426,"author":{"gitId":"immanuelhume"},"content":"the \"distance\" between two strings. A lower distance corresponds to a better","lastModifiedDate":"2023-03-29"},{"lineNumber":427,"author":{"gitId":"immanuelhume"},"content":"match; a higher distance corresponds to a worse match. The goal of this feature","lastModifiedDate":"2023-03-29"},{"lineNumber":428,"author":{"gitId":"immanuelhume"},"content":"is to provide interactive fuzzy searching and display sorted results such that","lastModifiedDate":"2023-03-29"},{"lineNumber":429,"author":{"gitId":"immanuelhume"},"content":"the best match is at the top; here, \"interactive\" means that results are ranked","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"immanuelhume"},"content":"and displayed *as* the user types their query.","lastModifiedDate":"2023-03-29"},{"lineNumber":431,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":432,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":433,"author":{"gitId":"immanuelhume"},"content":":information_source: **Note:** We will use the terms \"fuzzy search\" and \"fuzzy","lastModifiedDate":"2023-03-23"},{"lineNumber":434,"author":{"gitId":"immanuelhume"},"content":"find\" interchangeably in this document. The term \"fuzzy ranking\" refers to the","lastModifiedDate":"2023-03-23"},{"lineNumber":435,"author":{"gitId":"immanuelhume"},"content":"entire routine of processing items, computing their Levenshtein distance","lastModifiedDate":"2023-03-23"},{"lineNumber":436,"author":{"gitId":"immanuelhume"},"content":"against some input, and sorting them such that the closest matches are at the","lastModifiedDate":"2023-03-23"},{"lineNumber":437,"author":{"gitId":"immanuelhume"},"content":"front.","lastModifiedDate":"2023-03-23"},{"lineNumber":438,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":439,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":440,"author":{"gitId":"immanuelhume"},"content":"This section will briefly cover the idea behind the fuzzy ranking algorithm.","lastModifiedDate":"2023-03-29"},{"lineNumber":441,"author":{"gitId":"immanuelhume"},"content":"For full details regarding how the scoring is done, it is best to refer to [the","lastModifiedDate":"2023-03-29"},{"lineNumber":442,"author":{"gitId":"immanuelhume"},"content":"code](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/util/Fuzzy.java)","lastModifiedDate":"2023-03-29"},{"lineNumber":443,"author":{"gitId":"immanuelhume"},"content":"directly.","lastModifiedDate":"2023-03-29"},{"lineNumber":444,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":445,"author":{"gitId":"immanuelhume"},"content":"The scoring algorithm is implemented in the `Fuzzy` class in two pure","lastModifiedDate":"2023-03-29"},{"lineNumber":446,"author":{"gitId":"immanuelhume"},"content":"functions - `Fuzzy#delta` and `Fuzzy#levenshtein`, both returning a `double`","lastModifiedDate":"2023-03-29"},{"lineNumber":447,"author":{"gitId":"immanuelhume"},"content":"between 0 and 1 inclusive. A score of 1 indicates a perfect match, and lower","lastModifiedDate":"2023-03-29"},{"lineNumber":448,"author":{"gitId":"immanuelhume"},"content":"scores indicate poorer matches.","lastModifiedDate":"2023-03-29"},{"lineNumber":449,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":450,"author":{"gitId":"immanuelhume"},"content":"* `Fuzzy#delta` is a simpler algorithm which takes a query string and a target,","lastModifiedDate":"2023-03-29"},{"lineNumber":451,"author":{"gitId":"immanuelhume"},"content":"  and expects to find the query string as a subsequence of the target. In other","lastModifiedDate":"2023-03-29"},{"lineNumber":452,"author":{"gitId":"immanuelhume"},"content":"  words, it expects to find every character of the query within the target, and","lastModifiedDate":"2023-03-29"},{"lineNumber":453,"author":{"gitId":"immanuelhume"},"content":"  in the same order.","lastModifiedDate":"2023-03-29"},{"lineNumber":454,"author":{"gitId":"immanuelhume"},"content":"* `Fuzzy#levenshtein` computes the Levenshtein distance between two strings,","lastModifiedDate":"2023-03-29"},{"lineNumber":455,"author":{"gitId":"immanuelhume"},"content":"  and then normalizes it into the range [0, 1].","lastModifiedDate":"2023-03-29"},{"lineNumber":456,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":457,"author":{"gitId":"immanuelhume"},"content":"Suppose we have a query string and a list of items to rank, according to how","lastModifiedDate":"2023-03-29"},{"lineNumber":458,"author":{"gitId":"immanuelhume"},"content":"well they match the query. In broad strokes, the algorithm proceeds as such:","lastModifiedDate":"2023-03-29"},{"lineNumber":459,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":460,"author":{"gitId":"immanuelhume"},"content":"1. Compute `Fuzzy#delta` for each item.","lastModifiedDate":"2023-03-29"},{"lineNumber":461,"author":{"gitId":"immanuelhume"},"content":"1. For each item which received a score above zero, sort them by descending","lastModifiedDate":"2023-03-29"},{"lineNumber":462,"author":{"gitId":"immanuelhume"},"content":"   scores and add them to the resulting list.","lastModifiedDate":"2023-03-29"},{"lineNumber":463,"author":{"gitId":"immanuelhume"},"content":"1. Compute `Fuzzy#levenshtein` for the *remaining items* only.","lastModifiedDate":"2023-03-29"},{"lineNumber":464,"author":{"gitId":"immanuelhume"},"content":"1. Repeat step (2) for the remaining items using the scores obtained from","lastModifiedDate":"2023-03-29"},{"lineNumber":465,"author":{"gitId":"immanuelhume"},"content":"   `Fuzzy#levenshtein`.","lastModifiedDate":"2023-03-29"},{"lineNumber":466,"author":{"gitId":"immanuelhume"},"content":"1. Return the resulting list.","lastModifiedDate":"2023-03-29"},{"lineNumber":467,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":468,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":469,"author":{"gitId":"immanuelhume"},"content":":bulb: The algorithm outlined above actually filters out all items which","lastModifiedDate":"2023-03-29"},{"lineNumber":470,"author":{"gitId":"immanuelhume"},"content":"receive a **zero** score from both `Fuzzy#delta` and `Fuzzy#levenshtein`. These","lastModifiedDate":"2023-03-29"},{"lineNumber":471,"author":{"gitId":"immanuelhume"},"content":"items would subsequently not be displayed to the user. If we raised this number","lastModifiedDate":"2023-03-29"},{"lineNumber":472,"author":{"gitId":"immanuelhume"},"content":"to, say, 0.1, then we can impose a stricter requirement on how well the items","lastModifiedDate":"2023-03-29"},{"lineNumber":473,"author":{"gitId":"immanuelhume"},"content":"match any given query, thus potentially filtering out more items. Hence, this","lastModifiedDate":"2023-03-29"},{"lineNumber":474,"author":{"gitId":"immanuelhume"},"content":"is a point for possible fine-tuning in the future.","lastModifiedDate":"2023-03-29"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":477,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":478,"author":{"gitId":"immanuelhume"},"content":":information_source: In Mycelium, fuzzy ranking is *not* case-sensitive. All","lastModifiedDate":"2023-04-04"},{"lineNumber":479,"author":{"gitId":"immanuelhume"},"content":"strings are converted to lowercase before any comparison.","lastModifiedDate":"2023-04-04"},{"lineNumber":480,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":482,"author":{"gitId":"immanuelhume"},"content":"#### `FuzzyManager`","lastModifiedDate":"2023-03-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":484,"author":{"gitId":"immanuelhume"},"content":"In order to use fuzzy search from the application, we also have the","lastModifiedDate":"2023-03-29"},{"lineNumber":485,"author":{"gitId":"immanuelhume"},"content":"`FuzzyManager` class which exposes a more convenient API for us to rank clients","lastModifiedDate":"2023-03-29"},{"lineNumber":486,"author":{"gitId":"immanuelhume"},"content":"and projects. The class diagram below shows a high level overview of the","lastModifiedDate":"2023-03-29"},{"lineNumber":487,"author":{"gitId":"immanuelhume"},"content":"classes involved.","lastModifiedDate":"2023-03-29"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":489,"author":{"gitId":"immanuelhume"},"content":"![FuzzyManagerHighLevelClassDiagram](images/fuzzy/FuzzyManagerHighLevelClassDiagram.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":491,"author":{"gitId":"immanuelhume"},"content":"The `FuzzyManager#rankItems` method is just a convenient pure function which,","lastModifiedDate":"2023-03-23"},{"lineNumber":492,"author":{"gitId":"immanuelhume"},"content":"when given a list of clients or projects and a query string, constructs a new","lastModifiedDate":"2023-03-23"},{"lineNumber":493,"author":{"gitId":"immanuelhume"},"content":"sorted and filtered list based on how well each item matches the query. It","lastModifiedDate":"2023-03-23"},{"lineNumber":494,"author":{"gitId":"immanuelhume"},"content":"relies on the algorithm implemented within the `Fuzzy` class.","lastModifiedDate":"2023-03-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":496,"author":{"gitId":"immanuelhume"},"content":"Note that part of this logic is implemented in the `SearchMode` class, which","lastModifiedDate":"2023-03-29"},{"lineNumber":497,"author":{"gitId":"immanuelhume"},"content":"has already been mentioned [above](#command-box). The `SearchMode` class","lastModifiedDate":"2023-03-29"},{"lineNumber":498,"author":{"gitId":"immanuelhume"},"content":"encapsulates the logic required to handle search requests (via a change in user","lastModifiedDate":"2023-03-29"},{"lineNumber":499,"author":{"gitId":"immanuelhume"},"content":"input) as well as applying updates to the UI. The following sequence diagrams","lastModifiedDate":"2023-03-29"},{"lineNumber":500,"author":{"gitId":"immanuelhume"},"content":"illustrate this in further detail.","lastModifiedDate":"2023-03-29"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":502,"author":{"gitId":"immanuelhume"},"content":"![FuzzyManagerSequenceDiagramA](images/fuzzy/FuzzyManagerSequenceDiagramA.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"immanuelhume"},"content":"![FuzzyManagerSequenceDiagramB](images/fuzzy/FuzzyManagerSequenceDiagramB.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":505,"author":{"gitId":"immanuelhume"},"content":"From above, we see that the `onInputChanged()` method on `SearchMode` is","lastModifiedDate":"2023-03-29"},{"lineNumber":506,"author":{"gitId":"immanuelhume"},"content":"invoked with the current contents of the command box. From here, it is a","lastModifiedDate":"2023-03-29"},{"lineNumber":507,"author":{"gitId":"immanuelhume"},"content":"three-step process.","lastModifiedDate":"2023-03-29"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":509,"author":{"gitId":"immanuelhume"},"content":"1. Retrieve an unmodified view of the clients and projects from a `Logic` instance","lastModifiedDate":"2023-03-29"},{"lineNumber":510,"author":{"gitId":"immanuelhume"},"content":"1. Pass the two lists through the `FuzzyManager#rankItems` method, which","lastModifiedDate":"2023-03-29"},{"lineNumber":511,"author":{"gitId":"immanuelhume"},"content":"   performs fuzzy ranking on the lists of clients and projects","lastModifiedDate":"2023-03-29"},{"lineNumber":512,"author":{"gitId":"immanuelhume"},"content":"1. Apply the two ranked lists to the `MainWindow`","lastModifiedDate":"2023-03-29"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":514,"author":{"gitId":"immanuelhume"},"content":"#### Updating the UI","lastModifiedDate":"2023-03-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":516,"author":{"gitId":"immanuelhume"},"content":"From the sequence diagram above, we see that updates to the UI after fuzzy","lastModifiedDate":"2023-04-05"},{"lineNumber":517,"author":{"gitId":"immanuelhume"},"content":"ranking is achieved by having `SearchMode` *set* the list of items in","lastModifiedDate":"2023-04-05"},{"lineNumber":518,"author":{"gitId":"immanuelhume"},"content":"`MainWindow`. This departs from the approach used in our CRUD operations, where","lastModifiedDate":"2023-03-29"},{"lineNumber":519,"author":{"gitId":"immanuelhume"},"content":"(immutable) references to a `FilteredList` of clients and projects were","lastModifiedDate":"2023-03-29"},{"lineNumber":520,"author":{"gitId":"immanuelhume"},"content":"obtained upon UI initialization, and any changes such as the creation or","lastModifiedDate":"2023-03-29"},{"lineNumber":521,"author":{"gitId":"immanuelhume"},"content":"deletion of a client were automatically propagated to the UI with no additional","lastModifiedDate":"2023-03-29"},{"lineNumber":522,"author":{"gitId":"immanuelhume"},"content":"setters required in our application\u0027s code.","lastModifiedDate":"2023-03-29"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":524,"author":{"gitId":"immanuelhume"},"content":"However, the inclusion of fuzzy search introduces an important requirement -","lastModifiedDate":"2023-03-23"},{"lineNumber":525,"author":{"gitId":"immanuelhume"},"content":"*arbitrary filtering and sorting* based on user input. Furthermore, upon the","lastModifiedDate":"2023-03-29"},{"lineNumber":526,"author":{"gitId":"immanuelhume"},"content":"user exiting fuzzy search mode, we need to revert the user\u0027s view of clients","lastModifiedDate":"2023-03-29"},{"lineNumber":527,"author":{"gitId":"immanuelhume"},"content":"and projects back to the way it was, before fuzzy searching began.","lastModifiedDate":"2023-03-29"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":529,"author":{"gitId":"immanuelhume"},"content":"In order to decouple these requirements from the more basic ones of CRUD, we","lastModifiedDate":"2023-03-23"},{"lineNumber":530,"author":{"gitId":"immanuelhume"},"content":"avoid modifying the original `FilteredList` owned by the UI. The general idea","lastModifiedDate":"2023-03-23"},{"lineNumber":531,"author":{"gitId":"immanuelhume"},"content":"is to replace the two lists of projects and clients every time the fuzzy","lastModifiedDate":"2023-03-23"},{"lineNumber":532,"author":{"gitId":"Douglch"},"content":"ranking is performed. Thus, the fuzzy ranking is free to perform any kind of","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"immanuelhume"},"content":"sorting and filtering it requires without worrying about any unintentional","lastModifiedDate":"2023-03-23"},{"lineNumber":534,"author":{"gitId":"Douglch"},"content":"side effects on the UI. After the user exits from fuzzy finding mode, the UI","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"immanuelhume"},"content":"then retrieves a clean reference to the lists of clients and projects from the","lastModifiedDate":"2023-03-23"},{"lineNumber":536,"author":{"gitId":"immanuelhume"},"content":"address book, which automatically reverts it to its pre-fuzzy state.","lastModifiedDate":"2023-03-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":538,"author":{"gitId":"immanuelhume"},"content":"#### `CommandBox` state","lastModifiedDate":"2023-04-05"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":540,"author":{"gitId":"immanuelhume"},"content":"The section on the [changing Command Box modes](#changing-modes) introduced the","lastModifiedDate":"2023-04-05"},{"lineNumber":541,"author":{"gitId":"immanuelhume"},"content":"role of this class in managing state between `SearchMode` and `CommandMode`. We","lastModifiedDate":"2023-04-05"},{"lineNumber":542,"author":{"gitId":"immanuelhume"},"content":"can now contextualize the differences between these two modes in relation to","lastModifiedDate":"2023-04-05"},{"lineNumber":543,"author":{"gitId":"immanuelhume"},"content":"fuzzy searching. This is illustrated in the activity diagram below.","lastModifiedDate":"2023-04-05"},{"lineNumber":544,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":545,"author":{"gitId":"immanuelhume"},"content":"![FuzzyManagerActivityDiagram](images/FuzzyManagerActivityDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":546,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":547,"author":{"gitId":"StanleyNeoh"},"content":"## Command Handling","lastModifiedDate":"2023-03-30"},{"lineNumber":548,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":549,"author":{"gitId":"StanleyNeoh"},"content":"### Commands","lastModifiedDate":"2023-03-30"},{"lineNumber":550,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":551,"author":{"gitId":"StanleyNeoh"},"content":"#### Command Sequence","lastModifiedDate":"2023-03-30"},{"lineNumber":552,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"StanleyNeoh"},"content":"When the command box is in `CommandMode`, the user can enter commands to perform various operations in Mycelium. The following sequence diagram shows how the command is handled.","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":555,"author":{"gitId":"immanuelhume"},"content":"![CommandHandling Sequence Diagram](images/commandbox/CommandHandling.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":556,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":557,"author":{"gitId":"StanleyNeoh"},"content":"When the user enters a command, the command box calls `Mode#onInputSubmit(String)` on its current `CommandMode`.","lastModifiedDate":"2023-03-30"},{"lineNumber":558,"author":{"gitId":"StanleyNeoh"},"content":"The input from the command box is then propagated down to the `MainWindow`, the `Logic` and finally the `Parser` to be parsed.","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":560,"author":{"gitId":"StanleyNeoh"},"content":"The `Parser` then returns a `Command` instance to `Logic` which then executes the `Command` instance. The execution returns a `CommandResult` which is then passed back to the `MainWindow`.","lastModifiedDate":"2023-03-30"},{"lineNumber":561,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":562,"author":{"gitId":"StanleyNeoh"},"content":"The `MainWindow` updates the `CommandLog` based on the feedback from `CommandResult` and executes the `UiAction`.","lastModifiedDate":"2023-03-30"},{"lineNumber":563,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":564,"author":{"gitId":"StanleyNeoh"},"content":"The `CommandMode` then clears the `CommandBox` input and is now ready for accepting the next command.","lastModifiedDate":"2023-03-30"},{"lineNumber":565,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":566,"author":{"gitId":"StanleyNeoh"},"content":"#### UiActions","lastModifiedDate":"2023-03-30"},{"lineNumber":567,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":568,"author":{"gitId":"StanleyNeoh"},"content":"The `UiAction` class is an abstract class that represents an action to be performed by the `MainWindow`. Every `CommandResult` returned from a `Command` execution contains a `UiAction` that is to be executed by the `MainWindow`.","lastModifiedDate":"2023-03-30"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":570,"author":{"gitId":"StanleyNeoh"},"content":"This is used to perform actions such as switching the tab to Projects tab when a Project related command is executed or exiting the application when the `ExitCommand` is executed.","lastModifiedDate":"2023-03-30"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":572,"author":{"gitId":"StanleyNeoh"},"content":"The following sequence diagram shows how the `UiAction` that switches the tab to Projects tab.","lastModifiedDate":"2023-03-30"},{"lineNumber":573,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":574,"author":{"gitId":"immanuelhume"},"content":"![SwitchToProjectsUiAction sequence diagram](images/uiaction/SwitchToProjectsUiAction.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":575,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":576,"author":{"gitId":"StanleyNeoh"},"content":"Upon being executed, `UiAction` instance calls the appropriate method in `MainWindow` to perform the action from a successful command. In this case, the `UiAction` calls `MainWindow#selectProjectTab` to switch the tab to the Projects tab.","lastModifiedDate":"2023-03-30"},{"lineNumber":577,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":578,"author":{"gitId":"StanleyNeoh"},"content":"### Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":580,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":582,"author":{"gitId":"immanuelhume"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-29"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"Douglch"},"content":"**Freelance Devs**","lastModifiedDate":"2023-02-27"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":589,"author":{"gitId":"Douglch"},"content":"Freelance web developers with postings on multiple online marketplaces for digital services (e.g. Fiverr) who want to manage projects and clients easily while tracking their contract terms and hours spent per project.","lastModifiedDate":"2023-02-27"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":591,"author":{"gitId":"Douglch"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-27"},{"lineNumber":592,"author":{"gitId":"Douglch"},"content":"Mycelium strives to be a one-stop shop for freelance web developers to consolidate projects from multiple sources. Manage descriptive yet concise information about each client, all through an intuitive console-first interface. Mycelium is tailored for the modern web developer, enabling you to build strong and trusted relationships with clients.","lastModifiedDate":"2023-02-28"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"immanuelhume"},"content":"| Priority | As a ...               | I want to ...                                                                                                  | So that ...                                                                          |","lastModifiedDate":"2023-03-27"},{"lineNumber":599,"author":{"gitId":"immanuelhume"},"content":"|----------|------------------------|----------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-27"},{"lineNumber":600,"author":{"gitId":"RubyNguyen07"},"content":"| * * *    | user                   | easily access each project by name for convenience.                                                            |                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":601,"author":{"gitId":"RubyNguyen07"},"content":"| * * *    | user                   | create new projects and contacts.                                                                              |                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":602,"author":{"gitId":"RubyNguyen07"},"content":"| * * *    | user                   | delete projects and contacts I no longer need.                                                                 |                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":603,"author":{"gitId":"RubyNguyen07"},"content":"| * * *    | user                   | use the application on different platforms and operating systems.                                              |                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":604,"author":{"gitId":"RubyNguyen07"},"content":"| * * *    | user                   | update details of existing projects and contacts                                                               | I can keep up with changing requirements of clients.                                 |","lastModifiedDate":"2023-03-30"},{"lineNumber":605,"author":{"gitId":"RubyNguyen07"},"content":"| *        | new user               | experience an intuitive user-interface. There should be help messages to guide me around the features.         | I can refer to instructions when I forget how to use the App                         |","lastModifiedDate":"2023-03-02"},{"lineNumber":606,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | efficiently log information about a new client                                                                 | I minimise the effort and time needed to start a project.                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":607,"author":{"gitId":"RubyNguyen07"},"content":"| *        | new user               | login using my GitHub account                                                                                  | it is convenient to login.                                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":608,"author":{"gitId":"RubyNguyen07"},"content":"| *        | new user               | sign up using email and password                                                                               | I can avoid using third party authentication sources, like GitHub or Google.         |","lastModifiedDate":"2023-03-02"},{"lineNumber":609,"author":{"gitId":"RubyNguyen07"},"content":"| *        | forgetful user         | be reminded of up coming deadlines                                                                             | I will not miss out any deliverables set by clients.                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":610,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | easily categorise the type of each project I have been working on                                              | it is easier to reflect on in the future and navigate.                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":611,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | view statistics related to productivity (which channel I gain most projects, money from)                       | I know which project to put more focus on to earn better money.                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":612,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | track my client’s payment status                                                                               | transaction management would be fuss-free.                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":613,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | track my project’s progress                                                                                    | I can provide timely updates to my clients.                                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":614,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | track the time I have worked on for each project                                                               | I can ensure I have allocated time for the different projects I am working on.       |","lastModifiedDate":"2023-03-02"},{"lineNumber":615,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | easily view all of my freelance job requests from Fiverr and Upwork in one place.                              |                                                                                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":616,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | update my availability status for each platform in one place                                                   | I don\u0027t miss out on job offers due to scheduling conflicts.                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":617,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | store client information, such as contact details and project specifications, in one place                     | I can quickly access it when needed.                                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":618,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user with many clients | easily communicate with clients through the product                                                            | I can streamline my workflow and avoid having to switch between different platforms. |","lastModifiedDate":"2023-03-02"},{"lineNumber":619,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | receive notifications when I receive new job offers or when deadlines are approaching                          | I can stay on top of my workload.                                                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":620,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | easily generate invoices for each freelance job and track payment status                                       | I can manage my finances more effectively.                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":621,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | easily rate and review clients                                                                                 | I can make informed decisions about which jobs to accept in the future.              |","lastModifiedDate":"2023-03-02"},{"lineNumber":622,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | follow the work of other developers                                                                            | I can find opportunities to collaborate.                                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":623,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | use the app to estimate the amount of time that I will need for a project                                      | I can determine if I have the capacity to take on new projects.                      |","lastModifiedDate":"2023-03-02"},{"lineNumber":624,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | keep in contact with other developers                                                                          | I can work on larger projects efficiently.                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":625,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | personalize my contacts                                                                                        | I can know each client better                                                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":626,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | export data from the product in different formats, such as CSV or Excel                                        | I can use the information elsewhere.                                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":627,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | securely store confidential information, such as client details                                                | I can keep sensitive information safe.                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":628,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | use the product offline                                                                                        | I can access my information when I don\u0027t have an internet connection.                |","lastModifiedDate":"2023-03-02"},{"lineNumber":629,"author":{"gitId":"RubyNguyen07"},"content":"| *        | user                   | easily search and filter projects based on specific criteria, such as deadline, client name, or project status | I can quickly find the information I need.                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"immanuelhume"},"content":"(For all use cases below, the **System** is the `Mycelium` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-28"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"immanuelhume"},"content":"**Use case: Create a project**","lastModifiedDate":"2023-02-28"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"immanuelhume"},"content":"1. User enters command and submits details for new project","lastModifiedDate":"2023-02-28"},{"lineNumber":640,"author":{"gitId":"immanuelhume"},"content":"2. Mycelium creates the project","lastModifiedDate":"2023-02-28"},{"lineNumber":641,"author":{"gitId":"immanuelhume"},"content":"3. User can view the new project listed in panel","lastModifiedDate":"2023-02-28"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"immanuelhume"},"content":"* 1a. Required project details are not provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":648,"author":{"gitId":"immanuelhume"},"content":"   * 1a1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":650,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":652,"author":{"gitId":"Douglch"},"content":"* 1b. Some project details are invalid.","lastModifiedDate":"2023-03-30"},{"lineNumber":653,"author":{"gitId":"immanuelhume"},"content":"   * 1b1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":655,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":657,"author":{"gitId":"immanuelhume"},"content":"**Use case: Create a client**","lastModifiedDate":"2023-02-28"},{"lineNumber":658,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":659,"author":{"gitId":"immanuelhume"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":660,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":661,"author":{"gitId":"immanuelhume"},"content":"1. User enters command and submits details for new client","lastModifiedDate":"2023-02-28"},{"lineNumber":662,"author":{"gitId":"immanuelhume"},"content":"2. Mycelium creates the client","lastModifiedDate":"2023-02-28"},{"lineNumber":663,"author":{"gitId":"immanuelhume"},"content":"3. User can view the new client listed in panel","lastModifiedDate":"2023-02-28"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"immanuelhume"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"immanuelhume"},"content":"* 1a. Required client details are not provided.","lastModifiedDate":"2023-02-28"},{"lineNumber":670,"author":{"gitId":"immanuelhume"},"content":"   * 1a1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"immanuelhume"},"content":"* 1b. Some project details are invalid.","lastModifiedDate":"2023-02-28"},{"lineNumber":675,"author":{"gitId":"immanuelhume"},"content":"   * 1b1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":676,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":677,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":679,"author":{"gitId":"immanuelhume"},"content":"**Use case: Delete a project**","lastModifiedDate":"2023-02-28"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":681,"author":{"gitId":"immanuelhume"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":683,"author":{"gitId":"immanuelhume"},"content":"1. User enters command and submits name of project to delete","lastModifiedDate":"2023-02-28"},{"lineNumber":684,"author":{"gitId":"immanuelhume"},"content":"2. Mycelium deletes the project","lastModifiedDate":"2023-02-28"},{"lineNumber":685,"author":{"gitId":"immanuelhume"},"content":"3. User can no longer see project listed in panel","lastModifiedDate":"2023-02-28"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":687,"author":{"gitId":"immanuelhume"},"content":"   Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":688,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":689,"author":{"gitId":"immanuelhume"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":691,"author":{"gitId":"immanuelhume"},"content":"* 1a. Project with submitted name does not exist.","lastModifiedDate":"2023-02-28"},{"lineNumber":692,"author":{"gitId":"immanuelhume"},"content":"   * 1a1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":694,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":695,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":696,"author":{"gitId":"immanuelhume"},"content":"**Use case: Delete a client**","lastModifiedDate":"2023-02-28"},{"lineNumber":697,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":698,"author":{"gitId":"immanuelhume"},"content":"**MSS**","lastModifiedDate":"2023-02-28"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":700,"author":{"gitId":"immanuelhume"},"content":"1. User enters command and submits email of client to delete","lastModifiedDate":"2023-02-28"},{"lineNumber":701,"author":{"gitId":"immanuelhume"},"content":"2. Mycelium deletes the client","lastModifiedDate":"2023-02-28"},{"lineNumber":702,"author":{"gitId":"immanuelhume"},"content":"3. User can no longer see client listed in panel","lastModifiedDate":"2023-02-28"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":704,"author":{"gitId":"immanuelhume"},"content":"   Use case ends.","lastModifiedDate":"2023-02-28"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":706,"author":{"gitId":"immanuelhume"},"content":"**Extensions**","lastModifiedDate":"2023-02-28"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":708,"author":{"gitId":"immanuelhume"},"content":"* 1a. Client with submitted email does not exist.","lastModifiedDate":"2023-02-28"},{"lineNumber":709,"author":{"gitId":"immanuelhume"},"content":"   * 1a1. Mycelium shows an error message.","lastModifiedDate":"2023-02-28"},{"lineNumber":710,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":711,"author":{"gitId":"immanuelhume"},"content":"   Use case resumes at step 1.","lastModifiedDate":"2023-02-28"},{"lineNumber":712,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"RubyNguyen07"},"content":"1.  Should be able to hold up to 1000 clients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-02"},{"lineNumber":717,"author":{"gitId":"Douglch"},"content":"1.  Should be able to hold up to 1000 projects without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-30"},{"lineNumber":718,"author":{"gitId":"RubyNguyen07"},"content":"1.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-02"},{"lineNumber":719,"author":{"gitId":"RubyNguyen07"},"content":"1.  All user operations should complete under 100ms.","lastModifiedDate":"2023-03-02"},{"lineNumber":720,"author":{"gitId":"RubyNguyen07"},"content":"1.  Should not lose any work in case the application crashes.","lastModifiedDate":"2023-03-02"},{"lineNumber":721,"author":{"gitId":"RubyNguyen07"},"content":"1.  Data persists when the application restarts.","lastModifiedDate":"2023-03-02"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"immanuelhume"},"content":"## Glossary","lastModifiedDate":"2023-04-05"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"immanuelhume"},"content":"The terms in this glossary are sorted in alphabetical order.","lastModifiedDate":"2023-03-29"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":729,"author":{"gitId":"immanuelhume"},"content":"* **Client**: An individual associated with a particular project, presumably","lastModifiedDate":"2023-04-05"},{"lineNumber":730,"author":{"gitId":"immanuelhume"},"content":"  the one who posted or requested it","lastModifiedDate":"2023-04-05"},{"lineNumber":731,"author":{"gitId":"immanuelhume"},"content":"* **Console-first interface**: An interface with interactions primarily through","lastModifiedDate":"2023-04-05"},{"lineNumber":732,"author":{"gitId":"immanuelhume"},"content":"  text commands or hotkeys","lastModifiedDate":"2023-04-05"},{"lineNumber":733,"author":{"gitId":"immanuelhume"},"content":"* **Draw.io**: A drag-and-drop diagramming tool. Available at","lastModifiedDate":"2023-03-29"},{"lineNumber":734,"author":{"gitId":"immanuelhume"},"content":"  [draw.io](https://app.diagrams.net/).","lastModifiedDate":"2023-03-29"},{"lineNumber":735,"author":{"gitId":"immanuelhume"},"content":"* **Fuzzy search**: A feature to search for items which partially match a query","lastModifiedDate":"2023-03-29"},{"lineNumber":736,"author":{"gitId":"immanuelhume"},"content":"  rather than exactly","lastModifiedDate":"2023-03-29"},{"lineNumber":737,"author":{"gitId":"immanuelhume"},"content":"* **Hotkey**: A convenient combination of key presses meant to invoke some app","lastModifiedDate":"2023-04-05"},{"lineNumber":738,"author":{"gitId":"immanuelhume"},"content":"  functionality","lastModifiedDate":"2023-04-05"},{"lineNumber":739,"author":{"gitId":"immanuelhume"},"content":"* **PlantUML**: A text-based diagramming tool. See","lastModifiedDate":"2023-03-29"},{"lineNumber":740,"author":{"gitId":"immanuelhume"},"content":"  [plantuml.com](https://plantuml.com/) for more information.","lastModifiedDate":"2023-03-29"},{"lineNumber":741,"author":{"gitId":"immanuelhume"},"content":"* **Project**: A freelance software development gig","lastModifiedDate":"2023-03-29"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"immanuelhume"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2023-03-29"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":748,"author":{"gitId":"immanuelhume"},"content":":bulb: When testing commands, it is recommended to test different combinations","lastModifiedDate":"2023-04-05"},{"lineNumber":749,"author":{"gitId":"immanuelhume"},"content":"of the optional arguments to ensure that the program can handle different use","lastModifiedDate":"2023-04-05"},{"lineNumber":750,"author":{"gitId":"immanuelhume"},"content":"cases.","lastModifiedDate":"2023-04-05"},{"lineNumber":751,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"immanuelhume"},"content":"### Client commands","lastModifiedDate":"2023-04-05"},{"lineNumber":754,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":755,"author":{"gitId":"immanuelhume"},"content":"**Creating a client**","lastModifiedDate":"2023-04-05"},{"lineNumber":756,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":757,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"c\" followed by a space and then the client\u0027s name (-cn","lastModifiedDate":"2023-04-05"},{"lineNumber":758,"author":{"gitId":"immanuelhume"},"content":"   name) and email (-e email).","lastModifiedDate":"2023-04-05"},{"lineNumber":759,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the new client\u0027s name and email are displayed on the interface","lastModifiedDate":"2023-04-05"},{"lineNumber":760,"author":{"gitId":"immanuelhume"},"content":"   after successfully creating the contact.","lastModifiedDate":"2023-04-05"},{"lineNumber":761,"author":{"gitId":"immanuelhume"},"content":"1. Optionally, add any combination of the year of birth (-y argument), platform","lastModifiedDate":"2023-04-05"},{"lineNumber":762,"author":{"gitId":"immanuelhume"},"content":"   source (-src argument), and mobile number (-mn argument) after the email in","lastModifiedDate":"2023-04-05"},{"lineNumber":763,"author":{"gitId":"immanuelhume"},"content":"   the command. Verify that the corresponding information is displayed on the","lastModifiedDate":"2023-04-05"},{"lineNumber":764,"author":{"gitId":"immanuelhume"},"content":"   interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":765,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if a client with the same email","lastModifiedDate":"2023-04-05"},{"lineNumber":766,"author":{"gitId":"immanuelhume"},"content":"   already exists.","lastModifiedDate":"2023-04-05"},{"lineNumber":767,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no client name or email is","lastModifiedDate":"2023-04-05"},{"lineNumber":768,"author":{"gitId":"immanuelhume"},"content":"   provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":769,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if an invalid argument is entered.","lastModifiedDate":"2023-04-05"},{"lineNumber":770,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":771,"author":{"gitId":"immanuelhume"},"content":"**Deleting a client**","lastModifiedDate":"2023-04-05"},{"lineNumber":772,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":773,"author":{"gitId":"immanuelhume"},"content":"1. Identify an existing client contact to delete and note down their email","lastModifiedDate":"2023-04-05"},{"lineNumber":774,"author":{"gitId":"immanuelhume"},"content":"   address.","lastModifiedDate":"2023-04-05"},{"lineNumber":775,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"dc\" followed by a space and then the email address of the","lastModifiedDate":"2023-04-05"},{"lineNumber":776,"author":{"gitId":"immanuelhume"},"content":"   client to be deleted (-e email).","lastModifiedDate":"2023-04-05"},{"lineNumber":777,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the interface displays the name and email of the deleted client.","lastModifiedDate":"2023-04-05"},{"lineNumber":778,"author":{"gitId":"immanuelhume"},"content":"1. Confirm that the deleted client\u0027s information is no longer accessible","lastModifiedDate":"2023-04-05"},{"lineNumber":779,"author":{"gitId":"immanuelhume"},"content":"   through the interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":780,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no email address is provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":781,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if the email address provided does","lastModifiedDate":"2023-04-05"},{"lineNumber":782,"author":{"gitId":"immanuelhume"},"content":"   not correspond to an existing client contact.","lastModifiedDate":"2023-04-05"},{"lineNumber":783,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":784,"author":{"gitId":"immanuelhume"},"content":"**Updating a client**","lastModifiedDate":"2023-04-05"},{"lineNumber":785,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":786,"author":{"gitId":"immanuelhume"},"content":"1. Identify an existing client contact to update and note down their email","lastModifiedDate":"2023-04-05"},{"lineNumber":787,"author":{"gitId":"immanuelhume"},"content":"   address.","lastModifiedDate":"2023-04-05"},{"lineNumber":788,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"uc\" followed by a space and then the email address of the","lastModifiedDate":"2023-04-05"},{"lineNumber":789,"author":{"gitId":"immanuelhume"},"content":"   client to be updated (-e email).","lastModifiedDate":"2023-04-05"},{"lineNumber":790,"author":{"gitId":"immanuelhume"},"content":"1. Optionally, add any combination of the client\u0027s new name (-cn client_name),","lastModifiedDate":"2023-04-05"},{"lineNumber":791,"author":{"gitId":"immanuelhume"},"content":"   new email (-e2 email), new year of birth (-y year_of_birth), new platform","lastModifiedDate":"2023-04-05"},{"lineNumber":792,"author":{"gitId":"immanuelhume"},"content":"   source (-src source), or new mobile number (-mn mobile_number) after the","lastModifiedDate":"2023-04-05"},{"lineNumber":793,"author":{"gitId":"immanuelhume"},"content":"   email address in the command. Verify that the corresponding information is","lastModifiedDate":"2023-04-05"},{"lineNumber":794,"author":{"gitId":"immanuelhume"},"content":"   displayed on the interface after successful update.","lastModifiedDate":"2023-04-05"},{"lineNumber":795,"author":{"gitId":"immanuelhume"},"content":"1. Test that the client information is updated correctly by checking that the","lastModifiedDate":"2023-04-05"},{"lineNumber":796,"author":{"gitId":"immanuelhume"},"content":"   updated information is displayed on the interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":797,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no email address is provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":798,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if the email address provided does","lastModifiedDate":"2023-04-05"},{"lineNumber":799,"author":{"gitId":"immanuelhume"},"content":"   not correspond to an existing client contact.","lastModifiedDate":"2023-04-05"},{"lineNumber":800,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if a new email address is provided","lastModifiedDate":"2023-04-05"},{"lineNumber":801,"author":{"gitId":"immanuelhume"},"content":"   that is already associated with an existing client contact.","lastModifiedDate":"2023-04-05"},{"lineNumber":802,"author":{"gitId":"immanuelhume"},"content":"1. Test that if an optional argument is not provided, the corresponding field","lastModifiedDate":"2023-04-05"},{"lineNumber":803,"author":{"gitId":"immanuelhume"},"content":"   is not updated and the existing information is retained.","lastModifiedDate":"2023-04-05"},{"lineNumber":804,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":805,"author":{"gitId":"immanuelhume"},"content":"### Project commands","lastModifiedDate":"2023-04-05"},{"lineNumber":806,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":807,"author":{"gitId":"immanuelhume"},"content":"**Creating a project**","lastModifiedDate":"2023-04-05"},{"lineNumber":808,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":809,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"p\" followed by a space and then the project\u0027s name (-pn","lastModifiedDate":"2023-04-05"},{"lineNumber":810,"author":{"gitId":"immanuelhume"},"content":"   project_name) and the email of the client who submitted the project (-e","lastModifiedDate":"2023-04-05"},{"lineNumber":811,"author":{"gitId":"immanuelhume"},"content":"   client_email).","lastModifiedDate":"2023-04-05"},{"lineNumber":812,"author":{"gitId":"immanuelhume"},"content":"1. Verify that a message confirming the addition of the project is displayed.","lastModifiedDate":"2023-04-05"},{"lineNumber":813,"author":{"gitId":"immanuelhume"},"content":"1. Optionally, add any combination of the project\u0027s status (-s status), source","lastModifiedDate":"2023-04-05"},{"lineNumber":814,"author":{"gitId":"immanuelhume"},"content":"   (-src source), description (-d description), accepted date (-ad","lastModifiedDate":"2023-04-05"},{"lineNumber":815,"author":{"gitId":"immanuelhume"},"content":"   accepted_date), and deadline date (-dd deadline_date) after the client\u0027s","lastModifiedDate":"2023-04-05"},{"lineNumber":816,"author":{"gitId":"immanuelhume"},"content":"   email in the command. Verify that the corresponding information is displayed","lastModifiedDate":"2023-04-05"},{"lineNumber":817,"author":{"gitId":"immanuelhume"},"content":"   on the interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":818,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no project name or client email","lastModifiedDate":"2023-04-05"},{"lineNumber":819,"author":{"gitId":"immanuelhume"},"content":"   is provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":820,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if a project with the same name","lastModifiedDate":"2023-04-05"},{"lineNumber":821,"author":{"gitId":"immanuelhume"},"content":"   already exists.","lastModifiedDate":"2023-04-05"},{"lineNumber":822,"author":{"gitId":"immanuelhume"},"content":"1. Test that the project information is stored correctly by checking that the","lastModifiedDate":"2023-04-05"},{"lineNumber":823,"author":{"gitId":"immanuelhume"},"content":"   information is displayed on the interface after successful creation.","lastModifiedDate":"2023-04-05"},{"lineNumber":824,"author":{"gitId":"immanuelhume"},"content":"1. Test that the default values are assigned correctly for the optional","lastModifiedDate":"2023-04-05"},{"lineNumber":825,"author":{"gitId":"immanuelhume"},"content":"   arguments.","lastModifiedDate":"2023-04-05"},{"lineNumber":826,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if an invalid argument is entered.","lastModifiedDate":"2023-04-05"},{"lineNumber":827,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":828,"author":{"gitId":"immanuelhume"},"content":"**Deleting a project**","lastModifiedDate":"2023-04-05"},{"lineNumber":829,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":830,"author":{"gitId":"immanuelhume"},"content":"1. Identify an existing project to delete and note down its name.","lastModifiedDate":"2023-04-05"},{"lineNumber":831,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"dp\" followed by a space and then the project\u0027s name (-pn","lastModifiedDate":"2023-04-05"},{"lineNumber":832,"author":{"gitId":"immanuelhume"},"content":"   project_name).","lastModifiedDate":"2023-04-05"},{"lineNumber":833,"author":{"gitId":"immanuelhume"},"content":"1. Verify that a message confirming the deletion of the project is displayed.","lastModifiedDate":"2023-04-05"},{"lineNumber":834,"author":{"gitId":"immanuelhume"},"content":"1. Confirm that the deleted project\u0027s information is no longer accessible","lastModifiedDate":"2023-04-05"},{"lineNumber":835,"author":{"gitId":"immanuelhume"},"content":"   through the interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":836,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no project name is provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":837,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if the project name provided does","lastModifiedDate":"2023-04-05"},{"lineNumber":838,"author":{"gitId":"immanuelhume"},"content":"   not correspond to an existing project.","lastModifiedDate":"2023-04-05"},{"lineNumber":839,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":840,"author":{"gitId":"immanuelhume"},"content":"**Updating a project**","lastModifiedDate":"2023-04-05"},{"lineNumber":841,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":842,"author":{"gitId":"immanuelhume"},"content":"1. Identify an existing project to update and note down its name.","lastModifiedDate":"2023-04-05"},{"lineNumber":843,"author":{"gitId":"immanuelhume"},"content":"1. Type the command \"up\" followed by a space and then the project\u0027s name (-pn","lastModifiedDate":"2023-04-05"},{"lineNumber":844,"author":{"gitId":"immanuelhume"},"content":"   project_name).","lastModifiedDate":"2023-04-05"},{"lineNumber":845,"author":{"gitId":"immanuelhume"},"content":"1. Optionally, add any combination of a new project name (-pn2","lastModifiedDate":"2023-04-05"},{"lineNumber":846,"author":{"gitId":"immanuelhume"},"content":"   new_project_name), a new client email (-e client_email), a new project","lastModifiedDate":"2023-04-05"},{"lineNumber":847,"author":{"gitId":"immanuelhume"},"content":"   status (-s status), a new source for the project (-src source), a new","lastModifiedDate":"2023-04-05"},{"lineNumber":848,"author":{"gitId":"immanuelhume"},"content":"   description for the project (-d description), a new accepted-on date for the","lastModifiedDate":"2023-04-05"},{"lineNumber":849,"author":{"gitId":"immanuelhume"},"content":"   project (-ad accepted_date), and a new deadline for the project (-dd","lastModifiedDate":"2023-04-05"},{"lineNumber":850,"author":{"gitId":"immanuelhume"},"content":"   deadline_date) after the project name in the command. Verify that the","lastModifiedDate":"2023-04-05"},{"lineNumber":851,"author":{"gitId":"immanuelhume"},"content":"   corresponding information is displayed on the interface after successful","lastModifiedDate":"2023-04-05"},{"lineNumber":852,"author":{"gitId":"immanuelhume"},"content":"   update.","lastModifiedDate":"2023-04-05"},{"lineNumber":853,"author":{"gitId":"immanuelhume"},"content":"1. Test that the project information is updated correctly by checking that the","lastModifiedDate":"2023-04-05"},{"lineNumber":854,"author":{"gitId":"immanuelhume"},"content":"   updated information is displayed on the interface.","lastModifiedDate":"2023-04-05"},{"lineNumber":855,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if no project name is provided.","lastModifiedDate":"2023-04-05"},{"lineNumber":856,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if the project name provided does","lastModifiedDate":"2023-04-05"},{"lineNumber":857,"author":{"gitId":"immanuelhume"},"content":"   not correspond to an existing project.","lastModifiedDate":"2023-04-05"},{"lineNumber":858,"author":{"gitId":"immanuelhume"},"content":"1. Test that if an optional argument is not provided, the corresponding field","lastModifiedDate":"2023-04-05"},{"lineNumber":859,"author":{"gitId":"immanuelhume"},"content":"   is not updated and the existing information is retained.","lastModifiedDate":"2023-04-05"},{"lineNumber":860,"author":{"gitId":"immanuelhume"},"content":"1. Test that an error message is displayed if an invalid argument is entered.","lastModifiedDate":"2023-04-05"},{"lineNumber":861,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":862,"author":{"gitId":"immanuelhume"},"content":"### Fuzzy search","lastModifiedDate":"2023-04-05"},{"lineNumber":863,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":864,"author":{"gitId":"immanuelhume"},"content":"1. Press (CTRL+F) to toggle to search mode, and note that the command box","lastModifiedDate":"2023-04-05"},{"lineNumber":865,"author":{"gitId":"immanuelhume"},"content":"   should switch color as an indication.","lastModifiedDate":"2023-04-05"},{"lineNumber":866,"author":{"gitId":"immanuelhume"},"content":"1. Type a query into the command box that partially matches a project name, and","lastModifiedDate":"2023-04-05"},{"lineNumber":867,"author":{"gitId":"immanuelhume"},"content":"   verify that the projects with matching names are displayed in the UI. Note","lastModifiedDate":"2023-04-05"},{"lineNumber":868,"author":{"gitId":"immanuelhume"},"content":"   that closer matches should be placed at the top.","lastModifiedDate":"2023-04-05"},{"lineNumber":869,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the search is interactive and the UI automatically updates as","lastModifiedDate":"2023-04-05"},{"lineNumber":870,"author":{"gitId":"immanuelhume"},"content":"   you type your query.","lastModifiedDate":"2023-04-05"},{"lineNumber":871,"author":{"gitId":"immanuelhume"},"content":"1. Verify that only projects that have a partial match with the query are","lastModifiedDate":"2023-04-05"},{"lineNumber":872,"author":{"gitId":"immanuelhume"},"content":"   shown. Projects that don\u0027t match at all should not be shown.","lastModifiedDate":"2023-04-05"},{"lineNumber":873,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the search is not case-sensitive.","lastModifiedDate":"2023-04-05"},{"lineNumber":874,"author":{"gitId":"immanuelhume"},"content":"1. Test that exiting search mode by pressing (CTRL+F) again returns the command","lastModifiedDate":"2023-04-05"},{"lineNumber":875,"author":{"gitId":"immanuelhume"},"content":"   box to its original color.","lastModifiedDate":"2023-04-05"},{"lineNumber":876,"author":{"gitId":"immanuelhume"},"content":"1. Repeat the above steps for client names.","lastModifiedDate":"2023-04-05"},{"lineNumber":877,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":878,"author":{"gitId":"immanuelhume"},"content":"The following steps test the feature for extracting project names and emails","lastModifiedDate":"2023-04-05"},{"lineNumber":879,"author":{"gitId":"immanuelhume"},"content":"with (ENTER).","lastModifiedDate":"2023-04-05"},{"lineNumber":880,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":881,"author":{"gitId":"immanuelhume"},"content":"1. Ensure there are some projects and clients in Mycelium.","lastModifiedDate":"2023-04-05"},{"lineNumber":882,"author":{"gitId":"immanuelhume"},"content":"1. Press (CTRL+F) to enter search mode.","lastModifiedDate":"2023-04-05"},{"lineNumber":883,"author":{"gitId":"immanuelhume"},"content":"1. In the search box, type a query for a project or client name that exists in","lastModifiedDate":"2023-04-05"},{"lineNumber":884,"author":{"gitId":"immanuelhume"},"content":"   the list, but do not press enter.","lastModifiedDate":"2023-04-05"},{"lineNumber":885,"author":{"gitId":"immanuelhume"},"content":"1. Use (CTRL+J) and (CTRL+K) to navigate and select the desired project or","lastModifiedDate":"2023-04-05"},{"lineNumber":886,"author":{"gitId":"immanuelhume"},"content":"   client in the search results.","lastModifiedDate":"2023-04-05"},{"lineNumber":887,"author":{"gitId":"immanuelhume"},"content":"1. Press (ENTER) to exit search mode and append the name or email of the","lastModifiedDate":"2023-04-05"},{"lineNumber":888,"author":{"gitId":"immanuelhume"},"content":"   selected project or client to the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":889,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the selected project or client name/email is appended to the","lastModifiedDate":"2023-04-05"},{"lineNumber":890,"author":{"gitId":"immanuelhume"},"content":"   command box correctly.","lastModifiedDate":"2023-04-05"},{"lineNumber":891,"author":{"gitId":"immanuelhume"},"content":"1. Try executing some commands while in search mode and verify that they are","lastModifiedDate":"2023-04-05"},{"lineNumber":892,"author":{"gitId":"immanuelhume"},"content":"   not executed.","lastModifiedDate":"2023-04-05"},{"lineNumber":893,"author":{"gitId":"immanuelhume"},"content":"1. Try searching while in command mode and verify that no searching can be","lastModifiedDate":"2023-04-05"},{"lineNumber":894,"author":{"gitId":"immanuelhume"},"content":"   done.","lastModifiedDate":"2023-04-05"},{"lineNumber":895,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":896,"author":{"gitId":"immanuelhume"},"content":"### Hotkeys","lastModifiedDate":"2023-04-05"},{"lineNumber":897,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":898,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the Help page can be accessed by pressing (F1).","lastModifiedDate":"2023-04-05"},{"lineNumber":899,"author":{"gitId":"immanuelhume"},"content":"1. Verify that Mycelium can be quickly quit by pressing (CTRL+Q).","lastModifiedDate":"2023-04-05"},{"lineNumber":900,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the cursor can be moved to the start of the line in the command","lastModifiedDate":"2023-04-05"},{"lineNumber":901,"author":{"gitId":"immanuelhume"},"content":"   box by pressing (CTRL+W).","lastModifiedDate":"2023-04-05"},{"lineNumber":902,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the cursor can be moved to the end of the line in the command","lastModifiedDate":"2023-04-05"},{"lineNumber":903,"author":{"gitId":"immanuelhume"},"content":"   box by pressing (CTRL+E).","lastModifiedDate":"2023-04-05"},{"lineNumber":904,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the current line in the command box can be quickly cleared by","lastModifiedDate":"2023-04-05"},{"lineNumber":905,"author":{"gitId":"immanuelhume"},"content":"   pressing (CTRL+D).","lastModifiedDate":"2023-04-05"},{"lineNumber":906,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the command log found below the command box is also cleared when","lastModifiedDate":"2023-04-05"},{"lineNumber":907,"author":{"gitId":"immanuelhume"},"content":"   using (CTRL+D).","lastModifiedDate":"2023-04-05"},{"lineNumber":908,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the focus can be switched between the Entity panel and the","lastModifiedDate":"2023-04-05"},{"lineNumber":909,"author":{"gitId":"immanuelhume"},"content":"   Statistics panel by pressing (CTRL+S).","lastModifiedDate":"2023-04-05"},{"lineNumber":910,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the panel in focus is highlighted with a blue header.","lastModifiedDate":"2023-04-05"},{"lineNumber":911,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the tabs can be switched in the currently selected panel by","lastModifiedDate":"2023-04-05"},{"lineNumber":912,"author":{"gitId":"immanuelhume"},"content":"   pressing (CTRL+L).","lastModifiedDate":"2023-04-05"},{"lineNumber":913,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the next item on the list in the currently selected tab can be","lastModifiedDate":"2023-04-05"},{"lineNumber":914,"author":{"gitId":"immanuelhume"},"content":"   selected by pressing (CTRL+J).","lastModifiedDate":"2023-04-05"},{"lineNumber":915,"author":{"gitId":"immanuelhume"},"content":"1. If the last item is selected, verify that the next item is the first item in","lastModifiedDate":"2023-04-05"},{"lineNumber":916,"author":{"gitId":"immanuelhume"},"content":"   the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":917,"author":{"gitId":"immanuelhume"},"content":"1. Verify that the previous item on the list in the currently selected tab can","lastModifiedDate":"2023-04-05"},{"lineNumber":918,"author":{"gitId":"immanuelhume"},"content":"   be selected by pressing (CTRL+K).","lastModifiedDate":"2023-04-05"},{"lineNumber":919,"author":{"gitId":"immanuelhume"},"content":"1. If the first item is selected, verify that the previous item is the last","lastModifiedDate":"2023-04-05"},{"lineNumber":920,"author":{"gitId":"immanuelhume"},"content":"   item in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":921,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":922,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":923,"author":{"gitId":"immanuelhume"},"content":"## Appendix: Documentation, Logging, Testing, Configuration, and DevOps","lastModifiedDate":"2023-04-05"},{"lineNumber":924,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":925,"author":{"gitId":"immanuelhume"},"content":"* [Documentation guide](/tp/Documentation.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":926,"author":{"gitId":"immanuelhume"},"content":"* [Logging guide](/tp/Logging.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":927,"author":{"gitId":"immanuelhume"},"content":"* [Testing guide](/tp/Testing.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":928,"author":{"gitId":"immanuelhume"},"content":"* [Configuration guide](/tp/Configuration.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":929,"author":{"gitId":"immanuelhume"},"content":"* [DevOps guide](/tp/DevOps.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"StanleyNeoh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":933,"author":{"gitId":"StanleyNeoh"},"content":"## Appendix: Planned Enhancements","lastModifiedDate":"2023-04-05"},{"lineNumber":934,"author":{"gitId":"StanleyNeoh"},"content":"1. [ ] Utilising checksum on JSON file to prevent manual tampering of data.","lastModifiedDate":"2023-04-05"},{"lineNumber":935,"author":{"gitId":"StanleyNeoh"},"content":"1. [ ] Displaying explicit exceptions when the JSON file is corrupted or tampered with.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"sachindavid96":6,"StanleyNeoh":138,"-":226,"immanuelhume":462,"RubyNguyen07":74,"Douglch":29}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Documentation","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"* To learn how set it up and maintain the project website, follow the guide","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"  [_[se-edu/guides] **Using Jekyll for project","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"  documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"* Note these points when adapting the documentation to a different","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"  project/product:","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":":bulb: In addition to updating content files, you might have to update the","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"contains a reference to `Mycelium` that comes into play when converting","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"documentation pages to PDF format).","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"* Follow the [**_Google developer documentation style","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"  guide_**](https://developers.google.com/style)","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"  standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"We use both [draw.io](https://app.diagrams.net/) and","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"[PlantUML](https://plantuml.com/) as diagramming tools. The former is a drag","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"and drop editor, while the latter defines UML diagrams through plain text","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"files.","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"* The `docs/images` directory contains ready-for-use pictures in PNG format.","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"  This may include UML diagrams and screenshots.","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"* The `docs/diagrams` directory contains `.puml` files (for PlantUML) and","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"  `.xml` or `.drawio` files (for draw.io) which allow editing and regenerating","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"  of diagrams.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"* All `.puml` files are placed within subdirectories of the `docs/diagrams`","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"  directory based on which component they are most closely aligned with. The","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"  same directory structure is used in the `docs/images` directory.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":15,"immanuelhume":34}},{"path":"docs/Logging.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Logging guide","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Logging","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* We are using `java.util.logging` package for logging.","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"* The `LogsCenter` class is used to manage the logging levels and logging","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"  destinations.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"* The `Logger` for a class can be obtained using `LogsCenter.getLogger(Class)`","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"  which will log messages according to the specified logging level.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"* Log messages are output through the console and to a `.log` file.","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"* The output logging level can be controlled using the `logLevel` setting in","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"  the configuration file (See the [Configurations](#configurations)","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"  section).","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"* **When choosing a level for a log message**, follow the conventions given in","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"  [_[se-edu/guides] Java: Logging","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"  conventions_](https://se-education.org/guides/conventions/java/logging.html).","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":6,"immanuelhume":14}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Setting Up, Getting Started","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"### Cloning the repo","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"First, fork [the repo](https://github.com/AY2223S2-CS2103T-W14-1/tp), and clone","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"the fork into your local machine.","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"If you plan to use Intellij IDEA:","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"   the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"   ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"1. **Import the project as a Gradle project**: Follow the guide","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"   [_[se-edu/guides] IDEA: Importing a Gradle","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"   project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html)","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"   to import the project into IDEA.\u003cbr\u003e :information_source: Note: Importing a Gradle","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"   project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"If you plan to use other development environments, please seek out the","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"appropriate guides on setting up JDK 11 and Gradle.","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"Now, assuming you have successfully set up the project, let us verify that the","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"code works as intended. In a terminal, navigate to the directory where you","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"cloned the repo and execute the following command: `./gradlew test`. This will","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"run all of Mycelium\u0027s automated tests. If you don\u0027t see any error messages","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"printed, then you\u0027re all set.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":":bulb: Did `./gradlew test` not work for you? Depending on your operating","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"system and shell, there might be different ways to run the Gradle wrapper file.","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"We advise you to 1) check that the file has execute permissions, and/or 2)","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"check [Gradle\u0027s","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"website](https://docs.gradle.org/current/userguide/gradle_wrapper.html#sec:using_wrapper)","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"for more information. Note that this may apply in other places in this guide","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"where Gradle commands are used.","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"### Before writing code","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"   style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"   set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"   This project comes with a GitHub Actions config files (in","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"   `.github/workflows` folder). When GitHub detects those files, it will run","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"   the CI for your project automatically at each push to the `master` branch or","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"   to any PR. No set up required.","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"   When you are ready to start coding, we recommend that you get some sense of","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"   the overall design by reading about [Mycelium’s","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"   architecture](#architecture).","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":16,"immanuelhume":47}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"---","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Testing","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"### Running tests","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"      test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"### Types of tests","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"   e.g. `mycelium.mycelium.commons.StringUtilTest`","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"2. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"   e.g. `mycelium.mycelium.storage.StorageManagerTest`","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"3. Hybrids of *unit* and *integration tests*. These test are checking multiple code units as well as how they are connected together.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"   e.g. `mycelium.mycelium.logic.LogicManagerTest`","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"-":19,"immanuelhume":14}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"**Mycelium** is a desktop application aimed at helping **freelance web developers","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"manage clients and projects** from multiple online sources like [Upstack](https://upstackhq.com/),","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"[Fiverr](https://www.fiverr.com/), and [Toptal](https://www.toptal.com/). All interactions","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"with **Mycelium** are done through text commands or HotKeys, enabling one to efficiently","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"manipulate data while availing oneself to the convenience of viewing, offered by the","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"Graphical User Interface (GUI). You can expect to navigate its interface seamlessly and","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"access its functions with a mere keystroke or two.","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"## Using this Guide","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"If it is your first time here, the easiest way to get started is to head over","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"to [Quick Start](#quick-start), which will guide you through the installation","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"process and basic usage.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"Alternatively, you may wish to use this guide as a reference for commands and","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"HotKeys. The three main parts of this guide contain descriptions on how to use","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"commands for managing [clients](#managing-clients) and","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"[projects](#managing-projects), as well as the available [HotKeys](#hotkeys).","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"### Icons and Conventions","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"The following typographical conventions are used in this guide.","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"* (KEYCAP) - Indicates a literal set of keys, e.g. (CTRL+F) refers to the","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"  combination of the \u0027Control\u0027 and \u0027F\u0027 keys.","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":":bulb: This signifies a tip or suggestion.","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":":information_source: This signifies a general note.","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":":warning: This indicates a warning or caution.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"## Table of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"## Quick Start","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"Mycelium runs on Java 11, so you should first head over to [Oracle\u0027s","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"website](https://www.oracle.com/java/technologies/downloads/) to install Java","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"11 if your system does not already have it installed. Alternatively, you might","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"be able to install Java 11 from your preferred package manager, such as","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"[Homebrew](https://formulae.brew.sh/formula/openjdk@11) for Mac or","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"[Pacman](https://archlinux.org/packages/extra/x86_64/jdk11-openjdk/) for Arch","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"Linux.","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"Once you have Java 11, we can get started with our first steps using Mycelium.","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"1. Download the latest release from our [releases","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"   page](https://github.com/AY2223S2-CS2103T-W14-1/tp/releases)","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"1. Place the `.jar` file in an *empty directory* of your choice","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"1. In a terminal, navigate to the directory, and run the following command","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"```bash","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"java -jar mycelium.jar","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"If you see a window like the one shown below, then you have successfully","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"installed and launched Mycelium! Notice that some mock data has been populated","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"to help you get a feel for the application. Feel free to delete them later.","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"\u003cimg src\u003d\"images/OnStartupScreenshot.png\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"You may resize the window to your liking. At this point, we recommend that you","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"jump over to the [UI Overview](#ui-overview) or [Command","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"Summary](#command-summary) sections to get an overview of the commands which","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"are the bread and butter of Mycelium. Alternatively, you may continue reading","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"the guide for a guided tour of how Mycelium is intended to be used.","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"## Glossary","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"| Term                                     | Definition                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"|------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"| Graphical User Interface (GUI)           | A form of user interface that allows users to interact with electronic devices through graphical icons                                                                                                                                           |","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"| User Interface (UI)                      | The point of human-computer interaction and communication in a device. This can include display screens, keyboards, a mouse and the appearance of a desktop. It is also the way through which a user interacts with an application or a website. |","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"| Integrated Development Environment (IDE) | A software application that helps programmers develop software code efficiently. It increases developer productivity by combining capabilities such as software editing, building, testing, and packaging in an easy-to-use application.         |","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"## UI Overview","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"This screenshot below highlights the four main components in Mycelium\u0027s window.","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"\u003cimg src\u003d\"images/UiOverview.png\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"1. **Command box:** box for text input. Can be for either running commands or","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"   fuzzy searching (more on this later).","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"1. **Output box:** After a command is entered, the result from that command","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"   will be displayed here. Note that the box is scrollable, and for large","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"   output messages, you may have to scroll both horizontally and vertically to","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"   see the full message.","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"1. **Entity panel:** Lists projects and clients in two separate tabs.","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"1. **Statistics panel:** Displays overview of projects.","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"You can find more details about the Entity and Statistics panels in the following sections.","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"### Entity Panel","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"The Entity panel is where you will be able to view your projects and clients.","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"It is split into two tabs, one that lists all existing projects and the other","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"that lists all existing clients. By default, all projects and clients are","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"listed in order of creation.","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"#### Projects Tab","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"The Projects tab lists all the projects you have created. Each project block contains the project’s","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"RubyNguyen07"},"content":"- Name","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"- Status","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"- Client email","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"- Source, e.g. Fiverr","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"- Description","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"- Accepted date","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"- Deadline","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"StanleyNeoh"},"content":"#### Clients Tab","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"The Clients tab lists all the clients you have created. Each client block contains the client’s","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"- Name or username","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"- Email","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"- Year of birth","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"- Source, e.g. Fiverr","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"- Phone number","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"StanleyNeoh"},"content":"### Statistics Panel","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"StanleyNeoh"},"content":"The Statistics panel is where you will be able to view statistics about your projects. It is vertically split into 2 portions.","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"The top portion is composed of two tabs. One lists the projects that are due within this week or the next (Week starts from Sunday).","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"RubyNguyen07"},"content":"For example, if the current date is 11/04/2023, all projects with deadlines from 09/04/2023 to 22/04/2023 will appear on the **Due soon project list**.","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"RubyNguyen07"},"content":"The other tab lists projects that are overdue. For example, if the current date is 11/04/2023, projects with deadlines on 11/04/2023","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"RubyNguyen07"},"content":"will not appear in **Overdue project list**, but projects with deadlines on 10/04/2023 will appear in the **Overdue","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"RubyNguyen07"},"content":"project list**.","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"RubyNguyen07"},"content":"The bottom portion shows a pie chart that displays the relative proportions of projects that are not started, in progress, and done","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"RubyNguyen07"},"content":"(which corresponds to the statuses of projects in Mycelium).","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"## Command Layout","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"Commands in Mycelium take the general form of `command_name [arguments...]`.","lastModifiedDate":"2023-03-30"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"Arguments may be compulsory or optional. If you do not provide the optional","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"arguments, Mycelium will use sensible defaults in their place.","lastModifiedDate":"2023-03-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"All arguments take the structure of `-arg_flag arg_data`; the argument flag is","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"always followed by a space. Some commands may also take multiple arguments, in","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"which case you may specify them in any order, delimited by whitespace.","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"Furthermore, if duplicate argument flags are provided, then only the *last one*","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"is used. Finally, note that `arg_data` can consist of multiple whitespace","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"separated tokens, but any leading or trailing whitespace will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"As an example, the command below creates a new project with the name *Mycelium","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"Desktop*, for client *Spiderman*, and sourced from *fiverr.com*. (Don\u0027t worry","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"about what the arguments mean for now, this example is just meant to","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"demonstrate the layout.)","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"RubyNguyen07"},"content":"```bash","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"p -pn Mycelium Desktop -e spiderman@gmail.com -src fiverr.com","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"RubyNguyen07"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"Douglch"},"content":":bulb: You will also discover that all command names in Mycelium are at most","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"two characters long. This terseness is *intentional* to allow for faster","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"Douglch"},"content":"keystrokes. Also note that all commands and argument flags are case-sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":":information_source: **A note on dates:** some arguments are in the form of","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"Douglch"},"content":"dates. For these, Mycelium only accepts input of the format dd/MM/yyyy. For","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"example, \"14/03/2023\" is okay, but \"14/3/2023\", or \"14-03-2023\" are not okay.","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"The range of valid years is from -9999 to 9999.","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":":warning: Avoid having any argument flag appear literally in your argument\u0027s","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"data. For example, any attempts to create a project named *Mycelium -pn","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"Desktop* would fail. In the command `p -pn Mycelium -pn Desktop -e","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"spiderman@gmail.com`, *Desktop* is interpreted as another argument and","lastModifiedDate":"2023-04-04"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"overrides *Mycelium*. So we end up with a project named *Desktop*.","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"RubyNguyen07"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"immanuelhume"},"content":"## Managing Clients","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"Douglch"},"content":"This user guide section outlines how to _create_, _update_, and _delete_ client contacts using command line arguments in Mycelium.","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":":bulb: After executing a command listed in this section, if you are currently","lastModifiedDate":"2023-03-30"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"on the Projects tab, Mycelium will automatically display the Clients tab.","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"immanuelhume"},"content":"### Creating a client contact: `c`","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"RubyNguyen07"},"content":"To create a new client contact, you can use the **`c`** command followed by the client\u0027s name and email.","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"Douglch"},"content":"The year of birth, platform source, and mobile number can also be added as optional arguments.","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"Douglch"},"content":"Once successfully created, the interface will display the new client\u0027s name and email.","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"RubyNguyen07"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"immanuelhume"},"content":"- `-cn client_name`","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"RubyNguyen07"},"content":"    - The client’s name.","lastModifiedDate":"2023-02-28"},{"lineNumber":221,"author":{"gitId":"immanuelhume"},"content":"- `-e email`","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"Douglch"},"content":"    - The client’s email. Must be unique in Mycelium. Case sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"RubyNguyen07"},"content":"**Optional Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"immanuelhume"},"content":"- `-y year_of_birth`","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"Douglch"},"content":"    - The client’s year of birth. Any combination of four digits is acceptable.","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"sachindavid96"},"content":"    - **Default**: *\u0027No year of birth\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":229,"author":{"gitId":"immanuelhume"},"content":"- `-src source`","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"Douglch"},"content":"    - The platform the client is sourced from, such as Fiverr. This can be any arbitrary non-empty string.","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"sachindavid96"},"content":"    - **Default:** *\u0027No source\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":232,"author":{"gitId":"immanuelhume"},"content":"- `-mn mobile_number`","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"RubyNguyen07"},"content":"    - The client’s mobile number.","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"sachindavid96"},"content":"    - **Default:** *\u0027No mobile number\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"RubyNguyen07"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":237,"author":{"gitId":"RubyNguyen07"},"content":":warning: Mycelium does not accommodate \u0027extreme\u0027 inputs (e.g., a client name or email with 1000 characters)","lastModifiedDate":"2023-04-04"},{"lineNumber":238,"author":{"gitId":"RubyNguyen07"},"content":"at this version. This will be added in a future version. Meanwhile, you can limit the characters of each field","lastModifiedDate":"2023-04-04"},{"lineNumber":239,"author":{"gitId":"RubyNguyen07"},"content":"to your screen size and resize if needed to see the full text.","lastModifiedDate":"2023-04-04"},{"lineNumber":240,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"RubyNguyen07"},"content":"The following command creates a new client with name *Alice Baker*, whose email is *alice_baker@bakers.com*, born in the year *2000*.","lastModifiedDate":"2023-02-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"RubyNguyen07"},"content":"```bash","lastModifiedDate":"2023-02-28"},{"lineNumber":247,"author":{"gitId":"Douglch"},"content":"c -cn Alice Baker -e alice_baker@bakers.com -y 2000","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"Douglch"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"Douglch"},"content":"You should see the following output if the client is created successfully.","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"Douglch"},"content":"New client added: Alice Baker (alice_baker@bakers.com)","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"RubyNguyen07"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":254,"author":{"gitId":"Douglch"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"Douglch"},"content":":information_source: **A note on names:** There may be times when you only have access to a client\u0027s username and not their real name.","lastModifiedDate":"2023-04-03"},{"lineNumber":256,"author":{"gitId":"Douglch"},"content":"To accommodate this, Mycelium accepts all types of names.","lastModifiedDate":"2023-04-03"},{"lineNumber":257,"author":{"gitId":"Douglch"},"content":"For instance, names like \"Alice Baker s/o Bob Baker\" are valid names. In fact, unique names like \"X Æ A-12\" are also recognized as valid names in Mycelium.","lastModifiedDate":"2023-04-03"},{"lineNumber":258,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"Douglch"},"content":":information_source: An error message will be shown with an attempt to create a","lastModifiedDate":"2023-04-03"},{"lineNumber":260,"author":{"gitId":"Douglch"},"content":"client with an existing email in Mycelium.","lastModifiedDate":"2023-04-03"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"immanuelhume"},"content":"### Deleting a client contact: `dc`","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"RubyNguyen07"},"content":"To delete an existing client contact, you can use the **`dc`** command followed","lastModifiedDate":"2023-03-30"},{"lineNumber":266,"author":{"gitId":"Douglch"},"content":"by the client\u0027s email address. Once the contact is deleted, the interface will display the name and email of the deleted client.","lastModifiedDate":"2023-03-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"RubyNguyen07"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"immanuelhume"},"content":"- `-e email`","lastModifiedDate":"2023-03-29"},{"lineNumber":271,"author":{"gitId":"RubyNguyen07"},"content":"    - Email of the client to delete.","lastModifiedDate":"2023-02-28"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"RubyNguyen07"},"content":"The command `dc -e alice_baker@bakers.com`  deletes the contact with the corresponding email.","lastModifiedDate":"2023-02-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Douglch"},"content":"Once the client is deleted, you should see the following output.","lastModifiedDate":"2023-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":279,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"Douglch"},"content":"Deleted Client: Alice Baker (alice_baker@bakers.com)","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"Douglch"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"Douglch"},"content":"### Updating a client: `uc`","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"RubyNguyen07"},"content":"To update an existing client contact, you can use the **`uc`** command","lastModifiedDate":"2023-03-30"},{"lineNumber":286,"author":{"gitId":"Douglch"},"content":"followed by the client\u0027s email address.","lastModifiedDate":"2023-03-30"},{"lineNumber":287,"author":{"gitId":"Douglch"},"content":"You can then add one or more optional arguments to specify the updated information such as the client\u0027s new name, email, year of birth, platform source, or mobile number.","lastModifiedDate":"2023-03-30"},{"lineNumber":288,"author":{"gitId":"Douglch"},"content":"The interface will display the updated client\u0027s name and email once the update is successful.","lastModifiedDate":"2023-03-30"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"Douglch"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"immanuelhume"},"content":"- `-e email`","lastModifiedDate":"2023-03-29"},{"lineNumber":292,"author":{"gitId":"Douglch"},"content":"  - Email of the client to update.","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"Douglch"},"content":"**Optional Arguments**","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"Douglch"},"content":"At least one of the following arguments must be provided:","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"immanuelhume"},"content":"- `-cn client_name`","lastModifiedDate":"2023-03-29"},{"lineNumber":298,"author":{"gitId":"Douglch"},"content":"  - The client’s new name.","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"sachindavid96"},"content":"  - **Default:** *Existing name*","lastModifiedDate":"2023-04-04"},{"lineNumber":300,"author":{"gitId":"immanuelhume"},"content":"- `-e2 new email`","lastModifiedDate":"2023-03-29"},{"lineNumber":301,"author":{"gitId":"Douglch"},"content":"  - The client\u0027s new email. Must be unique in Mycelium. Case sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"sachindavid96"},"content":"  - **Default:** *Existing email*","lastModifiedDate":"2023-04-04"},{"lineNumber":303,"author":{"gitId":"immanuelhume"},"content":"- `-y year_of_birth`","lastModifiedDate":"2023-03-29"},{"lineNumber":304,"author":{"gitId":"Douglch"},"content":"  - The client’s new year of birth.","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"sachindavid96"},"content":"  - **Default:** *Existing year of birth or \u0027No year of birth\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"immanuelhume"},"content":"- `-src source`","lastModifiedDate":"2023-03-29"},{"lineNumber":307,"author":{"gitId":"Douglch"},"content":"  - The client’s new digital service platform, e.g. Fiverr.","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"sachindavid96"},"content":"  - **Default:** *Existing source or \u0027No source\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"immanuelhume"},"content":"- `-mn mobile_number`","lastModifiedDate":"2023-03-29"},{"lineNumber":310,"author":{"gitId":"Douglch"},"content":"  - The client’s new mobile number.","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"sachindavid96"},"content":"  - **Default:** *Existing mobile number or \u0027No mobile number\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"immanuelhume"},"content":"The command `uc -e alice_baker@bakers.com -cn Bobby Baker` updates the client with email *alice_baker@bakers.com* to have the name *Bobby Baker*.","lastModifiedDate":"2023-03-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"Douglch"},"content":"You should see the following output if the client is updated successfully.","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":319,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-29"},{"lineNumber":320,"author":{"gitId":"Douglch"},"content":"Updated Client: Bobby Baker (alice_baker@bakers.com)","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"Douglch"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"RubyNguyen07"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-28"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"immanuelhume"},"content":"## Managing Projects","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"Douglch"},"content":"This section of the user guide explains how to _create_, _delete_, and _update_ a project using commands that allow you to manage your projects.","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":328,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"immanuelhume"},"content":":bulb: After executing a command listed in this section, if you are currently","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"immanuelhume"},"content":"on the Clients tab, Mycelium will automatically display the Projects tab.","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"immanuelhume"},"content":"### Creating a project: `p`","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Douglch"},"content":"Creating a project requires specifying the project\u0027s name, which must be unique, and the","lastModifiedDate":"2023-03-30"},{"lineNumber":336,"author":{"gitId":"Douglch"},"content":"email of the client who submitted the project.","lastModifiedDate":"2023-03-30"},{"lineNumber":337,"author":{"gitId":"Douglch"},"content":"There are several optional arguments available, such as the project\u0027s status,","lastModifiedDate":"2023-03-30"},{"lineNumber":338,"author":{"gitId":"Douglch"},"content":"source, description, accepted and deadline date.","lastModifiedDate":"2023-03-30"},{"lineNumber":339,"author":{"gitId":"Douglch"},"content":"If the project is added successfully, a message confirming the addition will be displayed.","lastModifiedDate":"2023-03-30"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"RubyNguyen07"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"immanuelhume"},"content":"* `-pn project_name`","lastModifiedDate":"2023-03-27"},{"lineNumber":344,"author":{"gitId":"Douglch"},"content":"    * The project’s name, which must be *unique*. Case-sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"immanuelhume"},"content":"* `-e client_email`","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"immanuelhume"},"content":"    * The email of the client who submitted this project. Note that this client","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"Douglch"},"content":"      does not need to exist in Mycelium.","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"RubyNguyen07"},"content":"**Optional Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"immanuelhume"},"content":"- `-s status`","lastModifiedDate":"2023-03-27"},{"lineNumber":352,"author":{"gitId":"immanuelhume"},"content":"    - Here `status` should be set, to one of `not_started`, `in_progress`, or","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"immanuelhume"},"content":"      `done`.","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"immanuelhume"},"content":"    - **Default:** `not_started`","lastModifiedDate":"2023-03-27"},{"lineNumber":355,"author":{"gitId":"immanuelhume"},"content":"- `-src source`","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"immanuelhume"},"content":"    - The platform the project is sourced from, such as Fiverr. This can be any","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"immanuelhume"},"content":"      arbitrary non-empty string.","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"sachindavid96"},"content":"    - **Default:** *\u0027Unknown\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":359,"author":{"gitId":"immanuelhume"},"content":"- `-d description`","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"RubyNguyen07"},"content":"    - A short description of the project.","lastModifiedDate":"2023-02-28"},{"lineNumber":361,"author":{"gitId":"sachindavid96"},"content":"    - **Default:** *\u0027No description given\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":362,"author":{"gitId":"immanuelhume"},"content":"- `-ad accepted_date`","lastModifiedDate":"2023-03-27"},{"lineNumber":363,"author":{"gitId":"immanuelhume"},"content":"    - The date that the project was accepted, in the format dd/MM/yyyy.","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"RubyNguyen07"},"content":"    - **Default**: the current date","lastModifiedDate":"2023-02-28"},{"lineNumber":365,"author":{"gitId":"immanuelhume"},"content":"- `-dd deadline_date`","lastModifiedDate":"2023-03-27"},{"lineNumber":366,"author":{"gitId":"immanuelhume"},"content":"    - The deadline of the project, in the format dd/MM/yyyy.","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"sachindavid96"},"content":"    - **Default:** *\u0027No Deadline\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"RubyNguyen07"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":370,"author":{"gitId":"RubyNguyen07"},"content":":warning: Mycelium does not accommodate \u0027extreme\u0027 inputs (e.g., a project name or description with 1000 characters)","lastModifiedDate":"2023-04-04"},{"lineNumber":371,"author":{"gitId":"RubyNguyen07"},"content":"at this version. This will be added in a future version. Meanwhile, you can limit the characters of each field","lastModifiedDate":"2023-04-04"},{"lineNumber":372,"author":{"gitId":"RubyNguyen07"},"content":"to your screen size and resize if needed to see the full text.","lastModifiedDate":"2023-04-04"},{"lineNumber":373,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":376,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-28"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"immanuelhume"},"content":"The following command creates a new project whose name is *Mycelium Desktop*,","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"immanuelhume"},"content":"submitted from the client *spiderman@gmail.com* and sourced from *fiverr.com*,","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"Douglch"},"content":"with a deadline on *14 March 2075*.","lastModifiedDate":"2023-03-30"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":382,"author":{"gitId":"immanuelhume"},"content":"```bash","lastModifiedDate":"2023-03-29"},{"lineNumber":383,"author":{"gitId":"immanuelhume"},"content":"p -pn Mycelium Desktop -e spiderman@gmail.com -src fiverr.com -dd 14/03/2075","lastModifiedDate":"2023-03-29"},{"lineNumber":384,"author":{"gitId":"RubyNguyen07"},"content":"```","lastModifiedDate":"2023-02-28"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":386,"author":{"gitId":"immanuelhume"},"content":"If the project is added successfully, you should see the following message in","lastModifiedDate":"2023-03-28"},{"lineNumber":387,"author":{"gitId":"immanuelhume"},"content":"the output box:","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":389,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":390,"author":{"gitId":"immanuelhume"},"content":"New project added: Mycelium Desktop from client spiderman@gmail.com","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":393,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":394,"author":{"gitId":"Douglch"},"content":":bulb: The project\u0027s status is not case-sensitive. Meaning you may key in","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"immanuelhume"},"content":"`not_started` as `NOT_STARTED` or `nOT_sTArtED`.","lastModifiedDate":"2023-03-28"},{"lineNumber":396,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":398,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"immanuelhume"},"content":":information_source: The client specified by the `-e` argument does not need to","lastModifiedDate":"2023-03-28"},{"lineNumber":400,"author":{"gitId":"Douglch"},"content":"exist in Mycelium. You can add them later if you wish.","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":403,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":404,"author":{"gitId":"immanuelhume"},"content":":information_source: If you attempt to create a project with a name which already exists","lastModifiedDate":"2023-03-28"},{"lineNumber":405,"author":{"gitId":"Douglch"},"content":"in Mycelium, an error will be displayed to block the operation.","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":408,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":409,"author":{"gitId":"immanuelhume"},"content":":information_source: Mycelium does not enforce that a project\u0027s deadline be","lastModifiedDate":"2023-04-04"},{"lineNumber":410,"author":{"gitId":"immanuelhume"},"content":"after its accepted date. This allows for the possibility of accepting overdue","lastModifiedDate":"2023-04-04"},{"lineNumber":411,"author":{"gitId":"immanuelhume"},"content":"projects. You can also key in an accepted date in the future if you can","lastModifiedDate":"2023-04-04"},{"lineNumber":412,"author":{"gitId":"immanuelhume"},"content":"anticipate it.","lastModifiedDate":"2023-04-04"},{"lineNumber":413,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":415,"author":{"gitId":"immanuelhume"},"content":"### Deleting a project: `dp`","lastModifiedDate":"2023-03-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":417,"author":{"gitId":"Douglch"},"content":"Deleting a project requires specifying the project\u0027s name, which is case-sensitive. If the project is deleted successfully,","lastModifiedDate":"2023-03-30"},{"lineNumber":418,"author":{"gitId":"Douglch"},"content":"a message confirming the deletion will be displayed.","lastModifiedDate":"2023-03-30"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"RubyNguyen07"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-02-28"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"RubyNguyen07"},"content":"- `-pn project_name`","lastModifiedDate":"2023-02-28"},{"lineNumber":423,"author":{"gitId":"Douglch"},"content":"    - Name of the project to delete. Case-sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-28"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"immanuelhume"},"content":"The following command deletes a project with name *Mycelium Desktop*.","lastModifiedDate":"2023-03-27"},{"lineNumber":428,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":429,"author":{"gitId":"immanuelhume"},"content":"```bash","lastModifiedDate":"2023-03-29"},{"lineNumber":430,"author":{"gitId":"immanuelhume"},"content":"dp -pn Mycelium Desktop","lastModifiedDate":"2023-03-27"},{"lineNumber":431,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":433,"author":{"gitId":"Douglch"},"content":"If the command is successful, you should see the following message in the output box. (In this","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"immanuelhume"},"content":"example, the project\u0027s client is *spiderman@gmail.com*.)","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":437,"author":{"gitId":"immanuelhume"},"content":"Deleted Project: Mycelium Desktop from client spiderman@gmail.com","lastModifiedDate":"2023-03-27"},{"lineNumber":438,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":439,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":440,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":441,"author":{"gitId":"immanuelhume"},"content":":information_source: If you attempt to delete a project which does not exist in","lastModifiedDate":"2023-03-28"},{"lineNumber":442,"author":{"gitId":"Douglch"},"content":"Mycelium, an error will be displayed and no changes will be made to your data.","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":444,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":445,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":446,"author":{"gitId":"Douglch"},"content":":warning: Deletion is irreversible. Mycelium does not provide a mechanism to","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"immanuelhume"},"content":"undo deletions.","lastModifiedDate":"2023-03-28"},{"lineNumber":448,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":449,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":450,"author":{"gitId":"immanuelhume"},"content":"### Updating a project: `up`","lastModifiedDate":"2023-03-27"},{"lineNumber":451,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"Douglch"},"content":"Updating a project allows users to partially update the target project using optional arguments.","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"Douglch"},"content":"The user must specify the project name, and each argument, if specified,","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"Douglch"},"content":"will be used to partially update the project. The output will confirm the update\u0027s success.","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"immanuelhume"},"content":"**Compulsory Arguments**","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":458,"author":{"gitId":"immanuelhume"},"content":"* `-pn project_name`","lastModifiedDate":"2023-03-27"},{"lineNumber":459,"author":{"gitId":"Douglch"},"content":"    * Name of the project to update. Case-sensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":461,"author":{"gitId":"immanuelhume"},"content":"**Optional Arguments**","lastModifiedDate":"2023-03-27"},{"lineNumber":462,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":463,"author":{"gitId":"immanuelhume"},"content":"* `-pn2 new_project_name`","lastModifiedDate":"2023-03-27"},{"lineNumber":464,"author":{"gitId":"immanuelhume"},"content":"    * A new project name.","lastModifiedDate":"2023-03-27"},{"lineNumber":465,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing name*","lastModifiedDate":"2023-04-04"},{"lineNumber":466,"author":{"gitId":"immanuelhume"},"content":"* `-e client_email`","lastModifiedDate":"2023-03-27"},{"lineNumber":467,"author":{"gitId":"immanuelhume"},"content":"    * A new client email.","lastModifiedDate":"2023-03-27"},{"lineNumber":468,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing email*","lastModifiedDate":"2023-04-04"},{"lineNumber":469,"author":{"gitId":"immanuelhume"},"content":"* `-s status`","lastModifiedDate":"2023-03-27"},{"lineNumber":470,"author":{"gitId":"immanuelhume"},"content":"    * A new project status. Should be set, to one of `not_started`,","lastModifiedDate":"2023-03-28"},{"lineNumber":471,"author":{"gitId":"immanuelhume"},"content":"      `in_progress`, or `done`.","lastModifiedDate":"2023-03-27"},{"lineNumber":472,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing status*","lastModifiedDate":"2023-04-04"},{"lineNumber":473,"author":{"gitId":"immanuelhume"},"content":"* `-src source`","lastModifiedDate":"2023-03-27"},{"lineNumber":474,"author":{"gitId":"immanuelhume"},"content":"    * A new source for the project. Can be any arbitrary non-empty string.","lastModifiedDate":"2023-03-27"},{"lineNumber":475,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing source or \u0027Unknown\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":476,"author":{"gitId":"immanuelhume"},"content":"* `-d description`","lastModifiedDate":"2023-03-27"},{"lineNumber":477,"author":{"gitId":"immanuelhume"},"content":"    * A new description for the project.","lastModifiedDate":"2023-03-27"},{"lineNumber":478,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *\u0027Existing description or \u0027No description given\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":479,"author":{"gitId":"immanuelhume"},"content":"* `-ad accepted_date`","lastModifiedDate":"2023-03-27"},{"lineNumber":480,"author":{"gitId":"immanuelhume"},"content":"    * A new accepted-on date for the project.","lastModifiedDate":"2023-03-27"},{"lineNumber":481,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing accepted-on date*","lastModifiedDate":"2023-04-04"},{"lineNumber":482,"author":{"gitId":"immanuelhume"},"content":"* `-dd deadline_date`","lastModifiedDate":"2023-03-27"},{"lineNumber":483,"author":{"gitId":"immanuelhume"},"content":"    * A new deadline for the project.","lastModifiedDate":"2023-03-27"},{"lineNumber":484,"author":{"gitId":"sachindavid96"},"content":"    * **Default:** *Existing deadline or \u0027No Deadline\u0027*","lastModifiedDate":"2023-04-04"},{"lineNumber":485,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":486,"author":{"gitId":"immanuelhume"},"content":"Each of these arguments, if specified, will be used to (paritially) update the","lastModifiedDate":"2023-03-27"},{"lineNumber":487,"author":{"gitId":"immanuelhume"},"content":"target project.","lastModifiedDate":"2023-03-27"},{"lineNumber":488,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":489,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":490,"author":{"gitId":"immanuelhume"},"content":":bulb: Notice that the arguments here are similar to that of creating a","lastModifiedDate":"2023-03-28"},{"lineNumber":491,"author":{"gitId":"immanuelhume"},"content":"project. You may refer to the section above on [creating a","lastModifiedDate":"2023-03-28"},{"lineNumber":492,"author":{"gitId":"immanuelhume"},"content":"project](#creating-a-project-p) for more details on what each argument means.","lastModifiedDate":"2023-03-29"},{"lineNumber":493,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"immanuelhume"},"content":"**Example**","lastModifiedDate":"2023-03-28"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"immanuelhume"},"content":"Suppose we have a project named *Mycelium Desktop*, and wish to update","lastModifiedDate":"2023-03-27"},{"lineNumber":498,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":499,"author":{"gitId":"immanuelhume"},"content":"1. its name to *Mycelium Mobile*; and","lastModifiedDate":"2023-03-27"},{"lineNumber":500,"author":{"gitId":"immanuelhume"},"content":"1. its status to `in_progress`.","lastModifiedDate":"2023-03-27"},{"lineNumber":501,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":502,"author":{"gitId":"immanuelhume"},"content":"The following command will do the trick.","lastModifiedDate":"2023-03-27"},{"lineNumber":503,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":504,"author":{"gitId":"immanuelhume"},"content":"```bash","lastModifiedDate":"2023-03-29"},{"lineNumber":505,"author":{"gitId":"immanuelhume"},"content":"up -pn Mycelium Desktop -pn2 Mycelium Mobile -s in_progress","lastModifiedDate":"2023-03-27"},{"lineNumber":506,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-27"},{"lineNumber":507,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":508,"author":{"gitId":"Douglch"},"content":"If the command is successful, you should see the following message in the output box. (Here we","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"immanuelhume"},"content":"assume the project came from client *foo@bar.com*.)","lastModifiedDate":"2023-03-28"},{"lineNumber":510,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":511,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":512,"author":{"gitId":"immanuelhume"},"content":"Updated project: Mycelium Mobile from client foo@bar.com","lastModifiedDate":"2023-03-28"},{"lineNumber":513,"author":{"gitId":"immanuelhume"},"content":"```","lastModifiedDate":"2023-03-28"},{"lineNumber":514,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":515,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":516,"author":{"gitId":"immanuelhume"},"content":":information_source: If the project\u0027s name is updated, then it must be a unique","lastModifiedDate":"2023-03-28"},{"lineNumber":517,"author":{"gitId":"immanuelhume"},"content":"name. Suppose we currently have the projects *foo* and *bar*. An attempt to","lastModifiedDate":"2023-03-28"},{"lineNumber":518,"author":{"gitId":"immanuelhume"},"content":"update *foo*\u0027s name to *bar* will result in an error, and the operation will be","lastModifiedDate":"2023-03-28"},{"lineNumber":519,"author":{"gitId":"immanuelhume"},"content":"blocked.","lastModifiedDate":"2023-03-28"},{"lineNumber":520,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":521,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":522,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":523,"author":{"gitId":"Douglch"},"content":":information_source: The target project should already exist in Mycelium.","lastModifiedDate":"2023-03-30"},{"lineNumber":524,"author":{"gitId":"immanuelhume"},"content":"Otherwise, an error will be displayed and no changes are made to the data.","lastModifiedDate":"2023-03-28"},{"lineNumber":525,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":526,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":527,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":528,"author":{"gitId":"immanuelhume"},"content":":warning: It is not possible to \"unset\" an optional field. For example,","lastModifiedDate":"2023-03-28"},{"lineNumber":529,"author":{"gitId":"Douglch"},"content":"Mycelium allows projects to have deadlines. Suppose that you have a project,","lastModifiedDate":"2023-03-30"},{"lineNumber":530,"author":{"gitId":"immanuelhume"},"content":"which currently has a deadline. Then it is not possible to use the `up` command","lastModifiedDate":"2023-03-28"},{"lineNumber":531,"author":{"gitId":"immanuelhume"},"content":"to unset the deadline.","lastModifiedDate":"2023-03-28"},{"lineNumber":532,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":536,"author":{"gitId":"immanuelhume"},"content":"## HotKeys","lastModifiedDate":"2023-04-05"},{"lineNumber":537,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":538,"author":{"gitId":"immanuelhume"},"content":"HotKeys are keyboard shortcuts supported by Mycelium to enable faster navigation and editing of commands with the keyboard. This allows for Mycelium to be fully keyboard driven. The following are the supported HotKeys:","lastModifiedDate":"2023-04-05"},{"lineNumber":539,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":540,"author":{"gitId":"immanuelhume"},"content":"### (F1) Help","lastModifiedDate":"2023-04-05"},{"lineNumber":541,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":542,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly access the help page.","lastModifiedDate":"2023-04-05"},{"lineNumber":543,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":544,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+Q) Quit","lastModifiedDate":"2023-04-05"},{"lineNumber":545,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":546,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly quit Mycelium.","lastModifiedDate":"2023-04-05"},{"lineNumber":547,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":548,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+W) Start of Line","lastModifiedDate":"2023-04-05"},{"lineNumber":549,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":550,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly navigate to the start of the line in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":551,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":552,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+E) End of Line","lastModifiedDate":"2023-04-05"},{"lineNumber":553,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":554,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly navigate to the end of the line in the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":555,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":556,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+D) Clear line","lastModifiedDate":"2023-04-05"},{"lineNumber":557,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":558,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly clear the current line in the command box. The command also clears the command log found below the command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":559,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":560,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+S) Switch Panels","lastModifiedDate":"2023-04-05"},{"lineNumber":561,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":562,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly switch the focus between the Entity panel and the Statistics panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":563,"author":{"gitId":"immanuelhume"},"content":"The panel in focus will be highlighted with a blue header.","lastModifiedDate":"2023-04-05"},{"lineNumber":564,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":565,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+L) Switch Tabs","lastModifiedDate":"2023-04-05"},{"lineNumber":566,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":567,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly switch between the tabs of panel that is currently in focus.","lastModifiedDate":"2023-04-05"},{"lineNumber":568,"author":{"gitId":"immanuelhume"},"content":"If the left Entity panel is in focus, then the tabs will be the Projects tab and Clients tab.","lastModifiedDate":"2023-04-05"},{"lineNumber":569,"author":{"gitId":"immanuelhume"},"content":"If the right Statistics panel is in focus, then the tabs will be the Overdue and Due soon tabs.","lastModifiedDate":"2023-04-05"},{"lineNumber":570,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":571,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+J) Select next","lastModifiedDate":"2023-04-05"},{"lineNumber":572,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":573,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly select the next item on the list in the currently selected tab","lastModifiedDate":"2023-04-05"},{"lineNumber":574,"author":{"gitId":"immanuelhume"},"content":"in the currently selected panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":575,"author":{"gitId":"immanuelhume"},"content":"This could be either the Projects tab or Clients tab in the Entity panel or the Overdue tab or Due soon tab in the Statistics panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":576,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":577,"author":{"gitId":"immanuelhume"},"content":"If the last item is selected, then the next item will be the first item in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":578,"author":{"gitId":"immanuelhume"},"content":"If there was no item originally selected, then the first item in the list will be selected.","lastModifiedDate":"2023-04-05"},{"lineNumber":579,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":580,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+K) Select previous","lastModifiedDate":"2023-04-05"},{"lineNumber":581,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":582,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you to quickly select the previous item on the list in the currently selected tab","lastModifiedDate":"2023-04-05"},{"lineNumber":583,"author":{"gitId":"immanuelhume"},"content":"in the currently selected panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":584,"author":{"gitId":"immanuelhume"},"content":"This could be either the Projects tab or Clients tab in the Entity panel or the Overdue tab or Due soon tab in the Statistics panel.","lastModifiedDate":"2023-04-05"},{"lineNumber":585,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":586,"author":{"gitId":"immanuelhume"},"content":"If the first item is selected, then the previous item will be the last item in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":587,"author":{"gitId":"immanuelhume"},"content":"If there was no item originally selected, then the last item in the list will be selected.","lastModifiedDate":"2023-04-05"},{"lineNumber":588,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":589,"author":{"gitId":"immanuelhume"},"content":"### (CTRL+F) Search","lastModifiedDate":"2023-04-05"},{"lineNumber":590,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":591,"author":{"gitId":"immanuelhume"},"content":"This shortcut allows you toggle the command box between **search mode** and","lastModifiedDate":"2023-04-05"},{"lineNumber":592,"author":{"gitId":"immanuelhume"},"content":"**command mode** (default). More information about the functionality of","lastModifiedDate":"2023-04-05"},{"lineNumber":593,"author":{"gitId":"immanuelhume"},"content":"**search mode** can be found [below](#fuzzy-search).","lastModifiedDate":"2023-04-05"},{"lineNumber":594,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":595,"author":{"gitId":"immanuelhume"},"content":"In **command mode**, the input in the command box is used to execute the command.","lastModifiedDate":"2023-04-05"},{"lineNumber":596,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":597,"author":{"gitId":"immanuelhume"},"content":"In **search mode**, the command box is highlighted teal and the input is used to *interactively* search for the closest matching project or client by name in the **Entity panel only**. *Interactively* would mean that the search results are updated in the projects and client list as you type. On entering **search mode**, the Entity panel will be put into focus automatically.","lastModifiedDate":"2023-04-05"},{"lineNumber":598,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":599,"author":{"gitId":"immanuelhume"},"content":"Your existing input while in **command mode** will be cached when you switch to","lastModifiedDate":"2023-04-05"},{"lineNumber":600,"author":{"gitId":"immanuelhume"},"content":"**search mode**. It is then restored when you switch back to **command mode**.","lastModifiedDate":"2023-04-05"},{"lineNumber":601,"author":{"gitId":"immanuelhume"},"content":"Similarly, your existing input while in **search mode** will be cached when","lastModifiedDate":"2023-04-05"},{"lineNumber":602,"author":{"gitId":"immanuelhume"},"content":"switching to **command mode**, and restored when switching back to **search","lastModifiedDate":"2023-04-05"},{"lineNumber":603,"author":{"gitId":"immanuelhume"},"content":"mode**.","lastModifiedDate":"2023-04-05"},{"lineNumber":604,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":605,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":606,"author":{"gitId":"immanuelhume"},"content":":warning: You cannot execute any commands while in **search mode**. Similarly,","lastModifiedDate":"2023-04-05"},{"lineNumber":607,"author":{"gitId":"immanuelhume"},"content":"no searching can be done while in **command mode**.","lastModifiedDate":"2023-04-05"},{"lineNumber":608,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":609,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":610,"author":{"gitId":"immanuelhume"},"content":"## Fuzzy Search","lastModifiedDate":"2023-03-27"},{"lineNumber":611,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":612,"author":{"gitId":"immanuelhume"},"content":"Fuzzy search allows us to find projects or clients which match *closely* to","lastModifiedDate":"2023-03-27"},{"lineNumber":613,"author":{"gitId":"immanuelhume"},"content":"some query, rather than *exactly*. This is useful if you are, for instance,","lastModifiedDate":"2023-03-27"},{"lineNumber":614,"author":{"gitId":"immanuelhume"},"content":"trying to find a project whose name you only remember partial bits of, or how","lastModifiedDate":"2023-03-27"},{"lineNumber":615,"author":{"gitId":"immanuelhume"},"content":"it sounds in your head.","lastModifiedDate":"2023-03-27"},{"lineNumber":616,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":617,"author":{"gitId":"Douglch"},"content":"Mycelium supports fuzzy finding for both projects and clients. For projects,","lastModifiedDate":"2023-03-30"},{"lineNumber":618,"author":{"gitId":"immanuelhume"},"content":"the query is matched against the project\u0027s name, while for clients, the query","lastModifiedDate":"2023-03-27"},{"lineNumber":619,"author":{"gitId":"immanuelhume"},"content":"is matched against the client\u0027s email. Furthermore, the search is","lastModifiedDate":"2023-03-27"},{"lineNumber":620,"author":{"gitId":"immanuelhume"},"content":"*interactive*, so UI automatically updates as you type your query into the","lastModifiedDate":"2023-04-05"},{"lineNumber":621,"author":{"gitId":"immanuelhume"},"content":"command box.","lastModifiedDate":"2023-04-05"},{"lineNumber":622,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":623,"author":{"gitId":"immanuelhume"},"content":"Please take note of these details for fuzzy search:","lastModifiedDate":"2023-03-27"},{"lineNumber":624,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":625,"author":{"gitId":"immanuelhume"},"content":"* Closer matches will be placed at the top;","lastModifiedDate":"2023-03-27"},{"lineNumber":626,"author":{"gitId":"immanuelhume"},"content":"* Only projects or clients which *do not match at all* will not be shown;","lastModifiedDate":"2023-04-04"},{"lineNumber":627,"author":{"gitId":"immanuelhume"},"content":"* Fuzzy search is *not* case-sensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":628,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":629,"author":{"gitId":"immanuelhume"},"content":"The following two sections will walk through performing fuzzy search on","lastModifiedDate":"2023-03-27"},{"lineNumber":630,"author":{"gitId":"immanuelhume"},"content":"projects and clients.","lastModifiedDate":"2023-03-27"},{"lineNumber":631,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":632,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":633,"author":{"gitId":"immanuelhume"},"content":":bulb: Note that by \"do not match at all\", we refer to the case where literally","lastModifiedDate":"2023-03-28"},{"lineNumber":634,"author":{"gitId":"immanuelhume"},"content":"not a single character matches. As long as at least one character matches, the","lastModifiedDate":"2023-03-28"},{"lineNumber":635,"author":{"gitId":"immanuelhume"},"content":"project or client will be listed (although possibly ranked very low).","lastModifiedDate":"2023-03-28"},{"lineNumber":636,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":637,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":638,"author":{"gitId":"immanuelhume"},"content":"### Fuzzy searching projects","lastModifiedDate":"2023-03-27"},{"lineNumber":639,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":640,"author":{"gitId":"immanuelhume"},"content":"We will now demonstrate fuzzy searching through an example. Let us assume we","lastModifiedDate":"2023-03-28"},{"lineNumber":641,"author":{"gitId":"Douglch"},"content":"have the following projects in Mycelium:","lastModifiedDate":"2023-03-30"},{"lineNumber":642,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":643,"author":{"gitId":"immanuelhume"},"content":"\u003cimg src\u003d\"images/Ui.png\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":644,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":645,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":646,"author":{"gitId":"Douglch"},"content":":information_source: Recall that Mycelium supports fuzzy search for projects by","lastModifiedDate":"2023-04-03"},{"lineNumber":647,"author":{"gitId":"Douglch"},"content":"their *names* only.","lastModifiedDate":"2023-03-30"},{"lineNumber":648,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":649,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":650,"author":{"gitId":"immanuelhume"},"content":"First, press (CTRL+F) to toggle to **search mode** (if you are not already in","lastModifiedDate":"2023-04-05"},{"lineNumber":651,"author":{"gitId":"immanuelhume"},"content":"**search mode**). You should see the command box turn teal; now we can begin","lastModifiedDate":"2023-04-05"},{"lineNumber":652,"author":{"gitId":"immanuelhume"},"content":"searching. Suppose we wanted to search for *Clash of Clans* listed at the","lastModifiedDate":"2023-03-28"},{"lineNumber":653,"author":{"gitId":"immanuelhume"},"content":"bottom in the screenshot above. With the power of fuzzy matching, just typing","lastModifiedDate":"2023-03-28"},{"lineNumber":654,"author":{"gitId":"immanuelhume"},"content":"*coc* is enough, as shown below.","lastModifiedDate":"2023-03-28"},{"lineNumber":655,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":656,"author":{"gitId":"immanuelhume"},"content":"\u003cimg src\u003d\"images/FuzzyDemoSearching.png\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":657,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":658,"author":{"gitId":"immanuelhume"},"content":"If we queried a term which matches nothing at all, then no results will be","lastModifiedDate":"2023-04-05"},{"lineNumber":659,"author":{"gitId":"immanuelhume"},"content":"listed.","lastModifiedDate":"2023-03-27"},{"lineNumber":660,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":661,"author":{"gitId":"immanuelhume"},"content":"\u003cimg src\u003d\"images/FuzzyDemoSearchingNoResults.png\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":662,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":663,"author":{"gitId":"immanuelhume"},"content":"To exit **search mode**, press (CTRL+F) again. The command box should return to its","lastModifiedDate":"2023-04-05"},{"lineNumber":664,"author":{"gitId":"immanuelhume"},"content":"original dark color.","lastModifiedDate":"2023-04-05"},{"lineNumber":665,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":666,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":667,"author":{"gitId":"immanuelhume"},"content":":information_source: The example we have here is quite trivial. But you can","lastModifiedDate":"2023-03-28"},{"lineNumber":668,"author":{"gitId":"immanuelhume"},"content":"imagine having tens or hundreds of projects and clients; fuzzy search would be","lastModifiedDate":"2023-03-28"},{"lineNumber":669,"author":{"gitId":"immanuelhume"},"content":"quite a quality-of-life feature!","lastModifiedDate":"2023-03-28"},{"lineNumber":670,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":671,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":672,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":673,"author":{"gitId":"immanuelhume"},"content":":bulb: Still confused about **search mode**? You may check out the [section","lastModifiedDate":"2023-04-05"},{"lineNumber":674,"author":{"gitId":"immanuelhume"},"content":"below](#ctrlf-search) on the (CTRL+F) HotKey for more information.","lastModifiedDate":"2023-03-29"},{"lineNumber":675,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":676,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":677,"author":{"gitId":"immanuelhume"},"content":"### Fuzzy searching clients","lastModifiedDate":"2023-03-27"},{"lineNumber":678,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":679,"author":{"gitId":"Douglch"},"content":"This works exactly the same as fuzzy searching projects, described above.","lastModifiedDate":"2023-03-30"},{"lineNumber":680,"author":{"gitId":"immanuelhume"},"content":"The only difference to note is that the query is matched against the clients\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":681,"author":{"gitId":"immanuelhume"},"content":"emails, and not their names.","lastModifiedDate":"2023-03-27"},{"lineNumber":682,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":683,"author":{"gitId":"immanuelhume"},"content":"### Extracing client and project info","lastModifiedDate":"2023-04-05"},{"lineNumber":684,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":685,"author":{"gitId":"immanuelhume"},"content":"While in **search mode**, you can use the (ENTER) key to extract a client\u0027s email","lastModifiedDate":"2023-04-05"},{"lineNumber":686,"author":{"gitId":"immanuelhume"},"content":"or a project\u0027s name. This will automatically switch you back to **command mode**","lastModifiedDate":"2023-04-05"},{"lineNumber":687,"author":{"gitId":"immanuelhume"},"content":"while appending the name or email to the command box. This is useful if you","lastModifiedDate":"2023-04-05"},{"lineNumber":688,"author":{"gitId":"immanuelhume"},"content":"want to quickly reference a project or client in your command.","lastModifiedDate":"2023-04-05"},{"lineNumber":689,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":690,"author":{"gitId":"immanuelhume"},"content":"To demonstrate this, let\u0027s assume you want to delete a project. You can first","lastModifiedDate":"2023-04-05"},{"lineNumber":691,"author":{"gitId":"immanuelhume"},"content":"type in `dp -pn ` as shown below","lastModifiedDate":"2023-04-05"},{"lineNumber":692,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":693,"author":{"gitId":"immanuelhume"},"content":"![step1](images/SearchAndSelectStep1.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":694,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":695,"author":{"gitId":"immanuelhume"},"content":"Instead of typing the full project name, you can press (CTRL+F) to enter","lastModifiedDate":"2023-04-05"},{"lineNumber":696,"author":{"gitId":"immanuelhume"},"content":"**search mode** and search for the project you want to delete. Once you see the","lastModifiedDate":"2023-04-05"},{"lineNumber":697,"author":{"gitId":"immanuelhume"},"content":"desired project, use (CTRL+J) or (CTRL+K) to navigate to it. You will know it","lastModifiedDate":"2023-04-05"},{"lineNumber":698,"author":{"gitId":"immanuelhume"},"content":"is selected when the project\u0027s box is coloured blue, as shown below.","lastModifiedDate":"2023-04-05"},{"lineNumber":699,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":700,"author":{"gitId":"immanuelhume"},"content":"![step2](images/SearchAndSelectStep2.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":701,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":702,"author":{"gitId":"immanuelhume"},"content":"You can then press (ENTER) to switch back to **command mode** and append the project name to the command box. The project\u0027s name will be highlighted (this is not shown in the screenshot below due to to limitations of the screenshot program).","lastModifiedDate":"2023-04-05"},{"lineNumber":703,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":704,"author":{"gitId":"immanuelhume"},"content":"![step3](images/SearchAndSelectStep3.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":705,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":706,"author":{"gitId":"immanuelhume"},"content":"We can now proceed to execute the command as per usual. Note that for clients,","lastModifiedDate":"2023-04-05"},{"lineNumber":707,"author":{"gitId":"immanuelhume"},"content":"the (ENTER) key would extract the client\u0027s email. This way you can quickly","lastModifiedDate":"2023-04-05"},{"lineNumber":708,"author":{"gitId":"immanuelhume"},"content":"reference a project or client in your command, without having to type out the","lastModifiedDate":"2023-04-05"},{"lineNumber":709,"author":{"gitId":"immanuelhume"},"content":"full name or email.","lastModifiedDate":"2023-04-05"},{"lineNumber":710,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":711,"author":{"gitId":"immanuelhume"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-danger\"\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":712,"author":{"gitId":"immanuelhume"},"content":":warning: Avoid using your mouse to select a project or client. Instead, use","lastModifiedDate":"2023-04-05"},{"lineNumber":713,"author":{"gitId":"immanuelhume"},"content":"the (CTRL+J) and (CTRL+K) hotkeys. Using a mouse to select a project or client","lastModifiedDate":"2023-04-05"},{"lineNumber":714,"author":{"gitId":"immanuelhume"},"content":"is not officially supported by Mycelium.","lastModifiedDate":"2023-04-05"},{"lineNumber":715,"author":{"gitId":"immanuelhume"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":716,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":717,"author":{"gitId":"immanuelhume"},"content":"### Fuzzy search Gotchas","lastModifiedDate":"2023-04-05"},{"lineNumber":718,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":719,"author":{"gitId":"immanuelhume"},"content":"In general, fuzzy search in Mycelium should feel familiar to most developers,","lastModifiedDate":"2023-04-05"},{"lineNumber":720,"author":{"gitId":"immanuelhume"},"content":"since it is similar to, for example, finding files in IDEs, or the well known","lastModifiedDate":"2023-04-05"},{"lineNumber":721,"author":{"gitId":"immanuelhume"},"content":"[fzf](https://github.com/junegunn/fzf) tool. However, here are a few things you","lastModifiedDate":"2023-04-05"},{"lineNumber":722,"author":{"gitId":"immanuelhume"},"content":"might wish to note:","lastModifiedDate":"2023-04-05"},{"lineNumber":723,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":724,"author":{"gitId":"immanuelhume"},"content":"* Each fuzzy query will be applied to both clients and project. That is, when","lastModifiedDate":"2023-04-05"},{"lineNumber":725,"author":{"gitId":"immanuelhume"},"content":"  you query for something, say, \"coc\", this query is applied to both the Clients","lastModifiedDate":"2023-04-05"},{"lineNumber":726,"author":{"gitId":"immanuelhume"},"content":"  tab and the Projects tab, regardless of which tab is currently being displayed.","lastModifiedDate":"2023-04-05"},{"lineNumber":727,"author":{"gitId":"immanuelhume"},"content":"* You might experience some input lag while in **search mode**. This is expected to","lastModifiedDate":"2023-04-05"},{"lineNumber":728,"author":{"gitId":"immanuelhume"},"content":"  improve as we refine the implementation.","lastModifiedDate":"2023-04-05"},{"lineNumber":729,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":730,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-04-05"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"Douglch"},"content":"The table below summarizes the layout of all the commands in Mycelium. You may","lastModifiedDate":"2023-03-30"},{"lineNumber":733,"author":{"gitId":"RubyNguyen07"},"content":"read the statement `q -a foo [-b bar]` like so:","lastModifiedDate":"2023-03-28"},{"lineNumber":734,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":735,"author":{"gitId":"RubyNguyen07"},"content":"* `q` is the command,","lastModifiedDate":"2023-03-28"},{"lineNumber":736,"author":{"gitId":"RubyNguyen07"},"content":"* `-a foo` indicates a compulsory argument,","lastModifiedDate":"2023-03-28"},{"lineNumber":737,"author":{"gitId":"RubyNguyen07"},"content":"* `[-b bar]` indicates an optional argument.","lastModifiedDate":"2023-03-28"},{"lineNumber":738,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":739,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":740,"author":{"gitId":"RubyNguyen07"},"content":"Action | Format | Example","lastModifiedDate":"2023-03-28"},{"lineNumber":741,"author":{"gitId":"RubyNguyen07"},"content":"--------|------------------|------","lastModifiedDate":"2023-03-28"},{"lineNumber":742,"author":{"gitId":"immanuelhume"},"content":"[**Create new client**](#creating-a-client-contact-c) | `c -cn client_name -e email [-y year_of_birth] [-src source] [-mn mobile_number]` | `c -cn Alice Baker -e alice_baker@bakers.com -y 2000`","lastModifiedDate":"2023-03-29"},{"lineNumber":743,"author":{"gitId":"immanuelhume"},"content":"[**Delete an existing client** ](#deleting-a-client-contact-dc)| `dc -e email` | `dc -e alice_baker@bakers.com`","lastModifiedDate":"2023-03-29"},{"lineNumber":744,"author":{"gitId":"StanleyNeoh"},"content":"[**Update an existing client**](#updating-a-client-uc) | `uc -e email [-cn client_name] [-y year_of_birth] [-src source] [-mn mobile_number] [-e2 new_email]` | `uc -e alice_baker@bakers.com -y 2002 -mn 85090234`","lastModifiedDate":"2023-03-29"},{"lineNumber":745,"author":{"gitId":"immanuelhume"},"content":"[**Create a project**](#creating-a-project-p)| `p -pn project_name -e client_email [-s status] [-src source] [-d description] [-ad accepted_date] [-dd deadline_date]` | `p -pn Mycelium Desktop -e spiderman@gmail.com -src fiverr.com -dd 30/02/2075`","lastModifiedDate":"2023-03-29"},{"lineNumber":746,"author":{"gitId":"immanuelhume"},"content":"[**Delete a project**](#deleting-a-project-dp) | `dp -pn project_name` | `dp -pn Mycelium Desktop`","lastModifiedDate":"2023-03-29"},{"lineNumber":747,"author":{"gitId":"immanuelhume"},"content":"[**Update an existing project**](#updating-a-project-up) | `up -pn project_name [-e email] [-s status] [-src source] [-d description]  [-ad accepted_date] [-dd deadline_date] [-pn2 new_project_name]` | `up -pn Mycelium Desktop -e alice_baker@bakers.com -dd 30/03/2024`","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"sachindavid96":18,"StanleyNeoh":18,"-":103,"immanuelhume":450,"RubyNguyen07":69,"Douglch":89}},{"path":"docs/diagrams/TabDiagram.drawio.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003cmxfile host\u003d\"app.diagrams.net\" modified\u003d\"2023-03-30T08:59:07.032Z\" agent\u003d\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36\" etag\u003d\"XDSlHw2AHDO8MPuqtxDl\" version\u003d\"21.1.1\" type\u003d\"device\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"  \u003cdiagram name\u003d\"Page-1\" id\u003d\"mKHwolE26pQHB6YtcEVc\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"    \u003cmxGraphModel dx\u003d\"1329\" dy\u003d\"763\" grid\u003d\"1\" gridSize\u003d\"10\" guides\u003d\"1\" tooltips\u003d\"1\" connect\u003d\"1\" arrows\u003d\"1\" fold\u003d\"1\" page\u003d\"1\" pageScale\u003d\"1\" pageWidth\u003d\"827\" pageHeight\u003d\"1169\" math\u003d\"0\" shadow\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"      \u003croot\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"1\" parent\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" value\u003d\":Main Window\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#60a917;strokeColor\u003d#2D7600;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"100\" y\u003d\"200\" width\u003d\"100\" height\u003d\"720\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"85\" width\u003d\"10\" height\u003d\"605\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-10\" value\u003d\"fillInnerParts()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;startArrow\u003doval;endArrow\u003dblock;startSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"-60\" y\u003d\"85\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" value\u003d\":EntityPanel\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#001DBC;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#0050ef;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"400\" y\u003d\"360\" width\u003d\"109\" height\u003d\"560\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"49.5\" y\u003d\"40\" width\u003d\"10\" height\u003d\"340\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\" value\u003d\":EntityList\u0026amp;lt;Project\u0026amp;gt;\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#6F0000;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#a20025;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"600\" y\u003d\"400\" width\u003d\"130\" height\u003d\"520\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-6\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"60\" y\u003d\"40\" width\u003d\"10\" height\u003d\"40\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\" value\u003d\":Logic\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#006EAF;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#1ba1e2;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"270\" y\u003d\"200\" width\u003d\"100\" height\u003d\"720\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-27\" value\u003d\"EntityPanel(projects, clients)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.0017\" width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"390.27\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"400\" y\u003d\"390\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-2\" value\u003d\"getFilteredProjectList()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"300.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"240\" y\u003d\"300.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-3\" value\u003d\"projects\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" source\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"240\" y\u003d\"320.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"320.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-4\" value\u003d\"getFilteredClientList()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"350.18000000000006\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"320\" y\u003d\"350.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-5\" value\u003d\"clients\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dhorizontal;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"-0.0028\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"320\" y\u003d\"370.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"370.18000000000006\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-7\" value\u003d\"EntityList\u0026amp;lt;Project\u0026amp;gt;()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"-0.002\" width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"420\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"600\" y\u003d\"420\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-8\" value\u003d\":EntityList\u0026amp;lt;Client\u0026amp;gt;\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#6F0000;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#a20025;fontColor\u003d#ffffff;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"740\" y\u003d\"470\" width\u003d\"130\" height\u003d\"450\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-9\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-8\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"60\" y\u003d\"40\" width\u003d\"10\" height\u003d\"30\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-10\" value\u003d\"EntityList\u0026amp;lt;Client\u0026amp;gt;()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"500\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"740\" y\u003d\"500\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-11\" value\u003d\"projectListPanel\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" source\u003d\"cOVE-N8pDdukwq26Yueg-6\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"650\" y\u003d\"480\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"480\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"540\" y\u003d\"480\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"600\" y\u003d\"520\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-12\" value\u003d\"clientListPanel\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"800\" y\u003d\"535\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"570\" y\u003d\"540\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"800\" y\u003d\"535\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-17\" value\u003d\":EntityTab\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};fillColor\u003d#6a00ff;strokeColor\u003d#3700CC;fontColor\u003d#ffffff;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"870\" y\u003d\"560\" width\u003d\"100\" height\u003d\"360\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-19\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-17\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"40\" width\u003d\"10\" height\u003d\"50\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-18\" value\u003d\"EntityTab(\u0026quot;Projects\u0026quot;, projectListPanel)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dhorizontal;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"585\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"870\" y\u003d\"585.22\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-20\" value\u003d\"projectTab\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.001\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"910\" y\u003d\"640\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"640\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-21\" value\u003d\":EntityTab\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};fillColor\u003d#6a00ff;fontColor\u003d#ffffff;strokeColor\u003d#3700CC;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"990\" y\u003d\"640\" width\u003d\"100\" height\u003d\"280\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-22\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-21\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"40\" width\u003d\"10\" height\u003d\"50\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-24\" value\u003d\"EntityTab(\u0026quot;Clients\u0026quot;, clientListPanel)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"670\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"990\" y\u003d\"669.8\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-25\" value\u003d\"clientTab\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"1030\" y\u003d\"720.2\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"950\" y\u003d\"720.2\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"RubyNguyen07"},"content":"      \u003c/root\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/mxGraphModel\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"  \u003c/diagram\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/mxfile\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"RubyNguyen07":145}},{"path":"docs/diagrams/TabDiagram.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003cmxfile host\u003d\"app.diagrams.net\" modified\u003d\"2023-03-30T12:27:55.245Z\" agent\u003d\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36\" etag\u003d\"Z-DWifx3FfSDeNdSXRkj\" version\u003d\"21.1.1\" type\u003d\"device\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"  \u003cdiagram name\u003d\"Page-1\" id\u003d\"mKHwolE26pQHB6YtcEVc\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"    \u003cmxGraphModel dx\u003d\"1094\" dy\u003d\"628\" grid\u003d\"1\" gridSize\u003d\"10\" guides\u003d\"1\" tooltips\u003d\"1\" connect\u003d\"1\" arrows\u003d\"1\" fold\u003d\"1\" page\u003d\"1\" pageScale\u003d\"1\" pageWidth\u003d\"827\" pageHeight\u003d\"1169\" math\u003d\"0\" shadow\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"      \u003croot\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"1\" parent\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" value\u003d\":MainWindow\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#60a917;strokeColor\u003d#2D7600;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"100\" y\u003d\"200\" width\u003d\"100\" height\u003d\"720\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"85\" width\u003d\"10\" height\u003d\"485\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-10\" value\u003d\"fillInnerParts()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;startArrow\u003doval;endArrow\u003dblock;startSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"-60\" y\u003d\"85\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" value\u003d\":EntityPanel\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#001DBC;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#0050ef;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"400\" y\u003d\"360\" width\u003d\"109\" height\u003d\"560\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"49.5\" y\u003d\"40\" width\u003d\"10\" height\u003d\"340\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\" value\u003d\":EntityList\u0026amp;lt;Project\u0026amp;gt;\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#6F0000;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#a20025;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"600\" y\u003d\"400\" width\u003d\"130\" height\u003d\"520\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-6\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"60\" y\u003d\"40\" width\u003d\"10\" height\u003d\"40\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\" value\u003d\":Logic\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#006EAF;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#1ba1e2;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"270\" y\u003d\"200\" width\u003d\"100\" height\u003d\"720\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-27\" value\u003d\"EntityPanel(projects, clients)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.0017\" width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"390.27\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"400\" y\u003d\"390\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-2\" value\u003d\"getFilteredProjectList()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"300.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"240\" y\u003d\"300.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-3\" value\u003d\"projects\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" source\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"240\" y\u003d\"320.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"320.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-4\" value\u003d\"getFilteredClientList()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"350.18000000000006\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"320\" y\u003d\"350.09000000000003\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-5\" value\u003d\"clients\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dhorizontal;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"-0.0028\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"320\" y\u003d\"370.09000000000003\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"370.18000000000006\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-7\" value\u003d\"EntityList\u0026amp;lt;Project\u0026amp;gt;()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"-0.002\" width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"420\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"600\" y\u003d\"420\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-8\" value\u003d\":EntityList\u0026amp;lt;Client\u0026amp;gt;\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#6F0000;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#a20025;fontColor\u003d#ffffff;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"740\" y\u003d\"470\" width\u003d\"130\" height\u003d\"450\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-9\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-8\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"60\" y\u003d\"40\" width\u003d\"10\" height\u003d\"30\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-10\" value\u003d\"EntityList\u0026amp;lt;Client\u0026amp;gt;()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"500\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"740\" y\u003d\"500\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-11\" value\u003d\"projectListPanel\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" source\u003d\"cOVE-N8pDdukwq26Yueg-6\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"650\" y\u003d\"480\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"480\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"540\" y\u003d\"480\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"600\" y\u003d\"520\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-12\" value\u003d\"clientListPanel\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"800\" y\u003d\"535\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"570\" y\u003d\"540\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"800\" y\u003d\"535\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-17\" value\u003d\":EntityTab\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};fillColor\u003d#6a00ff;strokeColor\u003d#3700CC;fontColor\u003d#ffffff;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"870\" y\u003d\"560\" width\u003d\"100\" height\u003d\"360\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-19\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-17\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"40\" width\u003d\"10\" height\u003d\"50\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-18\" value\u003d\"EntityTab(\u0026quot;Projects\u0026quot;, projectListPanel)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dhorizontal;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"585\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"870\" y\u003d\"585.22\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-20\" value\u003d\"projectTab\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.001\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"910\" y\u003d\"640\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"640\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-21\" value\u003d\":EntityTab\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};fillColor\u003d#6a00ff;fontColor\u003d#ffffff;strokeColor\u003d#3700CC;\" vertex\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"990\" y\u003d\"640\" width\u003d\"100\" height\u003d\"280\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-22\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};\" vertex\u003d\"1\" parent\u003d\"cOVE-N8pDdukwq26Yueg-21\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"40\" width\u003d\"10\" height\u003d\"50\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-24\" value\u003d\"EntityTab(\u0026quot;Clients\u0026quot;, clientListPanel)\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"460\" y\u003d\"670\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"990\" y\u003d\"669.8\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-25\" value\u003d\"clientTab\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"1030\" y\u003d\"720.2\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"950\" y\u003d\"720.2\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"cOVE-N8pDdukwq26Yueg-27\" value\u003d\"entityPanel\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dhorizontal;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"450\" y\u003d\"739.4300000000001\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"740\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"RubyNguyen07"},"content":"      \u003c/root\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/mxGraphModel\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"RubyNguyen07"},"content":"  \u003c/diagram\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/mxfile\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"RubyNguyen07":151}},{"path":"docs/diagrams/archi/ArchitectureDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/globe_internet\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"!include \u003coffice/Concepts/documents\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"!include \u003coffice/Users/user\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package \" \"\u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    Class UI UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class Logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class Storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    Class Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class Main #grey","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    Class Commons LOGIC_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class \"\u003c$user\u003e\" as User MODEL_COLOR_T2","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class \"\u003c$documents\u003e\" as File UI_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"UI -[#green]\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"UI -right[#green]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Logic -[#blue]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Logic -down[#blue]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Logic","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Main -[#grey]-\u003e Storage","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Main -up[#grey]-\u003e Model","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Main -down[hidden]-\u003e Commons","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Storage -up[STORAGE_COLOR].\u003e Model","lastModifiedDate":"2021-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Storage .right[STORAGE_COLOR].\u003eFile","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"User ..\u003e UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"StanleyNeoh":1,"-":32}},{"path":"docs/diagrams/archi/ComponentManagers.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"StanleyNeoh":1,"-":30}},{"path":"docs/diagrams/commandbox/CommandBoxInputChange.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mode:Mode\" as Mode MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e CommandBox : handleCommandEntered()","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"activate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e CommandBox : getInput()","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e Mode : onInputChange(input)","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"activate Mode","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"Mode --\u003e CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Mode","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox --\u003e[","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"deactivate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":16,"immanuelhume":1}},{"path":"docs/diagrams/commandbox/CommandBoxSetMode.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"mainframe sd set mode","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"participant \"outgoingMode:Mode\" as Outgoing MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"participant \"incomingMode:Mode\" as Incoming MODE_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e CommandBox : setMode(incomingMode)","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"activate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e CommandBox : getInput()","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e Outgoing : teardownMode()","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"activate Outgoing","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"Outgoing -\u003e Outgoing : revert command box state","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"Outgoing --\u003e CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Outgoing","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"destroy Outgoing","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e Incoming : setupMode(input)","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"activate Incoming","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"Incoming -\u003e Incoming : setup command box state","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"Incoming --\u003e CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Incoming","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox --\u003e[","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"deactivate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":25,"immanuelhume":1}},{"path":"docs/diagrams/commandbox/CommandBoxSubmit.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mode:Mode\" as Mode MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e CommandBox : handleCommandEntered()","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"activate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e CommandBox : getInput()","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox -\u003e Mode : onInputSubmit(input)","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"activate Mode","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"Mode --\u003e CommandBox : optionalNewMode","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Mode","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"opt optionalNewMode is not empty","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    CommandBox -\u003e CommandBox: setMode(newMode)","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"end","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox --\u003e[","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"deactivate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":21,"immanuelhume":1}},{"path":"docs/diagrams/commandbox/CommandHandling.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandMode\" as CommandMode MODE_COLOR_T2","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mainWindow:MainWindow\" as MainWindow UI_COLOR_T3","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandLog\" as CommandLog UI_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"participant \"commandResult:CommandResult\" as CommandResult COMMAND_COLOR_T3","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"participant \":UiAction\" as UiAction COMMAND_COLOR_T2","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"participant \":Logic\" as Logic LOGIC_COLOR_T2","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"participant \":Parser\" as Parser LOGIC_COLOR_T3","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"participant \"command:Command\" as Command COMMAND_COLOR_T1","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e CommandMode : onInputSubmit(input)","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"activate CommandMode","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"opt input is not empty string","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    CommandMode -\u003e MainWindow : executeCommand(input)","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    activate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow -\u003e Logic : execute(input)","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    activate Logic","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    Logic -\u003e Parser : parseCommand(input)","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    activate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    ref over Parser : parse command","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    Parser --\u003e Logic : command","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate Parser","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    Logic -\u003e Command : execute(model)","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    activate Command","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    Command --\u003e Logic : commandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate Command","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    Logic --\u003e MainWindow : commandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate Logic","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow --\u003e CommandResult : getFeedBackToUser()","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    activate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    CommandResult --\u003e MainWindow : feedback","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow -\u003e CommandLog : setFeedBackToUser(feedback)","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    activate CommandLog","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    CommandLog --\u003e MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate CommandLog","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow -\u003e CommandResult : executeUiAction(mainWindow)","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    activate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    CommandResult -\u003e UiAction : execute(mainWindow)","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    activate UiAction","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    ref over UiAction : execute UiAction","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    UiAction --\u003e CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate UiAction","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    CommandResult --\u003e MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate CommandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow --\u003e CommandMode : commandResult","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    CommandMode -\u003e MainWindow : setCommandBoxInput(\"\")","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    activate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    MainWindow --\u003e CommandMode","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"end","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"CommandMode --\u003e[","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"deactivate CommandMode","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"StanleyNeoh":57,"immanuelhume":1}},{"path":"docs/diagrams/fuzzy/FuzzyManagerHighLevelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"@startuml FuzzyManagerHighLevelClassDiagram","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../styleSimple.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"class SearchMode","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"class FuzzyManager {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"\t{static} +rankItems(items: ObservableList, query: String): ObservableList","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"class Fuzzy {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"\t{static} +delta(query: String, target: String): double","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"\t{static} +levenshtein(a: String, b: String): double","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"\t{static} -distance(a: String, b: String): int","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"SearchMode ..\u003e FuzzyManager : uses \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"FuzzyManager..\u003eFuzzy : uses \u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":1,"immanuelhume":18}},{"path":"docs/diagrams/fuzzy/FuzzyManagerSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"@startuml FuzzyManagerSequenceDiagramA","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"participant \":SearchMode\" as SearchMode MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"participant \":MainWindow\" as MainWindow UI_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"-\u003e SearchMode : onInputChanged(input)","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"ref over SearchMode, MainWindow : fuzzy ranking","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e MainWindow : set clients","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e MainWindow : set projects","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"@startuml FuzzyManagerSequenceDiagramB","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"skinparam participantFontColor automatic","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"mainframe sd fuzzy ranking","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"participant \":SearchMode\" as SearchMode MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"participant \":Logic\" as Logic LOGIC_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\nFuzzyManager\" as FuzzyManager","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e Logic : getFilteredClientList()","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"activate Logic","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"Logic --\u003e SearchMode : list of clients","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"deactivate Logic","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e Logic : getFilteredProjectList()","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"activate Logic","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"Logic --\u003e SearchMode : list of projects","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"deactivate Logic","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e FuzzyManager : fuzzy rank clients","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"activate FuzzyManager","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"FuzzyManager --\u003e SearchMode : ranked clients","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"deactivate FuzzyManager","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"SearchMode -\u003e FuzzyManager : fuzzy rank projects","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"activate FuzzyManager","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"FuzzyManager --\u003e SearchMode : ranked projects","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"deactivate FuzzyManager","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"@enduml","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":2,"immanuelhume":44}},{"path":"docs/diagrams/logic/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"participant \":DeleteProjectCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"participant \"d:DeleteProjectCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"[-\u003e LogicManager : execute(\"dp -pn Mycelium\")","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"dp -pn Mycelium\")","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"-pn Mycelium\")","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"DeleteCommand -\u003e Model : deleteProject(Mycelium)","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"sachindavid96":6,"StanleyNeoh":1,"-":62}},{"path":"docs/diagrams/logic/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -right-\u003e\"1\" AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"StanleyNeoh":1,"-":45}},{"path":"docs/diagrams/logic/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e AddressBookParser","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"AddressBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"StanleyNeoh":1,"-":37}},{"path":"docs/diagrams/model/ModelClassDiagram.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"\u003cmxfile host\u003d\"Electron\" modified\u003d\"2023-03-30T11:45:49.126Z\" agent\u003d\"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/20.8.16 Chrome/106.0.5249.199 Electron/21.4.0 Safari/537.36\" etag\u003d\"h6k8d1nkAIIXgzEeF5HK\" version\u003d\"20.8.16\" type\u003d\"device\"\u003e\u003cdiagram id\u003d\"C5RBs43oDa-KdzZeNtuy\" name\u003d\"Page-1\"\u003e7VtbV9s4EP41eaQnviZ5xIGy21JKF7q0j4qtxCqy5dpKSfrrd2RJvudCiIHugQewRtLImvnmopEZWNNodZGiJPzEAkwH5jBYDayzgWkaw4kBfwRlLSmuNZaERUoCNagk3JDfWM9U1CUJcFYbyBmjnCR1os/iGPu8RkNpyh7qw+aM1ldN0AK3CDc+om3qHQl4KKljc1TS/8JkEeqVDXcie2bIv1+kbBmr9Qam9T7/kd0R0rzURrMQBeyhQrLOB9Y0ZYzLp2g1xVTIVovt7u/1Hb28dy8+fMl+oq/ex9urf08ks/ePmVLsMMUxP5j1xd3H6EO4DKdfkugBXf+4Mi7mJ5Ypef9CdIm1GFwKq3hzBovBrvlaSdr9uWS64yTLcXAKA4xxAljyyv5c15SltUkgXMsawk+V5C7EXwVJuSq8v1xY9inJF+9gcrwS9JBHFAgGPCJKFjE8+yAcDIt6v3DKCeDjVHVEJAjEdC/F8NZolrMaQjthJOY5+hxv4JwJXkvO5M5y1hlP2T2eqs3ELBZc5oTSJgneeFpsGVAEe7UUXRmMMS52I94Prxrg3aFao8Ab2DFmEebpGuYpLtbIlnweSgMYKdSGFezbioaUyS0KTiVu4EFB5zEwcjtg1NAcjoNTYe7QmlHm34M8ApSFOFDChv73RCyb6wZaWnJmXd+5xeazhg0Rj9qqUJgT/GCf38Skd45ufi9WhsbZqlhZtNa6tSL8W+X5e8kCWuUk0dBz5NZx0PJb+ygZZMaWqY+3SNvWbhalC8y3qWXSDZsKTAxXYSLFFHHyq/7KXUBR7K6F8VQg6Cg+KooY4wbW5K7UrKqbajAyJw1GZoOR3HWLUY7bYo9PgPLo/wrlJ8JyJ9rs4bOhzR41QDI5EG2O9cJoG7+h7UC0bQiJfaDNsGsgMd0D0WYP62hrBeS+0TZpo21qDk49IlKnOYKoA03P08nYLNV52JQSUJvK1Br4rEBsX1D1lQiZ9qQmYO0mqqAwOhIjp6/ESCv48RK/TtkPOC69epHb7m6R66WeR+TGoSJ/9bK2nLqsCwf3cvhuJ/6vX4puwwu/vBS7soBHnsLd1ilcgvo0CODcm3mM3e97xn7FuiqOGS+mK6fDvWzJ2FiC43oa1kjQMoj5XI8OCIpYHNyGJNZdeqytCSrXy1lBdnWjlmUpD9mCxYiel9SiOELxnHeURmaMcxZtzQ3NbbmhPhwXB+IiM9x4ON6UT5YZZC/55O5DtbLBnYmnY21FrF5QA3ZwlNO1UTcDu5k47p2BGk6dUfPgtCEDBYCidWWYKp31kKM67Ypkh4EBDC7RDOJMb6XAfW1go+dT9W61yKAoI1cRu8XDbATY8N3IdUf1CHYUkBlWjenJpM6AzecZ7uVY4lj9hb+vMfm5xJck40+Mfgdh4MjRz37xTMVxDol+ZYWiIwDuVaFwjxyFeo8m7p7RRIad5yljjBu5lHFgEHHtHYx6LmM4XbcNj/QX5gZ/YfzxF1H7mExfDqtZKbPMtsOyOvyV1Zu/alfzZSmrpc/sgUQUlVJUPXsplrMEqH5IaHCJ1mwpdgW5un+vW17IUvIb2CJaaLTM7U23NuJGzFTIyJGCr7VWjAbpE1rVBl6ijCuCzyhFSUZmxTYisEoSeyrlb7lY+wXwYjTq+I5ttvBSFEmrgDF0un58xLTP4ifQjFGkXMeVeAKV5W7P8kQnjhChsvc8f6x3rzFKP889kootiUGfE07ESU37mu+VAYW/qbHQAadr9hWLz6OEr294SuLFBgYRmxGKr5bRTCC4i82n6ogdXm9ff7Tj+CntJkuQDy9+mY85s0vKP0rfgsRg7pzmSUUIbjRPK1LGEd/oRj2AzVTkBOBQzSm0jbKd+9gEjsxTFsNeEMkxjMF6HnDGB0fO/LZ4prZlFEWpPQ1Be9zjG0LHZUETDpTkapZw0F/fGAdhoQiOSvm3AhtnJ0YLIFYbIFYHGKg4Hl5DEBUoB1oqx3bE2m04qAOdxCFOyavAh2G3I2snQPryk267DqauLN5C62sIrc0r8s7Qaj5raHXbpZ1GaG1GsloIBPteZnKgQtqNJG0Mxn6e6nWF5CfH0wBnfkoS6Vy6uGydjXwfJxwHn9Vk+H3JAPVniDdziwCjQLrZrlWqs94idr8e2d1gcFsidqd99Rax3a462lvEfq6IvQMfnRG7CyC9ud8Xqt1tvUE68DboNX6WqcvYu2+QNqR2PdT8CoA99eLIGu9g1HPNz33cF8Z/BHiNPxG8m7xcH98UN1JYe+IcBl6z8ZWnc7SvPKFZ/gOIHF7+l411/h8\u003d\u003c/diagram\u003e\u003c/mxfile\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Douglch":1}},{"path":"docs/diagrams/statisticsbox/StatisticsBoxActivityDiagram.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003cmxfile host\u003d\"app.diagrams.net\" modified\u003d\"2023-03-30T12:30:01.952Z\" agent\u003d\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36\" etag\u003d\"OWMl7MSSHPA4Ui3kEt_D\" version\u003d\"21.1.1\" type\u003d\"device\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"  \u003cdiagram name\u003d\"Page-1\" id\u003d\"mKHwolE26pQHB6YtcEVc\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"    \u003cmxGraphModel dx\u003d\"930\" dy\u003d\"534\" grid\u003d\"1\" gridSize\u003d\"10\" guides\u003d\"1\" tooltips\u003d\"1\" connect\u003d\"1\" arrows\u003d\"1\" fold\u003d\"1\" page\u003d\"1\" pageScale\u003d\"1\" pageWidth\u003d\"827\" pageHeight\u003d\"1169\" math\u003d\"0\" shadow\u003d\"0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"      \u003croot\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"1\" parent\u003d\"0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" value\u003d\":MainWindow\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#60a917;strokeColor\u003d#2D7600;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"100\" y\u003d\"200\" width\u003d\"100\" height\u003d\"400\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"45\" y\u003d\"85\" width\u003d\"10\" height\u003d\"295\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-10\" value\u003d\"fillInnerParts()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;startArrow\u003doval;endArrow\u003dblock;startSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;labelBackgroundColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-8\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-9\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"-60\" y\u003d\"85\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" value\u003d\":StatisticsBox\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#001DBC;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#0050ef;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"260\" y\u003d\"280\" width\u003d\"109\" height\u003d\"320\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-12\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"49.5\" y\u003d\"40\" width\u003d\"10\" height\u003d\"230\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-15\" value\u003d\"\" style\u003d\"html\u003d1;points\u003d[];perimeter\u003dorthogonalPerimeter;outlineConnect\u003d0;targetShapes\u003dumlLifeline;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003ddefault;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;fillColor\u003ddefault;movable\u003d1;resizable\u003d1;rotatable\u003d1;deletable\u003d1;editable\u003d1;locked\u003d0;connectable\u003d1;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"59.5\" y\u003d\"80\" width\u003d\"10\" height\u003d\"180\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-16\" value\u003d\"loadDataOnBox()\" style\u003d\"html\u003d1;align\u003dleft;spacingLeft\u003d2;endArrow\u003dblock;rounded\u003d0;edgeStyle\u003dorthogonalEdgeStyle;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;movable\u003d1;resizable\u003d1;rotatable\u003d1;deletable\u003d1;editable\u003d1;locked\u003d0;connectable\u003d1;\" parent\u003d\"mPwqOLQB3Q7tl5aRfWxd-11\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.0106\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"60\" y\u003d\"70\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"110\" y\u003d\"70\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"110\" y\u003d\"90\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"70\" y\u003d\"90\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\" value\u003d\"filteredProjectList:ObservableList\u0026amp;lt;Project\u0026amp;gt;\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#6F0000;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#a20025;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"630\" y\u003d\"200\" width\u003d\"250\" height\u003d\"400\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\" value\u003d\":Logic\" style\u003d\"shape\u003dumlLifeline;perimeter\u003dlifelinePerimeter;whiteSpace\u003dwrap;html\u003d1;container\u003d1;dropTarget\u003d0;collapsible\u003d0;recursiveResize\u003d0;outlineConnect\u003d0;portConstraint\u003deastwest;newEdgeStyle\u003d{\u0026quot;edgeStyle\u0026quot;:\u0026quot;elbowEdgeStyle\u0026quot;,\u0026quot;elbow\u0026quot;:\u0026quot;vertical\u0026quot;,\u0026quot;curved\u0026quot;:0,\u0026quot;rounded\u0026quot;:0};rounded\u003d0;shadow\u003d0;glass\u003d0;strokeColor\u003d#006EAF;fontFamily\u003dHelvetica;fontSize\u003d12;fillColor\u003d#1ba1e2;fontColor\u003d#ffffff;\" parent\u003d\"1\" vertex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"490\" y\u003d\"200\" width\u003d\"100\" height\u003d\"400\" as\u003d\"geometry\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-20\" value\u003d\"getFilteredProjectList()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"390\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"410\" y\u003d\"390\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-21\" value\u003d\"filteredProjectList\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" source\u003d\"mPwqOLQB3Q7tl5aRfWxd-19\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"410\" y\u003d\"410.43\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"410.43\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-22\" value\u003d\"addListener()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-18\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry x\u003d\"0.0016\" width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"429.52\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"430\" y\u003d\"430\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"620\" y\u003d\"440\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint as\u003d\"offset\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-25\" value\u003d\"setProjectData()\" style\u003d\"html\u003d1;align\u003dleft;spacingLeft\u003d2;endArrow\u003dblock;rounded\u003d0;edgeStyle\u003dorthogonalEdgeStyle;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" target\u003d\"mPwqOLQB3Q7tl5aRfWxd-15\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"495\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"360\" y\u003d\"495\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"360\" y\u003d\"525\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"335\" y\u003d\"525\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-26\" value\u003d\"setPieChartData()\" style\u003d\"html\u003d1;align\u003dleft;spacingLeft\u003d2;endArrow\u003dblock;rounded\u003d0;edgeStyle\u003dorthogonalEdgeStyle;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"450\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cArray as\u003d\"points\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"360\" y\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cmxPoint x\u003d\"360\" y\u003d\"480\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/Array\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"330\" y\u003d\"480\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"mPwqOLQB3Q7tl5aRfWxd-27\" value\u003d\"StatisticsBox()\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dblock;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;fontFamily\u003dHelvetica;fontSize\u003d12;fontColor\u003ddefault;\" parent\u003d\"1\" edge\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry width\u003d\"80\" relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"160\" y\u003d\"300\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"260\" y\u003d\"300\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cmxCell id\u003d\"dzdW6VE4BHNMChPjPYUa-1\" value\u003d\"statisticsBox\" style\u003d\"html\u003d1;verticalAlign\u003dbottom;endArrow\u003dopen;dashed\u003d1;endSize\u003d8;edgeStyle\u003delbowEdgeStyle;elbow\u003dvertical;curved\u003d0;rounded\u003d0;\" edge\u003d\"1\" parent\u003d\"1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"          \u003cmxGeometry relative\u003d\"1\" as\u003d\"geometry\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"310\" y\u003d\"550\" as\u003d\"sourcePoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cmxPoint x\u003d\"150\" y\u003d\"550\" as\u003d\"targetPoint\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/mxGeometry\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/mxCell\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"      \u003c/root\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/mxGraphModel\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"  \u003c/diagram\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/mxfile\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"RubyNguyen07":101}},{"path":"docs/diagrams/storage/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"StanleyNeoh":1,"-":42}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"!define STORAGE_COLOR_T4 #544400","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"!define KEY_COLOR #cbd904","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"!define KEY_COLOR_T1 #a9b504","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"!define KEY_COLOR_T2 #889101","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"!define KEY_COLOR_T3 #585e02","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"!define KEY_COLOR_T4 #303301","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"!define UI_EVENT_COLOR #8404bf","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"!define UI_EVENT_COLOR_T1 #6b039c","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"!define UI_EVENT_COLOR_T2 #4d0270","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"!define UI_EVENT_COLOR_T3 #2a013d","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"!define UI_EVENT_COLOR_T4 #1a0126","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"!define MODE_COLOR #4c00fc","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"!define MODE_COLOR_T1 #4202d6","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"!define MODE_COLOR_T2 #3203a1","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"!define MODE_COLOR_T3 #1e0161","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"!define MODE_COLOR_T4 #12013b","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"!define COMMAND_COLOR #04d48f","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"!define COMMAND_COLOR_T1 #03b26f","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"!define COMMAND_COLOR_T2 #028f4e","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"!define COMMAND_COLOR_T3 #01612e","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"!define COMMAND_COLOR_T4 #0a3b1e","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"StanleyNeoh":24,"-":75}},{"path":"docs/diagrams/styleSimple.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"hide footbox","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"hide circle","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"hide empty methods","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"hide empty members","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"skinparam Shadowing false","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"skinparam classAttributeIconSize 0","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"immanuelhume":10}},{"path":"docs/diagrams/uiaction/SwitchToProjectsUiAction.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"participant \":TabSwitchAction\" as Action UI_EVENT_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mainWindow:MainWindow\" as MainWindow UI_COLOR_T3","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"mainframe sd execute UiAction","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e Action: execute(mainWindow)","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"activate Action","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"Action -\u003e MainWindow: selectProjectTab()","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"activate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow --\u003e Action","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"Action --\u003e[","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Action","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"StanleyNeoh":16,"immanuelhume":1}},{"path":"docs/diagrams/uievent/EventHandling.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define ef event is from pressing","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define refOver ref over UiEventManager, Event:","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"participant \":UiEventManager\" as UiEventManager UI_EVENT_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"participant \"event:KeyEvent\" as Event UI_EVENT_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e UiEventManager : catchAndExecute(event)","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"activate UiEventManager","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"alt event is to be ignored","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    UiEventManager -\u003e Event : consume()","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    activate Event","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    Event --\u003e UiEventManager","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate Event","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"else ef \"CTRL-F\"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    refOver toggle mode","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"else ef \"CTRL-L\"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    refOver switch tabs","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"else event is to be handled","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    refOver handle event","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"end","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager --\u003e[","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"deactivate UiEventManager","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"StanleyNeoh":26,"immanuelhume":1}},{"path":"docs/diagrams/uievent/FindKey/ToggleMode.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName toggle mode","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define typeName FindKey","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define keyName findKey","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define refName execute toggle mode","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!include ../templates/KeyHandling.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":8,"immanuelhume":1}},{"path":"docs/diagrams/uievent/FindKey/ToggleModeExecute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"mainframe sd execute toggle mode","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"participant \":FindKey\" as FindKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mainWindow:MainWindow\" as MainWindow UI_COLOR_T4","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"participant \":SearchMode\" as SearchMode MODE_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandMode\" as CommandMode MODE_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"participant \":CommandBox\" as CommandBox UI_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"activate FindKey","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"alt in COMMAND_MODE","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    create SearchMode","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    FindKey -\u003e SearchMode","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    activate SearchMode","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    SearchMode --\u003e FindKey : mode","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate SearchMode","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"else in SEARCH_MODE","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    create CommandMode","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    FindKey -\u003e CommandMode","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    activate CommandMode","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    CommandMode --\u003e FindKey : mode","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    deactivate CommandMode","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"end","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"FindKey -\u003e MainWindow : setCommandBoxMode(mode)","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"activate MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow -\u003e CommandBox : setMode(mode)","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"activate CommandBox","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"ref over CommandBox : set mode","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"CommandBox --\u003e MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"deactivate","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow --\u003e FindKey","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":38}},{"path":"docs/diagrams/uievent/GenericKey/GenericKey.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName handle event","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define typeName Key","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define keyName key","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define refName execute event action","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!include ../templates/KeyHandling.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":9}},{"path":"docs/diagrams/uievent/GenericKey/GenericKeyExecute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName execute event action","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define KeyType Key","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define targetName uiComponent","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define targetType UiPart","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"!define toMW action()","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!define toTarget action()","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"!define targetAction perform action","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"!include ../templates/KeyExecute.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":10,"immanuelhume":1}},{"path":"docs/diagrams/uievent/SwitchTabKey/SwitchTabKey.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName switch tabs","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define typeName SwitchTabKey","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define refName execute tab switch","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define keyName switchTabKey","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!include ../templates/KeyHandling.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"StanleyNeoh":8,"immanuelhume":1}},{"path":"docs/diagrams/uievent/SwitchTabKey/SwitchTabKeyExecute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName execute tab switch","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define KeyType SwitchTabKey","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define targetName tabsPanelList","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define targetType TabsPanelList","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"!define toMW nextTab()","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!define toTarget nextTab()","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"!define targetAction switch to next tab","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"!include ../templates/KeyExecute.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":10,"immanuelhume":1}},{"path":"docs/diagrams/uievent/UiEventManager.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!include ../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"Class UiEventManager UI_EVENT_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"Class \"{abstract}\\nKey\" as Key KEY_COLOR_T2","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"Class ClearKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"Class EndOfLineKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"Class FindKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"Class HelpKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"Class NextItemKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"Class PrevItemKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"Class QuitKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"Class StartOfLineKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"Class SwitchPanelKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"Class SwitchTabKey KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"Class Logic LOGIC_COLOR_T4","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"Class MainWindow UI_COLOR_T4","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e ClearKey","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e EndOfLineKey","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e FindKey","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e HelpKey","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e NextItemKey","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e PrevItemKey","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e QuitKey","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e StartOfLineKey","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e SwitchPanelKey","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager .down.\u003e SwitchTabKey","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"ClearKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"EndOfLineKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"FindKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"HelpKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"NextItemKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"PrevItemKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"QuitKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"StartOfLineKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"SwitchPanelKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"SwitchTabKey --|\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"Key ..\u003e MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"Key ..\u003e Logic","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow -r-\u003e Logic","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow .r.\u003e UiEventManager","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"StanleyNeoh":48,"immanuelhume":1}},{"path":"docs/diagrams/uievent/templates/KeyExecute.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define keyType \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define targetType \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define targetName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"!define toMW \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"!define toTarget \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!define targetAction \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"!include ../../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"mainframe sd sdName","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"participant \":KeyType\" as Key KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"participant \"mainWindow:MainWindow\" as MainWindow UI_COLOR_T4","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"participant \":targetType\" as Target UI_COLOR","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"[-\u003e Key : execute(logic, mainWindow)","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"activate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"Key -\u003e MainWindow : toMW","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"activate MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow -\u003e Target : toTarget","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"activate Target","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"Target -\u003e Target : targetAction","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"Target --\u003e MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Target","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"MainWindow --\u003e Key","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"deactivate MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"Key --\u003e[","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":32}},{"path":"docs/diagrams/uievent/templates/KeyHandling.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"!define sdName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"!define typeName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"!define keyName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"!define refName \"\"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"@startuml","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"!include ../../style.puml","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"participant \":UiEventManager\" as UiEventManager UI_EVENT_COLOR","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"participant \"keyName:typeName\" as Key KEY_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"participant \"event:KeyEvent\" as Event UI_EVENT_COLOR_T3","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"mainframe sd sdName","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"activate UiEventManager","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"create Key","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager -\u003e Key: typeName()","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"activate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"Key --\u003e UiEventManager: keyName","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager -\u003e Key : execute(logic,mainWindow)","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"activate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"ref over Key: refName","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"Key --\u003e UiEventManager","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Key","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"destroy Key","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"UiEventManager -\u003e Event : consume()","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"activate Event","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"Event --\u003e UiEventManager","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"deactivate Event","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"@enduml","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"StanleyNeoh":31}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"title: Mycelium","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W14-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-W14-1/tp)","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"**Mycelium is a desktop application for freelance devs to manage clients and projects.**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"* If you are interested in using Mycelium, head over to the [**User Guide**](UserGuide.html).","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"* If you are interested about developing Mycelium, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":13,"immanuelhume":9}},{"path":"docs/team/douglch.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"title: Douglch\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"### Project: Mycelium","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"* **New Feature**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"* **Code contributed**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"* **Project management**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"* **Enhancements to existing features**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"  * **Contributions to UG**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"  * **Contributions to DG**: `to be added`","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"* **Community**: `to be added`","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"StanleyNeoh":14,"Douglch":6}},{"path":"docs/team/immanuelhume.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"title: Li Junyi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"## Project: Mycelium","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"**Mycelium** is a desktop application aimed at helping **freelance web developers","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"manage clients and projects** from multiple online sources like [Upstack](https://upstackhq.com/),","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"[Fiverr](https://www.fiverr.com/), and [Toptal](https://www.toptal.com/). All interactions","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"with **Mycelium** are done through text commands or HotKeys, enabling one to efficiently","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"manipulate data while availing oneself to the convenience of viewing, offered by the","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"Graphical User Interface (GUI) created with JavaFX. The application is written in Java.","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"### Summary of Contributions","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"My overall code contributions can be seen","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"[here](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dimmanuelhume\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other).","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"**Enhancements implemented**","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"I contributed to two main components of the project - fuzzy search, and Project","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"CRUD.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"1. Fuzzy search is a feature which allows users to search for something via a","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"   partial match, similar to file searching capabilities in most IDEs. I","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"   implemented the [main","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"   algorithm](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/util/Fuzzy.java)","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"   used, and helped to hook it up to the UI.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"1. A core feature of Mycelium is to manage projects, which thus requires code","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"   for defining and manipulating a project. I implemented the [Project","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"   model](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/project/Project.java),","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"   and was responsible for the end-to-end CRUD functionalities of projects,","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"   including its integration into the current app\u0027s","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"   [Model](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/model/ProjectModel.java),","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"   [serialization into","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"   JSON](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/storage/JsonAdaptedProject.java),","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"   and other abstractions needed. I also implemented the command and","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"   functionality for [updating","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"   projects](https://github.com/AY2223S2-CS2103T-W14-1/tp/blob/master/src/main/java/mycelium/mycelium/logic/commands/UpdateProjectCommand.java).","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"**Testing**","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"I have contributed unit and integration tests for most aspects of the","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"application except the GUI. These include tests for:","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"* Project CRUD","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"* Commands and command parsers","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"* Fuzzy search algorithm","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"* JSON serialization","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"**Contributions to the UG**","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"I covered these sections for the UG:","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"* [Managing projects](https://ay2223s2-cs2103t-w14-1.github.io/tp/UserGuide.html#managing-projects)","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"* [Fuzzy search](https://ay2223s2-cs2103t-w14-1.github.io/tp/UserGuide.html#fuzzy-search)","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"I also wrote most of the frontmatter.","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"**Contributions to the DG**","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"I wrote the section explaining how [fuzzy search is","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"implemented](https://ay2223s2-cs2103t-w14-1.github.io/tp/DeveloperGuide.html#fuzzy-searching).","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"I also wrote the instructions for manual testing as well as most of the","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"frontmatter.","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"**Code reviews**","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"I have provided non-trivial code reviews (beyond just a LGTM) for these PRs:","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"[#62](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/62),","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"[#75](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/75),","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"[#99](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/99),","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"[#100](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/100),","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"[#120](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/120),","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"[#139](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/139),","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"[#141](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/141), and","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"[#175](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/175).","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"immanuelhume":80}},{"path":"docs/team/rubynguyen07.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"title: Nguyen Hong Ngoc\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"### Project: Mycelium","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"**Mycelium** is a desktop application aimed at helping **freelance web developers","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"manage clients and projects** from multiple online sources like [Upstack](https://upstackhq.com/),","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"[Fiverr](https://www.fiverr.com/), and [Toptal](https://www.toptal.com/). All interactions","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"with **Mycelium** are done through text commands or HotKeys, enabling one to efficiently","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"manipulate data while availing oneself to the convenience of viewing, offered by the","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"Graphical User Interface (GUI) created with JavaFX. The application is written in Java.","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dRubyNguyen07\u0026tabRepo\u003dAY2223S2-CS2103T-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse).","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"* **Enhancements implemented**: I implemented the Statistics dashboard which provides users insights on","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"the due soon projects, overdue projects and progress overview based on project status. I also made enhancements","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"on the GUI including positioning and styling main UI components.","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"* **Testing**: I am responsible for testing the Statistics dashboard\u0027s related methods along with the GUI (with the","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"GUI testing structure based on [Address book-level4](https://github.com/se-edu/addressbook-level4)).","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"* **Project management**: I helped set up the Issue Tracker and planned some of the weekly meeting\u0027s agenda.","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    * **Contributions to UG**: I am responsible for writing up the documentation about Glossary, Statistics Panel, and","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"  Command summary.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    * **Contributions to DG**: I am responsible for writing up the documentation about User Interface and Testing.","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"* **Contributions to team-based tasks**: I was responsible for setting up the team\u0027s repository and the UserGuide.","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"  * PRs reviewed: [#44](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/44), [#81](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/81), [#207](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/207).","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"RubyNguyen07":36}},{"path":"docs/team/sachindavid96.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"title: Sachin Kalinga\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"### Project: Mycelium","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"* **New Feature**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"* **Code contributed**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"* **Project management**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"* **Enhancements to existing features**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    * **Contributions to UG**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    * **Contributions to DG**: `to be added`","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"* **Community**: `to be added`","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"sachindavid96":20}},{"path":"docs/team/stanleyneoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"layout: page","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"title: Stanley Neoh\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"---","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"### Project: Mycelium","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"**Mycelium** is a desktop application aimed at helping **freelance web developers","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"manage clients and projects** from multiple online sources like [Upstack](https://upstackhq.com/),","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"[Fiverr](https://www.fiverr.com/), and [Toptal](https://www.toptal.com/). All interactions","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"with **Mycelium** are done through text commands or HotKeys, enabling one to efficiently","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"manipulate data while availing oneself to the convenience of viewing, offered by the","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"Graphical User Interface (GUI) created with JavaFX. The application is written in Java.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"Below are my contributions to the project:","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dW14\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dStanleyNeoh\u0026tabRepo\u003dAY2223S2-CS2103T-W14-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"* **Enhancements implemented**: I added the `UiEvent` and its related classes to handle the keyboard events that occur in the UI, allowing the user to perform keyboard shortcuts to navigate the UI and switch to search mode to quickly find projects and clients. I also added `UiAction` Class to enable commands to perform actions to the Ui such as switching to the relevant tab when a project or client command is executed. I added the `Mode` class for the command box, enabling the command box to be stateful and change behaviour depending on its `Mode`.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"* **Testing**: I am responsible for testing the `UiAction`, `UiEvent`, `UiEventsManager`, and `Mode` classes and its relevant dependencies.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"* **Project management**: I helped enforce the proper use of labels and milestones, ensured that the team is on task with issues.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"  * **Contributions to UG**: I am responsible for writing up the *HotKeys* section of the User Guide and assisted in writing up *Ui Overview* section.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"  * **Contributions to DG**: I am responsible for writing up the documentation about the *Keyboard Interaction* section, specifically subsections *Hotkey with UiEvents*, and *Command Box*. I also assisted in for writing up the *Command Handling* section, specifically the *Commands* subsection.","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"* **Contributions to team-based tasks**: I assisted in reviewing and merging PRs, and assisted by making the necessary changes to PRs to ensure that they are up to standard.","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"* **Review/mentoring contributions**:","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"  * PRs reviewed:","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    [#29](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/29),","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    [#30](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/30),","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    [#34](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/34),","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    [#38](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/38),","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    [#75](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/75),","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    [#81](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/81),","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    [#82](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/82),","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    [#85](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/85),","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    [#89](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/89),","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    [#118](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/118),","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    [#119](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/119),","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    [#133](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/133),","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    [#139](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/139),","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    [#142](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/142),","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    [#143](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/143),","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    [#148](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/148),","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    [#164](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/164),","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    [#166](https://github.com/AY2223S2-CS2103T-W14-1/tp/pull/166)","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"StanleyNeoh":50,"immanuelhume":1}},{"path":"src/main/java/mycelium/mycelium/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.FileUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        return configPath;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"immanuelhume":11,"-":53}},{"path":"src/main/java/mycelium/mycelium/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"immanuelhume":5,"-":20}},{"path":"src/main/java/mycelium/mycelium/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Config;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Version;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.StringUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.LogicManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.AddressBookStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.Storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.StorageManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.Ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.ui.UiManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 0, true);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Mycelium ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Starting Mycelium \" + MainApp.VERSION);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Mycelium ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":5,"immanuelhume":23,"-":155}},{"path":"src/main/java/mycelium/mycelium/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":1,"-":62}},{"path":"src/main/java/mycelium/mycelium/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":1,"-":78}},{"path":"src/main/java/mycelium/mycelium/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    private static final String LOG_FILE \u003d \"mycelium.log\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":4,"-":109}},{"path":"src/main/java/mycelium/mycelium/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_CHECK_USER_GUIDE \u003d \"Please visit our User Guide for more information.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_INVALID_CLIENT \u003d \"The client email entered does not match any client\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_INVALID_PROJECT \u003d \"The project name entered does not match any project\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"The date entered is invalid\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_EMPTY_PROJECT_NAME \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"        \"Project name cannot be empty or consist of only whitespace\";","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    public static final String","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"        MESSAGE_ILLEGAL_PROJECT_NAME_FMT \u003d","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"        \"\u0027%s\u0027 is an illegal project name as it interferes with parsing. Please consider differentiating it from an \"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"            + \"argument flag.\";","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_EMPTY_SOURCE \u003d \"Source cannot be empty or consist of only whitespace\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sachindavid96":2,"immanuelhume":10,"-":10}},{"path":"src/main/java/mycelium/mycelium/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    public int getMajor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        return major;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    public int getMinor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        return minor;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    public int getPatch() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        return patch;","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        return isEarlyAccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":16,"-":101}},{"path":"src/main/java/mycelium/mycelium/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":1,"-":10}},{"path":"src/main/java/mycelium/mycelium/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause   of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":1,"-":20}},{"path":"src/main/java/mycelium/mycelium/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.MainApp;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"immanuelhume":2,"-":40}},{"path":"src/main/java/mycelium/mycelium/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"     * @see #requireAllNonNull(Collection)","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":4,"-":33}},{"path":"src/main/java/mycelium/mycelium/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Config;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":3,"-":20}},{"path":"src/main/java/mycelium/mycelium/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":" * A class for Date utility functions.","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"public class DateUtil {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"     * Checks if the {@code date} is within this or next week.","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"     * Week is counted as starting from Sunday.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     * @param date cannot be null","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     * @return true if the {@code date} is within this or next week.","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"     *          false otherwise.","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    public static boolean isWithinThisAndNextWeek(LocalDate date) {","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        assert date !\u003d null;","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate startOfCurrentWeek \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"                currentDate.with(TemporalAdjusters.previousOrSame(DayOfWeek.SUNDAY));","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate endOfNextWeek \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"                startOfCurrentWeek.plusDays(13);","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        return (date.isAfter(startOfCurrentWeek) || date.isEqual(startOfCurrentWeek))","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 (date.isEqual(endOfNextWeek) || date.isBefore(endOfNextWeek));","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     * Checks if {@code date} is before current date.","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"     * @param date cannot be null","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"     * @return true if {@code date} is before current time.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"     *          false otherwise.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    public static boolean isBeforeToday(LocalDate date) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        return date.isBefore(currentDate);","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"RubyNguyen07":49}},{"path":"src/main/java/mycelium/mycelium/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":3,"-":82}},{"path":"src/main/java/mycelium/mycelium/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath                   cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e      The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":7,"-":139}},{"path":"src/main/java/mycelium/mycelium/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word     cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":4,"-":66}},{"path":"src/main/java/mycelium/mycelium/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns an unmodifiable view of the filtered list of clients","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns an unmodifiable view of the filtered list of projects","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns an unmodifiable view of all due projects within this or next week","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    ObservableList\u003cProject\u003e getDueProjectList();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns an unmodifiable view of all overdue projects","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"    ObservableList\u003cProject\u003e getOverdueProjectList();","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves a hash map of status name and corresponding count of projects with that status.","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    HashMap\u003cString, Long\u003e getProjectStatistics();","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"StanleyNeoh":9,"immanuelhume":11,"-":40,"RubyNguyen07":16}},{"path":"src/main/java/mycelium/mycelium/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.AddressBookParser;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.Storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        return model.getFilteredClientList();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        return model.getFilteredProjectList();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"    public ObservableList\u003cProject\u003e getDueProjectList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        return model.getDueProjectList();","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"    public ObservableList\u003cProject\u003e getOverdueProjectList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"        return model.getOverdueProjectList();","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"    public HashMap\u003cString, Long\u003e getProjectStatistics() {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"        return model.getProjectStatistics();","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"StanleyNeoh":9,"immanuelhume":11,"-":69,"RubyNguyen07":14}},{"path":"src/main/java/mycelium/mycelium/logic/commands/AddClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":" * Adds a new client to Mycelium.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"public class AddClientCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    public static final String COMMAND_ACRONYM \u003d \"c\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"        COMMAND_ACRONYM + \": Adds a client to Mycelium.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"            + \"Compulsory Arguments: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_NAME + \"CLIENT NAME \"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_EMAIL + \"CLIENT EMAIL\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            + \"Optional Arguments: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_SOURCE + \"CLIENT SOURCE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER + \"MOBILE NUMBER \"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH + \"YEAR OF BIRTH\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"            + \"Example: \" + COMMAND_ACRONYM + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_NAME + \"Alice Baker \"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_EMAIL + \"alice_baker@bakers.com \"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_SOURCE + \"Fiverr \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER + \"98765432 \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH + \"2000\";","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New client added: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists in your client list\";","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"    private final Client toAdd;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"     * Creates a command which adds the new client.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"     * @param client The new client.","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"    public AddClientCommand(Client client) {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"        toAdd \u003d client;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"        if (model.hasClient(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"                MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"                new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"sachindavid96"},"content":"        model.addClient(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"            new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand that \u003d (AddClientCommand) o;","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        return toAdd.isSame(that.toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":48,"StanleyNeoh":7,"immanuelhume":31}},{"path":"src/main/java/mycelium/mycelium/logic/commands/AddProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":" * Adds a new project to Mycelium.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"public class AddProjectCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    public static final String COMMAND_ACRONYM \u003d \"p\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"        COMMAND_ACRONYM + \": Adds a project to Mycelium.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"            + \"Compulsory Arguments: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_NAME + \"PROJECT NAME \"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_CLIENT_EMAIL + \"CLIENT EMAIL\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            + \"Optional Arguments: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_STATUS + \"PROJECT STATUS \"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_SOURCE + \"PROJECT SOURCE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_DESCRIPTION + \"PROJECT DESCRIPTION \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_ACCEPTED_DATE + \"DATE PROJECT WAS ACCEPTED \"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_DEADLINE_DATE + \"DEADLINE OF PROJECT\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"            + \"Example: \" + COMMAND_ACRONYM + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_NAME + \"Mycelium \"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            + CliSyntax.PREFIX_CLIENT_EMAIL + \"alice_baker@gmail.com \"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_STATUS + \"done \"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_SOURCE + \"Fiverr \"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"            + CliSyntax.PREFIX_PROJECT_DESCRIPTION + \"Cli-based project management app \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"            + CliSyntax.PREFIX_ACCEPTED_DATE + \"01/12/2023 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            + CliSyntax.PREFIX_DEADLINE_DATE + \"31/12/2023\";","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New project added: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"This project name already exists in your project list\";","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"    private final Project toAdd;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"     * Creates a command to add the new project.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"     * @param project The new project.","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"    public AddProjectCommand(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"        toAdd \u003d project;","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"        if (model.hasProject(toAdd)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"                MESSAGE_DUPLICATE_PROJECT,","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"                new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"sachindavid96"},"content":"        model.addProject(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(MESSAGE_SUCCESS, toAdd),","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"            new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand that \u003d (AddProjectCommand) o;","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        return toAdd.isSame(that.toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":52,"StanleyNeoh":10,"immanuelhume":28}},{"path":"src/main/java/mycelium/mycelium/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":3,"-":17}},{"path":"src/main/java/mycelium/mycelium/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.DoNothingAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.UiAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private UiAction action;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * @param feedbackToUser feedback displayed to the user. Must not be null.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param action the action to be executed by the UI","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandResult(String feedbackToUser, UiAction action) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        this.action \u003d requireNonNull(action);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        this(feedbackToUser, new DoNothingAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    public void executeUiAction(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        action.execute(mainWindow);","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"            \u0026\u0026 action.equals(otherCommandResult.action);","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        return Objects.hash(feedbackToUser, action);","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"StanleyNeoh":15,"immanuelhume":1,"-":51}},{"path":"src/main/java/mycelium/mycelium/logic/commands/DeleteClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"public class DeleteClientCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public static final String COMMAND_ACRONYM \u003d \"dc\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"            COMMAND_ACRONYM + \": Deletes the client with the given email address.\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            + \"Compulsory Argument: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"            + CliSyntax.PREFIX_CLIENT_EMAIL + \" EMAIL \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            + COMMAND_ACRONYM + \" \" + CliSyntax.PREFIX_CLIENT_EMAIL + \" alice_baker@bakers.com\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Client: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"    private final Email targetEmail;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"    public DeleteClientCommand(Email targetEmail) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"        this.targetEmail \u003d targetEmail;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cClient\u003e targetClient \u003d model.getUniqueClient(c -\u003e c.getEmail().equals(targetEmail));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        if (targetClient.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"                Messages.MESSAGE_INVALID_CLIENT,","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"                new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        model.deleteClient(targetClient.get());","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(MESSAGE_DELETE_PERSON_SUCCESS, targetClient.get()),","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"            || (other instanceof DeleteClientCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"            \u0026\u0026 targetEmail.equals(((DeleteClientCommand) other).targetEmail)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":41,"StanleyNeoh":7,"immanuelhume":12}},{"path":"src/main/java/mycelium/mycelium/logic/commands/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":" * A command to delete an existing project.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"    public static final String COMMAND_ACRONYM \u003d \"dp\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        COMMAND_ACRONYM","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"            + \": Deletes the project with the given project name.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            + \"Compulsory Argument: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"            + CliSyntax.PREFIX_PROJECT_NAME + \" PROJECT NAME\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            + \"Example: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            + COMMAND_ACRONYM + \" \" + CliSyntax.PREFIX_PROJECT_NAME + \" Mycelium\";","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Project: %1$s\";","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    private final NonEmptyString targetProjectName;","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public DeleteProjectCommand(NonEmptyString targetProjectName) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"        this.targetProjectName \u003d targetProjectName;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cProject\u003e targetProject \u003d model.getUniqueProject(p -\u003e p.getName().equals(targetProjectName));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        if (targetProject.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"            throw new CommandException(","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"                Messages.MESSAGE_INVALID_PROJECT,","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"                new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        model.deleteProject(targetProject.get());","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(MESSAGE_DELETE_PROJECT_SUCCESS, targetProject.get()),","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"            || (other instanceof DeleteProjectCommand// instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"            \u0026\u0026 targetProjectName.equals(((DeleteProjectCommand) other).targetProjectName)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":33,"StanleyNeoh":7,"immanuelhume":20}},{"path":"src/main/java/mycelium/mycelium/logic/commands/UpdateClientCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":" * Edits the details of an existing client in Mycelium.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"public class UpdateClientCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    public static final String COMMAND_ACRONYM \u003d \"uc\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_ACRONYM + \": Edits a client in Mycelium.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        + \"Compulsory Arguments: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_EMAIL + \"CLIENT EMAIL\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        + \"Optional Arguments: \"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_NEW_EMAIL + \"NEW CLIENT EMAIL \"","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH + \"YEAR OF BIRTH \"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_SOURCE + \"CLIENT SOURCE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER + \"MOBILE NUMBER\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        + \"Example: \" + COMMAND_ACRONYM + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_EMAIL + \"topg@gmail.com \"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_NEW_EMAIL + \"patrick_bateman@pandp.com\"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        + CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH + \"2000\";","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Updated Client: %1$s\";","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"Client not updated.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    // To be checked","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"This client already exists.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    public final Email email;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    private final UpdateClientDescriptor updateClientDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     * Creates an UpdateClientCommand to edit the specified {@code Client}.","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * @param email                  of the client in the filtered client list to edit.","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     * @param updateClientDescriptor details to edit the client with.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"    public UpdateClientCommand(Email email, UpdateClientDescriptor updateClientDescriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"        requireNonNull(email);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        requireNonNull(updateClientDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"        this.updateClientDescriptor \u003d updateClientDescriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     * Creates and returns a {@code Client} with the details of {@code clientToEdit}","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"     * @param clientToEdit           client to be edited.","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"     * @param updateClientDescriptor details to edit the client with.","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"     * @return a client with the details of {@code clientToEdit}.","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"    private static Optional\u003cClient\u003e createUpdatedClient(Client clientToEdit,","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"                                                        UpdateClientDescriptor updateClientDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"        assert clientToEdit !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"        if (!updateClientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"        Name updatedName \u003d updateClientDescriptor.getName().orElse(clientToEdit.getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"        Email updatedEmail \u003d updateClientDescriptor.getEmail().orElse(clientToEdit.getEmail());","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"        Optional\u003cYearOfBirth\u003e updatedYearOfBirth \u003d updateClientDescriptor.getYearOfBirth()","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"            .or(clientToEdit::getYearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"        Optional\u003cNonEmptyString\u003e updatedSource \u003d updateClientDescriptor.getSource().or(clientToEdit::getSource);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        Optional\u003cPhone\u003e updatedMobileNumber \u003d updateClientDescriptor","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"            .getMobileNumber().or(clientToEdit::getMobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new Client(updatedName, updatedEmail, updatedYearOfBirth, updatedSource, updatedMobileNumber);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        if (client.equals(clientToEdit)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"        return Optional.of(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"     * Executes the UpdateClientCommand and returns the result message.","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     * @throws CommandException if an error occurs during command execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        TabSwitchAction action \u003d new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"        Optional\u003cClient\u003e uniqueClient \u003d model.getUniqueClient(c -\u003e c.getEmail().equals(email));","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"        if (!uniqueClient.isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CLIENT, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"        Optional\u003cClient\u003e updatedClient \u003d createUpdatedClient(uniqueClient.get(), updateClientDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"        if (updatedClient.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(MESSAGE_NOT_EDITED, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"        // Ensures that new email is not a mandatory option","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        if (updateClientDescriptor.email.isPresent()","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 model.hasClient(updatedClient.get())","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 !uniqueClient.get().isSame(updatedClient.get())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLIENT, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"        model.setClient(uniqueClient.get(), updatedClient.get());","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, updatedClient.get()), action);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"     * Returns true if both commands have the same email and editClientDescriptor.","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"     * @param other object to be compared.","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"     * @return true if both commands have the same email and editClientDescriptor.","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        if (!(other instanceof UpdateClientCommand)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand e \u003d (UpdateClientCommand) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"        return email.equals(e.email)","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 updateClientDescriptor.equals(e.updateClientDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"     * Returns a hashcode for the command.","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"     * @return a hashcode for the command.","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"        return Objects.hash(email, updateClientDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"    public static class UpdateClientDescriptor {","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"        private Optional\u003cName\u003e name;","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"        private Optional\u003cEmail\u003e email;","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"        private Optional\u003cYearOfBirth\u003e yearOfBirth;","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"        private Optional\u003cNonEmptyString\u003e source;","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"Douglch"},"content":"        private Optional\u003cPhone\u003e mobileNumber;","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"         * Creates an EditClientDescriptor with all fields optionally null.","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"        public UpdateClientDescriptor() {","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"            name \u003d Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"            email \u003d Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"            yearOfBirth \u003d Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"            source \u003d Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"            mobileNumber \u003d Optional.empty();","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Douglch"},"content":"         * Creates an EditClientDescriptor with all fields optionally null.","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"Douglch"},"content":"         * @param toCopy the EditClientDescriptor to copy.","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"Douglch"},"content":"        public UpdateClientDescriptor(UpdateClientDescriptor toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"Douglch"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"Douglch"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"Douglch"},"content":"            setYearOfBirth(toCopy.yearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Douglch"},"content":"            setSource(toCopy.source);","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Douglch"},"content":"            setMobileNumber(toCopy.mobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"Douglch"},"content":"         * Creates an EditClientDescriptor with all fields optionally null.","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"         *","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Douglch"},"content":"         * @param toCopy the Client to copy.","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"Douglch"},"content":"        public UpdateClientDescriptor(Client toCopy) {","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"Douglch"},"content":"            setName(toCopy.getName());","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"Douglch"},"content":"            setEmail(toCopy.getEmail());","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"Douglch"},"content":"            setYearOfBirth(toCopy.getYearOfBirth());","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"Douglch"},"content":"            setSource(toCopy.getSource());","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"Douglch"},"content":"            setMobileNumber(toCopy.getMobileNumber());","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"Douglch"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"Douglch"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"Douglch"},"content":"            return Stream.of(name, email, yearOfBirth, source, mobileNumber)","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"Douglch"},"content":"                .anyMatch(Optional::isPresent);","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"Douglch"},"content":"         * Returns an Optional containing the name.","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"Douglch"},"content":"         * @return an Optional containing the name.","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"Douglch"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"Douglch"},"content":"            return name;","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"Douglch"},"content":"         * Sets the name to the given name. This assumes name given could be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"Douglch"},"content":"         * @param name the name to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"Douglch"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"Douglch"},"content":"            this.name \u003d Optional.ofNullable(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"Douglch"},"content":"         * Sets the name to the given name. This ensures the name variable is wrapped is an Optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"Douglch"},"content":"         * @param name the name to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"Douglch"},"content":"        public void setName(Optional\u003cName\u003e name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"Douglch"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"Douglch"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"Douglch"},"content":"         * Returns an Optional containing the email.","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"Douglch"},"content":"         * @return an Optional containing the email.","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"Douglch"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"Douglch"},"content":"            return email;","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"Douglch"},"content":"         * Sets the email to the given email. This assumes email given could be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"Douglch"},"content":"         * @param email the email to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"Douglch"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"Douglch"},"content":"            this.email \u003d Optional.ofNullable(email);","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"Douglch"},"content":"         * Sets the email to the given email. This ensures the email variable is wrapped is an Optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"Douglch"},"content":"         * @param email the email to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"Douglch"},"content":"        public void setEmail(Optional\u003cEmail\u003e email) {","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"Douglch"},"content":"            requireNonNull(email);","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"Douglch"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"Douglch"},"content":"         * Returns an Optional containing the year of birth.","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"Douglch"},"content":"         * @return an Optional containing the year of birth.","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"Douglch"},"content":"        public Optional\u003cYearOfBirth\u003e getYearOfBirth() {","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"Douglch"},"content":"            return yearOfBirth;","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"Douglch"},"content":"         * Sets the year of birth to the given year of birth. This assumes year of birth given could be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"Douglch"},"content":"         * @param yearOfBirth the year of birth to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"Douglch"},"content":"        public void setYearOfBirth(YearOfBirth yearOfBirth) {","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"Douglch"},"content":"            this.yearOfBirth \u003d Optional.ofNullable(yearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":284,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"Douglch"},"content":"         * Sets the year of birth to the given year of birth.","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"Douglch"},"content":"         * This ensures the year of birth variable is wrapped is an Optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":289,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"Douglch"},"content":"         * @param yearOfBirth the year of birth to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"Douglch"},"content":"        public void setYearOfBirth(Optional\u003cYearOfBirth\u003e yearOfBirth) {","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"Douglch"},"content":"            requireNonNull(yearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"Douglch"},"content":"            this.yearOfBirth \u003d yearOfBirth;","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":296,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"Douglch"},"content":"         * Returns an Optional containing the source.","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"Douglch"},"content":"         * @return an Optional containing the source.","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"Douglch"},"content":"        public Optional\u003cNonEmptyString\u003e getSource() {","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"Douglch"},"content":"            return source;","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"Douglch"},"content":"         * Sets the source to the given source. This assumes source given could be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"Douglch"},"content":"         * @param source the source to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"Douglch"},"content":"        public void setSource(NonEmptyString source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"Douglch"},"content":"            this.source \u003d Optional.ofNullable(source);","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"Douglch"},"content":"         * Sets the source to the given source. This ensures the source variable is wrapped is an Optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"Douglch"},"content":"         * @param source the source to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"Douglch"},"content":"        public void setSource(Optional\u003cNonEmptyString\u003e source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"Douglch"},"content":"            requireNonNull(source);","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"Douglch"},"content":"            this.source \u003d source;","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"Douglch"},"content":"         * Returns an Optional containing the mobile number.","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"Douglch"},"content":"         * @return an Optional containing the mobile number.","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"Douglch"},"content":"        public Optional\u003cPhone\u003e getMobileNumber() {","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"Douglch"},"content":"            return mobileNumber;","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"Douglch"},"content":"         * Sets the mobile number to the given mobile number. This assumes mobile number given could be null.","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":337,"author":{"gitId":"Douglch"},"content":"         * @param mobileNumber the mobile number to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"Douglch"},"content":"        public void setMobileNumber(Phone mobileNumber) {","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"Douglch"},"content":"            this.mobileNumber \u003d Optional.ofNullable(mobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":341,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":342,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":343,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":344,"author":{"gitId":"Douglch"},"content":"         * Sets the mobile number to the given mobile number.","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"Douglch"},"content":"         * This ensures the mobile number variable is wrapped is an Optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"Douglch"},"content":"         * @param mobileNumber the mobile number to set.","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"Douglch"},"content":"        public void setMobileNumber(Optional\u003cPhone\u003e mobileNumber) {","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"Douglch"},"content":"            requireNonNull(mobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"Douglch"},"content":"            this.mobileNumber \u003d mobileNumber;","lastModifiedDate":"2023-03-27"},{"lineNumber":352,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":353,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":355,"author":{"gitId":"Douglch"},"content":"         * Returns true if both EditClientDescriptor objects have the same name. The {@code instanceOf} check is used to","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"Douglch"},"content":"         * handle nulls.","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"Douglch"},"content":"         * @param other the other EditClientDescriptor object.","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"Douglch"},"content":"         * @return true if both EditClientDescriptor objects have the same name.","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":361,"author":{"gitId":"Douglch"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":362,"author":{"gitId":"Douglch"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":363,"author":{"gitId":"Douglch"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":364,"author":{"gitId":"Douglch"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":365,"author":{"gitId":"Douglch"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":366,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":367,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":368,"author":{"gitId":"Douglch"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":369,"author":{"gitId":"Douglch"},"content":"            if (!(other instanceof UpdateClientDescriptor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":370,"author":{"gitId":"Douglch"},"content":"                return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":371,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":372,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":373,"author":{"gitId":"Douglch"},"content":"            // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":374,"author":{"gitId":"Douglch"},"content":"            UpdateClientDescriptor e \u003d (UpdateClientDescriptor) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":376,"author":{"gitId":"Douglch"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-27"},{"lineNumber":377,"author":{"gitId":"Douglch"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-27"},{"lineNumber":378,"author":{"gitId":"Douglch"},"content":"                \u0026\u0026 getYearOfBirth().equals(e.getYearOfBirth())","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"Douglch"},"content":"                \u0026\u0026 getSource().equals(e.getSource())","lastModifiedDate":"2023-03-27"},{"lineNumber":380,"author":{"gitId":"Douglch"},"content":"                \u0026\u0026 getMobileNumber().equals(e.getMobileNumber());","lastModifiedDate":"2023-03-27"},{"lineNumber":381,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":382,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":383,"author":{"gitId":"Douglch"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":384,"author":{"gitId":"Douglch"},"content":"         * Returns the hashcode of the EditClientDescriptor object.","lastModifiedDate":"2023-03-27"},{"lineNumber":385,"author":{"gitId":"Douglch"},"content":"         *","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"Douglch"},"content":"         * @return the hashcode of the EditClientDescriptor object.","lastModifiedDate":"2023-03-27"},{"lineNumber":387,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":388,"author":{"gitId":"Douglch"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":389,"author":{"gitId":"Douglch"},"content":"        public int hashCode() {","lastModifiedDate":"2023-03-27"},{"lineNumber":390,"author":{"gitId":"Douglch"},"content":"            return Objects.hash(name, email, yearOfBirth, source, mobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":392,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":393,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"immanuelhume":19,"Douglch":374}},{"path":"src/main/java/mycelium/mycelium/logic/commands/UpdateProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_ACCEPTED_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_NEW_PROJECT_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_DESCRIPTION;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_SOURCE;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":" * Updates a project.","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"public class UpdateProjectCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    public static final String COMMAND_ACRONYM \u003d \"up\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        COMMAND_ACRONYM + \": Updates the selected project.\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            + \"Compulsory Arguments: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_PROJECT_NAME + \"PROJECT NAME\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            + \"Optional Arguments: \"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_NEW_PROJECT_NAME + \"NEW PROJECT NAME \"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_PROJECT_STATUS + \"PROJECT STATUS \"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_CLIENT_EMAIL + \"CLIENT EMAIL \"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_SOURCE + \"SOURCE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_PROJECT_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_ACCEPTED_DATE + \"ACCEPTED DATE \"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_DEADLINE_DATE + \"DEADLINE\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"            + \"Example: \" + COMMAND_ACRONYM + \" \"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_PROJECT_NAME + \"Mycelium \"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_NEW_PROJECT_NAME + \"Mycelium 2.0 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"            + PREFIX_PROJECT_STATUS + \"in_progress\";","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_UPDATE_PROJECT_SUCCESS \u003d \"Updated project: %1$s\";","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_NOT_UPDATED \u003d \"Project not updated\";","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"A project with the requested name already exists!\";","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    private final NonEmptyString projectName;","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    private final UpdateProjectDescriptor desc;","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"     * Creates an UpdateProjectCommand to update the specified {@code Project}. The project is allowed to not exist,","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"     * and the descriptor may contain no updated fields.","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"     * @param projectName name of the project to update","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"     * @param desc        descriptor of the updated project","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectCommand(NonEmptyString projectName, UpdateProjectDescriptor desc) {","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(projectName, desc);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        this.desc \u003d desc;","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     * Creates an updated project from the given project and descriptor. Returns Optional.empty() if no fields are","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"     * changed, and the updated project otherwise.","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"     * @param project project to update","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     * @param desc    descriptor of the updated project","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"     * @return updated project, or Optional.empty() if no fields are changed","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    private static Optional\u003cProject\u003e createUpdatedProject(Project project, UpdateProjectDescriptor desc) {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(project, desc);","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        if (!desc.isAnyFieldUpdated()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString updatedName \u003d desc.getName().orElse(project.getName());","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        ProjectStatus updatedStatus \u003d desc.getStatus().orElse(project.getStatus());","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        Email updatedClientEmail \u003d desc.getClientEmail().orElse(project.getClientEmail());","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e updatedSource \u003d desc.getSource().or(project::getSource);","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cString\u003e updatedDescription \u003d desc.getDescription().or(project::getDescription);","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        LocalDate updatedAcceptedOn \u003d desc.getAcceptedOn().orElse(project.getAcceptedOn());","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cLocalDate\u003e updatedDeadline \u003d desc.getDeadline().or(project::getDeadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        Project updatedProject \u003d new Project(updatedName,","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"            updatedStatus,","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"            updatedClientEmail,","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"            updatedSource,","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"            updatedDescription,","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"            updatedAcceptedOn,","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"            updatedDeadline);","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        if (project.equals(updatedProject)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        return Optional.of(updatedProject);","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"        UpdateProjectCommand that \u003d (UpdateProjectCommand) o;","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(projectName, that.projectName) \u0026\u0026 Objects.equals(desc, that.desc);","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(projectName, desc);","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        TabSwitchAction action \u003d new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cProject\u003e target \u003d model.getUniqueProject(p -\u003e p.getName().equals(projectName));","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"        if (target.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cProject\u003e updatedProject \u003d createUpdatedProject(target.get(), desc);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"        if (updatedProject.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(MESSAGE_NOT_UPDATED, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"        if (desc.name.isPresent()","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 model.hasProject(updatedProject.get())","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 !target.get().isSame(updatedProject.get())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROJECT, action);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"        model.setProject(target.get(), updatedProject.get());","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject.get()), action);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"     * Stores the details to update the project with. Each non-empty field value can be used to perform partial","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"     * updates on a project.","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"    public static class UpdateProjectDescriptor {","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cNonEmptyString\u003e name \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cProjectStatus\u003e status \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cEmail\u003e clientEmail \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cNonEmptyString\u003e source \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cString\u003e description \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cLocalDate\u003e acceptedOn \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"        private Optional\u003cLocalDate\u003e deadline \u003d Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"         * Creates a new UpdateProjectDescriptor with all fields set to empty.","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"        public UpdateProjectDescriptor() {","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"         * Constructs a new UpdateProjectDescriptor by copying the values of an existing descriptor.","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"        public UpdateProjectDescriptor(UpdateProjectDescriptor toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"            setClientEmail(toCopy.clientEmail);","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"            setSource(toCopy.source);","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"            setAcceptedOn(toCopy.acceptedOn);","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"        /**","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"         * Constructs a new UpdateProjectDescriptor by copying the values of an existing project.","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"         */","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"        public UpdateProjectDescriptor(Project toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"            setName(toCopy.getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":"            setStatus(toCopy.getStatus());","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"immanuelhume"},"content":"            setClientEmail(toCopy.getClientEmail());","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"            setSource(toCopy.getSource());","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"            setDescription(toCopy.getDescription());","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"            setAcceptedOn(toCopy.getAcceptedOn());","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"            setDeadline(toCopy.getDeadline());","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"        public void setName(NonEmptyString name) {","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"            this.name \u003d Optional.ofNullable(name);","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"        public void setName(Optional\u003cNonEmptyString\u003e name) {","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(name);","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"immanuelhume"},"content":"        public void setStatus(ProjectStatus status) {","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"immanuelhume"},"content":"            this.status \u003d Optional.ofNullable(status);","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":"        public void setStatus(Optional\u003cProjectStatus\u003e status) {","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(status);","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"immanuelhume"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":212,"author":{"gitId":"immanuelhume"},"content":"        public void setClientEmail(Email clientEmail) {","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"immanuelhume"},"content":"            this.clientEmail \u003d Optional.ofNullable(clientEmail);","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"immanuelhume"},"content":"        public void setClientEmail(Optional\u003cEmail\u003e clientEmail) {","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(clientEmail);","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"immanuelhume"},"content":"            this.clientEmail \u003d clientEmail;","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"immanuelhume"},"content":"        public void setSource(NonEmptyString source) {","lastModifiedDate":"2023-03-26"},{"lineNumber":223,"author":{"gitId":"immanuelhume"},"content":"            this.source \u003d Optional.ofNullable(source);","lastModifiedDate":"2023-03-26"},{"lineNumber":224,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":225,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":226,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"immanuelhume"},"content":"        public void setSource(Optional\u003cNonEmptyString\u003e source) {","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(source);","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"immanuelhume"},"content":"            this.source \u003d source;","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"immanuelhume"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"immanuelhume"},"content":"            this.description \u003d Optional.ofNullable(description);","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":236,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"immanuelhume"},"content":"        public void setDescription(Optional\u003cString\u003e description) {","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(description);","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"immanuelhume"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":242,"author":{"gitId":"immanuelhume"},"content":"        public void setAcceptedOn(LocalDate acceptedOn) {","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"immanuelhume"},"content":"            this.acceptedOn \u003d Optional.ofNullable(acceptedOn);","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"immanuelhume"},"content":"        public void setAcceptedOn(Optional\u003cLocalDate\u003e acceptedOn) {","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(acceptedOn);","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"immanuelhume"},"content":"            this.acceptedOn \u003d acceptedOn;","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"immanuelhume"},"content":"        public void setDeadline(LocalDate deadline) {","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"immanuelhume"},"content":"            this.deadline \u003d Optional.ofNullable(deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"immanuelhume"},"content":"        public void setDeadline(Optional\u003cLocalDate\u003e deadline) {","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"immanuelhume"},"content":"            requireNonNull(deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"immanuelhume"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":262,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cNonEmptyString\u003e getName() {","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"immanuelhume"},"content":"            return name;","lastModifiedDate":"2023-03-26"},{"lineNumber":264,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cProjectStatus\u003e getStatus() {","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"immanuelhume"},"content":"            return status;","lastModifiedDate":"2023-03-26"},{"lineNumber":268,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":269,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cEmail\u003e getClientEmail() {","lastModifiedDate":"2023-03-26"},{"lineNumber":271,"author":{"gitId":"immanuelhume"},"content":"            return clientEmail;","lastModifiedDate":"2023-03-26"},{"lineNumber":272,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":273,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":274,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cNonEmptyString\u003e getSource() {","lastModifiedDate":"2023-03-26"},{"lineNumber":275,"author":{"gitId":"immanuelhume"},"content":"            return source;","lastModifiedDate":"2023-03-26"},{"lineNumber":276,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":277,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":278,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-03-26"},{"lineNumber":279,"author":{"gitId":"immanuelhume"},"content":"            return description;","lastModifiedDate":"2023-03-26"},{"lineNumber":280,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":281,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":282,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cLocalDate\u003e getAcceptedOn() {","lastModifiedDate":"2023-03-26"},{"lineNumber":283,"author":{"gitId":"immanuelhume"},"content":"            return acceptedOn;","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"immanuelhume"},"content":"        public Optional\u003cLocalDate\u003e getDeadline() {","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"immanuelhume"},"content":"            return deadline;","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"immanuelhume"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"immanuelhume"},"content":"         * Returns true if at least one field is updated.","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"immanuelhume"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"immanuelhume"},"content":"        public boolean isAnyFieldUpdated() {","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"immanuelhume"},"content":"            return name.isPresent() || status.isPresent() || clientEmail.isPresent() || source.isPresent()","lastModifiedDate":"2023-03-26"},{"lineNumber":295,"author":{"gitId":"immanuelhume"},"content":"                || description.isPresent() || acceptedOn.isPresent() || deadline.isPresent();","lastModifiedDate":"2023-03-26"},{"lineNumber":296,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"immanuelhume"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"immanuelhume"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"immanuelhume"},"content":"            if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"immanuelhume"},"content":"                return true;","lastModifiedDate":"2023-03-26"},{"lineNumber":302,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":303,"author":{"gitId":"immanuelhume"},"content":"            if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":304,"author":{"gitId":"immanuelhume"},"content":"                return false;","lastModifiedDate":"2023-03-26"},{"lineNumber":305,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":306,"author":{"gitId":"immanuelhume"},"content":"            UpdateProjectDescriptor that \u003d (UpdateProjectDescriptor) o;","lastModifiedDate":"2023-03-26"},{"lineNumber":307,"author":{"gitId":"immanuelhume"},"content":"            return Objects.equals(name, that.name)","lastModifiedDate":"2023-03-26"},{"lineNumber":308,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(status, that.status)","lastModifiedDate":"2023-03-26"},{"lineNumber":309,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(clientEmail, that.clientEmail)","lastModifiedDate":"2023-03-26"},{"lineNumber":310,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(source, that.source)","lastModifiedDate":"2023-03-26"},{"lineNumber":311,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(description, that.description)","lastModifiedDate":"2023-03-26"},{"lineNumber":312,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(acceptedOn, that.acceptedOn)","lastModifiedDate":"2023-03-26"},{"lineNumber":313,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 Objects.equals(deadline, that.deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":314,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":315,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":316,"author":{"gitId":"immanuelhume"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":317,"author":{"gitId":"immanuelhume"},"content":"        public int hashCode() {","lastModifiedDate":"2023-03-26"},{"lineNumber":318,"author":{"gitId":"immanuelhume"},"content":"            return Objects.hash(name, status, clientEmail, source, description, acceptedOn, deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":319,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":320,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":321,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":322,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"immanuelhume":322}},{"path":"src/main/java/mycelium/mycelium/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.DoNothingAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.UiAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" * Represents an error which occurs during execution of a {@code Command}.","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private UiAction action;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     * Constructs a new {@code CommandException} with the","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * specified detail {@code message} and {@code action} to be executed.","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     * {@code action} cannot be null.","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * @param action the action to be executed.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandException(String message, UiAction action) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        this.action \u003d requireNonNull(action);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"     * Constructs a new {@code CommandException} with the","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     * specified detail {@code message} and {@code cause}.","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"     * @param cause the throwable that caused this exception.","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     * Constructs a new {@code CommandException} with the","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"     * specified detail {@code message} and a {@code DoNothingAction}.","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message the detail message.","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandException(String message) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"        this(message, new DoNothingAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    public void executeUiAction(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        action.execute(mainWindow);","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"                || (other instanceof CommandException // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"                \u0026\u0026 getMessage().equals(((CommandException) other).getMessage()) // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"                \u0026\u0026 action.equals(((CommandException) other).action)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"        return Objects.hash(getMessage(), action);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"StanleyNeoh":57,"immanuelhume":2,"-":8}},{"path":"src/main/java/mycelium/mycelium/logic/parser/AddClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_SOURCE;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.AddClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":" * A command to add a new client.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"public class AddClientCommandParser implements Parser\u003cAddClientCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"    public AddClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_CLIENT_NAME, PREFIX_CLIENT_EMAIL, PREFIX_SOURCE,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"                PREFIX_CLIENT_YEAR_OF_BIRTH, PREFIX_CLIENT_MOBILE_NUMBER);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_CLIENT_NAME, PREFIX_CLIENT_EMAIL)","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        // Only the client\u0027s name and email are required fields. We parse them into their respective types here.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"sachindavid96"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_CLIENT_NAME).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cPhone\u003e mobileNumber \u003d ParserUtil.parseOptionalWith(","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"            argMultimap.getValue(PREFIX_CLIENT_MOBILE_NUMBER),","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil::parsePhone);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e source \u003d ParserUtil.parseOptionalWith(","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            argMultimap.getValue(PREFIX_SOURCE),","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil::parseSource);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cYearOfBirth\u003e yearOfBirth \u003d ParserUtil.parseOptionalWith(","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            argMultimap.getValue(PREFIX_CLIENT_YEAR_OF_BIRTH),","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil::parseYearOfBirth);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"        Client client \u003d new Client(name, email, yearOfBirth, source, mobileNumber);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"        return new AddClientCommand(client);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":36,"immanuelhume":26}},{"path":"src/main/java/mycelium/mycelium/logic/parser/AddProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_ACCEPTED_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_DESCRIPTION;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_SOURCE;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.AddProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":" * A command to add a new project.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"public class AddProjectCommandParser implements Parser\u003cAddProjectCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"     * Parses the given {@code String} of arguments in the context of the AddProjectCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"     * and returns an AddProjectCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"    public AddProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_PROJECT_NAME, PREFIX_CLIENT_EMAIL,","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"                PREFIX_PROJECT_STATUS, PREFIX_SOURCE, PREFIX_PROJECT_DESCRIPTION,","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"                PREFIX_ACCEPTED_DATE, PREFIX_DEADLINE_DATE","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            );","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PROJECT_NAME, PREFIX_CLIENT_EMAIL)","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"sachindavid96"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        // For projects, the only required field is the project name and the client\u0027s email.","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString name \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_PROJECT_NAME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        Email clientEmail \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        // The project\u0027s status and acceptedOn date take default values.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cString\u003e maybeProjectStatus \u003d argMultimap.getValue(PREFIX_PROJECT_STATUS);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        ProjectStatus projectStatus \u003d maybeProjectStatus.isPresent()","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            ? ParserUtil.parseProjectStatus(maybeProjectStatus.get())","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            : ProjectStatus.NOT_STARTED;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cString\u003e maybeAcceptedOn \u003d argMultimap.getValue(PREFIX_ACCEPTED_DATE);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        LocalDate acceptedOn \u003d maybeAcceptedOn.isPresent()","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            ? ParserUtil.parseLocalDate(maybeAcceptedOn.get(), Project.DATE_FMT)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"            : LocalDate.now();","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e source \u003d ParserUtil.parseOptionalWith(","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            argMultimap.getValue(PREFIX_SOURCE),","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil::parseSource);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: the description is allowed to be empty. Thus we do not wrap it into a NonEmptyString.","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cString\u003e description \u003d argMultimap.getValue(PREFIX_PROJECT_DESCRIPTION);","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cLocalDate\u003e deadline \u003d ParserUtil.parseOptionalWith(","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            argMultimap.getValue(PREFIX_DEADLINE_DATE),","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            d -\u003e ParserUtil.parseLocalDate(d, Project.DATE_FMT));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        Project","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            project \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            new Project(name,","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"                projectStatus,","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"                clientEmail,","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"                source,","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"                description,","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"                acceptedOn,","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"                deadline);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"sachindavid96"},"content":"        return new AddProjectCommand(project);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":30,"immanuelhume":49}},{"path":"src/main/java/mycelium/mycelium/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.DeleteClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.UpdateClientCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, Messages.MESSAGE_CHECK_USER_GUIDE));","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"        case AddClientCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"            return new AddClientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"        case AddProjectCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"            return new AddProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"sachindavid96"},"content":"        case DeleteClientCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"sachindavid96"},"content":"            return new DeleteClientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"sachindavid96"},"content":"        case DeleteProjectCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        case UpdateClientCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            return new UpdateClientCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        case UpdateProjectCommand.COMMAND_ACRONYM:","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            return new UpdateProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"sachindavid96":13,"immanuelhume":17,"-":38,"Douglch":1}},{"path":"src/main/java/mycelium/mycelium/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     * Prefixes mapped to their respective arguments","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     **/","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"immanuelhume":4,"-":58}},{"path":"src/main/java/mycelium/mycelium/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        // Handle an edge case where a prefix defined with trailing whitespace is given as the very last token. This","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"        // is more for user ergonomics than correctness.","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        int lastTokenStartIdx \u003d argsString.lastIndexOf(\" \") + 1;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        String lastToken \u003d argsString.substring(lastTokenStartIdx);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        Arrays.stream(prefixes)","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            .filter(prefix -\u003e !prefix.getPrefix().equals(lastToken)","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"                \u0026\u0026 prefix.getPrefix().trim().equals(lastToken)) // note the call to trim()","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            .findFirst()","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            .ifPresent(prefix -\u003e positions.add(new PrefixPosition(prefix, lastTokenStartIdx)));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @return ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                                               PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                               PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        int","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"            valueStartPos \u003d","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"            Math.min(argsString.length(), currentPrefixPosition.getStartPosition() + prefix.getPrefix().length());","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"        private int startPosition;","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"immanuelhume":17,"-":144}},{"path":"src/main/java/mycelium/mycelium/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    /* Common between project and client related commands. */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"    public static final Prefix PREFIX_SOURCE \u003d new Prefix(\"-src \");","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    /* For client related commands. */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_CLIENT_NAME \u003d new Prefix(\"-cn \");","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_CLIENT_EMAIL \u003d new Prefix(\"-e \");","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_CLIENT_YEAR_OF_BIRTH \u003d new Prefix(\"-y \");","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_CLIENT_MOBILE_NUMBER \u003d new Prefix(\"-mn \");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public static final Prefix PREFIX_CLIENT_NEW_EMAIL \u003d new Prefix(\"-e2 \");","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    /* For project related commands. */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_PROJECT_NAME \u003d new Prefix(\"-pn \");","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    public static final Prefix PREFIX_NEW_PROJECT_NAME \u003d new Prefix(\"-pn2 \");","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_PROJECT_DESCRIPTION \u003d new Prefix(\"-d \");","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_ACCEPTED_DATE \u003d new Prefix(\"-ad \");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_DEADLINE_DATE \u003d new Prefix(\"-dd \");","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"    public static final Prefix PREFIX_PROJECT_STATUS \u003d new Prefix(\"-s \");","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sachindavid96":9,"immanuelhume":8,"-":14,"Douglch":1}},{"path":"src/main/java/mycelium/mycelium/logic/parser/DeleteClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.DeleteClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":" * A command to delete an existing client.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"public class DeleteClientCommandParser implements Parser\u003cDeleteClientCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteClientCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"     * and returns a DeleteClientCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    public DeleteClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_CLIENT_EMAIL);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_CLIENT_EMAIL)","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"sachindavid96"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"        Email targetEmail \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"        return new DeleteClientCommand(targetEmail);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":25,"immanuelhume":7}},{"path":"src/main/java/mycelium/mycelium/logic/parser/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" * Parses a {@link DeleteProjectCommand} from string input.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"     * Parses the given {@code String} of arguments in the context of the AddClientCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"     * and returns an AddClientCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_PROJECT_NAME);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PROJECT_NAME)","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"sachindavid96"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"sachindavid96"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString targetProjectName \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_PROJECT_NAME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"sachindavid96"},"content":"        return new DeleteProjectCommand(targetProjectName);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"sachindavid96":23,"immanuelhume":10}},{"path":"src/main/java/mycelium/mycelium/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"immanuelhume":4,"-":13}},{"path":"src/main/java/mycelium/mycelium/logic/parser/ParserFn.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":" * This is essentially a java.util.function.Function which might throw a {@link","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":" * ParseException}. The type is made explicit here so that it is more convenient","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":" * to pass methods around as * lambdas. It defers from {@link Parser} in that it","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":" * returns any type, not just a command. Thus, its main use is in parsing","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":" * arguments within each command string.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"@FunctionalInterface","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"public interface ParserFn\u003cT, U\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    U parse(T t) throws ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":15}},{"path":"src/main/java/mycelium/mycelium/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    /* Some project names are illegal as they interfere with parsing */","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    public static final String[] ILLEGAL_PROJECT_NAMES \u003d {\"-pn2\"};","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     * Parses a {@code String year of birth} into an {@code YearOfBirth}.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"sachindavid96"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"sachindavid96"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"sachindavid96"},"content":"    public static YearOfBirth parseYearOfBirth(String yearOfBirth) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(yearOfBirth);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"sachindavid96"},"content":"        String trimmedYearOfBirth \u003d yearOfBirth.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"sachindavid96"},"content":"        if (!YearOfBirth.isValidYearOfBirth(trimmedYearOfBirth)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"sachindavid96"},"content":"            throw new ParseException(YearOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"sachindavid96"},"content":"        return new YearOfBirth(trimmedYearOfBirth);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"     * Parses a project\u0027s status from its string representation.","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"sachindavid96"},"content":"    public static ProjectStatus parseProjectStatus(String projectStatus) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(projectStatus);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        String trimmedProjectStatus \u003d projectStatus.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        if (!ProjectStatus.isValidProjectStatus(trimmedProjectStatus)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(ProjectStatus.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        return ProjectStatus.fromString(trimmedProjectStatus);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"     * Parses a string by asserting that it is non-empty after trimming. Note that this","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"    public static NonEmptyString parseNonEmptyString(String source) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"sachindavid96"},"content":"        requireNonNull(source);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"sachindavid96"},"content":"        String trimmedSource \u003d source.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"        if (!NonEmptyString.isValid(trimmedSource)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(NonEmptyString.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"sachindavid96"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        return NonEmptyString.of(trimmedSource);","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"     * Parses a string into a {@code NonEmptyString} representing a project name.","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    public static NonEmptyString parseProjectName(String source) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString name;","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"            name \u003d parseNonEmptyString(source);","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(Messages.MESSAGE_EMPTY_PROJECT_NAME);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"        // some project names may cause problems down the line, so we check them here","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        for (String bannedName : ILLEGAL_PROJECT_NAMES) {","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"            if (name.equals(bannedName)) {","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"                throw new ParseException(String.format(Messages.MESSAGE_ILLEGAL_PROJECT_NAME_FMT, name));","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"        return name;","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"     * Parses a string into a {@code NonEmptyString} representing a project or client\u0027s source.","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"    public static NonEmptyString parseSource(String source) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"            return parseNonEmptyString(source);","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(Messages.MESSAGE_EMPTY_SOURCE);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"     * Parses a string into a {@code LocalDate} using the formatter provided.","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"    public static LocalDate parseLocalDate(String s, DateTimeFormatter dateFmt) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"        String trimmedSource \u003d s.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"            return LocalDate.parse(trimmedSource, dateFmt);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"     * Performs a map operation. We need this because {@code Optional.map} does not throw checked exceptions.","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"     * @param src The raw input to pass, which may be an {@code Optional.empty()}","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"     * @param f   The parsing function to use against the raw input","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"     * @param \u003cT\u003e Type of the raw input","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"     * @param \u003cU\u003e Type of the parsed result","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"     * @return The parsed result, wrapped in an {@code Optional}","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"     * @throws ParseException If the parsing function throws it.","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"    public static \u003cT, U\u003e Optional\u003cU\u003e parseOptionalWith(Optional\u003cT\u003e src, ParserFn\u003cT, U\u003e f) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"        return src.isPresent() ? Optional.of(f.parse(src.get())) : Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"sachindavid96":22,"StanleyNeoh":1,"immanuelhume":96,"-":58}},{"path":"src/main/java/mycelium/mycelium/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"immanuelhume":1,"-":38}},{"path":"src/main/java/mycelium/mycelium/logic/parser/UpdateClientCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_NEW_EMAIL;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_SOURCE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.ParserUtil.parseEmail;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.ParserUtil.parseOptionalWith;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.UpdateClientCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":" * Parses input arguments and creates a new UpdateClientCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"public class UpdateClientCommandParser implements Parser\u003cUpdateClientCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateClientCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * and returns an UpdateClientCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public UpdateClientCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"            ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_CLIENT_NAME,","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_CLIENT_NEW_EMAIL,","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_CLIENT_EMAIL,","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_CLIENT_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_SOURCE,","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"                CliSyntax.PREFIX_CLIENT_MOBILE_NUMBER","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"            );","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_CLIENT_EMAIL)","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateClientCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        Email email \u003d parseEmail(argMultimap.getValue(PREFIX_CLIENT_EMAIL).get());","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        Optional\u003cName\u003e name \u003d parseOptionalWith(","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"            argMultimap.getValue(PREFIX_CLIENT_NAME), ParserUtil::parseName);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        Optional\u003cEmail\u003e newEmail \u003d parseOptionalWith(","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"            argMultimap.getValue(PREFIX_CLIENT_NEW_EMAIL), ParserUtil::parseEmail);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        Optional\u003cYearOfBirth\u003e yearOfBirth \u003d parseOptionalWith(","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"            argMultimap.getValue(PREFIX_CLIENT_YEAR_OF_BIRTH),","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"            ParserUtil::parseYearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        Optional\u003cNonEmptyString\u003e source \u003d parseOptionalWith(","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"            argMultimap.getValue(PREFIX_SOURCE),","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            ParserUtil::parseSource);","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"        Optional\u003cPhone\u003e mobileNumber \u003d parseOptionalWith(","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"            argMultimap.getValue(PREFIX_CLIENT_MOBILE_NUMBER),","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"            ParserUtil::parsePhone);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand.UpdateClientDescriptor updateClientDescriptor \u003d new UpdateClientCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"            .UpdateClientDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"        updateClientDescriptor.setName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        updateClientDescriptor.setEmail(newEmail);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"        updateClientDescriptor.setYearOfBirth(yearOfBirth);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        updateClientDescriptor.setSource(source);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"        updateClientDescriptor.setMobileNumber(mobileNumber);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"        return new UpdateClientCommand(email, updateClientDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"immanuelhume":5,"Douglch":71}},{"path":"src/main/java/mycelium/mycelium/logic/parser/UpdateProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_ACCEPTED_DATE;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_CLIENT_EMAIL;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_NEW_PROJECT_NAME;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_DESCRIPTION;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_NAME;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_PROJECT_STATUS;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CliSyntax.PREFIX_SOURCE;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.ParserUtil.parseOptionalWith;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":" * A command to update an existing project.","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"public class UpdateProjectCommandParser implements Parser\u003cUpdateProjectCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_PROJECT_NAME,","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_NEW_PROJECT_NAME,","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_PROJECT_STATUS,","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_CLIENT_EMAIL,","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_SOURCE,","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_PROJECT_DESCRIPTION,","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_ACCEPTED_DATE,","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            PREFIX_DEADLINE_DATE","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        // Only the project\u0027s current name is required","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_PROJECT_NAME) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: the use of type inference here helps reduce visual clutter!!!","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        var newName \u003d parseOptionalWith(argMultimap.getValue(PREFIX_NEW_PROJECT_NAME), ParserUtil::parseProjectName);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        var status \u003d parseOptionalWith(argMultimap.getValue(PREFIX_PROJECT_STATUS), ParserUtil::parseProjectStatus);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        var clientEmail \u003d parseOptionalWith(argMultimap.getValue(PREFIX_CLIENT_EMAIL), ParserUtil::parseEmail);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        var source \u003d parseOptionalWith(argMultimap.getValue(PREFIX_SOURCE), ParserUtil::parseSource);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        var description \u003d argMultimap.getValue(PREFIX_PROJECT_DESCRIPTION);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        var acceptedOn \u003d parseOptionalWith(argMultimap.getValue(PREFIX_ACCEPTED_DATE),","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"            s -\u003e ParserUtil.parseLocalDate(s, Project.DATE_FMT));","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        var deadline \u003d parseOptionalWith(argMultimap.getValue(PREFIX_DEADLINE_DATE),","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            s -\u003e ParserUtil.parseLocalDate(s, Project.DATE_FMT));","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        UpdateProjectCommand.UpdateProjectDescriptor desc \u003d new UpdateProjectCommand.UpdateProjectDescriptor();","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        desc.setName(newName);","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        desc.setStatus(status);","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        desc.setClientEmail(clientEmail);","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        desc.setSource(source);","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        desc.setDescription(description);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        desc.setAcceptedOn(acceptedOn);","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        desc.setDeadline(deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString currentName \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_PROJECT_NAME).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        return new UpdateProjectCommand(currentName, desc);","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"immanuelhume":67}},{"path":"src/main/java/mycelium/mycelium/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"immanuelhume":2,"-":15}},{"path":"src/main/java/mycelium/mycelium/logic/uiaction/DoNothingAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uiaction;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a UI action that does nothing.","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public class DoNothingAction extends UiAction {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a new DoNothingAction.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public DoNothingAction() {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        // Do nothing","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        // Do nothing","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Doing nothing\");","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        return obj instanceof DoNothingAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        return DoNothingAction.class.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":31}},{"path":"src/main/java/mycelium/mycelium/logic/uiaction/ExitAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uiaction;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * An action to exit the application.","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public class ExitAction extends UiAction {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Exiting\");","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.handleExit();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        return obj instanceof ExitAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        return ExitAction.class.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":24}},{"path":"src/main/java/mycelium/mycelium/logic/uiaction/ShowHelpAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uiaction;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * An action that shows the help window.","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public class ShowHelpAction extends UiAction {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Showing help\");","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.handleHelp();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        return obj instanceof ShowHelpAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        return ShowHelpAction.class.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":24}},{"path":"src/main/java/mycelium/mycelium/logic/uiaction/TabSwitchAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uiaction;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a UI action that switches the tab.","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class TabSwitchAction extends UiAction {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    private TabSwitch tabSwitch;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a new TabSwitchAction.","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"     * @param tabSwitch The tab to switch to.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    public TabSwitchAction(TabSwitch tabSwitch) {","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        this.tabSwitch \u003d tabSwitch;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(MainWindow mainWindow) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Switching to tab \" + tabSwitch.name());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"        switch (tabSwitch) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        case PROJECT:","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.selectProjectTab();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        case CLIENT:","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.selectClientTab();","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        default:","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            // Do Nothing","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        if (!(other instanceof TabSwitchAction)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        TabSwitchAction otherTabSwitchAction \u003d (TabSwitchAction) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        return otherTabSwitchAction.tabSwitch.equals(this.tabSwitch);","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        return Objects.hash(tabSwitch);","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"     * Represents the tab to switch to.","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    public enum TabSwitch {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        PROJECT, CLIENT","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":64}},{"path":"src/main/java/mycelium/mycelium/logic/uiaction/UiAction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uiaction;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a UI action.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"public abstract class UiAction {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    protected Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"     * Executes the action.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     * @param mainWindow The main window of the application.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract void execute(MainWindow mainWindow);","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":20}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/UiEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" * UiEvent is the interface for all the key events.","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"public interface UiEvent {","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    EventHandler\u003cKeyEvent\u003e getEventHandler();","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":11}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/UiEventManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCodeCombination;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.ClearKey;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.EndOfLineKey;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.FindKey;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.HelpKey;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.NextItemKey;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.PrevItemKey;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.QuitKey;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.StartOfLineKey;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.SwitchPanelKey;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.key.SwitchTabKey;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":" * UiEventManager is the manager for all the key events.","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"public class UiEventManager implements UiEvent {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    public static final EventType\u003cKeyEvent\u003e TYPE \u003d KeyEvent.KEY_PRESSED;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    private static final KeyCombination[] IGNORED_KEYS \u003d {","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        new KeyCodeCombination(","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCode.TAB,","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCombination.CONTROL_ANY,","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCombination.SHIFT_ANY,","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCombination.ALT_ANY,","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCombination.META_ANY,","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            KeyCombination.SHORTCUT_ANY)","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    };","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     * Constructor for UiEventManager.","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"     * @param mainWindow the main window","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    public UiEventManager(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"     * Check if the key event should be ignored.","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"     * This performs and early exit of the event handler,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"     * to guard against problematic key combinations.","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"     * @param event the key event","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"     * @return whether the key event should be ignored","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    public boolean isIgnored(KeyEvent event) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        for (KeyCombination ignoredKey : IGNORED_KEYS) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"            if (ignoredKey.match(event)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"                return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"     * Catch and execute the key event if it matches any of the key combinations.","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"     * @param event the key event","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"    public void catchAndExecute(KeyEvent event) {","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        if (isIgnored(event)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (HelpKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            new HelpKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (FindKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"            new FindKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (SwitchPanelKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"            new SwitchPanelKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (SwitchTabKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"            new SwitchTabKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (NextItemKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"            new NextItemKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (PrevItemKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"            new PrevItemKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (ClearKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"            new ClearKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (StartOfLineKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"            new StartOfLineKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (EndOfLineKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"            new EndOfLineKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"        } else if (QuitKey.KEY_COMBINATION.match(event)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"            new QuitKey().execute(logic, mainWindow);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.focusCommandBox();","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"        event.consume();","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"     * Get the event handler for key events.","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the event handler for key events","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"    public EventHandler\u003cKeyEvent\u003e getEventHandler() {","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"        return new EventHandler\u003cKeyEvent\u003e() {","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"            @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"            public void handle(KeyEvent event) {","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"                catchAndExecute(event);","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":115}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/ClearKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * ClearKey is a key combination that clears the command box and the command log.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class ClearKey extends Key {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+D\");","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxInput(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setFeedbackToUser(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":18}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/EndOfLineKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * EndOfLineKey is a key combination that moves the cursor to the end of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class EndOfLineKey extends Key {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+E\");","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.moveCommandBoxToEndOfLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/FindKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.CommandMode;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.SearchMode;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":" * FindKey is the key combination to turn the command box into listening mode to enable interactive task finding.","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"public class FindKey extends Key {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+F\");","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"        switch (mainWindow.getCommandBoxModeType()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        case COMMAND_MODE:","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.setCommandBoxMode(new SearchMode(mainWindow, logic));","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"        case SEARCH_MODE:","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.setCommandBoxMode(new CommandMode(mainWindow));","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":28}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/HelpKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * HelpKey is the key combination to open the help window.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class HelpKey extends Key {","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"F1\");","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.handleHelp();","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/Key.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a key combination that can be executed.","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public abstract class Key {","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract void execute(Logic logic, MainWindow mainWindow);","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":10}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/NextItemKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * NextItemKey is a key combination that selects the next item in the current tab.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class NextItemKey extends Key {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+J\");","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.nextItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/PrevItemKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * PrevItemKey is a key combination that selects the previous item in the current tab.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class PrevItemKey extends Key {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+K\");","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.prevItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/QuitKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * QuitKey is the key that quits the application.","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class QuitKey extends Key {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+Q\");","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.handleExit();","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/StartOfLineKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * StartOfLineKey is a key combination that moves the cursor to the start of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class StartOfLineKey extends Key {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+W\");","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.moveCommandBoxToStartOfLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/SwitchPanelKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * SwitchPanelKey is the key combination to switch between the entire panel tabs.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class SwitchPanelKey extends Key {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+S\");","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.nextTabPanel();","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/logic/uievent/key/SwitchTabKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.uievent.key;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" * SwitchTabKey is the key combination to switch between the tabs within a panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"public class SwitchTabKey extends Key {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    public static final KeyCombination KEY_COMBINATION \u003d KeyCombination.valueOf(\"Ctrl+L\");","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public void execute(Logic logic, MainWindow mainWindow) {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.nextTab();","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"StanleyNeoh":17}},{"path":"src/main/java/mycelium/mycelium/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.UniqueList;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    private final UniqueList\u003cProject\u003e projects;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    private final UniqueList\u003cClient\u003e clients;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"     * between constructors. See","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"     * ways to avoid duplication","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        projects \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        clients \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public AddressBook() {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    public void setClients(List\u003cClient\u003e clients) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        this.clients.setItems(clients);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"     * Replaces the contents of the project list with {@code projects}.","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"        this.projects.setItems(projects);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"        setClients(newData.getClientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"        setProjects(newData.getProjectList());","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        return clients.asUnmodifiableObservableList().size() + \" clients and \"","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"                + projects.asUnmodifiableObservableList().size() + \" projects\";","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"     * Returns true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     * @param client must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"     * @return true if a client with the same identity as {@code client} exists in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"        return clients.contains(client);","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"     * Adds a client to the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * @param client must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"        clients.add(client);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"     * Replaces the given client {@code client} in the list with {@code editedClient}.","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"     * @param client must exist in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"     * @param editedClient must not be the same as another existing client in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"    public void setClient(Client client, Client editedClient) {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"        clients.setItem(client, editedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"     * Removes {@code client} from this {@code AddressBook}.","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"     * @param client must exist in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"    public void removeClient(Client client) {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"        clients.remove(client);","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"     * Returns an unmodifiable view of the clients list.","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"     * @return an unmodifiable view of the clients list.","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"    public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"        return clients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"     * @param project must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"     * @return true if a project with the same identity as {@code project} exists in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"        return projects.contains(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"     * Removes the project if the project has the same name as the {@code project} in the address book.","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"     * @param project must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"    public void removeProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"        projects.remove(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"     * Adds a project to Mycelium if it does not contain an existing project with the same name.","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"     * @param project must not be null.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"        projects.add(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"     * Replaces the given project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: no need for null checks at this stage, let the UniqueList handle it","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"        projects.setItem(target, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"    public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"        return projects.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"        AddressBook that \u003d (AddressBook) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(projects, that.projects) \u0026\u0026 Objects.equals(clients, that.clients);","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(projects, clients);","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":40,"-":49,"Douglch":91}},{"path":"src/main/java/mycelium/mycelium/model/ClientModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":" * The API for operations related to clients.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"public interface ClientModel {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    Predicate\u003cClient\u003e PREDICATE_SHOW_ALL_CLIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     * Finds a single client that matches the specified predicate. Expects to","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * find either zero or one clients. If more than one client matches the","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     * provided predicate, throws {@code DuplicateClientException}.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    Optional\u003cClient\u003e getUniqueClient(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * Determines whether a given client is present in the list of clients.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * @param client The client to check for existence.","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * @return true if the client is present in the list, false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    boolean hasClient(Client client);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * Deletes the specified client from the list of clients.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @param target The client to delete.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    void deleteClient(Client target);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     * Adds a new client to the list of clients.","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * @param client The client to add.","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    void addClient(Client client);","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * Returns an observable list of clients that meet the specified filter predicate.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     * @return An observable list of clients that meet the specified filter predicate.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    ObservableList\u003cClient\u003e getFilteredClientList();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Updates the filter predicate used to generate the observable list of clients.","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * @param predicate The new filter predicate.","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    void updateFilteredClientList(Predicate\u003cClient\u003e predicate);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     * Replaces the given client {@code target} with {@code editedClient}.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"     * @param target client to be replaced","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * @param editedClient client to replace with","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"    void setClient(Client target, Client editedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"immanuelhume":19,"Douglch":47}},{"path":"src/main/java/mycelium/mycelium/model/FuzzyManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.Fuzzy;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.FuzzyComparable;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":" * This class is responsible for handling fuzzy matching of clients and projects.","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"public class FuzzyManager {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * Given an {@code ObservableList} of {@code FuzzyComparable} items and a query, returns a new list of items","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     * ranked by their fuzzy match score with the query.","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public static \u003cT extends FuzzyComparable\u003cString\u003e\u003e ObservableList\u003cT\u003e rankItems(ObservableList\u003cT\u003e items,","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"                                                                                  String query) {","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        query \u003d query.strip().toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        if (query.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"            return items;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        HashMap\u003cT, Double\u003e simpleScores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        for (T item : items) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            simpleScores.put(item, Fuzzy.delta(query, item.getFuzzyField().toLowerCase()));","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cBoolean, List\u003cT\u003e\u003e partitioned \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            items.stream().collect(Collectors.partitioningBy(item -\u003e simpleScores.get(item) \u003e 0.0));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        List\u003cT\u003e results \u003d partitioned.get(true);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        List\u003cT\u003e remaining \u003d partitioned.get(false);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        HashMap\u003cT, Double\u003e distances \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        for (T item : remaining) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            distances.put(item, Fuzzy.levenshtein(query, item.getFuzzyField().toLowerCase()));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        results.sort((item1, item2) -\u003e Double.compare(simpleScores.get(item2), simpleScores.get(item1)));","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        remaining.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"            .filter(item -\u003e distances.get(item) \u003e 0.0)","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            .sorted((item1, item2) -\u003e Double.compare(distances.get(item2), distances.get(item1)))","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"            .forEach(results::add);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        return FXCollections.observableArrayList(results);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":2,"immanuelhume":51}},{"path":"src/main/java/mycelium/mycelium/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"public interface Model extends ClientModel, ProjectModel {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"immanuelhume":13,"-":38}},{"path":"src/main/java/mycelium/mycelium/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isBeforeToday;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isWithinThisAndNextWeek;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    private final FilteredList\u003cClient\u003e filteredClients;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    private final FilteredList\u003cProject\u003e filteredProjects;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        filteredClients \u003d new FilteredList\u003c\u003e(this.addressBook.getClientList());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        filteredProjects \u003d new FilteredList\u003c\u003e(this.addressBook.getProjectList());","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        return addressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Client \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cClient\u003e getUniqueClient(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        List\u003cClient\u003e clients \u003d addressBook.getClientList().stream().filter(predicate).collect(Collectors.toList());","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"        if (clients.size() \u003e 1) {","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        return clients.size() \u003d\u003d 0 ? Optional.empty() : Optional.of(clients.get(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"    public boolean hasClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"        requireNonNull(client);","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"        return addressBook.hasClient(client);","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"    public void deleteClient(Client client) {","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"            addressBook.removeClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"        } catch (ItemNotFoundException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"            logger.warning(String.format(","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"                \"Requested deletion for client with name %s not found in address book, ignoring...\",","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"                client.getName()));","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"    public void addClient(Client client) {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"            throw new DuplicateClientException();","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"        updateFilteredClientList(x -\u003e true);","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"    public void setClient(Client target, Client editedClient) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"        requireAllNonNull(target, editedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"        addressBook.setClient(target, editedClient);","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Client List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"    public ObservableList\u003cClient\u003e getFilteredClientList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"        return filteredClients;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"    public void updateFilteredClientList(Predicate\u003cClient\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"        filteredClients.setPredicate(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cProject\u003e getUniqueProject(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"        List\u003cProject\u003e projects \u003d addressBook.getProjectList().stream().filter(predicate).collect(Collectors.toList());","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"        if (projects.size() \u003e 1) {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"        return projects.size() \u003d\u003d 0 ? Optional.empty() : Optional.of(projects.get(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"        return addressBook.hasProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"    public void deleteProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"            addressBook.removeProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"        } catch (ItemNotFoundException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"            logger.warning(String.format(","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"                \"Requested deletion for project with name %s not found in address book, ignoring...\",","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"                project.getName()));","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"            addressBook.addProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"        } catch (DuplicateItemException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"        updateFilteredProjectList(x -\u003e true);","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"immanuelhume"},"content":"        addressBook.setProject(target, editedProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"Douglch"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Project List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"        return filteredProjects;","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"RubyNguyen07"},"content":"    public ObservableList\u003cProject\u003e getDueProjectList() {","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"RubyNguyen07"},"content":"        ObservableList\u003cProject\u003e sortedProjectList;","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"RubyNguyen07"},"content":"        sortedProjectList \u003d filteredProjects.filtered(p -\u003e p.getDeadline().isPresent()","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"RubyNguyen07"},"content":"            \u0026\u0026 p.getStatus() !\u003d ProjectStatus.DONE \u0026\u0026 isWithinThisAndNextWeek(p.getDeadline().get())","lastModifiedDate":"2023-03-24"},{"lineNumber":216,"author":{"gitId":"RubyNguyen07"},"content":"            \u0026\u0026 !isBeforeToday(p.getDeadline().get())).sorted((p1, p2) -\u003e p1.compareToWithDeadline(p2));","lastModifiedDate":"2023-03-24"},{"lineNumber":217,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"RubyNguyen07"},"content":"        return sortedProjectList;","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":222,"author":{"gitId":"RubyNguyen07"},"content":"    public ObservableList\u003cProject\u003e getOverdueProjectList() {","lastModifiedDate":"2023-03-24"},{"lineNumber":223,"author":{"gitId":"RubyNguyen07"},"content":"        ObservableList\u003cProject\u003e overdueProjectList;","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"RubyNguyen07"},"content":"        overdueProjectList \u003d filteredProjects.filtered(p -\u003e p.getDeadline().isPresent()","lastModifiedDate":"2023-03-24"},{"lineNumber":225,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 p.getStatus() !\u003d ProjectStatus.DONE \u0026\u0026 isBeforeToday(p.getDeadline().get()))","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"RubyNguyen07"},"content":"            .sorted((p1, p2) -\u003e p1.compareToWithDeadline(p2));","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"RubyNguyen07"},"content":"        return overdueProjectList;","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"RubyNguyen07"},"content":"    public HashMap\u003cString, Long\u003e getProjectStatistics() {","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"RubyNguyen07"},"content":"        HashMap\u003cString, Long\u003e projectStatusWithCount \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"RubyNguyen07"},"content":"        long notStarted \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"RubyNguyen07"},"content":"        long done \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"RubyNguyen07"},"content":"        long inProgress \u003d 0;","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"RubyNguyen07"},"content":"        notStarted \u003d this.filteredProjects.stream().filter(project -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"RubyNguyen07"},"content":"            project.getStatus() \u003d\u003d ProjectStatus.NOT_STARTED).count();","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"RubyNguyen07"},"content":"        projectStatusWithCount.put(\"Not Started\", notStarted);","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"RubyNguyen07"},"content":"        done \u003d this.filteredProjects.stream().filter(project -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"RubyNguyen07"},"content":"            project.getStatus() \u003d\u003d ProjectStatus.DONE).count();","lastModifiedDate":"2023-03-24"},{"lineNumber":245,"author":{"gitId":"RubyNguyen07"},"content":"        projectStatusWithCount.put(\"Done\", done);","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"RubyNguyen07"},"content":"        inProgress \u003d this.filteredProjects.stream().filter(project -\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"RubyNguyen07"},"content":"            project.getStatus() \u003d\u003d ProjectStatus.IN_PROGRESS).count();","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"RubyNguyen07"},"content":"        projectStatusWithCount.put(\"In Progress\", inProgress);","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"RubyNguyen07"},"content":"        assert projectStatusWithCount.containsKey(\"Not Started\");","lastModifiedDate":"2023-04-04"},{"lineNumber":252,"author":{"gitId":"RubyNguyen07"},"content":"        assert projectStatusWithCount.containsKey(\"Done\");","lastModifiedDate":"2023-04-04"},{"lineNumber":253,"author":{"gitId":"RubyNguyen07"},"content":"        assert projectStatusWithCount.containsKey(\"In Progress\");","lastModifiedDate":"2023-04-04"},{"lineNumber":254,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":255,"author":{"gitId":"RubyNguyen07"},"content":"        return projectStatusWithCount;","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"immanuelhume"},"content":"    public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"immanuelhume"},"content":"        filteredProjects.setPredicate(predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"Douglch"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-09"},{"lineNumber":267,"author":{"gitId":"Douglch"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":268,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":269,"author":{"gitId":"Douglch"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"Douglch"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":271,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":272,"author":{"gitId":"immanuelhume"},"content":"        ModelManager that \u003d (ModelManager) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":273,"author":{"gitId":"Douglch"},"content":"        return Objects.equals(addressBook, that.addressBook)","lastModifiedDate":"2023-03-09"},{"lineNumber":274,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 Objects.equals(userPrefs, that.userPrefs)","lastModifiedDate":"2023-03-09"},{"lineNumber":275,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 Objects.equals(filteredClients, that.filteredClients)","lastModifiedDate":"2023-03-09"},{"lineNumber":276,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 Objects.equals(filteredProjects, that.filteredProjects);","lastModifiedDate":"2023-03-09"},{"lineNumber":277,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(addressBook, userPrefs, filteredClients, filteredProjects);","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":1,"immanuelhume":88,"-":80,"RubyNguyen07":51,"Douglch":65}},{"path":"src/main/java/mycelium/mycelium/model/ProjectModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":" * The API for operations related to projects.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"public interface ProjectModel {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"     * Finds a single project that matches the specified predicate. Expects to","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"     * find either zero or one projects. If more than one project matches the","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     * provided predicate, throws {@code DuplicateProjectException}.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    Optional\u003cProject\u003e getUniqueProject(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"     * Checks if a project with the same name exists in Mycelium.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    boolean hasProject(Project project); // TODO check if this should have a project\u0027s name overload","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     * Deletes the project from Mycelium. If it does not exist, then this is a no-op.","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     * @param project The project to delete","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    void deleteProject(Project project);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"     * Adds a project to Mycelium. If a project with the same name already exists, then a {@code","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"     * DuplicateProjectException} is thrown.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     * @param project The new project","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    void addProject(Project project);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"     * Replaces the project with the same name as {@code project} with {@code newProject}.","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    void setProject(Project project, Project newProject);","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"     * Retrieves a list of all the projects in Mycelium.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     * @return The list of existing projects","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves a list of all due projects within this or next week in Mycelium.","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The list of all due projects within this or next week","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    ObservableList\u003cProject\u003e getDueProjectList();","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves a list of all overdue projects in Mycelium.","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The list of all overdue projects","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"    ObservableList\u003cProject\u003e getOverdueProjectList();","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves a hash map of status name and corresponding count of projects with that status.","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"     * @return The hashmap of status name with corresponding project counts","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"    HashMap\u003cString, Long\u003e getProjectStatistics();","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"     * Mutates the list of projects by filtering with some predicate.","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"     * @param predicate The predicate to filter by","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    void updateFilteredProjectList(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"immanuelhume":58,"RubyNguyen07":22}},{"path":"src/main/java/mycelium/mycelium/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"    ObservableList\u003cClient\u003e getClientList();","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"    ObservableList\u003cProject\u003e getProjectList();","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":4,"-":8,"Douglch":2}},{"path":"src/main/java/mycelium/mycelium/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"immanuelhume":2,"-":14}},{"path":"src/main/java/mycelium/mycelium/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"mycelium.json\");","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        String sb \u003d \"Gui Settings : \" + guiSettings","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"            + \"\\nLocal data file location : \" + addressBookFilePath;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        return sb;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":4,"-":79,"Douglch":5}},{"path":"src/main/java/mycelium/mycelium/model/client/Client.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.FuzzyComparable;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.util.IsSame;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * Represents a client with their personal information, including their name, email address,","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * year of birth, source of information, and mobile phone number.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * A client can be created with just a name and email or with all available information.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" * The name and email are required fields and cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"public class Client implements IsSame\u003cClient\u003e, FuzzyComparable\u003cString\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    private final Name name;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    private final Email email;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    private final Optional\u003cYearOfBirth\u003e yearOfBirth;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    private final Optional\u003cNonEmptyString\u003e source;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    private final Optional\u003cPhone\u003e mobileNumber;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Creates a new Client object with the given name and email address.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param name  the name of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param email the email address of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    public Client(Name name, Email email) {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        this.yearOfBirth \u003d Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        this.source \u003d Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        this.mobileNumber \u003d Optional.empty();","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * Creates a new Client object with the given personal information.","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @param name        the name of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     * @param email       the email address of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @param yearOfBirth the year of birth of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     * @param source      the source of information about the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    public Client(Name name, Email email, Optional\u003cYearOfBirth\u003e yearOfBirth,","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"                  Optional\u003cNonEmptyString\u003e source, Optional\u003cPhone\u003e mobileNumber) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        this.yearOfBirth \u003d yearOfBirth;","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        this.mobileNumber \u003d mobileNumber;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"     * Returns the name of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"     * @return the name of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"        return name;","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"     * Returns the email address of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"     * @return the email address of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"        return email;","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"     * Returns the year of birth of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"     * @return the year of birth of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    public Optional\u003cYearOfBirth\u003e getYearOfBirth() {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        return yearOfBirth;","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     * Returns the source where the developer found out about the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"     * @return the source where the developer found out about the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cNonEmptyString\u003e getSource() {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"        return source;","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * Returns the mobile number of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     * @return the mobile number of the client.","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    public Optional\u003cPhone\u003e getMobileNumber() {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        return mobileNumber;","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"     * Compares this client to another client to check if they are the same client.","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"     * Two clients are considered the same if they have the same email.","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"     * @param otherClient The client to compare with this client.","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"     * @return true if the two clients are the same client, false otherwise.","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"    public boolean isSame(Client otherClient) {","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"        if (otherClient \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"        return otherClient !\u003d null","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 this.getEmail().equals(otherClient.getEmail());","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"        if (!(other instanceof Client)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"        Client otherClient \u003d (Client) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"        return otherClient.getName().equals(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 otherClient.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 otherClient.getYearOfBirth().equals(getYearOfBirth())","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 otherClient.getSource().equals(getSource())","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 otherClient.getMobileNumber().equals(getMobileNumber());","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"        return Objects.hash(name, email, yearOfBirth, source, mobileNumber);","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"        return String.format(\"%s (%s)\", name, email);","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"    public String getFuzzyField() {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"        return name.fullName;","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":16,"Douglch":134}},{"path":"src/main/java/mycelium/mycelium/model/client/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 this.value.equals(((Email) other).value)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":2,"-":68,"Douglch":1}},{"path":"src/main/java/mycelium/mycelium/model/client/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Name cannot be empty or consist only of whitespace\";","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        return NonEmptyString.isValid(name.trim());","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":2,"-":51,"Douglch":4}},{"path":"src/main/java/mycelium/mycelium/model/client/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"immanuelhume":2,"-":51}},{"path":"src/main/java/mycelium/mycelium/model/client/YearOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" * The YearOfBirth class represents a year of birth in the application.","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":" * It provides methods for validating a year of birth, and storing and retrieving a year of birth value.","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"public class YearOfBirth {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        \"Year of birth should only contain numbers, and it should be 4 digits long\";","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{4}\";","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    public final String value;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     * Constructs a YearOfBirth object with the given year of birth value.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Throws a NullPointerException if the input value is null.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Throws an IllegalArgumentException if the input value is not a valid year of birth.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param yearOfBirth The year of birth to be stored in the object.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public YearOfBirth(String yearOfBirth) {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        checkArgument(isValidYearOfBirth(yearOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        value \u003d yearOfBirth;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Determines whether the given string is a valid year of birth.","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param test The string to test.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @return true if the string is a valid year of birth, false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    public static boolean isValidYearOfBirth(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     * Returns a string representation of the year of birth value.","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * @return The year of birth value as a string.","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        return value;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     * Determines whether the given object is equal to this YearOfBirth object.","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     * @param other The object to compare to this YearOfBirth object.","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     * @return true if the objects are equal, false otherwise.","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"            || (other instanceof YearOfBirth // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"            \u0026\u0026 value.equals(((YearOfBirth) other).value)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"     * Returns the hash code value for this YearOfBirth object.","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * @return The hash code value for this YearOfBirth object.","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"immanuelhume":5,"Douglch":64}},{"path":"src/main/java/mycelium/mycelium/model/client/exceptions/ClientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Signals that the operation is unable to find the specified client.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class ClientNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Douglch":7}},{"path":"src/main/java/mycelium/mycelium/model/client/exceptions/DuplicateClientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Signals that the operation will result in duplicate Client (Clients are considered duplicates if they have the same","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" * email).","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class DuplicateClientException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public DuplicateClientException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(\"Operation would result in duplicate clients\");","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Douglch":11}},{"path":"src/main/java/mycelium/mycelium/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.project;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.FuzzyComparable;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.IsSame;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":" * Represents a project.","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"public class Project implements IsSame\u003cProject\u003e, FuzzyComparable\u003cString\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"     * Parses dates in the dd/MM/uuuu format. Range of allowed years is [-9999, 9999].","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    public static final DateTimeFormatter DATE_FMT \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        DateTimeFormatter.ofPattern(\"dd/MM/uuuu\").withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     * The project\u0027s name","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    private final NonEmptyString name;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"     * The project\u0027s status","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    private final ProjectStatus status;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     * The email of the client who submitted this project. We only keep the client\u0027s email here for more convenient","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"     * (de)serializing.","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    private final Email clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"     * The project\u0027s source, e.g. Fiverr","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    private final Optional\u003cNonEmptyString\u003e source;","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"     * Arbitrary description for the project","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    private final Optional\u003cString\u003e description; // Can be empty","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"     * The date on which this project was accepted","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    private final LocalDate acceptedOn;","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"     * A potential deadline for this project","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    private final Optional\u003cLocalDate\u003e deadline;","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new project from the minimal set of required fields. The remaining fields are filled with default","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"     * values.","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    public Project(NonEmptyString name, Email clientEmail) {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        this.status \u003d ProjectStatus.NOT_STARTED;","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        this.source \u003d Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        this.description \u003d Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d LocalDate.now(); // use current date","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d Optional.empty();","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code Project} with every field present and not null.","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    public Project(NonEmptyString name,","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"                   ProjectStatus status,","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"                   Email clientEmail,","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"                   Optional\u003cNonEmptyString\u003e source,","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"                   Optional\u003cString\u003e description,","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"                   LocalDate acceptedOn,","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"                   Optional\u003cLocalDate\u003e deadline) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(name, status, clientEmail, source, description, acceptedOn, deadline);","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d acceptedOn;","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"    public NonEmptyString getName() {","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        return name;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"    public ProjectStatus getStatus() {","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        return status;","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"    public Email getClientEmail() {","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        return clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cNonEmptyString\u003e getSource() {","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        return source;","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        return description;","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"    public LocalDate getAcceptedOn() {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"        return acceptedOn;","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"    public Optional\u003cLocalDate\u003e getDeadline() {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        return deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"     * Checks if two projects refer to the same project. For now, two projects are considered the same if they have","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"     * the same name.","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"     * @param other The other project","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"     * @return True if the two projects refer to the same physical project","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"    public boolean isSame(Project other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"        return other !\u003d null \u0026\u0026 this.name.equals(other.name);","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"     * Compares this project with other project based on deadline. Both projects must have deadline field","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"     * to be compared. For now, two projects are considered equal if {@code equals} return true.","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"RubyNguyen07"},"content":"     * Else, whichever project has earlier deadline, the function will return -1. In case when the","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"RubyNguyen07"},"content":"     * deadline is the same, ties will be broken using name.","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"RubyNguyen07"},"content":"     * @param other The other project","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"     * @return 0 if two projects are equal with regards to {@code equals}, 1 if this project has deadline after the","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"     *     given project or with same deadline but the name is topologically smaller, and -1 for the rest","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"RubyNguyen07"},"content":"    public int compareToWithDeadline(Project other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"RubyNguyen07"},"content":"        assert this.getDeadline().isPresent();","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"RubyNguyen07"},"content":"        assert other.getDeadline().isPresent();","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate thisDeadline \u003d this.getDeadline().get();","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate otherDeadline \u003d other.getDeadline().get();","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"RubyNguyen07"},"content":"        if (this.equals(other)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"RubyNguyen07"},"content":"            return 0;","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"RubyNguyen07"},"content":"        } else if (thisDeadline.isBefore(otherDeadline)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"RubyNguyen07"},"content":"            return -1;","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"RubyNguyen07"},"content":"        } else if (thisDeadline.isEqual(otherDeadline)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"RubyNguyen07"},"content":"            return this.getName().getValue().compareTo(other.getName().getValue());","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"RubyNguyen07"},"content":"        } else {","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"RubyNguyen07"},"content":"            return 1;","lastModifiedDate":"2023-03-24"},{"lineNumber":163,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":165,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d (Project) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(name, project.name)","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 status \u003d\u003d project.status","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(clientEmail,","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"            project.clientEmail)","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(source, project.source)","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(description, project.description)","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(acceptedOn, project.acceptedOn)","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(deadline, project.deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(name, status, clientEmail, source, description, acceptedOn, deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"        return String.format(\"%s from client %s\", name, clientEmail);","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"    public String getFuzzyField() {","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"        return name.getValue();","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":173,"RubyNguyen07":28}},{"path":"src/main/java/mycelium/mycelium/model/project/ProjectStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.project;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * Represents a project\u0027s status.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public enum ProjectStatus {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    NOT_STARTED,","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"    IN_PROGRESS,","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"    DONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Project status should be one of the following: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"            + \"not_started, in_progress, done.\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"     * Parses a project\u0027s status from its string representation. Throws an","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     * {@code IllegalArgumentException} if the input string is not valid. To","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * avoid having to catch this error, consider calling {@code","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     * isValidProjectStatus} first.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public static ProjectStatus fromString(String s) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        switch (s.toLowerCase()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        case \"not_started\":","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"            return NOT_STARTED;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        case \"in_progress\":","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"            return IN_PROGRESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        case \"done\":","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            return DONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        default:","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            throw new IllegalArgumentException(\"Invalid project status: \" + s);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        return this \u003d\u003d NOT_STARTED ? \"not_started\" : this \u003d\u003d IN_PROGRESS ? \"in_progress\" : \"done\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"     * Checks if a string represents a valid project status.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    public static boolean isValidProjectStatus(String test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        test \u003d test.toLowerCase();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        return test.equals(\"not_started\") || test.equals(\"in_progress\") || test.equals(\"done\");","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":46}},{"path":"src/main/java/mycelium/mycelium/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.project.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * Signals that the operation would result in duplicate projects.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public class DuplicateProjectException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    public DuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"        super(\"Operation would result in duplicate projects\");","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":10}},{"path":"src/main/java/mycelium/mycelium/model/util/Fuzzy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * A utility class for fuzzy string matching.","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public class Fuzzy {","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"     * Returns a value between 0 and 1, where 0 means the two strings are \"completely different\", and 1 means they are","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"     * completely the same. Every character in the query must be present in the target, and the characters must be in","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"     * the same order.","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"    public static double delta(String query, String target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"        // An empty query would match everything, so we disallow it and return 0. Since we expect every character of","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"        // the query to be present in the target, we also disallow the case where the query is longer than the target.","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"        if (target.length() \u003c query.length() || query.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"            return 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"        double score \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"        int targetIdx \u003d 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        // Skip over characters in the target until we find the first character of the query.","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        targetIdx +\u003d target.chars().takeWhile(x -\u003e x !\u003d query.charAt(0)).count(); // fancy stream","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        if (targetIdx \u003d\u003d target.length()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"            return 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        score +\u003d targetIdx;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        targetIdx++;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"        for (int i \u003d 1; i \u003c query.length(); i++) {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            int prevTargetIdx \u003d targetIdx;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            while (targetIdx \u003c target.length() \u0026\u0026 target.charAt(targetIdx) !\u003d query.charAt(i)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"                targetIdx++;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            if (targetIdx \u003d\u003d target.length()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"                return 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            score +\u003d 3 * (targetIdx - prevTargetIdx); // note the multiplier","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"            targetIdx++;","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        score +\u003d target.length() - targetIdx;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        return 1 / (score + 1); // prevent division by 0","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     * Computes a \"delta-score\" between two strings. The lower the score, the more similar the strings are. A score","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"     * of zero means the strings are completely identical. This is just levenshtein distance.","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    private static int distance(String a, String b) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        // The intuitive way to do this is through a m-by-n matrix. Here we are only","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        // using one array and a temp variable.","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        int m \u003d a.length();","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        int n \u003d b.length();","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        if (m \u003e n) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"            String tmp \u003d a;","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            a \u003d b;","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            b \u003d tmp;","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            int tmp2 \u003d m;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            m \u003d n;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            n \u003d tmp2;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        // From here on, `b` is the longer string, and `a` is the shorter string. Accordingly, `n` is the size of the","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        // longer string, and `m` is the size of the shorter string.","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        if (m \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"            return n;","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        if (m \u003d\u003d 1) {","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"            char c \u003d a.charAt(0);","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"                if (b.charAt(i) \u003d\u003d c) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"                    return n - 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            return n;","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: if we know the max size of the strings beforehand, we can pre-allocate the array, and re-use it for","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        // every call. There is no need to clear the array, since we are only ever writing to it.","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"        int[] prevRow \u003d new int[n + 1];","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        for (int j \u003d 0; j \u003c n + 1; j++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"            prevRow[j] \u003d j;","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        int grave;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        int ifDelete;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        int ifInsert;","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        int tmp;","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"        for (int i \u003d 0; i \u003c m; i++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"            grave \u003d i; // grave refers to the upper-left tile (from the matrix POV)","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"            prevRow[0] \u003d i + 1; // the first entry is always i+1","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"            // now fill in 1..n+1 entries, writing to index j+1 for each iteration","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"            for (int j \u003d 0; j \u003c n; j++) {","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"                tmp \u003d grave;","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"                if (a.charAt(i) !\u003d b.charAt(j)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"                    ifDelete \u003d prevRow[j + 1];","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"                    ifInsert \u003d prevRow[j]; // this is technically \"currentRow[j]\"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"                    tmp \u003d ifInsert \u003c grave ? ifInsert : grave;","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"                    tmp \u003d ifDelete \u003c tmp ? ifDelete : tmp;","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"                    tmp +\u003d 1;","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"                grave \u003d prevRow[j + 1];","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"                prevRow[j + 1] \u003d tmp;","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        return prevRow[n];","lastModifiedDate":"2023-03-21"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"     * Computes distance between two strings as a ratio. The higher the ratio, the more similar the strings are.","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"    public static double levenshtein(String a, String b) {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        return 1 - (double) distance(a, b) / Math.max(a.length(), b.length());","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"immanuelhume":122}},{"path":"src/main/java/mycelium/mycelium/model/util/FuzzyComparable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * An interface for objects that can be compared in a fuzzy way. Somewhat analogous to {@code Comparable}, but","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" * instead of returning an integer, it returns a double between 0 and 1.","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":" *","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":" * @param \u003cT\u003e The type of the object to compare to.","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"public interface FuzzyComparable\u003cT\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"     * Retrieves a string that will be used for fuzzy matching.","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"    String getFuzzyField();","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"immanuelhume":14}},{"path":"src/main/java/mycelium/mycelium/model/util/IsSame.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * Represents something which requires a different notion from Java\u0027s {@code equals}.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public interface IsSame\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    boolean isSame(T other);","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":8}},{"path":"src/main/java/mycelium/mycelium/model/util/NonEmptyString.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":" * Basically a wrapper around String that enforces the invariant that the string is non-empty.","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"public class NonEmptyString {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"String cannot be empty or consist only of whitespace.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    private final String value;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new NonEmptyString from the given value. If the value is null or empty, an IllegalArgumentException","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * is thrown.","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     * @param value the value to wrap","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    public NonEmptyString(String value) {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: isValid will check if it is null, thus we don\u0027t need to call requireNonNull","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        checkArgument(isValid(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     * Returns the value of this NonEmptyString.","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        return value;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"     * Convenience method to create a new NonEmptyString from the given value.","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    public static NonEmptyString of(String value) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        return new NonEmptyString(value);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"     * Convenience method to create a new NonEmptyString from the given value. If the value is null or empty, returns","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"     * an empty Optional.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    public static Optional\u003cNonEmptyString\u003e ofOptional(String value) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        return isValid(value) ? Optional.of(new NonEmptyString(value)) : Optional.empty();","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public static boolean isValid(String value) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        return value !\u003d null \u0026\u0026 !value.isEmpty();","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        return value;","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        // We allow comparison against regular strings too, for convenience.","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        if (o instanceof String) {","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            return value.equals(o);","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        if (o instanceof NonEmptyString) {","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"            return value.equals(((NonEmptyString) o).value);","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(value);","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"immanuelhume":80,"Douglch":1}},{"path":"src/main/java/mycelium/mycelium/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    public static Client[] getSampleClients() {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"        return new Client[]{","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"1998\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.fiverr.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"87438807\"))),","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"1972\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.upwork.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"99272758\"))),","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"1999\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.guru.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"91234567\"))),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"David Li\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"1998\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.fiverr.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"91031282\"))),","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"1964\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.linkedin.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"92492021\"))),","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            new Client(","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"                new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new YearOfBirth(\"2001\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"www.simplyhired.com\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(new Phone(\"92624417\")))","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    public static Project[] getSampleProjects() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        return new Project[]{","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"            new Project(","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.of(\"Bing\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"                ProjectStatus.NOT_STARTED,","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"johndoe@gmail.com\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"fiver\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(\"Create the next google AKA bing\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now(),","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.empty()","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            ),","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"            new Project(","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.of(\"Havard2.0\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"                ProjectStatus.IN_PROGRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"EluidKipchoge@gmail.com\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"Behind the alley\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(\"University on the streets\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now(),","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"                Optional.ofNullable(LocalDate.now())","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"            ),","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"            new Project(","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.of(\"Build Skynet\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"                ProjectStatus.DONE,","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"                new Email(\"VladPutin@hotmale.com\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.ofOptional(\"Russia\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.ofNullable(\"Conquer the world\"),","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now(),","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"                Optional.empty()","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"            )","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"        for (Project sampleProject : getSampleProjects()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"            sampleAb.addProject(sampleProject);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"        for (Client sampleClient : getSampleClients()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"            sampleAb.addClient(sampleClient);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"StanleyNeoh":68,"immanuelhume":21,"-":12,"Douglch":3}},{"path":"src/main/java/mycelium/mycelium/model/util/UniqueList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":" * A list with invariant that every item is unique. The items must implement {@link IsSame}, which is used to check","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":" * if uniqueness is violated, rather than {@code equals}.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class UniqueList\u003cT extends IsSame\u003cT\u003e\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"     * Checks if the current list contains some object.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"     * Adds an item to the list.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateItemException(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"     * Removes an item from the list. Note that the item to remove to checked via {@link IsSame}, not {@code equals}.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        FilteredList\u003cT\u003e filtered \u003d internalList.filtered(toRemove::isSame);","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        if (filtered.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            throw new ItemNotFoundException(toRemove);","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        assert filtered.size() \u003d\u003d 1 : \"Invariant violated: list contains duplicate items\";","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        boolean isRemoved \u003d internalList.remove(filtered.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        assert isRemoved : \"Invariant violated: list does not contain item to remove\";","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"     * Replaces an item with another at the same index. The two items do not have to be the same.","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    public void setItem(T target, T newItem) {","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(target, newItem);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        int[] idxs \u003d IntStream.range(0, internalList.size()).filter(i -\u003e internalList.get(i).isSame(target)).toArray();","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        if (idxs.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            throw new ItemNotFoundException(target);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        assert idxs.length \u003d\u003d 1 : \"Invariant violated: list contains duplicate items\";","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        if (!target.isSame(newItem) \u0026\u0026 contains(newItem)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateItemException(newItem);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        internalList.set(idxs[0], newItem);","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"     * Replaces the current list with another.","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    public void setItems(UniqueList\u003cT\u003e replacement) {","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"     * Replaces the current list with another. Items in the list must be unique.","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        if (!itemsAreUnique(items)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"    private boolean itemsAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"                    return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"     * Returns an immutable reference to the internal list.","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003c?\u003e that \u003d (UniqueList\u003c?\u003e) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(internalList, that.internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(internalList);","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":133}},{"path":"src/main/java/mycelium/mycelium/model/util/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * Signals that a duplicate item cannot be allowed.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"        super(String.format(\"Operation would result in duplicate item.\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"    public DuplicateItemException(Object dup) {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"        super(String.format(\"Operation would result in duplicate item %s.\", dup));","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":14}},{"path":"src/main/java/mycelium/mycelium/model/util/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util.exceptions;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":" * Signals that some requested item was not available.","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"public class ItemNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"    public ItemNotFoundException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"        super(String.format(\"A requested item was not found.\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"    public ItemNotFoundException(Object dup) {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"        super(String.format(\"The requested item %s was not found.\", dup));","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":15}},{"path":"src/main/java/mycelium/mycelium/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":7,"-":41}},{"path":"src/main/java/mycelium/mycelium/storage/JsonAdaptedClient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":" * Jackson-friendly version of {@link Client}. This class is used to convert a {@code Client} object into a","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":" * JSON-friendly format for serialization and deserialization using Jackson library. It contains methods for","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":" * converting a {@code Client} object to this class for serialization, and for converting this class back to a","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":" * {@code Client} object for deserialization. It also contains methods for null and validity checks of the adapted","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":" * client object\u0027s fields.","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"class JsonAdaptedClient extends JsonAdaptedEntity {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ENTITY_NAME \u003d \"Client\";","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    private final String name;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    private final String email;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    private final String yearOfBirth;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    private final String source;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    private final String mobileNumber;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    public JsonAdaptedClient(@JsonProperty(\"name\") String name, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"                             @JsonProperty(\"year_of_birth\") String yearOfBirth,","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"                             @JsonProperty(\"source\") String source,","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"                             @JsonProperty(\"mobile_number\") String mobileNumber) {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        super(ENTITY_NAME);","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        this.yearOfBirth \u003d yearOfBirth;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        this.mobileNumber \u003d mobileNumber;","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     * Converts a given {@code Client} into this class for Jackson use.","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    public JsonAdaptedClient(Client client) {","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        super(ENTITY_NAME);","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        name \u003d client.getName().fullName;","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        email \u003d client.getEmail().value;","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        yearOfBirth \u003d client.getYearOfBirth().map(x -\u003e x.value).orElse(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        source \u003d client.getSource().map(NonEmptyString::toString).orElse(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        mobileNumber \u003d client.getMobileNumber().map(x -\u003e x.value).orElse(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"     * Converts this Jackson-friendly adapted client object into the model\u0027s {@code Client} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * @return the model\u0027s {@code Client} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted client.","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"    public Client toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(name, Name.class.getSimpleName());","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        validityCheck(Name.isValidName(name), Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(email, Email.class.getSimpleName());","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        validityCheck(Email.isValidEmail(email), Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"        if (yearOfBirth !\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"            validityCheck(YearOfBirth.isValidYearOfBirth(yearOfBirth), YearOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"        if (mobileNumber !\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"            validityCheck(Phone.isValidPhone(mobileNumber), Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        return new Client(modelName,","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"            modelEmail,","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"            Optional.ofNullable(yearOfBirth).map(YearOfBirth::new),","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"            NonEmptyString.ofOptional(source),","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"            Optional.ofNullable(mobileNumber).map(Phone::new));","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedClient that \u003d (JsonAdaptedClient) o;","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(name, that.name)","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(email, that.email)","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(yearOfBirth, that.yearOfBirth)","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(source, that.source)","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"            \u0026\u0026 Objects.equals(mobileNumber, that.mobileNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(name, email, yearOfBirth, source, mobileNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":16,"immanuelhume":29,"Douglch":64}},{"path":"src/main/java/mycelium/mycelium/storage/JsonAdaptedEntity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a generic entity that can be stored in JSON.","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public abstract class JsonAdaptedEntity {","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"%s\u0027s %s field is missing!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    private String entityName;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"    public JsonAdaptedEntity(String entityName) {","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        this.entityName \u003d entityName;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     * Throws an {@code IllegalValueException} with the given message if the {@code obj} is null.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * @param obj           the object to be checked.","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     * @param attributeName The name of the attribute being checked.","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws IllegalValueException if the given boolean is true.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    protected void nullCheck(Object obj, String attributeName) throws IllegalValueException {","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, entityName, attributeName));","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"     * Throws an {@code IllegalValueException} with the given message if the boolean is false.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     * @param check   The boolean to be checked.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     * @param message The error message to be displayed if the check fails.","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"     * @throws IllegalValueException if the given boolean is true.","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    protected void validityCheck(boolean check, String message) throws IllegalValueException {","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        if (!check) {","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"            throw new IllegalValueException(message);","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"StanleyNeoh":41}},{"path":"src/main/java/mycelium/mycelium/storage/JsonAdaptedProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import com.fasterxml.jackson.annotation.JsonFormat;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":" * Jackson friendly version of {@link Project}.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"public class JsonAdaptedProject extends JsonAdaptedEntity {","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ENTITY_NAME \u003d \"Project\";","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    private final String name;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    private final ProjectStatus status;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    private final String clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    private final String source;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    private final String description;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    @JsonFormat(shape \u003d JsonFormat.Shape.STRING, pattern \u003d \"dd/MM/yyyy\")","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    private final LocalDate acceptedOn;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    @JsonFormat(shape \u003d JsonFormat.Shape.STRING, pattern \u003d \"dd/MM/yyyy\")","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    private final LocalDate deadline; // NOTE: it is okay for the deadline to be null","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"     * Constructs this class from its properties.","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public JsonAdaptedProject(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"status\") ProjectStatus status,","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"clientEmail\") String clientEmail,","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"source\") String source,","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"acceptedOn\") LocalDate acceptedOn,","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"                              @JsonProperty(\"deadline\") LocalDate deadline) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        super(ENTITY_NAME);","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d clientEmail;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d acceptedOn;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     * Constructs this class from a vanilla {@link Project}.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    public JsonAdaptedProject(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        super(ENTITY_NAME);","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        name \u003d project.getName().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        status \u003d project.getStatus();","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        clientEmail \u003d project.getClientEmail().value;","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        source \u003d project.getSource().map(NonEmptyString::toString).orElse(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        description \u003d project.getDescription().orElse(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        acceptedOn \u003d project.getAcceptedOn();","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        deadline \u003d project.getDeadline().orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"     * Constructs a {@link Project} from this class.","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"     * @return The new {@code Project}","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"     * @throws IllegalValueException if some null fields exist","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"    public Project toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(name, \"name\");","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(status, \"status\");","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(clientEmail, \"clientEmail\");","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        nullCheck(acceptedOn, \"acceptedOn\");","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: it is okay for the deadline and description to be null","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        return new Project(NonEmptyString.of(name),","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            status,","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"            new Email(clientEmail),","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"            NonEmptyString.ofOptional(source),","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"            Optional.ofNullable(description),","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            acceptedOn,","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"            Optional.ofNullable(deadline));","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedProject that \u003d (JsonAdaptedProject) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(name, that.name) \u0026\u0026 status \u003d\u003d that.status \u0026\u0026 Objects.equals(clientEmail,","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"            that.clientEmail) \u0026\u0026 Objects.equals(source, that.source) \u0026\u0026 Objects.equals(description,","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"            that.description) \u0026\u0026 Objects.equals(acceptedOn, that.acceptedOn) \u0026\u0026 Objects.equals(deadline,","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"            that.deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(name, status, clientEmail, source, description, acceptedOn, deadline);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":8,"immanuelhume":99}},{"path":"src/main/java/mycelium/mycelium/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.FileUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.JsonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"immanuelhume":7,"-":73}},{"path":"src/main/java/mycelium/mycelium/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"@JsonRootName(value \u003d \"mycelium\")","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public static final String MESSAGE_DUPLICATE_CLIENT \u003d \"Clients list contains duplicate client(s).\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"Projects list contains duplicate project(s).\";","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    private final List\u003cJsonAdaptedClient\u003e clients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    private final List\u003cJsonAdaptedProject\u003e projects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"clients\") List\u003cJsonAdaptedClient\u003e clients,","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"                                       @JsonProperty(\"projects\") List\u003cJsonAdaptedProject\u003e projects) {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        this.clients.addAll(clients);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        this.projects.addAll(projects);","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        clients.addAll(source.getClientList().stream().map(JsonAdaptedClient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        projects.addAll(source.getProjectList().stream().map(JsonAdaptedProject::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"        for (JsonAdaptedClient jsonAdaptedClient : clients) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"            Client client \u003d jsonAdaptedClient.toModelType();","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"            if (addressBook.hasClient(client)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"            addressBook.addClient(client);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        for (JsonAdaptedProject jsonAdaptedProject : projects) {","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            Project project \u003d jsonAdaptedProject.toModelType();","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            if (addressBook.hasProject(project)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            addressBook.addProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"immanuelhume":19,"-":42,"Douglch":12}},{"path":"src/main/java/mycelium/mycelium/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.JsonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":6,"-":42}},{"path":"src/main/java/mycelium/mycelium/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"immanuelhume":5,"-":27}},{"path":"src/main/java/mycelium/mycelium/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":6,"-":72}},{"path":"src/main/java/mycelium/mycelium/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":8,"-":30}},{"path":"src/main/java/mycelium/mycelium/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uievent.UiEventManager;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.CommandBox;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.CommandMode;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.Mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.Mode.ModeType;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandlog.CommandLog;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.entitypanel.EntityPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.helpwindow.HelpWindow;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.statisticsbox.StatisticsBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.statusbarfooter.StatusBarFooter;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.utils.TabsPanelList;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    private CommandLog commandLog;","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    private EntityPanel entityPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    private StatisticsBox statisticsBox;","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    private TabsPanelList tabsPanelList;","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"    private StackPane commandLogPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    private StackPane entityPanelPlaceholder;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    private StackPane statisticsBoxPlaceholder;","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"        setEventHandlers();","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"     * Return the primary stage of the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the primary stage of the application.","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"    private void setEventHandlers() {","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"        getRoot().addEventFilter(","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"            UiEventManager.TYPE,","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"            new UiEventManager(logic, this).getEventHandler());","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"    private void fillInnerParts() {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Filling inner parts of MainWindow...\");","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox \u003d new CommandBox(new CommandMode(this));","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"        commandLog \u003d new CommandLog();","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"        commandLogPlaceholder.getChildren().add(commandLog.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanel \u003d new EntityPanel(logic.getFilteredProjectList(), logic.getFilteredClientList());","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanelPlaceholder.getChildren().add(entityPanel.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"        statisticsBox \u003d new StatisticsBox(logic);","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"        statisticsBoxPlaceholder.getChildren().add(statisticsBox.getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList \u003d new TabsPanelList(entityPanel, statisticsBox);","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"StanleyNeoh"},"content":"        statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"StanleyNeoh"},"content":"    public void handleExit() {","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":164,"author":{"gitId":"StanleyNeoh"},"content":"    void show() {","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"StanleyNeoh"},"content":"        primaryStage.show();","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"StanleyNeoh"},"content":"        fillInnerParts();","lastModifiedDate":"2023-03-23"},{"lineNumber":167,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"StanleyNeoh"},"content":"            commandLog.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"StanleyNeoh"},"content":"            commandResult.executeUiAction(this);","lastModifiedDate":"2023-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"StanleyNeoh"},"content":"            logger.info(\"Command exception: \" + commandText);","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"StanleyNeoh"},"content":"            commandLog.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"StanleyNeoh"},"content":"            e.executeUiAction(this);","lastModifiedDate":"2023-03-21"},{"lineNumber":185,"author":{"gitId":"StanleyNeoh"},"content":"            throw e;","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"StanleyNeoh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"StanleyNeoh"},"content":"            commandLog.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"StanleyNeoh"},"content":"    // CommandBox methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the current mode type of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":198,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the current mode type of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":200,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#getModeType()","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"StanleyNeoh"},"content":"    public ModeType getCommandBoxModeType() {","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"StanleyNeoh"},"content":"        return commandBox.getModeType();","lastModifiedDate":"2023-03-23"},{"lineNumber":204,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the mode of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":209,"author":{"gitId":"StanleyNeoh"},"content":"     * @param mode the mode to set the command box to.","lastModifiedDate":"2023-03-23"},{"lineNumber":210,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setMode(Mode)","lastModifiedDate":"2023-03-23"},{"lineNumber":211,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"StanleyNeoh"},"content":"    public void setCommandBoxMode(Mode mode) {","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.setMode(mode);","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":216,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the input of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":218,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"StanleyNeoh"},"content":"     * @param string the input to set the command box to.","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setInput(String)","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":222,"author":{"gitId":"StanleyNeoh"},"content":"    public void setCommandBoxInput(String string) {","lastModifiedDate":"2023-03-23"},{"lineNumber":223,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.setInput(string);","lastModifiedDate":"2023-03-23"},{"lineNumber":224,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":225,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"StanleyNeoh"},"content":"     * Appends the input of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":228,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"StanleyNeoh"},"content":"     * @param string the input to append to the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"StanleyNeoh"},"content":"    public void appendCommandBoxHighlighted(String string) {","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.appendHighlighted(string);","lastModifiedDate":"2023-03-23"},{"lineNumber":233,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":234,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":235,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"StanleyNeoh"},"content":"     * Moves the cursor of the command box to the end of the line.","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":238,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#moveToEndOfLine()","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":240,"author":{"gitId":"StanleyNeoh"},"content":"    public void moveCommandBoxToEndOfLine() {","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.moveToEndOfLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":245,"author":{"gitId":"StanleyNeoh"},"content":"     * Moves the cursor of the command box to the start of the line.","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":247,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#moveToStartOfLine()","lastModifiedDate":"2023-03-23"},{"lineNumber":248,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":249,"author":{"gitId":"StanleyNeoh"},"content":"    public void moveCommandBoxToStartOfLine() {","lastModifiedDate":"2023-03-23"},{"lineNumber":250,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.moveToStartOfLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":251,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":252,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":253,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":254,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the style of the command box to error.","lastModifiedDate":"2023-03-23"},{"lineNumber":255,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":256,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setStyleError()","lastModifiedDate":"2023-03-23"},{"lineNumber":257,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":258,"author":{"gitId":"StanleyNeoh"},"content":"    public void setCommandBoxStyleError() {","lastModifiedDate":"2023-03-23"},{"lineNumber":259,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.setStyleError();","lastModifiedDate":"2023-03-23"},{"lineNumber":260,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":261,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":262,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":263,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the style of the command box to default.","lastModifiedDate":"2023-03-23"},{"lineNumber":264,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":265,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setStyleDefault()","lastModifiedDate":"2023-03-23"},{"lineNumber":266,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":267,"author":{"gitId":"StanleyNeoh"},"content":"    public void setCommandBoxStyleDefault() {","lastModifiedDate":"2023-03-23"},{"lineNumber":268,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.setStyleDefault();","lastModifiedDate":"2023-03-23"},{"lineNumber":269,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":270,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":271,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":272,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the style of the command box to listening.","lastModifiedDate":"2023-03-23"},{"lineNumber":273,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":274,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setStyleListening()","lastModifiedDate":"2023-03-23"},{"lineNumber":275,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":276,"author":{"gitId":"StanleyNeoh"},"content":"    public void setCommandBoxStyleListening() {","lastModifiedDate":"2023-03-23"},{"lineNumber":277,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.setStyleListening();","lastModifiedDate":"2023-03-23"},{"lineNumber":278,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":279,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":280,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":281,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the style of the command box to listening.","lastModifiedDate":"2023-03-23"},{"lineNumber":282,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":283,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandBox#setStyleListening()","lastModifiedDate":"2023-03-23"},{"lineNumber":284,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":285,"author":{"gitId":"StanleyNeoh"},"content":"    public void focusCommandBox() {","lastModifiedDate":"2023-03-23"},{"lineNumber":286,"author":{"gitId":"StanleyNeoh"},"content":"        commandBox.requestFocus();","lastModifiedDate":"2023-03-23"},{"lineNumber":287,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":288,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":289,"author":{"gitId":"StanleyNeoh"},"content":"    // CommandLog methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-23"},{"lineNumber":290,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":291,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the feedback to the user.","lastModifiedDate":"2023-03-23"},{"lineNumber":292,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":293,"author":{"gitId":"StanleyNeoh"},"content":"     * @param feedback the feedback to set.","lastModifiedDate":"2023-03-23"},{"lineNumber":294,"author":{"gitId":"StanleyNeoh"},"content":"     * @see CommandLog#setFeedbackToUser(String)","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"StanleyNeoh"},"content":"    public void setFeedbackToUser(String feedback) {","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"StanleyNeoh"},"content":"        commandLog.setFeedbackToUser(feedback);","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"StanleyNeoh"},"content":"    // TabsPanelList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches between the statistic panel and the entity panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTabPanel() {","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList.nextTabPanel();","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the entity panel to the next tab.","lastModifiedDate":"2023-03-23"},{"lineNumber":310,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#nextTab()","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTab() {","lastModifiedDate":"2023-03-23"},{"lineNumber":314,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList.nextTab();","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the next item in the current entity panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"StanleyNeoh"},"content":"     * @see TabsPanelList#nextItem()","lastModifiedDate":"2023-03-28"},{"lineNumber":321,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":322,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":323,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList.nextItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":324,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":325,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":326,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":327,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the previous item in the current entity panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":328,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"StanleyNeoh"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":330,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList.prevItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":332,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":333,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":334,"author":{"gitId":"StanleyNeoh"},"content":"     * Focus the entity panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":335,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"StanleyNeoh"},"content":"    public void focusEntityPanel() {","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"StanleyNeoh"},"content":"        assert tabsPanelList.get(0) instanceof EntityPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanelList.focusTabPanel(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":340,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":341,"author":{"gitId":"StanleyNeoh"},"content":"    // EntityPanel methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":342,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":343,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the client tab.","lastModifiedDate":"2023-03-23"},{"lineNumber":344,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":345,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#selectClientTab()","lastModifiedDate":"2023-03-23"},{"lineNumber":346,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":347,"author":{"gitId":"StanleyNeoh"},"content":"    public void selectClientTab() {","lastModifiedDate":"2023-03-23"},{"lineNumber":348,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanel.selectClientTab();","lastModifiedDate":"2023-03-23"},{"lineNumber":349,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":350,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":351,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":352,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the project tab.","lastModifiedDate":"2023-03-23"},{"lineNumber":353,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":354,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#selectProjectTab()","lastModifiedDate":"2023-03-23"},{"lineNumber":355,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":356,"author":{"gitId":"StanleyNeoh"},"content":"    public void selectProjectTab() {","lastModifiedDate":"2023-03-23"},{"lineNumber":357,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanel.selectProjectTab();","lastModifiedDate":"2023-03-23"},{"lineNumber":358,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":359,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":360,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":361,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the projects to be displayed in the entity panel.","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":363,"author":{"gitId":"StanleyNeoh"},"content":"     * @param projectList the list of projects to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":364,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#setProjects(ObservableList)","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":366,"author":{"gitId":"StanleyNeoh"},"content":"    public void setProjects(ObservableList\u003cProject\u003e projectList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":367,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanel.setProjects(projectList);","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":369,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":370,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the clients to be displayed in the entity panel.","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"StanleyNeoh"},"content":"     * @param clientList the list of clients to be displayed.","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#setClients(ObservableList)","lastModifiedDate":"2023-03-23"},{"lineNumber":375,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":376,"author":{"gitId":"StanleyNeoh"},"content":"    public void setClients(ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2023-03-23"},{"lineNumber":377,"author":{"gitId":"StanleyNeoh"},"content":"        entityPanel.setClients(clientList);","lastModifiedDate":"2023-03-23"},{"lineNumber":378,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":380,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":381,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the identifier of the currently selected entity.","lastModifiedDate":"2023-03-23"},{"lineNumber":382,"author":{"gitId":"StanleyNeoh"},"content":"     * Entity refers to either project or client.","lastModifiedDate":"2023-03-23"},{"lineNumber":383,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":384,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the identifier of the currently selected entity.","lastModifiedDate":"2023-03-23"},{"lineNumber":385,"author":{"gitId":"StanleyNeoh"},"content":"     * @see EntityPanel#getSelectedEntityIdentifier()","lastModifiedDate":"2023-03-23"},{"lineNumber":386,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":387,"author":{"gitId":"StanleyNeoh"},"content":"    public Optional\u003cString\u003e getSelectedEntityIdentifier() {","lastModifiedDate":"2023-03-23"},{"lineNumber":388,"author":{"gitId":"StanleyNeoh"},"content":"        return entityPanel.getSelectedEntityIdentifier();","lastModifiedDate":"2023-03-23"},{"lineNumber":389,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"StanleyNeoh":251,"immanuelhume":20,"-":111,"RubyNguyen07":8}},{"path":"src/main/java/mycelium/mycelium/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"     * Starts the UI (and the App).","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"StanleyNeoh":1,"-":11,"immanuelhume":3}},{"path":"src/main/java/mycelium/mycelium/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.MainApp;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.StringUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/mycelium.png\";","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"                                               String contentText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        alert.setTitle(title);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        alert.showAndWait();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.show();","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"StanleyNeoh":2,"immanuelhume":25,"-":58}},{"path":"src/main/java/mycelium/mycelium/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.MainApp;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"     * Resource folder where FXML files are stored.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @param root     Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"StanleyNeoh":1,"-":75,"immanuelhume":17}},{"path":"src/main/java/mycelium/mycelium/ui/commandbox/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.commandbox;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.Mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.commandbox.mode.Mode.ModeType;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    public static final String LISTENING_STYLE_CLASS \u003d \"listening\";","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    private Mode mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     * Creates a {@code CommandBox} with an initial mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandBox(Mode mode) {","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        this.mode \u003d requireNonNull(mode);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        Optional\u003cMode\u003e nextMode \u003d mode.onInputSubmit(commandTextField.getText());","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        if (nextMode.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            setMode(nextMode.get());","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    private void handleInputChange() {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        mode.onInputChange(commandTextField.getText());","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    public void setStyleDefault() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.getStyleClass().remove(LISTENING_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the command box style to use the error style.","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    public void setStyleError() {","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the command box style to use the listening style.","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"    public void setStyleListening() {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        if (styleClass.contains(LISTENING_STYLE_CLASS)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"        styleClass.add(LISTENING_STYLE_CLASS);","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"     * Requests focus on the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"    public void requestFocus() {","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.requestFocus();","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"     * Moves the cursor to the end of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"    public void moveToEndOfLine() {","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"     * Moves the cursor to the start of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"    public void moveToStartOfLine() {","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.positionCaret(0);","lastModifiedDate":"2023-03-23"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the input of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"     * @param input the input to set","lastModifiedDate":"2023-03-23"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"    public void setInput(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.setText(input);","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"        moveToEndOfLine();","lastModifiedDate":"2023-03-23"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"     * Appends the given string to the end of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"StanleyNeoh"},"content":"     * The appended string is also selected.","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"StanleyNeoh"},"content":"     * @param additive the string to append","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"    public void appendHighlighted(String additive) {","lastModifiedDate":"2023-03-23"},{"lineNumber":124,"author":{"gitId":"StanleyNeoh"},"content":"        int start \u003d commandTextField.getLength();","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.setText(commandTextField.getText() + additive);","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.positionCaret(start);","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"StanleyNeoh"},"content":"        commandTextField.selectEnd();","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"StanleyNeoh"},"content":"     * Gets the input of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the input of the command box","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"StanleyNeoh"},"content":"    public String getInput() {","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"StanleyNeoh"},"content":"        return commandTextField.getText();","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets the mode of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"StanleyNeoh"},"content":"     * @param mode the mode to set","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"StanleyNeoh"},"content":"    public void setMode(Mode mode) {","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"StanleyNeoh"},"content":"        String prevInput \u003d getInput();","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"StanleyNeoh"},"content":"        this.mode.teardownMode();","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"StanleyNeoh"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":148,"author":{"gitId":"StanleyNeoh"},"content":"        this.mode.setupMode(prevInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"StanleyNeoh"},"content":"     * Gets the mode type of the command box.","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the mode type of the command box","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":156,"author":{"gitId":"StanleyNeoh"},"content":"    public ModeType getModeType() {","lastModifiedDate":"2023-03-23"},{"lineNumber":157,"author":{"gitId":"StanleyNeoh"},"content":"        return mode.getModeType();","lastModifiedDate":"2023-03-23"},{"lineNumber":158,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"StanleyNeoh":107,"-":49,"immanuelhume":3}},{"path":"src/main/java/mycelium/mycelium/ui/commandbox/mode/CommandMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.commandbox.mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static mycelium.mycelium.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a mode that allows the user to enter commands.","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"public class CommandMode extends Mode {","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private static final ModeType MODE \u003d ModeType.COMMAND_MODE;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    private String cachedInput \u003d \"\";","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a new CommandMode.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandMode(MainWindow mainWindow) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"        requireAllNonNull(mainWindow);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    public void setupMode(String prevInput) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Setting up command mode, caching input: \" + prevInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxStyleDefault();","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        cachedInput \u003d prevInput;","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    public void onInputChange(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        // Do Nothing","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxStyleDefault();","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    public Optional\u003cMode\u003e onInputSubmit(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        if (!input.equals(\"\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            try {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"                mainWindow.executeCommand(input);","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"                mainWindow.setCommandBoxInput(\"\");","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"            } catch (CommandException | ParseException e) {","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"                mainWindow.setCommandBoxStyleError();","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    public void teardownMode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Tearing down command mode, restoring input: \" + cachedInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxStyleDefault();","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxInput(cachedInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    public ModeType getModeType() {","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        return MODE;","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":68}},{"path":"src/main/java/mycelium/mycelium/ui/commandbox/mode/Mode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.commandbox.mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a mode that the command box can be in.","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"public abstract class Mode {","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"     * Gets the type of mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the type of mode","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract ModeType getModeType();","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     * Sets up the mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"     * @param prevInput the previous input from the command box before mode change","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract void setupMode(String prevInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     * Called when the input changes.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     * @param input The input from the command box","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract void onInputChange(String input);","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"     * Called when the input is submitted.","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the mode to switch to, if any.","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     * Note that the teardownMode() method will be called before switching modes.","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"     * @param input The input from the command box","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the mode to switch to, if any","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract Optional\u003cMode\u003e onInputSubmit(String input);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"     * Tears down the mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public abstract void teardownMode();","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"     * Represents the type of mode.","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    public static enum ModeType {","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        COMMAND_MODE,","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        SEARCH_MODE","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":52}},{"path":"src/main/java/mycelium/mycelium/ui/commandbox/mode/SearchMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.commandbox.mode;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.FuzzyManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.MainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":" * Represents a mode that allows the user to search for clients and projects.","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"public class SearchMode extends Mode {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    public static final ModeType MODE \u003d ModeType.SEARCH_MODE;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    private String cachedInput;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private Optional\u003cString\u003e additive;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a new SearchMode.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @param mainWindow The main window","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"     * @param logic The logic component","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public SearchMode(MainWindow mainWindow, Logic logic) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        this.additive \u003d Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    public void setupMode(String prevInput) {","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Setting up search mode, caching input: \" + prevInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        cachedInput \u003d prevInput;","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxStyleListening();","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.focusEntityPanel();","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public void onInputChange(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        mainWindow.setClients(FuzzyManager.rankItems(logic.getFilteredClientList(), input));","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        mainWindow.setProjects(FuzzyManager.rankItems(logic.getFilteredProjectList(), input));","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    public Optional\u003cMode\u003e onInputSubmit(String input) {","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        additive \u003d mainWindow.getSelectedEntityIdentifier();","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        return Optional.of(new CommandMode(mainWindow));","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    public void teardownMode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        logger.info(\"Tearing down search mode: restoring input: \" + cachedInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setClients(logic.getFilteredClientList());","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setProjects(logic.getFilteredProjectList());","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxStyleDefault();","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        mainWindow.setCommandBoxInput(cachedInput);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        if (additive.isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"            mainWindow.appendCommandBoxHighlighted(additive.get());","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    public ModeType getModeType() {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        return MODE;","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":68,"immanuelhume":2}},{"path":"src/main/java/mycelium/mycelium/ui/commandlog/CommandLog.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.commandlog;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"public class CommandLog extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"CommandLog.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    public CommandLog() {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"StanleyNeoh":5,"-":23}},{"path":"src/main/java/mycelium/mycelium/ui/entitypanel/ClientEntity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.entitypanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"public class ClientEntity extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"ClientEntity.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    public final Client client;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    private Label name;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    private Label yearOfBirth;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    private Label source;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    private Label mobileNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    public ClientEntity(Client client, int displayedIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        this.client \u003d client;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"        name.setText(client.getName().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        email.setText(client.getEmail().toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        yearOfBirth.setText(client.getYearOfBirth().map(YearOfBirth::toString).orElse(\"No year of birth\").toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        source.setText(client.getSource().map(NonEmptyString::toString).orElse(\"No source\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        mobileNumber.setText(client.getMobileNumber().map(Phone::toString).orElse(\"No mobile number\").toString());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized ClientEntity with client: \" + client.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        if (!(other instanceof ClientEntity)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        ClientEntity card \u003d (ClientEntity) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"            \u0026\u0026 client.equals(card.client);","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"StanleyNeoh":26,"-":49,"immanuelhume":4}},{"path":"src/main/java/mycelium/mycelium/ui/entitypanel/EntityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.entitypanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":" * Panel containing the list of {@code T}.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"public class EntityList\u003cT\u003e extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"EntityList.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    private ListView\u003cT\u003e listView;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a {@code ListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"    public EntityList(ObservableList\u003cT\u003e list) {","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        requireNonNull(list);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        listView.setItems(list);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized list panel with \" + list.size() + \" items\");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a {@code ListPanel} with the given {@code list} after transforming with {@code biMap}","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"     * @param list  ObservableList of items","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"     * @param biMap BiFunction that transforms the list to the appropriate {@code UiPart}","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    public EntityList(","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        ObservableList\u003cT\u003e list,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        BiFunction\u003c","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"            ? super T,","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"            ? super Integer,","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"            ? extends UiPart\u003c? extends Node\u003e\u003e biMap","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"    ) {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        this(list);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        listView.setCellFactory(listView -\u003e new ListViewCell(biMap));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"     * Replaces the contents of the list panel with the given list.","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"     * @param list The new list to display.","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    public void setItems(ObservableList\u003cT\u003e list) {","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        requireNonNull(list);","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        listView.setItems(list);","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        logger.fine(\"Reset list panel with \" + list.size() + \" items\");","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects and scrolls to the next item in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"        int size \u003d listView.getItems().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        if (size \u003c\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        assert size \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        int nextIndex \u003d (listView.getSelectionModel().getSelectedIndex() + 1) % size;","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        listView.getSelectionModel().select(nextIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        listView.scrollTo(listView.getSelectionModel().getSelectedItem());","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects and scrolls to the previous item in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"        int size \u003d listView.getItems().size();","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        if (size \u003c\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"        assert size \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"        int prevIndex \u003d (listView.getSelectionModel().getSelectedIndex() - 1 + size) % size;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"        listView.getSelectionModel().select(prevIndex);","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        listView.scrollTo(listView.getSelectionModel().getSelectedItem());","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the selected item in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The selected item in the list.","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"    public T getSelectedItem() {","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"        return listView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code T}.","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"    class ListViewCell extends ListCell\u003cT\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"        private BiFunction\u003c? super T, ? super Integer, ? extends UiPart\u003c? extends Node\u003e\u003e biMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"        ListViewCell(BiFunction\u003c? super T, ? super Integer, ? extends UiPart\u003c? extends Node\u003e\u003e biMap) {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"            super();","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"            this.biMap \u003d biMap;","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"        protected void updateItem(T item, boolean empty) {","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"            super.updateItem(item, empty);","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"            if (empty || item \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"                setText(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"StanleyNeoh"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"StanleyNeoh"},"content":"                setGraphic(biMap.apply(item, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"StanleyNeoh"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":112,"immanuelhume":12,"RubyNguyen07":1}},{"path":"src/main/java/mycelium/mycelium/ui/entitypanel/EntityPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.entitypanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.utils.TabsPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":" * The ui for the holder of all the tabs.","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"public class EntityPanel extends UiPart\u003cTabPane\u003e implements TabsPanel {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"EntityPanel.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    private EntityList\u003cClient\u003e clientListPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    private EntityList\u003cProject\u003e projectListPanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    private EntityTab projectTab;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    private EntityTab clientTab;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    private SingleSelectionModel\u003cTab\u003e selectionModel;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    private ObservableList\u003cTab\u003e tabs;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a {@code EntityPanel} with a given {@code Logic}.","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    public EntityPanel(ObservableList\u003cProject\u003e projectList, ObservableList\u003cClient\u003e clientList) {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        projectListPanel \u003d new EntityList\u003cProject\u003e(projectList, ProjectEntity::new);","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        clientListPanel \u003d new EntityList\u003cClient\u003e(clientList, ClientEntity::new);","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        projectTab \u003d new EntityTab(\"Projects\", projectListPanel);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        clientTab \u003d new EntityTab(\"Clients\", clientListPanel);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        this.selectionModel \u003d getRoot().getSelectionModel();","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        this.tabs \u003d getRoot().getTabs();","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        this.tabs.add(projectTab.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        this.tabs.add(clientTab.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialised EntityPanel\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the client tab.","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    public void selectClientTab() {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"        this.selectionModel.select(this.clientTab.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"     * Selects the project tab.","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    public void selectProjectTab() {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        this.selectionModel.select(this.projectTab.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTab() {","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        int size \u003d this.tabs.size();","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"        assert size \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        int i \u003d this.selectionModel.getSelectedIndex();","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"        this.selectionModel.select((i + 1) % size);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        Tab item \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        switch (item.getText()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Projects\":","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"            this.projectListPanel.nextItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Clients\":","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"            this.clientListPanel.nextItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"        Tab tab \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"        switch (tab.getText()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Projects\":","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"            this.projectListPanel.prevItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Clients\":","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"            this.clientListPanel.prevItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"            break;","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"StanleyNeoh"},"content":"    public void highlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"StanleyNeoh"},"content":"        ObservableList\u003cString\u003e styleClass \u003d getRoot().getStyleClass();","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"StanleyNeoh"},"content":"        if (styleClass.contains(HIGHLIGHTED_STYLE_CLASS)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"        styleClass.add(HIGHLIGHTED_STYLE_CLASS);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"    public void unhighlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"        getRoot().getStyleClass().remove(HIGHLIGHTED_STYLE_CLASS);","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"     * Sets the clients in the client list panel.","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"    public void setClients(ObservableList\u003cClient\u003e list) {","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        clientListPanel.setItems(list);","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"     * Sets the projects in the project list panel.","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"    public void setProjects(ObservableList\u003cProject\u003e list) {","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        projectListPanel.setItems(list);","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":132,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":133,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the selected entity identifier.","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"StanleyNeoh"},"content":"     * If there is no selected entity, it will return an empty optional.","lastModifiedDate":"2023-03-23"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"     * The identifier for projects will be the project name.","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"StanleyNeoh"},"content":"     * The identifier for clients will be the client email.","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"StanleyNeoh"},"content":"     * @return the selected entity identifier.","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":140,"author":{"gitId":"StanleyNeoh"},"content":"    public Optional\u003cString\u003e getSelectedEntityIdentifier() {","lastModifiedDate":"2023-03-23"},{"lineNumber":141,"author":{"gitId":"StanleyNeoh"},"content":"        Tab tab \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-23"},{"lineNumber":142,"author":{"gitId":"StanleyNeoh"},"content":"        switch (tab.getText()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Projects\":","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"StanleyNeoh"},"content":"            return Optional.ofNullable(this.projectListPanel.getSelectedItem())","lastModifiedDate":"2023-03-23"},{"lineNumber":145,"author":{"gitId":"StanleyNeoh"},"content":"                .map(Project::getName)","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"StanleyNeoh"},"content":"                .map(NonEmptyString::toString);","lastModifiedDate":"2023-03-23"},{"lineNumber":147,"author":{"gitId":"StanleyNeoh"},"content":"        case \"Clients\":","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"StanleyNeoh"},"content":"            return Optional.ofNullable(this.clientListPanel.getSelectedItem())","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"StanleyNeoh"},"content":"                .map(Client::getEmail)","lastModifiedDate":"2023-03-23"},{"lineNumber":150,"author":{"gitId":"StanleyNeoh"},"content":"                .map(Email::toString);","lastModifiedDate":"2023-03-23"},{"lineNumber":151,"author":{"gitId":"StanleyNeoh"},"content":"        default:","lastModifiedDate":"2023-03-23"},{"lineNumber":152,"author":{"gitId":"StanleyNeoh"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":153,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":154,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":155,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":139,"immanuelhume":15,"RubyNguyen07":1}},{"path":"src/main/java/mycelium/mycelium/ui/entitypanel/EntityTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.entitypanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":" * The ui for the page of a given tab.","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"public class EntityTab extends UiPart\u003cTab\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"EntityTab.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private StackPane entityListPlaceholder;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     * Initialises a {@code TabPage} with a given title.","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"     * @param title   Title of the Tab","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"     * @param content Content the tab should be populated with","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public EntityTab(String title, UiPart\u003c? extends Node\u003e content) {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        super(FXML);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        getRoot().setText(title);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        entityListPlaceholder.getChildren().add(content.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized tab page with title: \" + title);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":33,"RubyNguyen07":1}},{"path":"src/main/java/mycelium/mycelium/ui/entitypanel/ProjectEntity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.entitypanel;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"public class ProjectEntity extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String FXML \u003d \"ProjectEntity.fxml\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    public final Project project;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    private Label id;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    private Label status;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"    private Label email;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    private Label source;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"    private Label description;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    private Label acceptedOn;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"    private Label deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    public ProjectEntity(Project p, int displayedIndex) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        project \u003d p;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        name.setText(p.getName().toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        status.setText(p.getStatus().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        email.setText(p.getClientEmail().toString());","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        source.setText(p.getSource().map(NonEmptyString::toString).orElse(\"Unknown\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        description.setText(p.getDescription().orElse(\"No description given\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        acceptedOn.setText(p.getAcceptedOn().format(Project.DATE_FMT));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        deadline.setText(p.getDeadline().map(d -\u003e d.format(Project.DATE_FMT)).orElse(\"No Deadline\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized ProjectEntity with project: \" + p.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        if (!(other instanceof ProjectEntity)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        ProjectEntity card \u003d (ProjectEntity) other;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"            \u0026\u0026 project.equals(card.project);","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"StanleyNeoh":27,"-":49,"immanuelhume":5}},{"path":"src/main/java/mycelium/mycelium/ui/helpwindow/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.helpwindow;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized HelpWindow\");","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"     * @throws IllegalStateException \u003cul\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     *                               if this method is called on a thread other than the JavaFX","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"     *                               Application Thread.","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *                               \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *                               \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *                               \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"StanleyNeoh":4,"-":96,"immanuelhume":5}},{"path":"src/main/java/mycelium/mycelium/ui/statisticsbox/SpecialProjectEntity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.statisticsbox;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":" * An UI component that displays information of a {@code Due Project} or {@code Overdue Project}.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"public class SpecialProjectEntity extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String FXML \u003d \"SpecialProjectEntity.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    public final Project project;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    private Label id;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    private Label name;","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    private Label status;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    private Label email;","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"    private Label deadline;","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code DueProjectCode} with the given {@code Project} and index to display.","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    public SpecialProjectEntity(Project p, int displayedIndex) {","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        project \u003d p;","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        name.setText(p.getName().getValue());","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        status.setText(p.getStatus().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        email.setText(p.getClientEmail().toString());","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        deadline.setText(p.getDeadline().map(d -\u003e d.format(Project.DATE_FMT)).orElse(\"No Deadline\"));","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        logger.fine(\"Initialized SpecialProjectEntity with project: \" + p.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"        if (!(other instanceof SpecialProjectEntity)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"            return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"        // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"        SpecialProjectEntity card \u003d (SpecialProjectEntity) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 project.equals(card.project);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"RubyNguyen07":71}},{"path":"src/main/java/mycelium/mycelium/ui/statisticsbox/StatisticsBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.statisticsbox;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.ListChangeListener.Change;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.utils.TabsPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":" * An UI component that displays {@code Project} statistics.","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"public class StatisticsBox extends UiPart\u003cRegion\u003e implements TabsPanel {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String FXML \u003d \"StatisticsBox.fxml\";","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    private StatisticsPanel statisticsPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    private ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    private StackPane statisticsPanelPlaceholder;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    private PieChart progressOverview;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code StatisticsBox} with the given {@code Logic}.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"    public StatisticsBox(Logic logic) {","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        super(FXML);","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        loadDataOnBox(logic);","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        assert pieChartData.isEmpty() \u003d\u003d false;","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        logger.fine(\"Finished initialising Statistics Box\");","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"    private void loadDataOnBox(Logic logic) {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        ObservableList\u003cProject\u003e filteredProjectList \u003d logic.getFilteredProjectList();","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        filteredProjectList.addListener((Change\u003c? extends Project\u003e c) -\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            statisticsPanel.onChanged(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            setPieChartData(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"        });","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        setPieChartData(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        setProjectData(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"    private void setProjectData(Logic logic) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel \u003d new StatisticsPanel(logic.getDueProjectList(), logic.getOverdueProjectList());","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        statisticsPanelPlaceholder.getChildren().add(statisticsPanel.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.onChanged(logic);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    private void setPieChartData(Logic logic) {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"        pieChartData.clear();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"        if (logic.getFilteredProjectList().size() !\u003d 0) {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"            logic.getProjectStatistics().forEach((k, v) -\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"                if (v !\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"                    pieChartData.add(new PieChart.Data(k, v));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"            });","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        progressOverview.setData(pieChartData);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.nextItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.prevItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTab() {","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.nextTab();","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"    public void highlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.highlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"StanleyNeoh"},"content":"    public void unhighlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"StanleyNeoh"},"content":"        statisticsPanel.unhighlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":39,"RubyNguyen07":62}},{"path":"src/main/java/mycelium/mycelium/ui/statisticsbox/StatisticsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.statisticsbox;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.SingleSelectionModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.Logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.entitypanel.EntityList;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.utils.TabsPanel;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":" * The ui for the holder of all the tabs in Statistics Dashboard.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"public class StatisticsPanel extends UiPart\u003cTabPane\u003e implements TabsPanel {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String FXML \u003d \"EntityPanel.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String NO_DUE_PROJECT_MESSAGE \u003d \"No projects due soon\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    private static final String NO_OVERDUE_PROJECT_MESSAGE \u003d \"No overdue projects!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    private EntityList\u003cProject\u003e dueSoonProjectListPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    private EntityList\u003cProject\u003e overdueProjectListPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    private StatisticsTab dueSoonProjectTab;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    private StatisticsTab overdueProjectTab;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    private SingleSelectionModel\u003cTab\u003e selectionModel;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"    private ObservableList\u003cTab\u003e tabs;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialises a {@code StatisticsPanel} with given {@code Logic} and message {@code Label}.","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"    public StatisticsPanel(ObservableList\u003cProject\u003e dueSoonProjectList,","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"                           ObservableList\u003cProject\u003e overdueProjectList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        dueSoonProjectListPanel \u003d new EntityList\u003cProject\u003e(dueSoonProjectList, SpecialProjectEntity::new);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        overdueProjectListPanel \u003d new EntityList\u003cProject\u003e(overdueProjectList, SpecialProjectEntity::new);","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        dueSoonProjectTab \u003d new StatisticsTab(\"Due soon\", dueSoonProjectListPanel);","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        overdueProjectTab \u003d new StatisticsTab(\"Overdue\", overdueProjectListPanel);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        this.selectionModel \u003d getRoot().getSelectionModel();","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        this.tabs \u003d getRoot().getTabs();","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        this.tabs.add(dueSoonProjectTab.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        this.tabs.add(overdueProjectTab.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        logger.fine(\"Initialised StatisticsPanel\");","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * Selects the Due soon Project tab.","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    public void selectDueSoonProjectTab() {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        this.selectionModel.select(this.dueSoonProjectTab.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"     * Selects the Overdue Project tab.","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"    public void selectOverdueProjectTab() {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        this.selectionModel.select(this.overdueProjectTab.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"    public void nextTab() {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"        int size \u003d this.tabs.size();","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"        assert size \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"        int i \u003d this.selectionModel.getSelectedIndex();","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"        this.selectionModel.select((i + 1) % size);","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"        Tab item \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"        switch (item.getText()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"        case \"Due soon\":","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"            this.dueSoonProjectListPanel.nextItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"        case \"Overdue\":","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"            this.overdueProjectListPanel.nextItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"        Tab tab \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"        switch (tab.getText()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"        case \"Due soon\":","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"            this.dueSoonProjectListPanel.prevItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"        case \"Overdue\":","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"            this.overdueProjectListPanel.prevItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"        default:","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"            break;","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"StanleyNeoh"},"content":"    public void highlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"StanleyNeoh"},"content":"        ObservableList\u003cString\u003e styleClass \u003d getRoot().getStyleClass();","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"StanleyNeoh"},"content":"        if (styleClass.contains(HIGHLIGHTED_STYLE_CLASS)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"StanleyNeoh"},"content":"        styleClass.add(HIGHLIGHTED_STYLE_CLASS);","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"StanleyNeoh"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"StanleyNeoh"},"content":"    public void unhighlight() {","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"StanleyNeoh"},"content":"        getRoot().getStyleClass().remove(HIGHLIGHTED_STYLE_CLASS);","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the selected entity identifier.","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"RubyNguyen07"},"content":"     * If there is no selected entity, it will return an empty optional.","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"RubyNguyen07"},"content":"     * The identifier for projects will be the project name.","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"RubyNguyen07"},"content":"     * @return the selected entity identifier.","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"RubyNguyen07"},"content":"    public Optional\u003cString\u003e getSelectedEntityIdentifier() {","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"RubyNguyen07"},"content":"        Tab tab \u003d this.selectionModel.getSelectedItem();","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"RubyNguyen07"},"content":"        EntityList\u003cProject\u003e currentPanel \u003d tab.getText().equals(\"Overdue\")","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"RubyNguyen07"},"content":"                ? this.overdueProjectListPanel","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"RubyNguyen07"},"content":"                : this.dueSoonProjectListPanel;","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"RubyNguyen07"},"content":"        return Optional.ofNullable(currentPanel.getSelectedItem())","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"RubyNguyen07"},"content":"                .map(Project::getName)","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"RubyNguyen07"},"content":"                .map(NonEmptyString::toString);","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"StanleyNeoh"},"content":"     * Updates the statistics panel when there is a change","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"StanleyNeoh"},"content":"     * in the due soon and overdue projects.","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"StanleyNeoh"},"content":"     * @param logic the logic component.","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"StanleyNeoh"},"content":"    public void onChanged(Logic logic) {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"StanleyNeoh"},"content":"        if (logic.getDueProjectList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"StanleyNeoh"},"content":"            dueSoonProjectTab.showMessage(NO_DUE_PROJECT_MESSAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"StanleyNeoh"},"content":"            dueSoonProjectTab.hideMessage();","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"StanleyNeoh"},"content":"        if (logic.getOverdueProjectList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"StanleyNeoh"},"content":"            overdueProjectTab.showMessage(NO_OVERDUE_PROJECT_MESSAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"StanleyNeoh"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"StanleyNeoh"},"content":"            overdueProjectTab.hideMessage();","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"StanleyNeoh":53,"RubyNguyen07":109}},{"path":"src/main/java/mycelium/mycelium/ui/statisticsbox/StatisticsTab.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.statisticsbox;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":" * The ui for the page of a given tab in Statistics Dashboard.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"public class StatisticsTab extends UiPart\u003cTab\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String FXML \u003d \"StatisticsTab.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    private StackPane listPlaceholder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    private StackPane displayMessageBox;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    private Label message;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"     * Initialises a {@code TabPage} in Statistics Dashboard with a given title.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     * @param title   Title of the Tab","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     * @param content Content the tab should be populated with","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"    public StatisticsTab(String title, UiPart\u003c? extends Node\u003e content) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        getRoot().setText(title);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        listPlaceholder.getChildren().addAll(content.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        logger.fine(\"Initialized tab page with title: \" + title);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"     * Hides the message in the tab.","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"    public void hideMessage() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        displayMessageBox.setManaged(false);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"     * Shows a message in the tab.","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"     * @param s Message to be shown","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"    public void showMessage(String s) {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        message.setText(s);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"        displayMessageBox.setManaged(true);","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"StanleyNeoh":21,"RubyNguyen07":38}},{"path":"src/main/java/mycelium/mycelium/ui/statusbarfooter/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.statusbarfooter;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.commons.core.LogsCenter;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    private Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        logger.fine(\"Initialized status bar with save location: \" + saveLocation.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":7,"-":26}},{"path":"src/main/java/mycelium/mycelium/ui/utils/TabsPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.utils;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":" * TabsPanel is an interface for a panel that contains tabs.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":" * It is used to switch between the tabs within a panel.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" * It also allows the panel to be highlighted and unhighlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":" * This is used to show which panel is in focus.","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"public interface TabsPanel {","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"    static final String HIGHLIGHTED_STYLE_CLASS \u003d \"highlighted\";","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches to the next tab.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"    void nextItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches to the previous tab.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    void prevItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches to the next tab.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"    void nextTab();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"     * Highlight the TabPanel to show it is in focus","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    void highlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"     * Unhighlight the TabPanel to show it is not in focus","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"    void unhighlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"StanleyNeoh":35}},{"path":"src/main/java/mycelium/mycelium/ui/utils/TabsPanelList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.utils;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":" * TabsPanelList is a list of TabsPanel.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":" * It allows the user to switch between the TabsPanels.","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"public class TabsPanelList {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"    private TabsPanel[] tabsPanels;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"    private int focused;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"     * Creates a TabsPanelList with the given TabsPanels.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"     * The first TabsPanel is highlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"     * @param tabsPanels The TabsPanels to be added to the TabsPanelList.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    public TabsPanelList(TabsPanel... tabsPanels) {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        this.tabsPanels \u003d tabsPanels;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"        this.focused \u003d 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].highlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].nextItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    public void prevItem() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].prevItem();","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTab() {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].nextTab();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches to the next TabsPanel.","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"     * The current TabsPanel is unhighlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"     * The next TabsPanel is highlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"    public void nextTabPanel() {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].unhighlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"        if (tabsPanels.length \u003d\u003d 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"        assert tabsPanels.length \u003e 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        focused \u003d (focused + 1) % tabsPanels.length;","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].highlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"     * Switches to the TabsPanel of a given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"     * The current TabsPanel is unhighlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"     * The TabsPanel of the given index is highlighted.","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"     * If the index is out of bounds, nothing happens.","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"     * @param index The index of the TabsPanel to be focused.","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"    public void focusTabPanel(int index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        if (index \u003c 0 || index \u003e\u003d tabsPanels.length) {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"            return;","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].unhighlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"        focused \u003d index;","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        tabsPanels[focused].highlight();","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"     * Returns the TabsPanel of a given index.","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"     *","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"     * @param index The index of the TabsPanel to be returned.","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"     * @return The TabsPanel of the given index. If the index is out of bounds, null is returned.","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"    public TabsPanel get(int index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"        if (index \u003c 0 || index \u003e\u003d tabsPanels.length) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"        return tabsPanels[index];","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"StanleyNeoh":79}},{"path":"src/main/resources/view/ClientEntity.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cFlowPane fx:id\u003d\"emailHolder\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"fieldE\" styleClass\u003d\"cell_small_label\" text\u003d\"Email: \"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cFlowPane fx:id\u003d\"yearOfBirthHolder\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"fieldY\" styleClass\u003d\"cell_small_label\" text\u003d\"Year of Birth: \"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"yearOfBirth\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$yearOfBirth\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cFlowPane fx:id\u003d\"sourceHolder\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"fieldS\" styleClass\u003d\"cell_small_label\" text\u003d\"Source: \"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"source\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$source\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cFlowPane fx:id\u003d\"mobileNumberHolder\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"fieldM\" styleClass\u003d\"cell_small_label\" text\u003d\"Mobile Number: \"/\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cLabel fx:id\u003d\"mobileNumber\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mobileNumber\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":31,"-":28,"immanuelhume":1}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyTyped\u003d\"#handleInputChange\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"StanleyNeoh":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-background-color: #4F518C;","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-background-color: #907AD6;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-background-color: #007390;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-background-color: #158CAB;","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"-":348,"immanuelhume":1,"RubyNguyen07":4}},{"path":"src/main/resources/view/EntityList.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"  \u003cListView fx:id\u003d\"listView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":1,"-":7}},{"path":"src/main/resources/view/EntityPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"\u003cTabPane focusTraversable\u003d\"false\" tabClosingPolicy\u003d\"UNAVAILABLE\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" /\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"StanleyNeoh":6}},{"path":"src/main/resources/view/EntityTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"\u003cTab text\u003d\"Untitled Tab\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"   \u003ccontent\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cStackPane fx:id\u003d\"entityListPlaceholder\" prefHeight\u003d\"150.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"   \u003c/content\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"\u003c/Tab\u003e","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":10,"immanuelhume":1}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":".listening {","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"    -fx-background-color: #2a9d8f !important;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":".highlighted .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"    -fx-background-color: #475ee2dd !important;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"StanleyNeoh":7,"-":20,"immanuelhume":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"600.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Mycelium\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    \u003cImage url\u003d\"@/images/mycelium.png\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cStackPane fx:id\u003d\"commandLogPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cSplitPane fx:id\u003d\"mainView\" dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"          \u003citems\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cStackPane fx:id\u003d\"entityPanelPlaceholder\" minWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cStackPane fx:id\u003d\"statisticsBoxPlaceholder\" minWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"                     \u003c/padding\u003e\u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"          \u003c/items\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"StanleyNeoh":12,"-":47,"RubyNguyen07":8}},{"path":"src/main/resources/view/ProjectEntity.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"                \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cFlowPane fx:id\u003d\"emailHolder\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"fieldE\" styleClass\u003d\"cell_small_label\" text\u003d\"Email: \"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"         \u003cFlowPane fx:id\u003d\"sourceHolder\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"fieldS\" styleClass\u003d\"cell_small_label\" text\u003d\"Source: \"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"                \u003cLabel fx:id\u003d\"source\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$source\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cFlowPane fx:id\u003d\"descriptionHolder\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"               \u003cLabel fx:id\u003d\"fieldD\" styleClass\u003d\"cell_small_label\" text\u003d\"Description: \" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"               \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"         \u003cFlowPane fx:id\u003d\"acceptedOnHolder\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"fieldA\" styleClass\u003d\"cell_small_label\" text\u003d\"Accepted on: \" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"                \u003cLabel fx:id\u003d\"acceptedOn\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$acceptedOn\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"         \u003cFlowPane fx:id\u003d\"deadlineHolder\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"             \u003cchildren\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"             \u003cLabel fx:id\u003d\"fieldDe\" styleClass\u003d\"cell_small_label\" text\u003d\"Deadline: \" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"                \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"         \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":45,"immanuelhume":1,"RubyNguyen07":26}},{"path":"src/main/resources/view/SpecialProjectEntity.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$id\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$name\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cFlowPane fx:id\u003d\"emailHolder\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cLabel fx:id\u003d\"fieldE\" styleClass\u003d\"cell_small_label\" text\u003d\"Email: \"/\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cFlowPane fx:id\u003d\"deadlineHolder\"\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cLabel fx:id\u003d\"fieldDe\" styleClass\u003d\"cell_small_label\" text\u003d\"Deadline: \" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"                    \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"                \u003c/children\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"RubyNguyen07":54}},{"path":"src/main/resources/view/StatisticsBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":".chart-pie-label-line {","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-stroke: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-fill: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":".chart-pie-label { /*this is what you need for labels*/","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-fill: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-font-size: 1em;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":".chart-legend {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"   -fx-background-color:  #007390;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"   -fx-stroke: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":".chart-legend-item{","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":".chart-title {","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"  -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"  -fx-font-size: 1.6em;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":".data0.chart-pie {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-pie-color: #2C2A4A;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":".data1.chart-pie {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-pie-color: #DABFFF;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":".data2.chart-pie {","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    -fx-pie-color: #907AD6;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":".no-due-project {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"  -fx-text-fill: #FFFFFF;","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"  -fx-font-size: 1em;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":".message-box-bg {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"   -fx-background-color:  #dddddd;","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"RubyNguyen07":45}},{"path":"src/main/resources/view/StatisticsBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cURL value\u003d\"@StatisticsBox.css\" /\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"    \u003cStackPane fx:id\u003d\"statisticsPanelPlaceholder\" minWidth\u003d\"150.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"    \u003cStackPane fx:id\u003d\"pies\" prefHeight\u003d\"400.0\" styleClass\u003d\"stack-pane\" VBox.vgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"        \u003cPieChart fx:id\u003d\"progressOverview\" legendSide\u003d\"RIGHT\" legendVisible\u003d\"false\" startAngle\u003d\"90\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"StanleyNeoh":5,"RubyNguyen07":13}},{"path":"src/main/resources/view/StatisticsTab.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"\u003cTab text\u003d\"Untitled Tab\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"    \u003ccontent\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"        \u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cURL value\u003d\"@StatisticsBox.css\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cStackPane fx:id\u003d\"displayMessageBox\" maxHeight\u003d\"20\" prefHeight\u003d\"20\" styleClass\u003d\"message-box-bg\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"                \u003cLabel fx:id\u003d\"message\" alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"            \u003cStackPane fx:id\u003d\"listPlaceholder\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    \u003c/content\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"\u003c/Tab\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"StanleyNeoh":3,"RubyNguyen07":19}},{"path":"src/test/java/guitests/GuiRobot.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.function.BooleanSupplier;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.guiexceptions.StageNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":" * Robot used to simulate user actions on the GUI.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":" * Extends {@link FxRobot} by adding some customized functionality and workarounds.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"public class GuiRobot extends FxRobot {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 5000;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    private final boolean isHeadlessMode;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code GuiRobot} to facilitate GUI testing.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public GuiRobot() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     * unnecessary delays.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    public void pauseForHuman() {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        if (isHeadlessMode) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"            return;","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns true if tests are run in headless mode.","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean isHeadlessMode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        return isHeadlessMode;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds.","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} ms.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    public void waitForEvent(BooleanSupplier event) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"     * Waits for {@code event} to be true.","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"     * @param timeOut in milliseconds","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}.","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    public void waitForEvent(BooleanSupplier event, int timeOut) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"        int timePassed \u003d 0;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"        final int retryInterval \u003d 50;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"        while (!event.getAsBoolean()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"            sleep(retryInterval);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"            timePassed +\u003d retryInterval;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"            if (timePassed \u003e\u003d timeOut) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"                throw new EventTimeoutException();","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"        pauseForHuman();","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns true if the window with {@code stageTitle} is currently open.","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean isWindowShown(String stageTitle) {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"        return getNumberOfWindowsShown(stageTitle) \u003e\u003d 1;","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the number of windows with {@code stageTitle} that are currently open.","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"RubyNguyen07"},"content":"    public int getNumberOfWindowsShown(String stageTitle) {","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"        return (int) listTargetWindows().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"                .count();","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns the first stage, ordered by proximity to the current target window, with the stage title.","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"     * The order that the windows are searched are as follows (proximity): current target window,","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"RubyNguyen07"},"content":"     * children of the target window, rest of the windows.","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws StageNotFoundException if the stage is not found.","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"    public Stage getStage(String stageTitle) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"                .filter(Stage.class::isInstance) // checks that the window is of type Stage","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"                .map(Stage.class::cast)","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"                .filter(stage -\u003e stage.getTitle().equals(stageTitle))","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"                .findFirst();","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"        return targetStage.orElseThrow(StageNotFoundException::new);","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"RubyNguyen07"},"content":"     * Represents an error which occurs when a timeout occurs when waiting for an event.","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"RubyNguyen07"},"content":"    private class EventTimeoutException extends RuntimeException {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":121}},{"path":"src/test/java/guitests/guihandles/ClientListCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":" * Provides a handle to a person card in the client list panel.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"public class ClientListCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String SOURCE_FIELD_ID \u003d \"#source\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String YEAR_OF_BIRTH_FIELD_ID \u003d \"#yearOfBirth\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String MOBILE_NUMBER_FIELD_ID \u003d \"#mobileNumber\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label idLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label nameLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label emailLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label sourceLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label yearOfBirthLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label mobileNumberLabel;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code ClientListCardHandle} with the default details.","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    public ClientListCardHandle(Node cardNode) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"        super(cardNode);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        sourceLabel \u003d getChildNode(SOURCE_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        yearOfBirthLabel \u003d getChildNode(YEAR_OF_BIRTH_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        mobileNumberLabel \u003d getChildNode(MOBILE_NUMBER_FIELD_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    public String getId() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        return idLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"    public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        return nameLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"    public String getEmail() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        return emailLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    public String getSource() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"        return sourceLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    public String getYearOfBirth() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        return yearOfBirthLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    public String getMobileNumber() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        return mobileNumberLabel.getText();","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns true if this handle contains {@code client}.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean equals(Client client) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"        return getName().equals(client.getName().toString())","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getEmail().equals(client.getEmail())","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getSource().equals(client.getSource())","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getYearOfBirth().equals(client.getYearOfBirth())","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getMobileNumber().equals(client.getMobileNumber());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"RubyNguyen07":74}},{"path":"src/test/java/guitests/guihandles/NodeHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.guiexceptions.NodeNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":" * Provides access to a node in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"public abstract class NodeHandle\u003cT extends Node\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private final T rootNode;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    protected NodeHandle(T rootNode) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        this.rootNode \u003d requireNonNull(rootNode);","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    protected T getRootNode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        return rootNode;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"    protected \u003cQ extends Node\u003e Q getChildNode(String query) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"        Optional\u003cQ\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"     * Clicks on the root node (i.e. itself).","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    public void click() {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        guiRobot.clickOn(rootNode);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":44}},{"path":"src/test/java/guitests/guihandles/ProjectListCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" * Provides a handle to a person card in the project list panel.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"public class ProjectListCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String STATUS_FIELD_ID \u003d \"#status\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String CLIENT_EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String SOURCE_FIELD_ID \u003d \"#source\";","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String ACCEPTED_ON_FIELD_ID \u003d \"#acceptedOn\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String DEADLINE_FIELD_ID \u003d \"#deadline\";","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label idLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label nameLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label statusLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label clientEmailLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label sourceLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label acceptedOnLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label deadlineLabel;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code ProjectListCardHandle} with the default details.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"    public ProjectListCardHandle(Node cardNode) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        super(cardNode);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        statusLabel \u003d getChildNode(STATUS_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        clientEmailLabel \u003d getChildNode(CLIENT_EMAIL_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        sourceLabel \u003d getChildNode(SOURCE_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        acceptedOnLabel \u003d getChildNode(ACCEPTED_ON_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        deadlineLabel \u003d getChildNode(DEADLINE_FIELD_ID);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"    public String getId() {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        return idLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    public String getName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"        return nameLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    public String getStatus() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        return statusLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"    public String getClientEmail() {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        return clientEmailLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"    public String getSource() {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        return sourceLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"    public String getAcceptedOn() {","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"RubyNguyen07"},"content":"        return acceptedOnLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"RubyNguyen07"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"RubyNguyen07"},"content":"        return deadlineLabel.getText();","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns true if this handle contains {@code project}.","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean equals(Project project) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"RubyNguyen07"},"content":"        return getName().equals(project.getName().toString())","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getStatus().equals(project.getStatus())","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getClientEmail().equals(project.getClientEmail())","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getSource().equals(project.getSource())","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getDescription().equals(project.getDescription())","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getAcceptedOn().equals(project.getAcceptedOn())","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getDeadline().equals(project.getDeadline());","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":91}},{"path":"src/test/java/guitests/guihandles/SpecialProjectListCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":" * Provides a handle to a person card in the special project list panel.","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"public class SpecialProjectListCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"     * Provides a handle to a special project card in the special project list panel.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String STATUS_FIELD_ID \u003d \"#status\";","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String CLIENT_EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String DEADLINE_FIELD_ID \u003d \"#deadline\";","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label idLabel;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label nameLabel;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label statusLabel;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label clientEmailLabel;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    private final Label deadlineLabel;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"     * Creates a {@code SpecialProjectListCardHandle} with the default details.","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    public SpecialProjectListCardHandle(Node cardNode) {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        super(cardNode);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        statusLabel \u003d getChildNode(STATUS_FIELD_ID);","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        clientEmailLabel \u003d getChildNode(CLIENT_EMAIL_FIELD_ID);","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        deadlineLabel \u003d getChildNode(DEADLINE_FIELD_ID);","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    public String getId() {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        return idLabel.getText();","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"    public String getName() {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        return nameLabel.getText();","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"    public String getStatus() {","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        return statusLabel.getText();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    public String getClientEmail() {","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"        return clientEmailLabel.getText();","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        return deadlineLabel.getText();","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"     * Returns true if this handle contains {@code specialproject}.","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"    public boolean equals(Project project) {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        return getName().equals(project.getName().toString())","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getStatus().equals(project.getStatus())","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getClientEmail().equals(project.getClientEmail())","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"                \u0026\u0026 getDeadline().equals(project.getDeadline());","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"RubyNguyen07":71}},{"path":"src/test/java/guitests/guihandles/guiexceptions/NodeNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles.guiexceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":" * Signals that the node cannot be found.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"public class NodeNotFoundException extends NoSuchElementException {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":10}},{"path":"src/test/java/guitests/guihandles/guiexceptions/StageNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package guitests.guihandles.guiexceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":" * Signals that the stage cannot be found.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"public class StageNotFoundException extends NoSuchElementException {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":9}},{"path":"src/test/java/mycelium/mycelium/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"immanuelhume":1,"-":57}},{"path":"src/test/java/mycelium/mycelium/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"immanuelhume":1,"-":26}},{"path":"src/test/java/mycelium/mycelium/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.core;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                                              int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":2,"-":133}},{"path":"src/test/java/mycelium/mycelium/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotNull(AppUtil.getImage(\"/images/mycelium.png\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"StanleyNeoh":1,"immanuelhume":7,"-":30}},{"path":"src/test/java/mycelium/mycelium/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"immanuelhume":6,"-":101}},{"path":"src/test/java/mycelium/mycelium/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Config;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":4,"-":112}},{"path":"src/test/java/mycelium/mycelium/commons/util/DateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isBeforeToday;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isWithinThisAndNextWeek;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"public class DateUtilTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    public void throwsExceptionWhenDateIsNullForWithinTwoWeeks() {","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(NullPointerException.class, () -\u003e isWithinThisAndNextWeek(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"    public void throwsExceptionWhenDateIsNullForIsBeforeToday() {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(NullPointerException.class, () -\u003e isBeforeToday(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public void isWithinTwoWeeks_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(isWithinThisAndNextWeek(LocalDate.now().plusDays(3)));","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    public void isWithinTwoWeeks_wrong() {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(isWithinThisAndNextWeek(LocalDate.now().plusDays(50)));","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    public void isBeforeToday_wrong() {","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(isBeforeToday(LocalDate.now().plusDays(2)));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"    public void isBeforeToday_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(isBeforeToday(LocalDate.now().minusDays(2)));","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"RubyNguyen07":45}},{"path":"src/test/java/mycelium/mycelium/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":4,"-":20}},{"path":"src/test/java/mycelium/mycelium/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.TestUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":3,"-":42}},{"path":"src/test/java/mycelium/mycelium/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"immanuelhume":2,"-":141}},{"path":"src/test/java/mycelium/mycelium/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddClientCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.storage.StorageManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    private static final int NUM_OF_VALID_STATUSES \u003d 3;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        String cmd \u003d \"dp -pn apsdoifapfwoi\";","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        assertCommandException(cmd, Messages.MESSAGE_INVALID_PROJECT);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        String cmd \u003d String.format(\"c -cn %s -e %s\", WEST.getName(), WEST.getEmail());","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, String.format(AddClientCommand.MESSAGE_SUCCESS, WEST), model);","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        // Execute add client command","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        var name \u003d \"Alice\";","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        var email \u003d \"alice@baker.org\";","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        var client \u003d new Client(new Name(name), new Email(email));","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        var addCmd \u003d AddClientCommand.COMMAND_ACRONYM + \" -cn \" + name + \" -e \" + email;","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        expModel.addClient(client);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(addCmd, CommandException.class, expectedMessage, expModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClientList().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"RubyNguyen07"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredProjectList().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getDueProjectList().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"RubyNguyen07"},"content":"    public void getOverdueProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getOverdueProjectList().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"RubyNguyen07"},"content":"    public void getProjectStatistics_containsThreeKeys_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(NUM_OF_VALID_STATUSES, logic.getProjectStatistics().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                                      Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                                      String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                                      String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"StanleyNeoh":1,"immanuelhume":36,"-":128,"RubyNguyen07":21}},{"path":"src/test/java/mycelium/mycelium/logic/commands/AddClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class AddClientCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     * We don\u0027t use a stub for the model, and directly use the ModelManager","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"     * class. This is because the ModelManager already has unit and integration","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     * tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    private ModelManager model \u003d new ModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    public void constructor_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddClientCommand(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    public void execute_clientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        // For this test, we create a dummy client, add it through the model,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        // and assert that the model now sees the client, and that the command\u0027s","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        // feedback is what we expect.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        var client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new AddClientCommand(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        var msg \u003d String.format(AddClientCommand.MESSAGE_SUCCESS, client);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(msg);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        expModel.addClient(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, model);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    public void execute_duplicateClient_throwsCommandException() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        var client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new AddClientCommand(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        model.addClient(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasClient(client));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, AddClientCommand.MESSAGE_DUPLICATE_CLIENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        // Create two clients with different emails. All else identical.","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        Client alice \u003d new ClientBuilder().withEmail(\"alice@silkroad.com\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        Client bob \u003d new ClientBuilder().withEmail(\"bob@silkroad.com\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand addAlice \u003d new AddClientCommand(alice);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand addBob \u003d new AddClientCommand(bob);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cAddClientCommand, AddClientCommand\u003e\u003e equalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            \"same object\",","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addAlice, addAlice),","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"            \"same fields, different object\",","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addAlice, new AddClientCommand(alice)),","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"            \"same email, different fields\",","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addAlice,","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"                new AddClientCommand(new ClientBuilder().withEmail(alice.getEmail().value)","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"                    .withName(\"not alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"                    .build()))","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        equalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cAddClientCommand, Object\u003e\u003e notEqualTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"            \"different email\", Pair.of(addAlice, addBob),","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"            \"null\", Pair.of(addAlice, null),","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"            \"different type\", Pair.of(addAlice, 1)","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        notEqualTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"            assertNotEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":100}},{"path":"src/test/java/mycelium/mycelium/logic/commands/AddProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class AddProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"     * We don\u0027t use a stub for the model, and directly use the ModelManager","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     * class. This is because the ModelManager already has unit and integration","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"     * tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    private ModelManager model \u003d new ModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    public void constructor_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddProjectCommand(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    public void execute_projectAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        var project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new AddProjectCommand(project);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(String.format(AddProjectCommand.MESSAGE_SUCCESS, project));","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        expModel.addProject(project);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    public void execute_duplicateProject_throwsCommandException() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        var project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new AddProjectCommand(project);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(project);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasProject(project));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, AddProjectCommand.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        Project bing \u003d new ProjectBuilder().withName(\"Bing\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        Project bard \u003d new ProjectBuilder().withName(\"Bard\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand addBing \u003d new AddProjectCommand(bing);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand addBard \u003d new AddProjectCommand(bard);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cAddProjectCommand, AddProjectCommand\u003e\u003e equalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"            \"same object\",","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addBing, addBing),","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            \"same fields, different object\",","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addBing, new AddProjectCommand(bing)),","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"            \"same name, different fields\",","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(addBing,","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"                new AddProjectCommand(new ProjectBuilder().withName(\"Bing\")","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"                    .withClientEmail(\"hogriders@coc.org\")","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"                    .build()))","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        equalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cAddProjectCommand, Object\u003e\u003e unequalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"            \"different name\", Pair.of(addBing, addBard),","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            \"null\", Pair.of(addBing, null),","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"            \"different type\", Pair.of(addBing, 1)","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        unequalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"            assertNotEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":92}},{"path":"src/test/java/mycelium/mycelium/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.DoNothingAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.ExitAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.ShowHelpAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", new DoNothingAction())));","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", new ShowHelpAction())));","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", new ExitAction())));","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", new ShowHelpAction()).hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", new ExitAction()).hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"StanleyNeoh":9,"immanuelhume":1,"-":48}},{"path":"src/test/java/mycelium/mycelium/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.CliSyntax;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \" \"; // spaces not allowed in names","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + CliSyntax.PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    public static final String","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        INVALID_ADDRESS_DESC \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        \" \" + CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    // empty string not allowed for addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        List\u003cClient\u003e expectedClientList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredClientList());","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        List\u003cProject\u003e expectedProjectList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredProjectList());","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedClientList, actualModel.getFilteredClientList());","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProjectList, actualModel.getFilteredProjectList());","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"immanuelhume":32,"-":67,"Douglch":1}},{"path":"src/test/java/mycelium/mycelium/logic/commands/DeleteClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class DeleteClientCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    // TODO add more tests in the manner of DeleteCommandTest.java! The tests we","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    // have now are very basic, and I have written them in a rush.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    private ModelManager model \u003d new ModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    public void execute_validEmail_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        var client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        model.addClient(client);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasClient(client));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new DeleteClientCommand(client.getEmail());","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(String.format(DeleteClientCommand.MESSAGE_DELETE_PERSON_SUCCESS, client));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager(); // empty model","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    public void execute_nonExistentEmail_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new DeleteClientCommand(new Email(\"hogriders@coc.org\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_CLIENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        DeleteClientCommand deleteAlice \u003d new DeleteClientCommand(new Email(\"alice@coc.org\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        DeleteClientCommand deleteBob \u003d new DeleteClientCommand(new Email(\"bob@coc.org\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cDeleteClientCommand, DeleteClientCommand\u003e\u003e equalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            \"same object\", Pair.of(deleteAlice, deleteAlice),","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"            \"same email, different object\", Pair.of(deleteAlice, new DeleteClientCommand(new Email(\"alice@coc.org\")))","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        equalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cDeleteClientCommand, Object\u003e\u003e unequalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            \"different email\", Pair.of(deleteAlice, deleteBob),","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            \"different type\", Pair.of(deleteAlice, new Object()),","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            \"null\", Pair.of(deleteAlice, null)","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        unequalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            assertNotEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":71}},{"path":"src/test/java/mycelium/mycelium/logic/commands/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    // TODO add more tests in the manner of DeleteCommandTest.java! The tests we","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    // have now are very basic, and I have written them in a rush.","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    private ModelManager model \u003d new ModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    public void execute_validName_success() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        var project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(project);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasProject(project));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new DeleteProjectCommand(project.getName());","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, project);","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager(); // empty model","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    public void execute_nonExistentName_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand cmd \u003d new DeleteProjectCommand(NonEmptyString.of(\"Team Fortress 3\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_PROJECT);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand deleteBing \u003d new DeleteProjectCommand(NonEmptyString.of(\"Bing\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand deleteBard \u003d new DeleteProjectCommand(NonEmptyString.of(\"Bard\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cDeleteProjectCommand, DeleteProjectCommand\u003e\u003e equalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"            \"same object\", Pair.of(deleteBing, deleteBing),","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"            \"same name, different object\", Pair.of(deleteBing, new DeleteProjectCommand(NonEmptyString.of(\"Bing\")))","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        equalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(tt.first, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cDeleteProjectCommand, Object\u003e\u003e unequalTests \u003d Map.of(","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            \"different type\", Pair.of(deleteBing, new Object()),","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            \"different name\", Pair.of(deleteBing, deleteBard),","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            \"null\", Pair.of(deleteBing, null)","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        unequalTests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            assertFalse(tt.first.equals(tt.second), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":72}},{"path":"src/test/java/mycelium/mycelium/logic/commands/UpdateClientCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.RANTARO;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.UpdateClientDescriptorBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"public class UpdateClientCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    private static final Email EMAIL \u003d WEST.getEmail();","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    private static final UpdateClientCommand.UpdateClientDescriptor EMPTY_DESC \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        new UpdateClientCommand.UpdateClientDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    private static final UpdateClientCommand.UpdateClientDescriptor NEW_DESC \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        new UpdateClientCommand.UpdateClientDescriptor(RANTARO);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.CLIENT));","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    public void execute_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand \u003d new UpdateClientCommand(EMAIL, EMPTY_DESC);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e updateClientCommand.execute(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    public void execute_clientNotPresent_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        // Client not present in model","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand \u003d new UpdateClientCommand(EMAIL, EMPTY_DESC);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(updateClientCommand, model, Messages.MESSAGE_INVALID_CLIENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    public void execute_clientNoFieldEdited_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand \u003d new UpdateClientCommand(EMAIL, EMPTY_DESC);","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        model.addClient(new ClientBuilder().withEmail(EMAIL.value).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(updateClientCommand, model, UpdateClientCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    public void execute_clientEdited_success() throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"        // Client present in model, all fields edited","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand \u003d new UpdateClientCommand(EMAIL, NEW_DESC);","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"        model.addClient(WEST);","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"        updateClientCommand.execute(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"        // New desc is updated with Rantaro\u0027s detail","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"        assertTrue(model.hasClient(RANTARO));","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    public void execute_clientUpdateEmailOnly_success() throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        // Client present in model, email edited","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        var desc \u003d new UpdateClientCommand.UpdateClientDescriptor();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"        desc.setEmail(RANTARO.getEmail());","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateClientCommand(EMAIL, desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"        model.addClient(WEST);","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        var updatedClient \u003d new ClientBuilder(WEST).withEmail(RANTARO.getEmail()).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateClientCommand.MESSAGE_SUCCESS, updatedClient);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        expModel.addClient(updatedClient);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"    public void execute_clientUpdateOptionsWithoutNewEmail_success() throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand.UpdateClientDescriptor desc \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"            new UpdateClientDescriptorBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"                .withName(\"Rocky Balboa\")","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"                .withYearOfBirth(\"1990\")","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"                .withSource(\"Rocky 2\")","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"                .withMobileNumber(\"12345678\")","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"        Client client \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"            new ClientBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"                .withName(\"Rocky Balboa\")","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"                .withEmail(EMAIL.value)","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"                .withYearOfBirth(\"1990\")","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"                .withSource(\"Rocky 2\")","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"                .withMobileNumber(\"12345678\")","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"                .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"        model.addClient(WEST);","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateClientCommand.MESSAGE_SUCCESS, client);","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"        expModel.addClient(client);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand \u003d new UpdateClientCommand(EMAIL, desc);","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(updateClientCommand, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    public void execute_sameEmailButOtherChanges_success() {","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateClientCommand(WEST.getEmail(),","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"            new UpdateClientDescriptorBuilder(NEW_DESC).withEmail(WEST.getEmail()).build());","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"        model.addClient(WEST);","lastModifiedDate":"2023-04-05"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        var updatedClient \u003d new ClientBuilder(RANTARO).withEmail(WEST.getEmail()).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateClientCommand.MESSAGE_SUCCESS, updatedClient);","lastModifiedDate":"2023-04-05"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-04-05"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        expModel.addClient(updatedClient);","lastModifiedDate":"2023-04-05"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-04-05"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"    public void equals() {","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand.UpdateClientDescriptor desc1 \u003d new UpdateClientCommand.UpdateClientDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand.UpdateClientDescriptor desc2 \u003d new UpdateClientCommand.UpdateClientDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"        desc1.setEmail(EMAIL);","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"        desc2.setEmail(EMAIL);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand1 \u003d new UpdateClientCommand(EMAIL, desc1);","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand2 \u003d new UpdateClientCommand(EMAIL, desc2);","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand3 \u003d new UpdateClientCommand(EMAIL, desc1);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand updateClientCommand4 \u003d new UpdateClientCommand(EMAIL, desc2);","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"        assertEquals(updateClientCommand1, updateClientCommand2);","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"        assertEquals(updateClientCommand3, updateClientCommand4);","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"        assertEquals(updateClientCommand2, updateClientCommand1);","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"        assertEquals(updateClientCommand1, updateClientCommand3);","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"        assertEquals(updateClientCommand2, updateClientCommand4);","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"immanuelhume":49,"Douglch":96}},{"path":"src/test/java/mycelium/mycelium/logic/commands/UpdateProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BARD;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BING;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.Function;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.uiaction.TabSwitchAction;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.UpdateProjectDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"public class UpdateProjectCommandTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    private static final UpdateProjectCommand.UpdateProjectDescriptor EMPTY_DESC \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        new UpdateProjectCommand.UpdateProjectDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    // The two sample inputs below change \"foobar\" to \"barfoo\"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    private static final NonEmptyString SAMPLE_NAME \u003d new NonEmptyString(\"foobar\");","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    private static final NonEmptyString SAMPLE_NEW_NAME \u003d new NonEmptyString(\"barfoo\");","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    private static final Function\u003cString, CommandResult\u003e buildCommandResult \u003d (msg)","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        -\u003e new CommandResult(msg, new TabSwitchAction(TabSwitchAction.TabSwitch.PROJECT));","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    private static final UpdateProjectCommand.UpdateProjectDescriptor SAMPLE_DESC \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        new UpdateProjectDescriptorBuilder()","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            .withName(SAMPLE_NEW_NAME)","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            .build();","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    // Use an empty address book here","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    private Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(SAMPLE_NAME, SAMPLE_DESC);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e cmd.execute(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    public void execute_projectNotExist_throwsCommandException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(SAMPLE_NAME, SAMPLE_DESC);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, Messages.MESSAGE_INVALID_PROJECT);","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    public void execute_duplicateName_throwsCommandException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(SAMPLE_NAME, SAMPLE_DESC);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        // Add both projects in","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(new ProjectBuilder().withName(SAMPLE_NAME).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(new ProjectBuilder().withName(SAMPLE_NEW_NAME).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, UpdateProjectCommand.MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"    public void execute_noChanges_throwsCommandException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(SAMPLE_NAME, EMPTY_DESC);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(new ProjectBuilder().withName(SAMPLE_NAME).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, UpdateProjectCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"    public void execute_validArgs_success() throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(SAMPLE_NAME, SAMPLE_DESC);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(new ProjectBuilder().withName(SAMPLE_NAME).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        var updatedProject \u003d new ProjectBuilder().withName(SAMPLE_NEW_NAME).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateProjectCommand.MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        expModel.addProject(updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    public void execute_changeMultipleFields_success() throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        // Now we\u0027ll insert BING, change it to BARD, then assert that we have BARD and no BING","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(), new UpdateProjectDescriptorBuilder(BARD).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        cmd.execute(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        // TODO: refactor to use `assertCommandSuccess`","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(model.hasProject(BING));","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasProject(BARD));","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    public void execute_keepNameChangeField_success() throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        var newDeadline \u003d \"30/12/1970\";","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(),","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectDescriptorBuilder().withDeadline(newDeadline).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        var updatedProject \u003d new ProjectBuilder(BING).withDeadline(newDeadline).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateProjectCommand.MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        expModel.addProject(updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    public void execute_changeNameOnly_success() throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"        var newName \u003d \"billabong\";","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(),","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectDescriptorBuilder().withName(newName).build());","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        var updatedProject \u003d new ProjectBuilder(BING).withName(newName).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateProjectCommand.MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        expModel.addProject(updatedProject);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"    public void execute_nameRemainsTheSame_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(),","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectDescriptorBuilder().withName(BING.getName()).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, UpdateProjectCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    public void execute_allFieldsRemainTheSame_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(), new UpdateProjectDescriptorBuilder(BING).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"        assertCommandFailure(cmd, model, UpdateProjectCommand.MESSAGE_NOT_UPDATED);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"    public void execute_allFieldsSameExceptName_success() throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BING.getName(),","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectDescriptorBuilder(BING).withName(BARD.getName()).build());","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BING);","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"        cmd.execute(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"        // TODO: refactor to use `assertCommandSuccess`","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(model.hasProject(BING)); // BING should not be in the model","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(model.hasProject(BARD)); // BARD should be in the model","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"    public void execute_sameNameButOtherChanges_success() {","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"        var cmd \u003d new UpdateProjectCommand(BARD.getName(),","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectDescriptorBuilder(BING).withName(BARD.getName()).build());","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"        model.addProject(BARD);","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"        var updatedProject \u003d new ProjectBuilder(BING).withName(BARD.getName()).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"        var expMsg \u003d String.format(UpdateProjectCommand.MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject);","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"        var expRes \u003d buildCommandResult.apply(expMsg);","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"        var expModel \u003d new ModelManager();","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"        expModel.addProject(updatedProject);","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"        assertCommandSuccess(cmd, model, expRes, expModel);","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"immanuelhume":174}},{"path":"src/test/java/mycelium/mycelium/logic/commands/exceptions/CommandExceptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.logic.commands.exceptions;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"StanleyNeoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"StanleyNeoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.ExitAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.ShowHelpAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.logic.uiaction.UiAction;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"public class CommandExceptionTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"StanleyNeoh"},"content":"    public void constructor_nullAction_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"StanleyNeoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandException(\"message\", (UiAction) null));","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"    public void constructor_validMessage_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandException \u003d new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(\"message\", commandException.getMessage());","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"StanleyNeoh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandException \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionCopy \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentMessage \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"different message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentAction \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ShowHelpAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentMessageAndAction \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"different message\", new ShowHelpAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"StanleyNeoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"StanleyNeoh"},"content":"        assertTrue(commandException.equals(commandException));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        assertTrue(commandException.equals(commandExceptionCopy));","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandException.equals(1));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandException.equals(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"        // different message -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandException.equals(commandExceptionWithDifferentMessage));","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"StanleyNeoh"},"content":"        // different action -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandException.equals(commandExceptionWithDifferentAction));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"StanleyNeoh"},"content":"        // different message and action -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(commandException.equals(commandExceptionWithDifferentMessageAndAction));","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandException \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionCopy \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentMessage \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"different message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentAction \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"message\", new ShowHelpAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandExceptionWithDifferentMessageAndAction \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"StanleyNeoh"},"content":"            new CommandException(\"different message\", new ShowHelpAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"StanleyNeoh"},"content":"        // same object -\u003e returns same hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(commandException.hashCode(), commandException.hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"StanleyNeoh"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(commandException.hashCode(), commandExceptionCopy.hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":81,"author":{"gitId":"StanleyNeoh"},"content":"        // different message -\u003e returns different hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotEquals(commandException.hashCode(), commandExceptionWithDifferentMessage.hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"StanleyNeoh"},"content":"        // different action -\u003e returns different hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotEquals(commandException.hashCode(), commandExceptionWithDifferentAction.hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"        // different message and action -\u003e returns different hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"        assertNotEquals(commandException.hashCode(), commandExceptionWithDifferentMessageAndAction.hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"StanleyNeoh"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"StanleyNeoh"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"StanleyNeoh"},"content":"    public void getMessage() {","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"StanleyNeoh"},"content":"        CommandException commandException \u003d new CommandException(\"message\", new ExitAction());","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(\"message\", commandException.getMessage());","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"StanleyNeoh"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"StanleyNeoh"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"StanleyNeoh":96}},{"path":"src/test/java/mycelium/mycelium/logic/parser/AddClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddClientCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class AddClientCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    public void parse_missingRequiredArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        // Just a silly little check, so that we can use -cn and -e verbatim in","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        // our test cases instead of relying on this variable.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_NAME.getPrefix(), \"-cn \");","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        // For each of the following cases, we expect the parser to throw an exception.","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"empty string\", \"\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"only whitespace\", \" \"),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no name\", \"-cn\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no name (whitespace)\", \"-cn \"),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no whitespace\", \"-cnBob\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no email\", \"-e\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no email (whitespace)\", \"-e \"),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no whitespace\", \"-ehogrider@coc.org\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"prefixes are not separated\", \"-cn-e\"),","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"name and email not separated\", \"-cnBob-ehogrider@coc.org\")","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        String expectedErr \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(new AddClientCommandParser(), input, expectedErr, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_NAME.getPrefix(), \"-cn \");","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        // For each of the following cases, we expect the parser to throw an exception.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cString, String\u003e\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"name is whitespace\", Pair.of(\"-cn   -e hogrider@coc.org\", Name.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"email is whitespace\", Pair.of(\"-cn Bob -e   \", Email.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid email\", Pair.of(\"-cn Bob -e foobar\", Email.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid mobile number\",","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn Jamal -e jamal@hogriders.org -mn hogridaaaa\", Phone.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid source (empty)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn Jamal -e jamal@hogriders.org -src \", Messages.MESSAGE_EMPTY_SOURCE)),","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid year of birth\",","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn Jamal -e jamal@hogriders.org -y 42069\", YearOfBirth.MESSAGE_CONSTRAINTS))","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt.first;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(new AddClientCommandParser(), input, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    public void parse_validInput_success() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_NAME.getPrefix(), \"-cn \");","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        // Suppose we are trying to add Jamal (or Jamal the Hogrider) from jamal@hogriders.org.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand addJamal \u003d new AddClientCommand(","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"            new ClientBuilder().withName(\"jamal\").withEmail(\"jamal@hogriders.org\").build());","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"            addJamalTheHogrider \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            new AddClientCommand(new ClientBuilder().withName(\"Jamal the Hogrider\")","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"                .withEmail(\"jamal@hogriders.org\")","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"                .build());","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cString, AddClientCommand\u003e\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"name first, then email\", Pair.of(\"-cn Jamal -e jamal@hogriders.org\", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"email first, then name\", Pair.of(\"-e jamal@hogriders.org -cn Jamal\", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"trailing whitespace\", Pair.of(\"-cn Jamal -e jamal@hogriders.org  \", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple words in name\",","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn Jamal the Hogrider -e jamal@hogriders.org\", addJamalTheHogrider)),","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple names\", Pair.of(\"-e jamal@hogriders.org -cn Alice -cn jamal\", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple emails\", Pair.of(\"-cn jamal -e alice@bakers.com -e jamal@hogriders.org\", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple names and emails\",","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn Alice -e alice@bakers.com -cn jamal -e jamal@hogriders.org\", addJamal)),","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"all arguments present\",","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-cn jamal -e jamal@hogriders.org -mn 62353535 -src Fiverr -y 1843\", addJamal))","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        for (String desc : tests.keySet()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tests.get(desc).first;","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"            AddClientCommand want \u003d tests.get(desc).second;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"            assertParseSuccess(new AddClientCommandParser(), input, want, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"immanuelhume":110}},{"path":"src/test/java/mycelium/mycelium/logic/parser/AddProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"public class AddProjectCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public void parse_missingRequiredArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_PROJECT_NAME.getPrefix(), \"-pn \");","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        // For each of the following cases, we expect the parser to throw an exception.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"empty string\", \"\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"only whitespace\", \" \"),","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no name\", \"-pn\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no name (whitespace)\", \"-pn \"),","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has name prefix only, but no whitespace\", \"-pnBing\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no email\", \"-e\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no email (whitespace)\", \"-e \"),","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"has email prefix only, but no whitespace\", \"-ejamal@hogriders.org\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"prefixes are not separated\", \"-pn-e\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"name and email not separated\", \"-pnBing-ejamal@hogriders.org\")","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        String expectedOutput \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(new AddProjectCommandParser(), input, expectedOutput, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_PROJECT_NAME.getPrefix(), \"-pn \");","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        String basic \u003d \"-pn Bing -e jamal@hogriders.org \";","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        // For each of the following cases, we expect the parser to throw an exception.","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cString, String\u003e\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid name (whitespace)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn  -e jamal@hogriders.org\", Messages.MESSAGE_EMPTY_PROJECT_NAME)),","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid email (whitespace)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e \", Email.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid email (empty as last arg)\",","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e\", Email.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid email\",","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e foobar\", Email.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid acceptedOn (not even a date)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-ad notadate\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid acceptedOn (wrong date format)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-ad 2020-01-01\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid acceptedOn (date but with time)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-ad 2020-01-01 12:00\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid acceptedOn (30th Feb)\" ,","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-ad 30/02/2000\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid deadline (not even a date)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-dd notadate\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid deadline (wrong date format)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-dd 2020-01-01\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid deadline (date but with time)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-dd 2020/01/01 12:00\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid deadline (30th Feb)\" ,","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-dd 30/02/2000\", Messages.MESSAGE_INVALID_DATE)),","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid source (empty)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-src \", Messages.MESSAGE_EMPTY_SOURCE)),","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid status (empty)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-s \", ProjectStatus.MESSAGE_CONSTRAINTS)),","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid status (wrong words)\",","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(basic + \"-s hog_riders\", ProjectStatus.MESSAGE_CONSTRAINTS))","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt.first;","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(new AddProjectCommandParser(), input, tt.second, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    public void parse_validArgs_success() throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_PROJECT_NAME.getPrefix(), \"-pn \");","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(CliSyntax.PREFIX_CLIENT_EMAIL.getPrefix(), \"-e \");","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        // We use these commands to compare against the parser\u0027s output.","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand addBing \u003d new AddProjectCommand(new ProjectBuilder().withName(\"Bing\").build());","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand addMicrosoftBing \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"            new AddProjectCommand(new ProjectBuilder().withName(\"Microsoft Bing\").build());","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        // For each of the following cases, we expect the parser to return the correct command.","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cString, AddProjectCommand\u003e\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"name first, email second\",","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e jamal@hogriders.org\", addBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"email first, name second\",","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-e jamal@hogriders.org -pn Bing\", addBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"trailing whitespace\",","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e jamal@hogriders.org  \", addBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple words in project name\",","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Microsoft Bing -e jamal@hogriders.org\", addMicrosoftBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple names\",","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-e jamal@hogriders.org -pn Bing -pn Microsoft Bing\", addMicrosoftBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple emails\",","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e jamar@hogriders.org -e jamal@hogriders.org\", addBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"multiple names and emails\",","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -pn Microsoft Bing -e jamar@hogriders.org -e jamal@hogriders.org\", addMicrosoftBing)),","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"empty description\",","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(\"-pn Bing -e jamal@hogriders.org -d \", addBing)),","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"all arguments present\",","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"                Pair.of(","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"                    \"-pn Bing -e jamal@hogriders.org -ad 01/01/1970 -dd 02/01/1970 -src Fiverr -d This is a \"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"                        + \"description -s in_progress\",","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"                    addBing))","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"        for (String desc : tests.keySet()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tests.get(desc).first;","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"            AddProjectCommand expected \u003d tests.get(desc).second;","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"            assertParseSuccess(new AddProjectCommandParser(), input, expected, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"immanuelhume":142}},{"path":"src/test/java/mycelium/mycelium/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddClientCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.AddProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.DeleteClientCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    public void parseCommand_createClient() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        String input \u003d AddClientCommand.COMMAND_ACRONYM + \" -cn Jamal -e jamal@hogriders.org\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand got \u003d (AddClientCommand) parser.parseCommand(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        AddClientCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            want \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            new AddClientCommand(new ClientBuilder().withName(\"Jamal\").withEmail(\"jamal@hogriders.org\").build());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(want, got);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public void parseCommand_createProject() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        String input \u003d AddProjectCommand.COMMAND_ACRONYM + \" -pn Bing -e jamal@hogriders.org\";","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand got \u003d (AddProjectCommand) parser.parseCommand(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        AddProjectCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            want \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            new AddProjectCommand(new ProjectBuilder().withName(\"Bing\").withClientEmail(\"jamal@hogriders.org\").build());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(want, got);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    public void parseCommand_deleteClient() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        String input \u003d DeleteClientCommand.COMMAND_ACRONYM + \" -e jamal@hogriders.org\";","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        DeleteClientCommand got \u003d (DeleteClientCommand) parser.parseCommand(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        DeleteClientCommand want \u003d new DeleteClientCommand(new Email(\"jamal@hogriders.org\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(want, got);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    public void parseCommand_deleteProject() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        String input \u003d DeleteProjectCommand.COMMAND_ACRONYM + \" -pn Bing\";","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand got \u003d (DeleteProjectCommand) parser.parseCommand(input);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand want \u003d new DeleteProjectCommand(NonEmptyString.of(\"Bing\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(want, got);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    public void parseCommand_updateProject() throws Exception {","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        var input \u003d UpdateProjectCommand.COMMAND_ACRONYM + \" -pn Bing -e foo@bar.com\";","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        var descriptor \u003d new UpdateProjectCommand.UpdateProjectDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setClientEmail(new Email(\"foo@bar.com\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        var got \u003d (UpdateProjectCommand) parser.parseCommand(input);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        var want \u003d new UpdateProjectCommand(NonEmptyString.of(\"Bing\"), descriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(want, got);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, Messages.MESSAGE_CHECK_USER_GUIDE), ()","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"            Messages.MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"immanuelhume":65,"-":19}},{"path":"src/test/java/mycelium/mycelium/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    private final Prefix dashSrc \u003d new Prefix(\"-src \"); // note the whitespace","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"    public void tokenize_prefixAtBackWithWhitespace() {","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"        var argString \u003d \"... -src foobar -src\";","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"        var got \u003d ArgumentTokenizer.tokenize(argString, dashSrc);","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        assertArgumentPresent(got, dashSrc, \"foobar\", \"\");","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"immanuelhume":10,"-":149}},{"path":"src/test/java/mycelium/mycelium/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                                          Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"     * The same as {@code assertParseSuccess} but with a custom message.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"                                          Command expectedCommand, String msg) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(expectedCommand, command, msg);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"     * The same as {@code assertParseFailure} but with a custom message.","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser,","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"                                          String userInput,","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"                                          String expectedMessage,","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"                                          String msg) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            parser.parse(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(expectedMessage, pe.getMessage(), msg);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"immanuelhume":34,"-":35}},{"path":"src/test/java/mycelium/mycelium/logic/parser/DeleteClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.DeleteClientCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"public class DeleteClientCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    // This command is simple, as it should look like this:","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"    //   dc -e EMAIL","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"    // So our tests are simple as well!","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    private DeleteClientCommandParser parser \u003d new DeleteClientCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    public void parse_missingRequiredArgs_fails() {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"            \"empty string\", \"\",","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"            \"only whitespace\", \" \"","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        String expectedErr \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(parser, input, expectedErr, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public void parse_invalidEmail_fails() {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            \"email is whitespace\", \"-e \",","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            \"email is empty\", \"-e\",","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            \"invalid email\", \"-e foobar\"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(parser, input, Email.MESSAGE_CONSTRAINTS, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    public void parse_validEmail_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        DeleteClientCommand want \u003d new DeleteClientCommand(new Email(\"jamal@hogriders.org\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            \"valid email\", \"-e jamal@hogriders.org\",","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            \"valid email with trailing whitespace\", \"-e jamal@hogriders.org   \",","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            \"multiple emails\", \"-e jamar@hogriders.org -e jamal@hogriders.org\"","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"            assertParseSuccess(parser, input, want, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"immanuelhume":60}},{"path":"src/test/java/mycelium/mycelium/logic/parser/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"sachindavid96"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"sachindavid96"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"sachindavid96"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"sachindavid96"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"sachindavid96"},"content":"import mycelium.mycelium.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"sachindavid96"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"sachindavid96"},"content":"    // This command is simple, as it should look like this:","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"sachindavid96"},"content":"    //   dp -pn PROJECT_NAME","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"sachindavid96"},"content":"    // So our tests are simple as well!","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"sachindavid96"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"sachindavid96"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"sachindavid96"},"content":"    public void parse_missingRequiredArgs_fails() {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"            \"empty string\", \"\",","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"            \"only whitespace\", \" \"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"sachindavid96"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        String expectedErr \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"sachindavid96"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"sachindavid96"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(parser, input, expectedErr, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"sachindavid96"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"sachindavid96"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"sachindavid96"},"content":"    public void parse_wrongArgs_fails() {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            \"delete project by email\", \"-e alicebaker@gmail.com\",","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            \"wrong prefix for project name\", \"-n Luminus\",","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            \"delete project by client name\", \"-cn NUS\"","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"sachindavid96"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        String expectedErr \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"sachindavid96"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"sachindavid96"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(parser, input, expectedErr, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"sachindavid96"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"sachindavid96"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"sachindavid96"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"sachindavid96"},"content":"    public void parse_validProjectName_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        DeleteProjectCommand want \u003d new DeleteProjectCommand(NonEmptyString.of(\"Luminus\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            \"valid project name\", \"-pn Luminus\",","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"            \"valid project name with leading whitespace\", \"-pn       Luminus\",","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            \"valid project name with trailing whitespace\", \"-pn Luminus      \"","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"sachindavid96"},"content":"        );","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"sachindavid96"},"content":"        tests.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"sachindavid96"},"content":"            String input \u003d \" \" + tt;","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            assertParseSuccess(parser, input, want, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"sachindavid96"},"content":"        });","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"sachindavid96"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"sachindavid96"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"sachindavid96":44,"immanuelhume":18}},{"path":"src/test/java/mycelium/mycelium/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Assert;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    private static final String INVALID_NAME \u003d \"   \";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    public void parseYearOfBirth_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseYearOfBirth(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"    public void parseYearOfBirth_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"            \"negative\", \"-1\",","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"            \"zero\", \"0\",","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"            \"too large\", \"10000\",","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"            \"not a number\", \"not a number\",","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"            \"empty\", \"\",","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"            \"whitespace\", \" \"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((key, value) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"            Assert.assertThrows(ParseException.class, YearOfBirth.MESSAGE_CONSTRAINTS, () -\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"                ParserUtil.parseYearOfBirth(value));","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"    public void parseYearOfBirth_validValue_returnsYearOfBirth() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        String[] tests \u003d {\"2000\", \"0000\", \"9999\", \"0001\"};","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"        for (String tt : tests) {","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"            YearOfBirth expectedYearOfBirth \u003d new YearOfBirth(tt);","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(expectedYearOfBirth, ParserUtil.parseYearOfBirth(tt));","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"    public void parseProjectStatus_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseProjectStatus(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"    public void parseProjectStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"            \"empty\", \"\",","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"            \"whitespace\", \" \",","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"            \"not a status\", \"not a status\"","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((key, value) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"            Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"                ProjectStatus.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseProjectStatus(value));","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"    public void parseProjectStatus_validValue_returnsProjectStatus() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"        String[] tests \u003d {\"in_progress\", \"done\", \"not_started\", \"IN_PROGRESS\", \"iN_pRoGrEsS\"};","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        for (String tt : tests) {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"            ProjectStatus expectedProjectStatus \u003d ProjectStatus.fromString(tt);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(expectedProjectStatus, ParserUtil.parseProjectStatus(tt));","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"    public void parseNonEmptyString_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNonEmptyString(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"    public void parseNonEmptyString_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"            \"empty\", \"\",","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"            \"whitespace\", \"    \"","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((key, value) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"            Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"                NonEmptyString.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseNonEmptyString(value));","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"    public void parseNonEmptyString_validValue_returnsNonEmptyString() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"            \"single word\", \"foo\",","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"            \"multiple words\", \"foo bar\",","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"            \"special characters\", \"!@#$%^\u0026*()_+\"","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"immanuelhume"},"content":"        for (var tt : tests.entrySet()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d tt.getValue();","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"            NonEmptyString want \u003d new NonEmptyString(input);","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(want, ParserUtil.parseNonEmptyString(input));","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"    public void parseLocalDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLocalDate(null, Project.DATE_FMT));","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"    public void parseLocalDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.ofEntries(","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"empty\", \"\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"whitespace\", \" \"),","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"not a date\", \"not a date\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"invalid format\", \"2020-01-01\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"day doesn\u0027t exist\", \"29/02/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"year less than 4 digits\", \"01/01/01\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"month less than 2 digits\", \"01/1/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"day less than 2 digits\", \"1/01/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"year \u003e 9999\", \"01/01/10000\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"month \u003e 12\", \"01/13/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"day \u003e 31\", \"32/01/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"zero month\", \"01/00/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"zero day\", \"00/01/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"negative month\", \"01/-01/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"immanuelhume"},"content":"            Map.entry(\"negative day\", \"-01/01/2001\")","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((key, value) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"immanuelhume"},"content":"            Assert.assertThrows(ParseException.class,","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"immanuelhume"},"content":"                Messages.MESSAGE_INVALID_DATE, () -\u003e ParserUtil.parseLocalDate(value, Project.DATE_FMT));","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":228,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":229,"author":{"gitId":"immanuelhume"},"content":"    public void parseLocalDate_validValue_returnsLocalDate() throws Exception {","lastModifiedDate":"2023-03-29"},{"lineNumber":230,"author":{"gitId":"immanuelhume"},"content":"        String[] tests \u003d {","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/2000\",","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/-0001\",","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/0000\",","lastModifiedDate":"2023-03-29"},{"lineNumber":234,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/0001\",","lastModifiedDate":"2023-03-29"},{"lineNumber":235,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/9999\",","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"immanuelhume"},"content":"            \"01/01/-9999\"","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"immanuelhume"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"immanuelhume"},"content":"        for (String tt : tests) {","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"immanuelhume"},"content":"            LocalDate want \u003d LocalDate.parse(tt, Project.DATE_FMT);","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertEquals(want, ParserUtil.parseLocalDate(tt, Project.DATE_FMT));","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":244,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"immanuelhume"},"content":"    public void parseProjectName_illegalValue_throwsParseException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":246,"author":{"gitId":"immanuelhume"},"content":"        for (var name : ParserUtil.ILLEGAL_PROJECT_NAMES) {","lastModifiedDate":"2023-04-04"},{"lineNumber":247,"author":{"gitId":"immanuelhume"},"content":"            var msg \u003d String.format(Messages.MESSAGE_ILLEGAL_PROJECT_NAME_FMT, name);","lastModifiedDate":"2023-04-04"},{"lineNumber":248,"author":{"gitId":"immanuelhume"},"content":"            Assert.assertThrows(ParseException.class, msg, () -\u003e ParserUtil.parseProjectName(name));","lastModifiedDate":"2023-04-04"},{"lineNumber":249,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":250,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"immanuelhume":172,"-":78,"Douglch":1}},{"path":"src/test/java/mycelium/mycelium/logic/parser/UpdateClientCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.ClientBuilder.DEFAULT_EMAIL;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.ClientBuilder.DEFAULT_MOBILE_NUMBER;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.ClientBuilder.DEFAULT_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.ClientBuilder.DEFAULT_SOURCE;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.ClientBuilder.DEFAULT_YEAR_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.UpdateClientCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.UpdateClientDescriptorBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"public class UpdateClientCommandParserTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        UpdateClientCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    private final UpdateClientCommandParser parser \u003d new UpdateClientCommandParser();","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public void parse_missingRequiredArgs_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        assertParseFailure(parser, \" -cn 123131\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"            \"-cn   \", Name.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"            \"-e2 433\", Email.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"            \"-y mallory\", YearOfBirth.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"            \"-src  \", Messages.MESSAGE_EMPTY_SOURCE,","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"            \"-mn scam\", Phone.MESSAGE_CONSTRAINTS","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        tests.forEach((tt, err) -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"            String input \u003d \" -e foobar@example.com \" + tt;","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"            assertParseFailure(parser, input, err);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        });","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    public void parse_requiredArgsGiven_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"        var input \u003d \" -e foobar@example.com\";","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"        var want \u003d new UpdateClientCommand(new Email(\"foobar@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"            new UpdateClientCommand.UpdateClientDescriptor());","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    public void parse_allArgsGiven_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"        var email \u003d \"aaa@example.com\";","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"        var desc \u003d new UpdateClientDescriptorBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"            .withName(\"John Doe\")","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"            .withEmail(email)","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"            .withYearOfBirth(\"2023\")","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"            .withSource(\"whited.com\")","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"            .withMobileNumber(\"999\")","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"            .build();","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"        var input \u003d String.format(\" -e %s -e2 %s -cn %s -src %s -y %s -mn %s\",","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"            DEFAULT_EMAIL, email, DEFAULT_NAME, DEFAULT_SOURCE, DEFAULT_YEAR_OF_BIRTH, DEFAULT_MOBILE_NUMBER);","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"        var want \u003d new UpdateClientCommand(new Email(DEFAULT_EMAIL), desc);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    public void parse_oldAndNewNamesIdentical_success() {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        var descriptor \u003d new UpdateClientDescriptorBuilder().withEmail(\"foobar@example.com\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        var input \u003d \" -e foobar@example.com -e2 foobar@example.com\";","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        var want \u003d new UpdateClientCommand(new Email(\"foobar@example.com\"), descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"immanuelhume":8,"Douglch":80}},{"path":"src/test/java/mycelium/mycelium/logic/parser/UpdateProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.UpdateProjectDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"public class UpdateProjectCommandParserTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"        UpdateProjectCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    private UpdateProjectCommandParser parser \u003d new UpdateProjectCommandParser();","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    public void parse_missingRequiredArgs_throwsParseException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        // required arg not given","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        assertParseFailure(parser, \" -dd 31/12/2023\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, String\u003e tests \u003d Map.of(","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            \"-pn2   \", Messages.MESSAGE_EMPTY_PROJECT_NAME,","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            \"-s notastatus\", ProjectStatus.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            \"-e notanemail\", Email.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"            \"-e\", Email.MESSAGE_CONSTRAINTS,","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            \"-src  \", Messages.MESSAGE_EMPTY_SOURCE,","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"            \"-ad 31-12-2023\", Messages.MESSAGE_INVALID_DATE,","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"            \"-dd 31-12-2023\", Messages.MESSAGE_INVALID_DATE","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        tests.forEach((tt, err) -\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            String input \u003d \" -pn foobar \" + tt;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"            assertParseFailure(parser, input, err);","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    public void parse_requiredArgsGiven_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        // Only the current name is required","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        var input \u003d \" -pn foobar\";","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        var want \u003d new UpdateProjectCommand(new NonEmptyString(\"foobar\"),","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"            new UpdateProjectCommand.UpdateProjectDescriptor());","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"    public void parse_allArgsGiven_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        // set up some test data","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        var curName \u003d \"foobar\";","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        var name \u003d \"barfoo\";","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        var status \u003d \"done\";","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        var email \u003d \"foo@bar.com\";","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        var src \u003d \"github\";","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        var desc \u003d \"the foobar project\";","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        var acceptedOn \u003d \"31/12/2023\";","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        var deadline \u003d \"31/12/2024\";","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        var descriptor \u003d new UpdateProjectDescriptorBuilder()","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"            .withName(name)","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            .withStatus(status)","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"            .withClientEmail(email)","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"            .withSource(src)","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"            .withDescription(desc)","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"            .withAcceptedOn(acceptedOn)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            .withDeadline(deadline)","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"            .build();","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        var input \u003d String.format(\" -pn %s -pn2 %s -s %s -e %s -src %s -d %s -ad %s -dd %s\",","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            curName, name, status, email, src, desc, acceptedOn, deadline);","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"        var want \u003d new UpdateProjectCommand(new NonEmptyString(curName), descriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"    public void parse_oldAndNewNamesIdentical_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        // This tests what happens if we give a command to update a project\u0027s name, but then give it back the same name","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        var descriptor \u003d new UpdateProjectDescriptorBuilder().withName(\"foobar\").build();","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        var input \u003d \" -pn foobar -pn2 foobar\";","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"        var want \u003d new UpdateProjectCommand(new NonEmptyString(\"foobar\"), descriptor);","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"    public void parse_invalidArgfollowedByValidArg_success() {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        var descriptor \u003d new UpdateProjectCommand.UpdateProjectDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setName(new NonEmptyString(\"barfoo\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setStatus(ProjectStatus.DONE);","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        var input \u003d \" -pn foobar -pn2 barfoo -s notastatus -s done\";","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"        var want \u003d new UpdateProjectCommand(new NonEmptyString(\"foobar\"), descriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        assertParseSuccess(parser, input, want);","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"immanuelhume":110}},{"path":"src/test/java/mycelium/mycelium/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BARD;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.getTypicalAddressBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        // Here, we\u0027re just checking that all the default lists are empty. This is because they are meant to be","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        // populated after initialization by external sources, e.g. JSON files.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        assertEquals(Collections.emptyList(), addressBook.getClientList());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(Collections.emptyList(), addressBook.getProjectList());","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    public void resetData_withDuplicateClients_throwsDuplicateClientException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        // Two clients with the same identity fields","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        List\u003cClient\u003e newClients \u003d List.of(","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"            new ClientBuilder().build(),","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"            new ClientBuilder().build()","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"        );","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newClients, List.of());","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"    public void resetData_withDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        List\u003cProject\u003e newProjects \u003d List.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            new ProjectBuilder().build(),","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"            new ProjectBuilder().build()","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        AddressBookStub newData \u003d new AddressBookStub(List.of(), newProjects);","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasClient(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"        assertFalse(addressBook.hasClient(new ClientBuilder().build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        Client john \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"        addressBook.addClient(john);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"        assertTrue(addressBook.hasClient(john));","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"    public void hasClient_clientWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        addressBook.addClient(WEST);","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        Client alsoWest \u003d new ClientBuilder(WEST).withName(\"Kim Kardashian\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(addressBook.hasClient(alsoWest));","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    public void getClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getClientList().remove(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_projectNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(addressBook.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_projectInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"        addressBook.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(addressBook.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_projectWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        addressBook.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        Project alsoBard \u003d new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(addressBook.hasProject(alsoBard));","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"    public void getProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getProjectList().remove(0));","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"    public void equalsAndHashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        AddressBook abA \u003d new AddressBookBuilder().withClient(WEST).withProject(BARD).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"        AddressBook abB \u003d new AddressBookBuilder().withClient(WEST).withProject(BARD).build();","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"        // address books have same contents -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        // Note: assertEquals calls the object\u0027s equals() method","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"        assertEquals(abA, abB);","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"        assertEquals(abA.hashCode(), abB.hashCode());","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"        // different address books -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(abA, addressBook);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(abA.hashCode(), addressBook.hashCode());","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(abA, null);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"        private final ObservableList\u003cClient\u003e clients \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"        private final ObservableList\u003cProject\u003e projects \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"        AddressBookStub(Collection\u003cClient\u003e clients, Collection\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"            this.clients.setAll(clients);","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"            this.projects.setAll(projects);","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"        @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"        public ObservableList\u003cClient\u003e getClientList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"            return clients;","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"        public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"            return projects;","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"immanuelhume":68,"-":44,"Douglch":56}},{"path":"src/test/java/mycelium/mycelium/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isBeforeToday;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.commons.util.DateUtil.isWithinThisAndNextWeek;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BARD;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BING;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BOSE;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.FUTA;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.RANTARO;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.exceptions.DuplicateClientException;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.testutil.ProjectUtil;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"    private static final int NUM_OF_VALID_STATUSES \u003d ProjectStatus.values().length;","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"    public void hasClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasClient(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    public void hasClient_clientNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        assertFalse(modelManager.hasClient(WEST));","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"    public void hasClient_clientInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"        modelManager.addClient(WEST);","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"        assertTrue(modelManager.hasClient(WEST));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueClient_addressBookIsEmpty_returnsEmpty() {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.getUniqueClient(c -\u003e c.getName().equals(new Name(\"Jamal\"))).isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueClient_clientNotInAddressBook_returnsEmpty() {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addClient(WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.getUniqueClient(c -\u003e c.getName().equals(new Name(\"Jamal\"))).isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueClient_clientInAddressBook_returnsClient() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addClient(WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(modelManager.getUniqueClient(c -\u003e c.equals(WEST)).get(), WEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"    public void deleteClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteClient(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"    public void deleteClient_clientNotInAddressBook_nothingHappens() {","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"        assertFalse(modelManager.hasClient(client));","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        modelManager.deleteClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"        assertFalse(modelManager.hasClient(client));","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"    public void deleteClient_clientInAddressBook_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"        modelManager.addClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"        modelManager.deleteClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"        assertFalse(modelManager.hasClient(client));","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"    public void addClient_nullClient_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addClient(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"    public void addClient_clientInAddressBook_throwsDuplicateClientException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"        modelManager.addClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e modelManager.addClient(client));","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"    public void addClient_clientWithSameIdentityFieldsInAddressBook_throwsDuplicateClientException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"        modelManager.addClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"        Client editedClient \u003d new ClientBuilder(client).withEmail(\"John@gmail.com\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"Douglch"},"content":"        assertThrows(DuplicateClientException.class, () -\u003e modelManager.addClient(editedClient));","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"    public void addClient_clientNotInAddressBook_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"        modelManager.addClient(client);","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"        assertTrue(modelManager.hasClient(client));","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"    public void getFilteredClientList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"Douglch"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredClientList().remove(0));","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_projectNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(modelManager.hasProject(new ProjectBuilder().build()));","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"    public void hasProject_projectInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Project\u003e cases \u003d Map.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"            \"same reference\", BARD,","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"            \"same fields\", new ProjectBuilder(BARD).build(),","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"            \"same name diff email\", new ProjectBuilder(BARD).withClientEmail(\"jamal@supercell.com\").build()","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"        cases.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"immanuelhume"},"content":"            assertTrue(modelManager.hasProject(tt), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueProject_addressBookIsEmpty_returnsEmpty() {","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.getUniqueProject(p -\u003e p.getName().equals(\"Bing\")).isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueProject_projectNotInAddressBook_returnsEmpty() {","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":212,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.getUniqueProject(p -\u003e p.getName().equals(\"Bing\")).isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"immanuelhume"},"content":"    public void getUniqueProject_projectInAddressBook_returnsProject() {","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":218,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(modelManager.getUniqueProject(p -\u003e p.equals(BARD)).get(), BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":219,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"immanuelhume"},"content":"    public void deleteProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.deleteProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":224,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":226,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":227,"author":{"gitId":"immanuelhume"},"content":"    public void deleteProject_projectNotInAddressBook_nothingHappens() {","lastModifiedDate":"2023-03-07"},{"lineNumber":228,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(modelManager.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"immanuelhume"},"content":"        modelManager.deleteProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(modelManager.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":232,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":233,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":234,"author":{"gitId":"immanuelhume"},"content":"    public void deleteProject_projectInAddressBook_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":235,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":237,"author":{"gitId":"immanuelhume"},"content":"        modelManager.deleteProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":238,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(modelManager.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":239,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":240,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":241,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"immanuelhume"},"content":"    public void addProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addProject(null));","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"immanuelhume"},"content":"    public void addProject_projectInAddressBook_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":249,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e modelManager.addProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":251,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":252,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":253,"author":{"gitId":"immanuelhume"},"content":"    public void addProject_projectWithSameIdentityFieldsInAddressBook_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":254,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":255,"author":{"gitId":"immanuelhume"},"content":"        Project alsoBard \u003d new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e modelManager.addProject(alsoBard));","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"immanuelhume"},"content":"    public void addProject_projectNotInAddressBook_success() {","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"immanuelhume"},"content":"        modelManager.addProject(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(modelManager.hasProject(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"immanuelhume"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredProjectList().remove(0));","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_alwaysContainsProjectsWithDeadline_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(0, modelManager.getDueProjectList().stream().filter(p -\u003e p.getDeadline().isEmpty()).count());","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_alwaysContainsUnfinishedProjects_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(0, modelManager.getDueProjectList().stream().filter(","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"RubyNguyen07"},"content":"            p -\u003e p.getStatus() \u003d\u003d ProjectStatus.DONE).count());","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":281,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":282,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_alwaysContainsProjectsWithDeadlinesWithinTwoWeeks_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":283,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(0, modelManager.getDueProjectList().stream().filter(","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"RubyNguyen07"},"content":"            p -\u003e !isWithinThisAndNextWeek(p.getDeadline().get())).count());","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":286,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":287,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":288,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_neverContainsOverdueProjects_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(0, modelManager.getDueProjectList().stream().filter(","lastModifiedDate":"2023-03-28"},{"lineNumber":290,"author":{"gitId":"RubyNguyen07"},"content":"            p -\u003e isBeforeToday(p.getDeadline().get())).count());","lastModifiedDate":"2023-03-28"},{"lineNumber":291,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":293,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":294,"author":{"gitId":"RubyNguyen07"},"content":"    public void getOverdueProjectList_neverContainsDueProjects_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":295,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(0, modelManager.getOverdueProjectList().stream().filter(","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"RubyNguyen07"},"content":"            p -\u003e !isBeforeToday(p.getDeadline().get()) || p.getStatus() \u003d\u003d ProjectStatus.DONE).count());","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":298,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":299,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":300,"author":{"gitId":"RubyNguyen07"},"content":"    public void getDueProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":301,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getDueProjectList().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":303,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":304,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"RubyNguyen07"},"content":"    public void getOverdueProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getOverdueProjectList().remove(0));","lastModifiedDate":"2023-03-28"},{"lineNumber":307,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":308,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":309,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":310,"author":{"gitId":"RubyNguyen07"},"content":"    public void getProjectStatistics_containsThreeKeys_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(NUM_OF_VALID_STATUSES, modelManager.getProjectStatistics().size());","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":313,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":314,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":315,"author":{"gitId":"RubyNguyen07"},"content":"    public void getProjectStatistics_containsKeysWithPositiveValues_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(ProjectUtil.containsPositiveValues(modelManager));","lastModifiedDate":"2023-03-28"},{"lineNumber":317,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":319,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":322,"author":{"gitId":"Douglch"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder()","lastModifiedDate":"2023-03-16"},{"lineNumber":323,"author":{"gitId":"Douglch"},"content":"            .withClient(WEST)","lastModifiedDate":"2023-03-16"},{"lineNumber":324,"author":{"gitId":"immanuelhume"},"content":"            .withClient(RANTARO)","lastModifiedDate":"2023-03-24"},{"lineNumber":325,"author":{"gitId":"immanuelhume"},"content":"            .withClient(FUTA)","lastModifiedDate":"2023-03-24"},{"lineNumber":326,"author":{"gitId":"immanuelhume"},"content":"            .withProject(BARD)","lastModifiedDate":"2023-03-24"},{"lineNumber":327,"author":{"gitId":"immanuelhume"},"content":"            .withProject(BING)","lastModifiedDate":"2023-03-24"},{"lineNumber":328,"author":{"gitId":"immanuelhume"},"content":"            .withProject(BOSE)","lastModifiedDate":"2023-03-24"},{"lineNumber":329,"author":{"gitId":"Douglch"},"content":"            .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":330,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":350,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(modelManager.hashCode(), new ModelManager(differentAddressBook, userPrefs).hashCode());","lastModifiedDate":"2023-03-16"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"immanuelhume":132,"-":91,"RubyNguyen07":57,"Douglch":77}},{"path":"src/test/java/mycelium/mycelium/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"immanuelhume":2,"-":19}},{"path":"src/test/java/mycelium/mycelium/model/client/ClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.FUTA;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.RANTARO;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"public class ClientTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        assertTrue(WEST.isSame(WEST));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        assertFalse(WEST.isSame(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        // same name, diff email -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        assertFalse(FUTA.isSame(RANTARO));","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        // TODO -\u003e handle case for different name, same email","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    public void equals() {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        Client westCopy \u003d new ClientBuilder(WEST).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        assertTrue(WEST.equals(westCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        assertTrue(WEST.equals(WEST));","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        assertFalse(WEST.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        assertFalse(WEST.equals(\"I love it\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        // different client -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        assertFalse(WEST.equals(FUTA));","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        // same name, different client -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(FUTA, RANTARO);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public void fillCompulsoryFieldsOnly() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        Name name \u003d new Name(\"Walter Hartwell White\");","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        Email email \u003d new Email(\"albqq@gmail.com\");","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        Client client \u003d new Client(name, email);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        assertEquals(client.getName(), new Name(\"Walter Hartwell White\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        assertEquals(client.getEmail(), new Email(\"albqq@gmail.com\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        assertEquals(client.getYearOfBirth(), Optional.empty());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        assertEquals(client.getSource(), Optional.empty());","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"        assertEquals(client.getMobileNumber(), Optional.empty());","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    public void toString_works() {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        Client client \u003d new ClientBuilder().withName(\"Jamal\").withEmail(\"jamal@hogriders.org\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(client.toString(), \"Jamal (jamal@hogriders.org)\");","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"immanuelhume":9,"Douglch":55}},{"path":"src/test/java/mycelium/mycelium/model/client/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"immanuelhume":2,"-":66}},{"path":"src/test/java/mycelium/mycelium/model/client/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"immanuelhume":2,"-":36,"Douglch":1}},{"path":"src/test/java/mycelium/mycelium/model/client/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"immanuelhume":2,"-":38}},{"path":"src/test/java/mycelium/mycelium/model/client/YearOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.model.client;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class YearOfBirthTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e new YearOfBirth(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public void constructor_invalidYearOfBirth_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        String invalidYearOfBirth \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new YearOfBirth(invalidYearOfBirth));","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    public void isValidYearOfBirth() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        // null years","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        assertThrows(NullPointerException.class, () -\u003e YearOfBirth.isValidYearOfBirth(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        // invalid years","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"91\")); // less than 4 numbers","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"9 1\")); // spaces between digits","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"91333\")); // more than 4 numbers","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        assertFalse(YearOfBirth.isValidYearOfBirth(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        // valid years","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        assertTrue(YearOfBirth.isValidYearOfBirth(\"2004\")); // exactly 4 numbers","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        assertTrue(YearOfBirth.isValidYearOfBirth(\"1534\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public void isCorrectString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        YearOfBirth year \u003d new YearOfBirth(\"2099\");","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        assertEquals(year.toString(), \"2099\");","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        assertNotEquals(year.toString(), \"0\");","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Douglch":48}},{"path":"src/test/java/mycelium/mycelium/model/project/ProjectStatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.project;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.model.project.ProjectStatus.DONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.model.project.ProjectStatus.IN_PROGRESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.model.project.ProjectStatus.NOT_STARTED;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"public class ProjectStatusTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    private static final Map\u003cString, Pair\u003cString, ProjectStatus\u003e\u003e okInput \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"        \"not started\", Pair.of(\"not_started\", NOT_STARTED),","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"        \"in progress\", Pair.of(\"in_progress\", IN_PROGRESS),","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"        \"done\", Pair.of(\"done\", DONE),","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        \"not started (uppercase)\", Pair.of(\"NOT_STARTED\", NOT_STARTED),","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        \"in progress (uppercase)\", Pair.of(\"IN_PROGRESS\", IN_PROGRESS),","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        \"done (uppercase)\", Pair.of(\"DONE\", DONE),","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        \"not started (mixed case)\", Pair.of(\"NoT_sTaRtEd\", NOT_STARTED),","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        \"in progress (mixed case)\", Pair.of(\"In_PrOgReSs\", IN_PROGRESS),","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        \"done (mixed case)\", Pair.of(\"dOnE\", DONE)","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    );","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    private static final Map\u003cString, String\u003e badInput \u003d Map.of(","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"        \"empty string\", \"\",","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        \"only whitespace\", \" \",","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        \"invalid status\", \"foobar\"","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    );","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    public void isValidProjectStatus_validStatus_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        okInput.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            assertTrue(ProjectStatus.isValidProjectStatus(tt.first), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    public void isValidProjectStatus_invalidStatus_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        // We reject the status if it is not one of the three valid statuses.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        badInput.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            assertFalse(ProjectStatus.isValidProjectStatus(tt), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    public void fromString_validString_returnsStatus() {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        okInput.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"            ProjectStatus status \u003d ProjectStatus.fromString(tt.first);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(tt.second, status, \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    public void fromString_invalidString_throwsException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"        badInput.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            Assertions.assertThrows(IllegalArgumentException.class, (","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"                ) -\u003e ProjectStatus.fromString(tt), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"immanuelhume":66}},{"path":"src/test/java/mycelium/mycelium/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.project;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BARD;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BING;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BOSE;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"public class ProjectTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameReference_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameName_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder().withName(BARD.getName()).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentStatus_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withStatus(ProjectStatus.IN_PROGRESS).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getStatus(), project.getStatus()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentClientEmail_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getClientEmail(), project.getClientEmail()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentSource_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withSource(\"google\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getSource(), project.getSource()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentDescription_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDescription(\"Different description\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getDescription(), project.getDescription()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentAcceptedOn_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withAcceptedOn(LocalDate.now()).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getAcceptedOn(), project.getAcceptedOn()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentDeadline_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getDeadline(), project.getDeadline()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.isSame(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_differentName_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.isSame(new ProjectBuilder().withName(\"Different Project\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_sameNameDifferentCase_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.isSame(new ProjectBuilder().withName(\"bard\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"    public void isSame_null_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.isSame(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameReference_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.equals(BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameFields_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"    public void equals_differentName_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withName(\"Different Project\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getName(), project.getName()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentCase_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withName(\"bard\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getName(), project.getName()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentStatus_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withStatus(ProjectStatus.IN_PROGRESS).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getStatus(), project.getStatus()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentClientEmail_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getClientEmail(), project.getClientEmail()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentSource_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withSource(\"google\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getSource(), project.getSource()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentDescription_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDescription(\"Different description\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getDescription(), project.getDescription()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentAcceptedOn_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withAcceptedOn(LocalDate.now()).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getAcceptedOn(), project.getAcceptedOn()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"    public void equals_sameNameDifferentDeadline_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(BARD.getDeadline(), project.getDeadline()); // sanity check","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(BARD.equals(project));","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"    public void constructor_minimalFields_isOk() {","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"        // Create a project with minimal fields.","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString name \u003d NonEmptyString.of(\"my awesome project\");","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"        Email clientEmail \u003d new Email(\"jamal@awesome.co\");","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new Project(name, clientEmail);","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"        // Check that the fields are set correctly.","lastModifiedDate":"2023-03-24"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getName(), name);","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getClientEmail(), clientEmail);","lastModifiedDate":"2023-03-24"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getSource(), Optional.empty());","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getDescription(), Optional.empty());","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"        // NOTE(jy): I guess this would fail if we ran the tests at like 23:59:59. For now, it\u0027s fine.","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getAcceptedOn(), LocalDate.now());","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project.getDeadline(), Optional.empty());","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"    public void toString_works() {","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new Project(NonEmptyString.of(\"Bing\"), new Email(\"jamal@hogriders.org\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(\"Bing from client jamal@hogriders.org\", project.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"RubyNguyen07"},"content":"    public void compareToWithDeadline_twoProjectsWithDifferentDeadlines_negativeIntegerReturned() {","lastModifiedDate":"2023-04-04"},{"lineNumber":188,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"RubyNguyen07"},"content":"        Project projectAfter \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now().plusDays(2)).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(project.compareToWithDeadline(projectAfter) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"RubyNguyen07"},"content":"    public void compareToWithDeadline_twoProjectsWithSameDeadlines_negativeIntegerReturned() {","lastModifiedDate":"2023-04-04"},{"lineNumber":196,"author":{"gitId":"RubyNguyen07"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDeadline(currentDate).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"RubyNguyen07"},"content":"        Project projectWithSameDeadline \u003d new ProjectBuilder(BING).withDeadline(currentDate).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(project.compareToWithDeadline(projectWithSameDeadline) \u003c 0);","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"RubyNguyen07"},"content":"    public void compareToWithDeadline_oneProjectWithNoDeadlines_exceptionThrown() {","lastModifiedDate":"2023-04-04"},{"lineNumber":204,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder(BOSE).build();","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"RubyNguyen07"},"content":"        Project otherProject \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":206,"author":{"gitId":"RubyNguyen07"},"content":"        assertThrows(AssertionError.class, () -\u003e project.compareToWithDeadline(otherProject));","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":209,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":210,"author":{"gitId":"RubyNguyen07"},"content":"    public void compareToWithDeadline_sameProjectWithDeadlines_zeroReturned() {","lastModifiedDate":"2023-04-04"},{"lineNumber":211,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder(BARD).withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":212,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(project.compareToWithDeadline(project) \u003d\u003d 0);","lastModifiedDate":"2023-04-04"},{"lineNumber":213,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":214,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":182,"RubyNguyen07":32}},{"path":"src/test/java/mycelium/mycelium/model/util/FuzzyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"class FuzzyTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"     * A test case for the delta function.","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"    private static class TestCase {","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"        public final String query;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"        public final String target;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"        public final double expectedDelta;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"        TestCase(String query, String target, double expectedDelta) {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"            this.query \u003d query;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"            this.target \u003d target;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"            this.expectedDelta \u003d expectedDelta;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    void delta() {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        TestCase[] testCases \u003d {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"bar\", 0), // completely no match","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"foo\", 1), // exact match","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"\", \"foo\", 0), // empty query","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"\", 0), // empty target","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foobar\", \"\", 0), // query longer than target","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"barfoo\", 1 / (double) (3 + 1)), // leading fluff","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"foobar\", 1 / (double) (3 + 1)), // trailing fluff","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"barfoobar\", 1 / (double) (6 + 1)), // leading and trailing fluff","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"fooooo\", 1 / (double) (3 + 1)), // repeated characters","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"fxoxxo\", 1 / (double) (3 + 6 + 1)), // interleaved characters","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        for (TestCase test : testCases) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            double actual \u003d Fuzzy.delta(test.query, test.target);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(test.expectedDelta, actual, 0.0001, \"While testing case: \" + test.query + \", \" + test.target);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    void levenshtein() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        TestCase[] testCases \u003d {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"uwu\", \"owo\", 1 / (double) 3),","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"horse\", \"ros\", 2 / (double) 5),","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"intention\", \"execution\", 4 / (double) 9),","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"uwu\", \"\", 0),","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"\", \"uwu\", 0),","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"   \", \"uwu\", 0),","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"foo\", \"baz bat\", 0),","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"            new TestCase(\"uwu\", \"uwu\", 1)","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        };","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        for (TestCase test : testCases) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"            double actual \u003d Fuzzy.levenshtein(test.query, test.target);","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(test.expectedDelta, actual, 0.0001, \"While testing case: \" + test.query + \", \" + test.target);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"immanuelhume":62}},{"path":"src/test/java/mycelium/mycelium/model/util/NonEmptyStringTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"class NonEmptyStringTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    void getValue() {","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s \u003d NonEmptyString.of(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(\"foo\", s.getValue());","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    void testToString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s \u003d NonEmptyString.of(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(\"foo\", s.toString());","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    void ofOptional_nonEmptyString_returnSome() {","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e s \u003d NonEmptyString.ofOptional(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(Optional.of(NonEmptyString.of(\"foo\")), s);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    void ofOptional_emptyString_returnsEmpty() {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e s \u003d NonEmptyString.ofOptional(\"\");","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(Optional.empty(), s);","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    void ofOptional_null_returnsEmpty() {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        Optional\u003cNonEmptyString\u003e s \u003d NonEmptyString.ofOptional(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(Optional.empty(), s);","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    void isValid() {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        assertTrue(NonEmptyString.isValid(\"foo\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(NonEmptyString.isValid(\"\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        assertFalse(NonEmptyString.isValid(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    void equals_nonEmptyStrings_worksOk() {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s1 \u003d NonEmptyString.of(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s2 \u003d NonEmptyString.of(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s3 \u003d NonEmptyString.of(\"bar\");","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(s1, s2);","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(s1, s3);","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    void equals_regularStrings_worksOk() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        NonEmptyString s1 \u003d NonEmptyString.of(\"foo\");","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        String s2 \u003d \"foo\";","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"        String s3 \u003d \"bar\";","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(s1, s2);","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"        assertNotEquals(s1, s3);","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"immanuelhume":68}},{"path":"src/test/java/mycelium/mycelium/model/util/UniqueListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.model.util;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BARD;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BING;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.BOSE;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.Pair;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"public class UniqueListTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    private UniqueList\u003cProject\u003e items \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    public void contains() {","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: we use projects here","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Pair\u003cProject, Boolean\u003e\u003e cases \u003d Map.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"            \"same reference\",","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(BARD, true),","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"            \"same item\",","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(new ProjectBuilder(BARD).build(), true),","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"            \"different item but same identifier\",","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build(), true),","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"            \"different item\",","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"            Pair.of(BING, false)","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        cases.forEach((desc, tt) -\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            Project project \u003d tt.first;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            boolean expected \u003d tt.second;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            assertEquals(expected, items.contains(project), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    public void contains_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.contains(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public void add_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.add(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    public void add_duplicate_throwsDuplicateItemException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, Project\u003e cases \u003d Map.of(","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"            \"same reference\",","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            BARD,","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"            \"same item\",","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            new ProjectBuilder(BARD).build(),","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            \"different item with same identifier\",","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build()","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        cases.forEach((desc, project) -\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"            assertThrows(DuplicateItemException.class, () -\u003e items.add(project), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"    public void remove_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.remove(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"    public void remove_itemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e items.remove(BING));","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"    public void remove_existingItem_removesItem() {","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e emptyList \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"        items.remove(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(emptyList, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        items.remove(new ProjectBuilder(BARD).withClientEmail(\"chungus@chungus.org\").build());","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(emptyList, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_nullTarget_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.setItem(null, BARD));","lastModifiedDate":"2023-03-24"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_nullNewItem_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.setItem(BARD, null));","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_targetItemDoesNotExist_throwsItemNotFoundException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e items.setItem(BARD, BING));","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_duplicateItem_throwsDuplicateItemException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"        items.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e items.setItem(BARD, BING));","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_diffNewItem_replacesItem() {","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"        items.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"        items.setItem(BARD, BOSE);","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e expectedProjects \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(BOSE);","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProjects, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_identicalNewItem_nothingChanges() {","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"        items.setItem(BARD, BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e expectedProjects \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProjects, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"    public void setItem_sameNewItemNotEquals_replacesItem() {","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"        items.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"        Project bing2 \u003d new ProjectBuilder(BING).withClientEmail(\"chungus@chungus.org\").build();","lastModifiedDate":"2023-03-24"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"        items.setItem(BING, bing2);","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e expectedProjects \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(bing2);","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProjects, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"    public void setItems_nullInput_throwsNullPointerException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.setItems((UniqueList\u003cProject\u003e) null));","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(NullPointerException.class, () -\u003e items.setItems((List\u003cProject\u003e) null));","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"    public void setItems_uniqueList_replacesOwnListWithProvidedUniqueList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"        items.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e newItems \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":166,"author":{"gitId":"immanuelhume"},"content":"        newItems.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":167,"author":{"gitId":"immanuelhume"},"content":"        newItems.add(BOSE);","lastModifiedDate":"2023-03-24"},{"lineNumber":168,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"immanuelhume"},"content":"        items.setItems(newItems);","lastModifiedDate":"2023-03-24"},{"lineNumber":170,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(newItems, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":172,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"immanuelhume"},"content":"    public void setItems_validList_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"immanuelhume"},"content":"        items.add(BING);","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"immanuelhume"},"content":"        List\u003cProject\u003e newProjects \u003d List.of(BARD, BOSE);","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"immanuelhume"},"content":"        items.setItems(newProjects);","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":181,"author":{"gitId":"immanuelhume"},"content":"        UniqueList\u003cProject\u003e expectedProjects \u003d new UniqueList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"immanuelhume"},"content":"        expectedProjects.add(BOSE);","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProjects, items);","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"immanuelhume"},"content":"    public void setItems_duplicateItems_throwsDuplicateItemException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"immanuelhume"},"content":"        List\u003cProject\u003e newProjects \u003d List.of(BARD, BING, BARD);","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e items.setItems(newProjects));","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"immanuelhume"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"immanuelhume"},"content":"            -\u003e new UniqueList\u003c\u003e().asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":199}},{"path":"src/test/java/mycelium/mycelium/storage/JsonAdaptedClientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.JsonUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"public class JsonAdaptedClientTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    private static final String INVALID_NAME \u003d \"   \";","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    private static final String INVALID_MOBILE_NUMBER \u003d \"+651234\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    private static final String INVALID_EMAIL \u003d \"12312113\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    private static final String INVALID_YEAR_OF_BIRTH \u003d \"123\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    private static final String VALID_NAME \u003d WEST.getName().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    private static final String VALID_EMAIL \u003d WEST.getEmail().toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    private static final String VALID_YEAR_OF_BIRTH \u003d WEST.getYearOfBirth().get().value;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    private static final String VALID_SOURCE \u003d WEST.getSource().get().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    private static final String VALID_MOBILE_NUMBER \u003d WEST.getMobileNumber().get().value;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    public void basicSerialization() throws JsonProcessingException, IOException {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedClient se \u003d new JsonAdaptedClient(client);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        String jsonStr \u003d JsonUtil.toJsonString(se);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedClient de \u003d JsonUtil.fromJsonString(jsonStr, JsonAdaptedClient.class);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(se, de);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public void toModelType_validClientDetails_returnsClient() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(WEST);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        assertEquals(WEST, client.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"            new JsonAdaptedClient(INVALID_NAME, VALID_EMAIL, VALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"                VALID_SOURCE, VALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(null, VALID_EMAIL, VALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"            VALID_SOURCE, VALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"        String","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"            expectedMessage \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"StanleyNeoh"},"content":"                JsonAdaptedEntity.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"StanleyNeoh"},"content":"                Client.class.getSimpleName(),","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"StanleyNeoh"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"            new JsonAdaptedClient(VALID_NAME, INVALID_EMAIL, VALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"                VALID_SOURCE, VALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d new JsonAdaptedClient(VALID_NAME, null, VALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"            VALID_SOURCE, VALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        String","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"            expectedMessage \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"StanleyNeoh"},"content":"            String.format(","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"StanleyNeoh"},"content":"                JsonAdaptedEntity.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"StanleyNeoh"},"content":"                Client.class.getSimpleName(),","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"StanleyNeoh"},"content":"                Email.class.getSimpleName());","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    public void toModelType_invalidYearOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"            new JsonAdaptedClient(VALID_NAME, VALID_EMAIL, INVALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"                VALID_SOURCE, VALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"        String expectedMessage \u003d YearOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"    public void toModelType_invalidMobileNumber_throwsIllegalValueException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"        JsonAdaptedClient client \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"            new JsonAdaptedClient(VALID_NAME, VALID_EMAIL, VALID_YEAR_OF_BIRTH,","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"                VALID_SOURCE, INVALID_MOBILE_NUMBER);","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, client::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"StanleyNeoh":8,"immanuelhume":23,"Douglch":79}},{"path":"src/test/java/mycelium/mycelium/storage/JsonAdaptedProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.UnaryOperator;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.JsonUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"public class JsonAdaptedProjectTest {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    public void basicSerialization() throws JsonProcessingException, IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"        // Here, we just serialize a project and assert that deserializing it produces the same project","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder().build(); // create a default project","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedProject se \u003d new JsonAdaptedProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        String jsonStr \u003d JsonUtil.toJsonString(se);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedProject de \u003d JsonUtil.fromJsonString(jsonStr, JsonAdaptedProject.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(se, de);","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_validProjectDetails_returnsProject() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedProject jsonAdaptedProject \u003d new JsonAdaptedProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project, jsonAdaptedProject.toModelType());","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_nonNullDeadline_returnsProject() throws Exception {","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        // The motivation for this test case is that the default project has a null deadline, but","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        // we want to test that everything is OK if the deadline is non-null.","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        Project project \u003d new ProjectBuilder().withDeadline(LocalDate.now()).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        JsonAdaptedProject jsonAdaptedProject \u003d new JsonAdaptedProject(project);","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(project, jsonAdaptedProject.toModelType());","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_invalidNullFields_throwsIllegalValueException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        // Convenience lambda to build the expected error message","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        UnaryOperator\u003cString\u003e withErr \u003d (fieldName)","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"StanleyNeoh"},"content":"            -\u003e String.format(JsonAdaptedEntity.MISSING_FIELD_MESSAGE_FORMAT, Project.class.getSimpleName(), fieldName);","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        // A bunch of test cases with varying null fields. It is rather verbose, but there is no working","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        // around it, since we would like to simulate Jackson\u0027s behavior of instantiating this class.","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, JsonAdaptedProject\u003e cases \u003d Map.of(","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"            withErr.apply(\"name\"), // name is null","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(null,","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now()),","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            withErr.apply(\"status\"), // status is null","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"                null,","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now()),","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"            withErr.apply(\"clientEmail\"), // clientEmail is null","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"                null,","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now()),","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"            withErr.apply(\"acceptedOn\"), // acceptedOn is null","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"                null,","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now())","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"        cases.forEach((errMsg, project) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"            assertThrows(IllegalValueException.class, errMsg, project::toModelType);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_validNullFields_returnsProject() throws Exception {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        Map\u003cString, JsonAdaptedProject\u003e cases \u003d Map.of(","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"            \"source is null\",","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"                null,","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now()),","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"            \"description is null\",","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"                null,","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"                LocalDate.now()),","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"            \"deadline is null\",","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"            new JsonAdaptedProject(","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_NAME,","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_STATUS,","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_CLIENT_EMAIL,","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_SOURCE,","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_DESCRIPTION,","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"                ProjectBuilder.DEFAULT_ACCEPTED_ON,","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"                null)","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"        );","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"        Project defaultProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"        for (var tt : cases.entrySet()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"            var desc \u003d tt.getKey();","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"            var proj \u003d tt.getValue();","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"            assertTrue(proj.toModelType().isSame(defaultProject), \"While testing case: \" + desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"StanleyNeoh":1,"immanuelhume":139}},{"path":"src/test/java/mycelium/mycelium/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.WEST;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.getTypicalAddressBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"    public void readAddressBook_invalidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidClientAddressBook.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    public void readAddressBook_invalidProjectAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidProjectAddressBook.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"    public void readAddressBook_invalidAndValidClientAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidClientAddressBook.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"    public void readAddressBook_invalidAndValidProjectAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidProjectAddressBook.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"        // TODO (jy): after we delete the person-related data, update this to test for clients and projects only","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        original.removeClient(WEST);","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"        original.addClient(WEST);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"immanuelhume":24,"-":94}},{"path":"src/test/java/mycelium/mycelium/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.util.JsonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.testutil.TypicalEntities;","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    private static final Path INVALID_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidClientAddressBook.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    private static final Path INVALID_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidProjectAddressBook.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"    private static final Path DUPLICATE_CLIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateClientAddressBook.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    private static final Path DUPLICATE_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateProjectAddressBook.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_typicalAddressBookFile_success() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        AddressBook typicalAddressBook \u003d TypicalEntities.getTypicalAddressBook();","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(typicalAddressBook, addressBookFromFile);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_invalidClientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CLIENT_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_invalidProjectFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROJECT_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_duplicateClients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CLIENT_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_CLIENT,","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"    public void toModelType_duplicateProjects_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROJECT_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"            JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PROJECT,","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            dataFromFile::toModelType);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"immanuelhume":43,"-":22}},{"path":"src/test/java/mycelium/mycelium/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"mycelium.json\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"immanuelhume":6,"-":117}},{"path":"src/test/java/mycelium/mycelium/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.TypicalEntities.getTypicalAddressBook;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":6,"-":62}},{"path":"src/test/java/mycelium/mycelium/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"     * Adds a new {@code Project} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    public AddressBookBuilder withProject(Project project) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"        addressBook.addProject(project);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * Adds a new {@code Client} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public AddressBookBuilder withClient(Client client) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        addressBook.addClient(client);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":6,"-":27,"Douglch":10}},{"path":"src/test/java/mycelium/mycelium/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                                    Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    public static void assertDatesAlmostEqual(Date a, Date b) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertTrue(Math.abs(a.getTime() - b.getTime()) \u003c 1000);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"    public static void assertDatesAlmostEqual(Date a, Date b, String message) {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"        Assertions.assertTrue(Math.abs(a.getTime() - b.getTime()) \u003c 1000, message);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"immanuelhume":10,"-":34}},{"path":"src/test/java/mycelium/mycelium/testutil/ClientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * A utility class to help with building Client objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class ClientBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    public static final String DEFAULT_NAME \u003d \"John Doe\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public static final String DEFAULT_EMAIL \u003d \"John@gmail.com\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    public static final String DEFAULT_YEAR_OF_BIRTH \u003d \"2023\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    public static final String DEFAULT_SOURCE \u003d \"whited.com\";","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public static final String DEFAULT_MOBILE_NUMBER \u003d \"999\";","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    private Name name;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    private Email email;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    private YearOfBirth yearOfBirth;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    private String source;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    private Phone mobileNumber;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * Creates a {@code ClientBuilder} with the default details.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        yearOfBirth \u003d new YearOfBirth(DEFAULT_YEAR_OF_BIRTH);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        source \u003d DEFAULT_SOURCE;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        mobileNumber \u003d new Phone(DEFAULT_MOBILE_NUMBER);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     * Initializes the ClientBuilder with the data of {@code client}.","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder(Client client) {","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        name \u003d client.getName();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        email \u003d client.getEmail();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        yearOfBirth \u003d client.getYearOfBirth().orElse(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        source \u003d client.getSource().map(NonEmptyString::getValue).orElse(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        mobileNumber \u003d client.getMobileNumber().orElse(null);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     * Sets the {@code Name} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder withName(String name) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder withEmail(String email) {","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     * Sets the {@code Email} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    public ClientBuilder withEmail(Email email) {","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     * Sets the {@code YearOfBirth} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder withYearOfBirth(String yearOfBirth) {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        this.yearOfBirth \u003d new YearOfBirth(yearOfBirth);","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"     * Sets the client\u0027s source.","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder withSource(String source) {","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     * Sets the {@code Phone} of the {@code Client} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    public ClientBuilder withMobileNumber(String phone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"        this.mobileNumber \u003d new Phone(phone);","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"     * Builds the {@code Client} with the given fields.","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     * @return a {@code Client} with the given fields.","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"    public Client build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"        return new Client(name, email, Optional.ofNullable(yearOfBirth),","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"            NonEmptyString.ofOptional(source), Optional.ofNullable(mobileNumber));","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"immanuelhume":16,"Douglch":97}},{"path":"src/test/java/mycelium/mycelium/testutil/Pair.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":" * A generic pair class.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":" *","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":" * @param \u003cA\u003e Type of the first item.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":" * @param \u003cB\u003e Type of the second item.","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"public class Pair\u003cA, B\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"    public final A first;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":"    public final B second;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code Pair} from two items.","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    public Pair(A first, B second) {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"        this.first \u003d first;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"        this.second \u003d second;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code Pair}. Just a convenience method.","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    public static \u003cS, T\u003e Pair\u003cS, T\u003e of(S first, T second) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        return new Pair\u003c\u003e(first, second);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        Pair\u003c?, ?\u003e pair \u003d (Pair\u003c?, ?\u003e) o;","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"        return Objects.equals(first, pair.first) \u0026\u0026 Objects.equals(second, pair.second);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        return Objects.hash(first, second);","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        return \"Pair{\" + \"first\u003d\" + first + \", second\u003d\" + second + \u0027}\u0027;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":51}},{"path":"src/test/java/mycelium/mycelium/testutil/ProjectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.function.UnaryOperator;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":" * A utility class to easily construct Projects. Offers some sensible defaults for each field of a {@code Project} to","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":" * use in testing. In particular, note that the default {@code acceptedOn} date is 01/01/1970, and the deadline is","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":" * not set.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"public class ProjectBuilder {","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    public static final String DEFAULT_NAME \u003d \"Clash of Clans\";","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"    public static final ProjectStatus DEFAULT_STATUS \u003d ProjectStatus.NOT_STARTED;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"    public static final String DEFAULT_CLIENT_EMAIL \u003d \"jamal@supercell.com\";","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public static final String DEFAULT_SOURCE \u003d \"fiverr\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Do this, and then that, and finally those.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    public static final LocalDate DEFAULT_ACCEPTED_ON \u003d LocalDate.of(1970, 1, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    /* Initialize our builder with the defaults. */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"    private String name \u003d DEFAULT_NAME;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    private ProjectStatus status \u003d DEFAULT_STATUS;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    private String clientEmail \u003d DEFAULT_CLIENT_EMAIL;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"    private String source \u003d DEFAULT_SOURCE;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    private String description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"    private LocalDate acceptedOn \u003d DEFAULT_ACCEPTED_ON;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    private LocalDate deadline \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"     * Initializes a new {@code PersonBuilder} with default fields.","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder() {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"     * Constructs a new {@code PersonBuilder} using existing fields on some {@code Project}.","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder(Project project) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d project.getName().toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"        this.status \u003d project.getStatus();","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d project.getClientEmail().toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        this.source \u003d project.getSource().map(NonEmptyString::getValue).orElse(null);","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        this.description \u003d project.getDescription().orElse(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d project.getAcceptedOn();","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d project.getDeadline().orElse(null);","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s name.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withName(String name) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: we are not doing any validation in this method. If the name is invalid, e.g. it is actually null,","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"        // then it will fail when the project is built.","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s name.","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withName(NonEmptyString name) {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        this.name \u003d name.toString();","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s status.","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withStatus(ProjectStatus status) {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s client email.","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withClientEmail(Email email) {","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d email.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s client email.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withClientEmail(String email) {","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        // NOTE: validation will be done when the project is built","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        this.clientEmail \u003d email;","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s source.","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withSource(String source) {","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"        this.source \u003d source;","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s description.","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withDescription(String desc) {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s accepted on date.","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withAcceptedOn(LocalDate acceptedOn) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d acceptedOn;","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"immanuelhume"},"content":"     * Updates the project\u0027s accepted on date using the given function.","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withAcceptedOn(UnaryOperator\u003cLocalDate\u003e fn) {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"immanuelhume"},"content":"        this.acceptedOn \u003d fn.apply(this.acceptedOn);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s deadline.","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withDeadline(LocalDate deadline) {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"immanuelhume"},"content":"     * Updates the project\u0027s deadline using the given function.","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withDeadline(UnaryOperator\u003cLocalDate\u003e fn) {","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d fn.apply(this.deadline);","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s deadline using a string representation of a date.","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"immanuelhume"},"content":"    public ProjectBuilder withDeadline(String dateStr) {","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"immanuelhume"},"content":"        this.deadline \u003d LocalDate.parse(dateStr, Project.DATE_FMT);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"immanuelhume"},"content":"     * Builds a project with the given fields.","lastModifiedDate":"2023-03-07"},{"lineNumber":154,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"immanuelhume"},"content":"    public Project build() {","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"immanuelhume"},"content":"        return new Project(NonEmptyString.of(name),","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"immanuelhume"},"content":"            status,","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"immanuelhume"},"content":"            new Email(clientEmail),","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"immanuelhume"},"content":"            NonEmptyString.ofOptional(source),","lastModifiedDate":"2023-03-21"},{"lineNumber":160,"author":{"gitId":"immanuelhume"},"content":"            Optional.ofNullable(description),","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"immanuelhume"},"content":"            acceptedOn,","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"immanuelhume"},"content":"            Optional.ofNullable(deadline));","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"immanuelhume":164}},{"path":"src/test/java/mycelium/mycelium/testutil/ProjectUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" * A utility class for Project model.","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"public class ProjectUtil {","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"     * Check if all values in the hashmap returned by {#getProjectStatistics} is positive","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"     * @param modelManager the model manager to check","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"     * @return boolean true of all values are positive","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"     *                  false otherwise","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    public static boolean containsPositiveValues(ModelManager modelManager) {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"        HashMap\u003cString, Long\u003e statistics \u003d modelManager.getProjectStatistics();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        for (Map.Entry\u003cString, Long\u003e set: statistics.entrySet()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"            if (set.getValue() \u003c 0) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"                return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"immanuelhume":1,"RubyNguyen07":28}},{"path":"src/test/java/mycelium/mycelium/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":1,"-":71}},{"path":"src/test/java/mycelium/mycelium/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"immanuelhume":1,"-":30}},{"path":"src/test/java/mycelium/mycelium/testutil/TypicalEntities.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"public class TypicalEntities {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    public static final Client FUTA \u003d new ClientBuilder().withName(\"Rantaro Futanari\")","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"        .withEmail(\"Futanari@example.com\")","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"        .withYearOfBirth(\"1958\")","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        .withSource(\"www.nippon.com\")","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        .withMobileNumber(\"99910102\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public static final Client RANTARO \u003d new ClientBuilder().withName(\"Rantaro Futanari\")","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        .withEmail(\"Rantaro@example.com\")","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        .withYearOfBirth(\"1958\")","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        .withSource(\"www.futanariinflation.com\")","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        .withMobileNumber(\"99923442\").build();","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    public static final Client WEST \u003d new ClientBuilder().withName(\"Kanye West\")","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"        .withEmail(\"kanye@kardashians.org\")","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        .withYearOfBirth(\"2000\")","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        .withSource(\"www.kanyewest.com\")","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        .withMobileNumber(\"99923444\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    /* A simpler project, with several empty fields. */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"    public static final Project","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"        BARD \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"        new ProjectBuilder().withName(\"Bard\")","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"            .withClientEmail(\"jamar@bard.org\")","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"            .withStatus(ProjectStatus.NOT_STARTED)","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"            .withSource(null)","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"            .withDescription(null)","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"            .withDescription(null)","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"            .withAcceptedOn(LocalDate.of(2022, 3, 14))","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"            .withDeadline((LocalDate) null)","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"            .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    /* A project without any empty fields - all fields explicity provided. */","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"    public static final Project","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"        BING \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"        new ProjectBuilder().withName(\"Bing\")","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"            .withClientEmail(\"jamal@bing.org\")","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"            .withStatus(ProjectStatus.IN_PROGRESS)","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"            .withSource(\"fiverr.com\")","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"            .withDescription(\"Bing the new Google\")","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"            .withAcceptedOn(LocalDate.of(2022, 3, 14))","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"            .withDeadline(LocalDate.of(2022, 4, 14))","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"            .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    /* And something in between. */","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    public static final Project","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        BOSE \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        new ProjectBuilder().withName(\"Bose\")","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"            .withClientEmail(\"jamae@bose.org\")","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"            .withStatus(ProjectStatus.DONE)","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"            .withSource(null)","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"            .withDescription(\"Audiophile headphones site\")","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"            .withAcceptedOn(LocalDate.of(2022, 4, 20))","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"            .withDeadline((LocalDate) null)","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"            .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    private TypicalEntities() {","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"     * Returns an {@code AddressBook} with all the typical projects and clients.","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"        for (Client cli : getTypicalClients()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"            ab.addClient(cli);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"        for (Project pro : getTypicalProjects()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"            ab.addProject(pro);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"        return ab;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"    public static List\u003cClient\u003e getTypicalClients() {","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"        return Arrays.asList(FUTA, RANTARO, WEST);","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"    public static List\u003cProject\u003e getTypicalProjects() {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"        return Arrays.asList(BARD, BING, BOSE);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"immanuelhume":80,"Douglch":15}},{"path":"src/test/java/mycelium/mycelium/testutil/UpdateClientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.logic.commands.UpdateClientCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * A utility class to help with building {@code UpdateClientDescriptor} objects.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class UpdateClientDescriptorBuilder {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private UpdateClientCommand.UpdateClientDescriptor descriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        descriptor \u003d new UpdateClientCommand.UpdateClientDescriptor();","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"     * Copies the given {@code descriptor} into a new {@code UpdateClientDescriptorBuilder}.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    public UpdateClientDescriptorBuilder(UpdateClientCommand.UpdateClientDescriptor descriptor) {","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"        this.descriptor \u003d new UpdateClientCommand.UpdateClientDescriptor(descriptor);","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param name the name of the client.","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        descriptor.setName(Optional.ofNullable(name).map(Name::new));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * @param email the email of the client.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        descriptor.setEmail(Optional.ofNullable(email).map(Email::new));","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"     * Sets the {@code Email} of the {@code UpdateClientDescriptorBuilder} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"    public UpdateClientDescriptorBuilder withEmail(Email email) {","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setEmail(Optional.ofNullable(email));","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * @param yearOfBirth the year of birth of the client.","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder withYearOfBirth(String yearOfBirth) {","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"        descriptor.setYearOfBirth(Optional.ofNullable(yearOfBirth).map(YearOfBirth::new));","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"     * @param source the source of the client.","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder withSource(String source) {","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"        descriptor.setSource(Optional.ofNullable(source).map(NonEmptyString::new));","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"     * @param mobileNumber the mobile number of the client.","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"    public UpdateClientDescriptorBuilder withMobileNumber(String mobileNumber) {","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"        descriptor.setMobileNumber(Optional.ofNullable(mobileNumber).map(Phone::new));","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"        return this;","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"     * Creates a new {@code UpdateClientDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * @return the updated descriptor.","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"    public UpdateClientCommand.UpdateClientDescriptor build() {","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"        return descriptor;","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"immanuelhume":28,"Douglch":72}},{"path":"src/test/java/mycelium/mycelium/testutil/UpdateProjectDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Email;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.project.ProjectStatus;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"immanuelhume"},"content":" * A utility class to help with building {@code UpdateProjectDescriptor} objects.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"public class UpdateProjectDescriptorBuilder {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"immanuelhume"},"content":"    private UpdateProjectCommand.UpdateProjectDescriptor descriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code UpdateProjectDescriptorBuilder} with all fields empty.","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder() {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"immanuelhume"},"content":"        descriptor \u003d new UpdateProjectCommand.UpdateProjectDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code UpdateProjectDescriptorBuilder} with the fields of the given {@code descriptor} copied.","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder(UpdateProjectCommand.UpdateProjectDescriptor descriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"immanuelhume"},"content":"        this.descriptor \u003d new UpdateProjectCommand.UpdateProjectDescriptor(descriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"immanuelhume"},"content":"     * Creates a new {@code UpdateProjectDescriptorBuilder} with the fields of the given {@code project} copied.","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder(Project project) {","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"immanuelhume"},"content":"        descriptor \u003d new UpdateProjectCommand.UpdateProjectDescriptor(project);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project name of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setName(Optional.ofNullable(name).map(NonEmptyString::new));","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project name of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withName(NonEmptyString name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setName(Optional.ofNullable(name));","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project status of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setStatus(Optional.ofNullable(status).map(ProjectStatus::fromString));","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"immanuelhume"},"content":"     * Sets the client email of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withClientEmail(String email) {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setClientEmail(Optional.ofNullable(email).map(Email::new));","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project source of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withSource(String source) {","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setSource(Optional.ofNullable(source).map(NonEmptyString::new));","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project description of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setDescription(description);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s acceptedOn date of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withAcceptedOn(String acceptedOn) {","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setAcceptedOn(Optional.ofNullable(acceptedOn).map(s -\u003e LocalDate.parse(s, Project.DATE_FMT)));","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"immanuelhume"},"content":"     * Sets the project\u0027s deadline of the {@code UpdateProjectDescriptor} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"immanuelhume"},"content":"        descriptor.setDeadline(Optional.ofNullable(deadline).map(s -\u003e LocalDate.parse(s, Project.DATE_FMT)));","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"immanuelhume"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"immanuelhume"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"immanuelhume"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"immanuelhume"},"content":"     * Builds the {@code UpdateProjectDescriptor} object.","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"immanuelhume"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"immanuelhume"},"content":"    public UpdateProjectCommand.UpdateProjectDescriptor build() {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"immanuelhume"},"content":"        return descriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"immanuelhume"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"immanuelhume":109}},{"path":"src/test/java/mycelium/mycelium/ui/GuiUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.extension.RegisterExtension;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.guiexceptions.NodeNotFoundException;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.testutil.UiPartExtension;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":" * A GUI unit test class for AddressBook.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"public abstract class GuiUnitTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    // TODO: Remove this workaround after using JavaFX version 13 or above","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    // This is a workaround to solve headless test failure on Windows OS","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    // Refer to https://github.com/javafxports/openjdk-jfx/issues/66 for more details.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    static {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"            System.loadLibrary(\"WindowsCodecs\");","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    @RegisterExtension","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public final UiPartExtension uiPartExtension \u003d new UiPartExtension();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"     * @param query name of the CSS selector of the node to retrieve.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    protected \u003cT extends Node\u003e T getChildNode(Node rootNode, String query) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":41}},{"path":"src/test/java/mycelium/mycelium/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"immanuelhume"},"content":"    public TestFxmlObject() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"immanuelhume":3,"-":33}},{"path":"src/test/java/mycelium/mycelium/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"immanuelhume"},"content":"package mycelium.mycelium.ui;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"import static mycelium.mycelium.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.MainApp;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"immanuelhume"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@code VALID_FILE_PATH}.","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"immanuelhume":4,"-":110,"RubyNguyen07":1}},{"path":"src/test/java/mycelium/mycelium/ui/resultoutput/ClientEntityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.resultoutput;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.ui.testutil.GuiTestAssert.assertCardDisplaysClient;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.ClientListCardHandle;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.testutil.ClientBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.GuiUnitTest;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.entitypanel.ClientEntity;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"public class ClientEntityTest extends GuiUnitTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    public void display() {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"StanleyNeoh"},"content":"        ClientEntity clientListCard \u003d new ClientEntity(client, 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"        uiPartExtension.setUiPart(clientListCard);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplay(clientListCard, client, 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public void equals() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        Client client \u003d new ClientBuilder().build();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"StanleyNeoh"},"content":"        ClientEntity clientCard \u003d new ClientEntity(client, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"        // same person, same index -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"StanleyNeoh"},"content":"        ClientEntity copy \u003d new ClientEntity(client, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(clientCard.equals(copy));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(clientCard.equals(clientCard));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(clientCard.equals(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(clientCard.equals(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        // different person, same index -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        Client differentPerson \u003d new ClientBuilder().withName(\"differentName\").build();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(clientCard.equals(new ClientEntity(differentPerson, 0)));","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        // same person, different index -\u003e returns false","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(clientCard.equals(new ClientEntity(client, 1)));","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * {@code expectedId}.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"StanleyNeoh"},"content":"    private void assertCardDisplay(ClientEntity clientListCard, Client expectedClient, int expectedId) {","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        ClientListCardHandle clientListCardHandle \u003d new ClientListCardHandle(clientListCard.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", clientListCardHandle.getId());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplaysClient(expectedClient, clientListCardHandle);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"StanleyNeoh":8,"RubyNguyen07":59}},{"path":"src/test/java/mycelium/mycelium/ui/resultoutput/ProjectEntityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.resultoutput;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.ui.testutil.GuiTestAssert.assertCardDisplaysProject;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.ProjectListCardHandle;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.GuiUnitTest;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.entitypanel.ProjectEntity;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"public class ProjectEntityTest extends GuiUnitTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    public void display() {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"StanleyNeoh"},"content":"        ProjectEntity projectListCard \u003d new ProjectEntity(project, 1);","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        uiPartExtension.setUiPart(projectListCard);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplay(projectListCard, project, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"StanleyNeoh"},"content":"        ProjectEntity projectCard \u003d new ProjectEntity(project, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        // same project, same index -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"StanleyNeoh"},"content":"        ProjectEntity copy \u003d new ProjectEntity(project, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(projectCard.equals(copy));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(projectCard.equals(projectCard));","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        // different project, same index -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        Project differentProject \u003d new ProjectBuilder().withName(\"differentName\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(new ProjectEntity(differentProject, 0)));","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        // same person, different index -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"StanleyNeoh"},"content":"        assertFalse(projectCard.equals(new ProjectEntity(project, 1)));","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     * {@code expectedId}.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"StanleyNeoh"},"content":"    private void assertCardDisplay(ProjectEntity projectListCard, Project expectedProject, int expectedId) {","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"        ProjectListCardHandle projectListCardHandle \u003d new ProjectListCardHandle(projectListCard.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", projectListCardHandle.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplaysProject(expectedProject, projectListCardHandle);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"StanleyNeoh":7,"RubyNguyen07":61}},{"path":"src/test/java/mycelium/mycelium/ui/resultoutput/SpecialProjectEntityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"StanleyNeoh"},"content":"package mycelium.mycelium.ui.resultoutput;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static mycelium.mycelium.ui.testutil.GuiTestAssert.assertCardDisplaysSpecialProject;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.SpecialProjectListCardHandle;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.GuiUnitTest;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.ui.statisticsbox.SpecialProjectEntity;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"public class SpecialProjectEntityTest extends GuiUnitTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    public void display() {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"        SpecialProjectEntity projectListCard \u003d new SpecialProjectEntity(project, 1);","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"        uiPartExtension.setUiPart(projectListCard);","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplay(projectListCard, project, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        SpecialProjectEntity projectCard \u003d new SpecialProjectEntity(project, 0);","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"        // same project, same index -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"        SpecialProjectEntity copy \u003d new SpecialProjectEntity(project, 0);","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(projectCard.equals(copy));","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"        assertTrue(projectCard.equals(projectCard));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"RubyNguyen07"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"RubyNguyen07"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"RubyNguyen07"},"content":"        // different project, same index -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"RubyNguyen07"},"content":"        Project differentProject \u003d new ProjectBuilder().withName(\"differentName\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(new SpecialProjectEntity(differentProject, 0)));","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"RubyNguyen07"},"content":"        // same person, different index -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"RubyNguyen07"},"content":"        assertFalse(projectCard.equals(new SpecialProjectEntity(project, 1)));","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * {@code expectedId}.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    private void assertCardDisplay(SpecialProjectEntity projectListCard, Project expectedProject, int expectedId) {","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"RubyNguyen07"},"content":"        SpecialProjectListCardHandle projectListCardHandle \u003d","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"RubyNguyen07"},"content":"                new SpecialProjectListCardHandle(projectListCard.getRoot());","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", projectListCardHandle.getId());","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"        assertCardDisplaysSpecialProject(expectedProject, projectListCardHandle);","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"StanleyNeoh":1,"RubyNguyen07":67}},{"path":"src/test/java/mycelium/mycelium/ui/testutil/GuiTestAssert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.ClientListCardHandle;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.ProjectListCardHandle;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"import guitests.guihandles.SpecialProjectListCardHandle;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.client.Client;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.Phone;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.client.YearOfBirth;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"import mycelium.mycelium.model.project.Project;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"immanuelhume"},"content":"import mycelium.mycelium.model.util.NonEmptyString;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":" * A set of assertion methods useful for writing GUI tests.","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"public class GuiTestAssert {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedProject}.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"    public static void assertCardDisplaysSpecialProject(Project expectedProject,","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"                                                        SpecialProjectListCardHandle actualCard) {","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getName().toString(), actualCard.getName());","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getStatus().toString(), actualCard.getStatus());","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getClientEmail().value, actualCard.getClientEmail());","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"            expectedProject","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"                .getDeadline()","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"                .map(d -\u003e d.format(Project.DATE_FMT))","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"                .orElse(\"No Deadline\"),","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"            actualCard.getDeadline());","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedSpecialProject}.","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"RubyNguyen07"},"content":"    public static void assertCardDisplaysProject(Project expectedProject, ProjectListCardHandle actualCard) {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProject.getName().toString(), actualCard.getName());","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getStatus().toString(), actualCard.getStatus());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getClientEmail().value, actualCard.getClientEmail());","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProject.getSource().map(NonEmptyString::getValue).orElse(\"Unknown\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"immanuelhume"},"content":"                actualCard.getSource());","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(expectedProject.getAcceptedOn().format(Project.DATE_FMT), actualCard.getAcceptedOn());","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"StanleyNeoh"},"content":"        assertEquals(","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"StanleyNeoh"},"content":"                expectedProject","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"StanleyNeoh"},"content":"                        .getDeadline()","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"StanleyNeoh"},"content":"                        .map(d -\u003e d.format(Project.DATE_FMT))","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"StanleyNeoh"},"content":"                        .orElse(\"No Deadline\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"StanleyNeoh"},"content":"                actualCard.getDeadline());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getDescription().orElse(\"No description given\"), actualCard.getDescription());","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"RubyNguyen07"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"RubyNguyen07"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedClient}.","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"RubyNguyen07"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"RubyNguyen07"},"content":"    public static void assertCardDisplaysClient(Client expectedProject, ClientListCardHandle actualCard) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getName().toString(), actualCard.getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getEmail().value, actualCard.getEmail());","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"immanuelhume"},"content":"        assertEquals(expectedProject.getSource().map(NonEmptyString::getValue).orElse(\"No source\"),","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"immanuelhume"},"content":"            actualCard.getSource());","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getYearOfBirth().map(YearOfBirth::toString).orElse(\"No year of birth\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"RubyNguyen07"},"content":"            actualCard.getYearOfBirth());","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"RubyNguyen07"},"content":"        assertEquals(expectedProject.getMobileNumber().map(Phone::toString).orElse(\"No mobile number\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"RubyNguyen07"},"content":"            actualCard.getMobileNumber());","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"StanleyNeoh":7,"immanuelhume":8,"RubyNguyen07":51}},{"path":"src/test/java/mycelium/mycelium/ui/testutil/StageExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.extension.AfterEachCallback;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.extension.BeforeEachCallback;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"import org.junit.jupiter.api.extension.ExtensionContext;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":" * Properly sets up and tears down a JavaFx stage for our testing purposes.","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"public class StageExtension implements BeforeEachCallback, AfterEachCallback {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"    public void beforeEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":"        FxToolkit.registerPrimaryStage();","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"    public void afterEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"        FxToolkit.cleanupStages();","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"RubyNguyen07":21}},{"path":"src/test/java/mycelium/mycelium/ui/testutil/UiPartExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RubyNguyen07"},"content":"package mycelium.mycelium.ui.testutil;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"RubyNguyen07"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"RubyNguyen07"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"RubyNguyen07"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"StanleyNeoh"},"content":"import mycelium.mycelium.ui.UiPart;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"RubyNguyen07"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"RubyNguyen07"},"content":" * Provides an isolated stage to test an individual {@code UiPart}.","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"RubyNguyen07"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"RubyNguyen07"},"content":"public class UiPartExtension extends StageExtension {","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"RubyNguyen07"},"content":"    private static final String[] CSS_FILES \u003d {\"view/DarkTheme.css\", \"view/Extensions.css\"};","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"RubyNguyen07"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"RubyNguyen07"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"RubyNguyen07"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"RubyNguyen07"},"content":"            FxToolkit.setupScene(() -\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"RubyNguyen07"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"RubyNguyen07"},"content":"                scene.getStylesheets().setAll(CSS_FILES);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"RubyNguyen07"},"content":"                return scene;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"RubyNguyen07"},"content":"            });","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"RubyNguyen07"},"content":"            FxToolkit.showStage();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"RubyNguyen07"},"content":"        } catch (TimeoutException te) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"RubyNguyen07"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"RubyNguyen07"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"RubyNguyen07"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"RubyNguyen07"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"StanleyNeoh":1,"RubyNguyen07":30}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"\u003c?import mycelium.mycelium.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"-":3,"immanuelhume":1}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"immanuelhume"},"content":"\u003c?import mycelium.mycelium.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"immanuelhume"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml\" type\u003d\"mycelium.mycelium.ui.TestFxmlObject\"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"immanuelhume"},"content":"         xmlns\u003d\"http://javafx.com/javafx\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":4,"immanuelhume":3}}]
